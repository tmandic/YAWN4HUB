

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Jun 06 16:46:41 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16LF1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     8                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
     9                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    10                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	swtext1,local,class=CONST,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	dabs	1,0x20,48,_BDT
    66                           	dabs	1,0x58,8,_CtrlTrfData
    67                           	dabs	1,0x50,8,_SetupPkt
    68                           	dabs	1,0xA0,64,_cdc_data_tx
    69                           	dabs	1,0x120,64,_cdc_data_rx
    70                           	dabs	1,0x7E,2
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  0111                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0115                     	;# 
   122  0116                     	;# 
   123  0117                     	;# 
   124  0118                     	;# 
   125  0119                     	;# 
   126  011D                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  018E                     	;# 
   130  0191                     	;# 
   131  0191                     	;# 
   132  0192                     	;# 
   133  0193                     	;# 
   134  0193                     	;# 
   135  0194                     	;# 
   136  0195                     	;# 
   137  0196                     	;# 
   138  0199                     	;# 
   139  019A                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019C                     	;# 
   143  019D                     	;# 
   144  019E                     	;# 
   145  019F                     	;# 
   146  020C                     	;# 
   147  020D                     	;# 
   148  0211                     	;# 
   149  0211                     	;# 
   150  0212                     	;# 
   151  0212                     	;# 
   152  0213                     	;# 
   153  0213                     	;# 
   154  0214                     	;# 
   155  0214                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0216                     	;# 
   160  0216                     	;# 
   161  0217                     	;# 
   162  0217                     	;# 
   163  0391                     	;# 
   164  0392                     	;# 
   165  0393                     	;# 
   166  0394                     	;# 
   167  0395                     	;# 
   168  0396                     	;# 
   169  039A                     	;# 
   170  039B                     	;# 
   171  0611                     	;# 
   172  0612                     	;# 
   173  0613                     	;# 
   174  0613                     	;# 
   175  0614                     	;# 
   176  0615                     	;# 
   177  0616                     	;# 
   178  0616                     	;# 
   179  0691                     	;# 
   180  0692                     	;# 
   181  0693                     	;# 
   182  0694                     	;# 
   183  0695                     	;# 
   184  0E8E                     	;# 
   185  0E8F                     	;# 
   186  0E90                     	;# 
   187  0E91                     	;# 
   188  0E92                     	;# 
   189  0E93                     	;# 
   190  0E94                     	;# 
   191  0E94                     	;# 
   192  0E95                     	;# 
   193  0E96                     	;# 
   194  0E97                     	;# 
   195  0E98                     	;# 
   196  0E99                     	;# 
   197  0E9A                     	;# 
   198  0E9B                     	;# 
   199  0E9C                     	;# 
   200  0E9D                     	;# 
   201  0E9E                     	;# 
   202  0E9F                     	;# 
   203  0FE4                     	;# 
   204  0FE5                     	;# 
   205  0FE6                     	;# 
   206  0FE7                     	;# 
   207  0FE8                     	;# 
   208  0FE9                     	;# 
   209  0FEA                     	;# 
   210  0FEB                     	;# 
   211  0FED                     	;# 
   212  0FEE                     	;# 
   213  0FEF                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  008C                     	;# 
   241  008D                     	;# 
   242  008E                     	;# 
   243  0091                     	;# 
   244  0092                     	;# 
   245  0095                     	;# 
   246  0096                     	;# 
   247  0097                     	;# 
   248  0098                     	;# 
   249  0099                     	;# 
   250  009A                     	;# 
   251  009B                     	;# 
   252  009B                     	;# 
   253  009C                     	;# 
   254  009D                     	;# 
   255  009E                     	;# 
   256  009F                     	;# 
   257  010C                     	;# 
   258  010D                     	;# 
   259  010E                     	;# 
   260  0111                     	;# 
   261  0112                     	;# 
   262  0113                     	;# 
   263  0114                     	;# 
   264  0115                     	;# 
   265  0116                     	;# 
   266  0117                     	;# 
   267  0118                     	;# 
   268  0119                     	;# 
   269  011D                     	;# 
   270  018C                     	;# 
   271  018D                     	;# 
   272  018E                     	;# 
   273  0191                     	;# 
   274  0191                     	;# 
   275  0192                     	;# 
   276  0193                     	;# 
   277  0193                     	;# 
   278  0194                     	;# 
   279  0195                     	;# 
   280  0196                     	;# 
   281  0199                     	;# 
   282  019A                     	;# 
   283  019B                     	;# 
   284  019B                     	;# 
   285  019C                     	;# 
   286  019D                     	;# 
   287  019E                     	;# 
   288  019F                     	;# 
   289  020C                     	;# 
   290  020D                     	;# 
   291  0211                     	;# 
   292  0211                     	;# 
   293  0212                     	;# 
   294  0212                     	;# 
   295  0213                     	;# 
   296  0213                     	;# 
   297  0214                     	;# 
   298  0214                     	;# 
   299  0215                     	;# 
   300  0215                     	;# 
   301  0215                     	;# 
   302  0216                     	;# 
   303  0216                     	;# 
   304  0217                     	;# 
   305  0217                     	;# 
   306  0391                     	;# 
   307  0392                     	;# 
   308  0393                     	;# 
   309  0394                     	;# 
   310  0395                     	;# 
   311  0396                     	;# 
   312  039A                     	;# 
   313  039B                     	;# 
   314  0611                     	;# 
   315  0612                     	;# 
   316  0613                     	;# 
   317  0613                     	;# 
   318  0614                     	;# 
   319  0615                     	;# 
   320  0616                     	;# 
   321  0616                     	;# 
   322  0691                     	;# 
   323  0692                     	;# 
   324  0693                     	;# 
   325  0694                     	;# 
   326  0695                     	;# 
   327  0E8E                     	;# 
   328  0E8F                     	;# 
   329  0E90                     	;# 
   330  0E91                     	;# 
   331  0E92                     	;# 
   332  0E93                     	;# 
   333  0E94                     	;# 
   334  0E94                     	;# 
   335  0E95                     	;# 
   336  0E96                     	;# 
   337  0E97                     	;# 
   338  0E98                     	;# 
   339  0E99                     	;# 
   340  0E9A                     	;# 
   341  0E9B                     	;# 
   342  0E9C                     	;# 
   343  0E9D                     	;# 
   344  0E9E                     	;# 
   345  0E9F                     	;# 
   346  0FE4                     	;# 
   347  0FE5                     	;# 
   348  0FE6                     	;# 
   349  0FE7                     	;# 
   350  0FE8                     	;# 
   351  0FE9                     	;# 
   352  0FEA                     	;# 
   353  0FEB                     	;# 
   354  0FED                     	;# 
   355  0FEE                     	;# 
   356  0FEF                     	;# 
   357  0000                     	;# 
   358  0001                     	;# 
   359  0002                     	;# 
   360  0003                     	;# 
   361  0004                     	;# 
   362  0005                     	;# 
   363  0006                     	;# 
   364  0007                     	;# 
   365  0008                     	;# 
   366  0009                     	;# 
   367  000A                     	;# 
   368  000B                     	;# 
   369  000C                     	;# 
   370  000D                     	;# 
   371  000E                     	;# 
   372  0011                     	;# 
   373  0012                     	;# 
   374  0015                     	;# 
   375  0016                     	;# 
   376  0016                     	;# 
   377  0017                     	;# 
   378  0018                     	;# 
   379  0019                     	;# 
   380  001A                     	;# 
   381  001B                     	;# 
   382  001C                     	;# 
   383  008C                     	;# 
   384  008D                     	;# 
   385  008E                     	;# 
   386  0091                     	;# 
   387  0092                     	;# 
   388  0095                     	;# 
   389  0096                     	;# 
   390  0097                     	;# 
   391  0098                     	;# 
   392  0099                     	;# 
   393  009A                     	;# 
   394  009B                     	;# 
   395  009B                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009E                     	;# 
   399  009F                     	;# 
   400  010C                     	;# 
   401  010D                     	;# 
   402  010E                     	;# 
   403  0111                     	;# 
   404  0112                     	;# 
   405  0113                     	;# 
   406  0114                     	;# 
   407  0115                     	;# 
   408  0116                     	;# 
   409  0117                     	;# 
   410  0118                     	;# 
   411  0119                     	;# 
   412  011D                     	;# 
   413  018C                     	;# 
   414  018D                     	;# 
   415  018E                     	;# 
   416  0191                     	;# 
   417  0191                     	;# 
   418  0192                     	;# 
   419  0193                     	;# 
   420  0193                     	;# 
   421  0194                     	;# 
   422  0195                     	;# 
   423  0196                     	;# 
   424  0199                     	;# 
   425  019A                     	;# 
   426  019B                     	;# 
   427  019B                     	;# 
   428  019C                     	;# 
   429  019D                     	;# 
   430  019E                     	;# 
   431  019F                     	;# 
   432  020C                     	;# 
   433  020D                     	;# 
   434  0211                     	;# 
   435  0211                     	;# 
   436  0212                     	;# 
   437  0212                     	;# 
   438  0213                     	;# 
   439  0213                     	;# 
   440  0214                     	;# 
   441  0214                     	;# 
   442  0215                     	;# 
   443  0215                     	;# 
   444  0215                     	;# 
   445  0216                     	;# 
   446  0216                     	;# 
   447  0217                     	;# 
   448  0217                     	;# 
   449  0391                     	;# 
   450  0392                     	;# 
   451  0393                     	;# 
   452  0394                     	;# 
   453  0395                     	;# 
   454  0396                     	;# 
   455  039A                     	;# 
   456  039B                     	;# 
   457  0611                     	;# 
   458  0612                     	;# 
   459  0613                     	;# 
   460  0613                     	;# 
   461  0614                     	;# 
   462  0615                     	;# 
   463  0616                     	;# 
   464  0616                     	;# 
   465  0691                     	;# 
   466  0692                     	;# 
   467  0693                     	;# 
   468  0694                     	;# 
   469  0695                     	;# 
   470  0E8E                     	;# 
   471  0E8F                     	;# 
   472  0E90                     	;# 
   473  0E91                     	;# 
   474  0E92                     	;# 
   475  0E93                     	;# 
   476  0E94                     	;# 
   477  0E94                     	;# 
   478  0E95                     	;# 
   479  0E96                     	;# 
   480  0E97                     	;# 
   481  0E98                     	;# 
   482  0E99                     	;# 
   483  0E9A                     	;# 
   484  0E9B                     	;# 
   485  0E9C                     	;# 
   486  0E9D                     	;# 
   487  0E9E                     	;# 
   488  0E9F                     	;# 
   489  0FE4                     	;# 
   490  0FE5                     	;# 
   491  0FE6                     	;# 
   492  0FE7                     	;# 
   493  0FE8                     	;# 
   494  0FE9                     	;# 
   495  0FEA                     	;# 
   496  0FEB                     	;# 
   497  0FED                     	;# 
   498  0FEE                     	;# 
   499  0FEF                     	;# 
   500  0000                     	;# 
   501  0001                     	;# 
   502  0002                     	;# 
   503  0003                     	;# 
   504  0004                     	;# 
   505  0005                     	;# 
   506  0006                     	;# 
   507  0007                     	;# 
   508  0008                     	;# 
   509  0009                     	;# 
   510  000A                     	;# 
   511  000B                     	;# 
   512  000C                     	;# 
   513  000D                     	;# 
   514  000E                     	;# 
   515  0011                     	;# 
   516  0012                     	;# 
   517  0015                     	;# 
   518  0016                     	;# 
   519  0016                     	;# 
   520  0017                     	;# 
   521  0018                     	;# 
   522  0019                     	;# 
   523  001A                     	;# 
   524  001B                     	;# 
   525  001C                     	;# 
   526  008C                     	;# 
   527  008D                     	;# 
   528  008E                     	;# 
   529  0091                     	;# 
   530  0092                     	;# 
   531  0095                     	;# 
   532  0096                     	;# 
   533  0097                     	;# 
   534  0098                     	;# 
   535  0099                     	;# 
   536  009A                     	;# 
   537  009B                     	;# 
   538  009B                     	;# 
   539  009C                     	;# 
   540  009D                     	;# 
   541  009E                     	;# 
   542  009F                     	;# 
   543  010C                     	;# 
   544  010D                     	;# 
   545  010E                     	;# 
   546  0111                     	;# 
   547  0112                     	;# 
   548  0113                     	;# 
   549  0114                     	;# 
   550  0115                     	;# 
   551  0116                     	;# 
   552  0117                     	;# 
   553  0118                     	;# 
   554  0119                     	;# 
   555  011D                     	;# 
   556  018C                     	;# 
   557  018D                     	;# 
   558  018E                     	;# 
   559  0191                     	;# 
   560  0191                     	;# 
   561  0192                     	;# 
   562  0193                     	;# 
   563  0193                     	;# 
   564  0194                     	;# 
   565  0195                     	;# 
   566  0196                     	;# 
   567  0199                     	;# 
   568  019A                     	;# 
   569  019B                     	;# 
   570  019B                     	;# 
   571  019C                     	;# 
   572  019D                     	;# 
   573  019E                     	;# 
   574  019F                     	;# 
   575  020C                     	;# 
   576  020D                     	;# 
   577  0211                     	;# 
   578  0211                     	;# 
   579  0212                     	;# 
   580  0212                     	;# 
   581  0213                     	;# 
   582  0213                     	;# 
   583  0214                     	;# 
   584  0214                     	;# 
   585  0215                     	;# 
   586  0215                     	;# 
   587  0215                     	;# 
   588  0216                     	;# 
   589  0216                     	;# 
   590  0217                     	;# 
   591  0217                     	;# 
   592  0391                     	;# 
   593  0392                     	;# 
   594  0393                     	;# 
   595  0394                     	;# 
   596  0395                     	;# 
   597  0396                     	;# 
   598  039A                     	;# 
   599  039B                     	;# 
   600  0611                     	;# 
   601  0612                     	;# 
   602  0613                     	;# 
   603  0613                     	;# 
   604  0614                     	;# 
   605  0615                     	;# 
   606  0616                     	;# 
   607  0616                     	;# 
   608  0691                     	;# 
   609  0692                     	;# 
   610  0693                     	;# 
   611  0694                     	;# 
   612  0695                     	;# 
   613  0E8E                     	;# 
   614  0E8F                     	;# 
   615  0E90                     	;# 
   616  0E91                     	;# 
   617  0E92                     	;# 
   618  0E93                     	;# 
   619  0E94                     	;# 
   620  0E94                     	;# 
   621  0E95                     	;# 
   622  0E96                     	;# 
   623  0E97                     	;# 
   624  0E98                     	;# 
   625  0E99                     	;# 
   626  0E9A                     	;# 
   627  0E9B                     	;# 
   628  0E9C                     	;# 
   629  0E9D                     	;# 
   630  0E9E                     	;# 
   631  0E9F                     	;# 
   632  0FE4                     	;# 
   633  0FE5                     	;# 
   634  0FE6                     	;# 
   635  0FE7                     	;# 
   636  0FE8                     	;# 
   637  0FE9                     	;# 
   638  0FEA                     	;# 
   639  0FEB                     	;# 
   640  0FED                     	;# 
   641  0FEE                     	;# 
   642  0FEF                     	;# 
   643  0000                     	;# 
   644  0001                     	;# 
   645  0002                     	;# 
   646  0003                     	;# 
   647  0004                     	;# 
   648  0005                     	;# 
   649  0006                     	;# 
   650  0007                     	;# 
   651  0008                     	;# 
   652  0009                     	;# 
   653  000A                     	;# 
   654  000B                     	;# 
   655  000C                     	;# 
   656  000D                     	;# 
   657  000E                     	;# 
   658  0011                     	;# 
   659  0012                     	;# 
   660  0015                     	;# 
   661  0016                     	;# 
   662  0016                     	;# 
   663  0017                     	;# 
   664  0018                     	;# 
   665  0019                     	;# 
   666  001A                     	;# 
   667  001B                     	;# 
   668  001C                     	;# 
   669  008C                     	;# 
   670  008D                     	;# 
   671  008E                     	;# 
   672  0091                     	;# 
   673  0092                     	;# 
   674  0095                     	;# 
   675  0096                     	;# 
   676  0097                     	;# 
   677  0098                     	;# 
   678  0099                     	;# 
   679  009A                     	;# 
   680  009B                     	;# 
   681  009B                     	;# 
   682  009C                     	;# 
   683  009D                     	;# 
   684  009E                     	;# 
   685  009F                     	;# 
   686  010C                     	;# 
   687  010D                     	;# 
   688  010E                     	;# 
   689  0111                     	;# 
   690  0112                     	;# 
   691  0113                     	;# 
   692  0114                     	;# 
   693  0115                     	;# 
   694  0116                     	;# 
   695  0117                     	;# 
   696  0118                     	;# 
   697  0119                     	;# 
   698  011D                     	;# 
   699  018C                     	;# 
   700  018D                     	;# 
   701  018E                     	;# 
   702  0191                     	;# 
   703  0191                     	;# 
   704  0192                     	;# 
   705  0193                     	;# 
   706  0193                     	;# 
   707  0194                     	;# 
   708  0195                     	;# 
   709  0196                     	;# 
   710  0199                     	;# 
   711  019A                     	;# 
   712  019B                     	;# 
   713  019B                     	;# 
   714  019C                     	;# 
   715  019D                     	;# 
   716  019E                     	;# 
   717  019F                     	;# 
   718  020C                     	;# 
   719  020D                     	;# 
   720  0211                     	;# 
   721  0211                     	;# 
   722  0212                     	;# 
   723  0212                     	;# 
   724  0213                     	;# 
   725  0213                     	;# 
   726  0214                     	;# 
   727  0214                     	;# 
   728  0215                     	;# 
   729  0215                     	;# 
   730  0215                     	;# 
   731  0216                     	;# 
   732  0216                     	;# 
   733  0217                     	;# 
   734  0217                     	;# 
   735  0391                     	;# 
   736  0392                     	;# 
   737  0393                     	;# 
   738  0394                     	;# 
   739  0395                     	;# 
   740  0396                     	;# 
   741  039A                     	;# 
   742  039B                     	;# 
   743  0611                     	;# 
   744  0612                     	;# 
   745  0613                     	;# 
   746  0613                     	;# 
   747  0614                     	;# 
   748  0615                     	;# 
   749  0616                     	;# 
   750  0616                     	;# 
   751  0691                     	;# 
   752  0692                     	;# 
   753  0693                     	;# 
   754  0694                     	;# 
   755  0695                     	;# 
   756  0E8E                     	;# 
   757  0E8F                     	;# 
   758  0E90                     	;# 
   759  0E91                     	;# 
   760  0E92                     	;# 
   761  0E93                     	;# 
   762  0E94                     	;# 
   763  0E94                     	;# 
   764  0E95                     	;# 
   765  0E96                     	;# 
   766  0E97                     	;# 
   767  0E98                     	;# 
   768  0E99                     	;# 
   769  0E9A                     	;# 
   770  0E9B                     	;# 
   771  0E9C                     	;# 
   772  0E9D                     	;# 
   773  0E9E                     	;# 
   774  0E9F                     	;# 
   775  0FE4                     	;# 
   776  0FE5                     	;# 
   777  0FE6                     	;# 
   778  0FE7                     	;# 
   779  0FE8                     	;# 
   780  0FE9                     	;# 
   781  0FEA                     	;# 
   782  0FEB                     	;# 
   783  0FED                     	;# 
   784  0FEE                     	;# 
   785  0FEF                     	;# 
   786  0000                     	;# 
   787  0001                     	;# 
   788  0002                     	;# 
   789  0003                     	;# 
   790  0004                     	;# 
   791  0005                     	;# 
   792  0006                     	;# 
   793  0007                     	;# 
   794  0008                     	;# 
   795  0009                     	;# 
   796  000A                     	;# 
   797  000B                     	;# 
   798  000C                     	;# 
   799  000D                     	;# 
   800  000E                     	;# 
   801  0011                     	;# 
   802  0012                     	;# 
   803  0015                     	;# 
   804  0016                     	;# 
   805  0016                     	;# 
   806  0017                     	;# 
   807  0018                     	;# 
   808  0019                     	;# 
   809  001A                     	;# 
   810  001B                     	;# 
   811  001C                     	;# 
   812  008C                     	;# 
   813  008D                     	;# 
   814  008E                     	;# 
   815  0091                     	;# 
   816  0092                     	;# 
   817  0095                     	;# 
   818  0096                     	;# 
   819  0097                     	;# 
   820  0098                     	;# 
   821  0099                     	;# 
   822  009A                     	;# 
   823  009B                     	;# 
   824  009B                     	;# 
   825  009C                     	;# 
   826  009D                     	;# 
   827  009E                     	;# 
   828  009F                     	;# 
   829  010C                     	;# 
   830  010D                     	;# 
   831  010E                     	;# 
   832  0111                     	;# 
   833  0112                     	;# 
   834  0113                     	;# 
   835  0114                     	;# 
   836  0115                     	;# 
   837  0116                     	;# 
   838  0117                     	;# 
   839  0118                     	;# 
   840  0119                     	;# 
   841  011D                     	;# 
   842  018C                     	;# 
   843  018D                     	;# 
   844  018E                     	;# 
   845  0191                     	;# 
   846  0191                     	;# 
   847  0192                     	;# 
   848  0193                     	;# 
   849  0193                     	;# 
   850  0194                     	;# 
   851  0195                     	;# 
   852  0196                     	;# 
   853  0199                     	;# 
   854  019A                     	;# 
   855  019B                     	;# 
   856  019B                     	;# 
   857  019C                     	;# 
   858  019D                     	;# 
   859  019E                     	;# 
   860  019F                     	;# 
   861  020C                     	;# 
   862  020D                     	;# 
   863  0211                     	;# 
   864  0211                     	;# 
   865  0212                     	;# 
   866  0212                     	;# 
   867  0213                     	;# 
   868  0213                     	;# 
   869  0214                     	;# 
   870  0214                     	;# 
   871  0215                     	;# 
   872  0215                     	;# 
   873  0215                     	;# 
   874  0216                     	;# 
   875  0216                     	;# 
   876  0217                     	;# 
   877  0217                     	;# 
   878  0391                     	;# 
   879  0392                     	;# 
   880  0393                     	;# 
   881  0394                     	;# 
   882  0395                     	;# 
   883  0396                     	;# 
   884  039A                     	;# 
   885  039B                     	;# 
   886  0611                     	;# 
   887  0612                     	;# 
   888  0613                     	;# 
   889  0613                     	;# 
   890  0614                     	;# 
   891  0615                     	;# 
   892  0616                     	;# 
   893  0616                     	;# 
   894  0691                     	;# 
   895  0692                     	;# 
   896  0693                     	;# 
   897  0694                     	;# 
   898  0695                     	;# 
   899  0E8E                     	;# 
   900  0E8F                     	;# 
   901  0E90                     	;# 
   902  0E91                     	;# 
   903  0E92                     	;# 
   904  0E93                     	;# 
   905  0E94                     	;# 
   906  0E94                     	;# 
   907  0E95                     	;# 
   908  0E96                     	;# 
   909  0E97                     	;# 
   910  0E98                     	;# 
   911  0E99                     	;# 
   912  0E9A                     	;# 
   913  0E9B                     	;# 
   914  0E9C                     	;# 
   915  0E9D                     	;# 
   916  0E9E                     	;# 
   917  0E9F                     	;# 
   918  0FE4                     	;# 
   919  0FE5                     	;# 
   920  0FE6                     	;# 
   921  0FE7                     	;# 
   922  0FE8                     	;# 
   923  0FE9                     	;# 
   924  0FEA                     	;# 
   925  0FEB                     	;# 
   926  0FED                     	;# 
   927  0FEE                     	;# 
   928  0FEF                     	;# 
   929  0000                     	;# 
   930  0001                     	;# 
   931  0002                     	;# 
   932  0003                     	;# 
   933  0004                     	;# 
   934  0005                     	;# 
   935  0006                     	;# 
   936  0007                     	;# 
   937  0008                     	;# 
   938  0009                     	;# 
   939  000A                     	;# 
   940  000B                     	;# 
   941  000C                     	;# 
   942  000D                     	;# 
   943  000E                     	;# 
   944  0011                     	;# 
   945  0012                     	;# 
   946  0015                     	;# 
   947  0016                     	;# 
   948  0016                     	;# 
   949  0017                     	;# 
   950  0018                     	;# 
   951  0019                     	;# 
   952  001A                     	;# 
   953  001B                     	;# 
   954  001C                     	;# 
   955  008C                     	;# 
   956  008D                     	;# 
   957  008E                     	;# 
   958  0091                     	;# 
   959  0092                     	;# 
   960  0095                     	;# 
   961  0096                     	;# 
   962  0097                     	;# 
   963  0098                     	;# 
   964  0099                     	;# 
   965  009A                     	;# 
   966  009B                     	;# 
   967  009B                     	;# 
   968  009C                     	;# 
   969  009D                     	;# 
   970  009E                     	;# 
   971  009F                     	;# 
   972  010C                     	;# 
   973  010D                     	;# 
   974  010E                     	;# 
   975  0111                     	;# 
   976  0112                     	;# 
   977  0113                     	;# 
   978  0114                     	;# 
   979  0115                     	;# 
   980  0116                     	;# 
   981  0117                     	;# 
   982  0118                     	;# 
   983  0119                     	;# 
   984  011D                     	;# 
   985  018C                     	;# 
   986  018D                     	;# 
   987  018E                     	;# 
   988  0191                     	;# 
   989  0191                     	;# 
   990  0192                     	;# 
   991  0193                     	;# 
   992  0193                     	;# 
   993  0194                     	;# 
   994  0195                     	;# 
   995  0196                     	;# 
   996  0199                     	;# 
   997  019A                     	;# 
   998  019B                     	;# 
   999  019B                     	;# 
  1000  019C                     	;# 
  1001  019D                     	;# 
  1002  019E                     	;# 
  1003  019F                     	;# 
  1004  020C                     	;# 
  1005  020D                     	;# 
  1006  0211                     	;# 
  1007  0211                     	;# 
  1008  0212                     	;# 
  1009  0212                     	;# 
  1010  0213                     	;# 
  1011  0213                     	;# 
  1012  0214                     	;# 
  1013  0214                     	;# 
  1014  0215                     	;# 
  1015  0215                     	;# 
  1016  0215                     	;# 
  1017  0216                     	;# 
  1018  0216                     	;# 
  1019  0217                     	;# 
  1020  0217                     	;# 
  1021  0391                     	;# 
  1022  0392                     	;# 
  1023  0393                     	;# 
  1024  0394                     	;# 
  1025  0395                     	;# 
  1026  0396                     	;# 
  1027  039A                     	;# 
  1028  039B                     	;# 
  1029  0611                     	;# 
  1030  0612                     	;# 
  1031  0613                     	;# 
  1032  0613                     	;# 
  1033  0614                     	;# 
  1034  0615                     	;# 
  1035  0616                     	;# 
  1036  0616                     	;# 
  1037  0691                     	;# 
  1038  0692                     	;# 
  1039  0693                     	;# 
  1040  0694                     	;# 
  1041  0695                     	;# 
  1042  0E8E                     	;# 
  1043  0E8F                     	;# 
  1044  0E90                     	;# 
  1045  0E91                     	;# 
  1046  0E92                     	;# 
  1047  0E93                     	;# 
  1048  0E94                     	;# 
  1049  0E94                     	;# 
  1050  0E95                     	;# 
  1051  0E96                     	;# 
  1052  0E97                     	;# 
  1053  0E98                     	;# 
  1054  0E99                     	;# 
  1055  0E9A                     	;# 
  1056  0E9B                     	;# 
  1057  0E9C                     	;# 
  1058  0E9D                     	;# 
  1059  0E9E                     	;# 
  1060  0E9F                     	;# 
  1061  0FE4                     	;# 
  1062  0FE5                     	;# 
  1063  0FE6                     	;# 
  1064  0FE7                     	;# 
  1065  0FE8                     	;# 
  1066  0FE9                     	;# 
  1067  0FEA                     	;# 
  1068  0FEB                     	;# 
  1069  0FED                     	;# 
  1070  0FEE                     	;# 
  1071  0FEF                     	;# 
  1072  0000                     	;# 
  1073  0001                     	;# 
  1074  0002                     	;# 
  1075  0003                     	;# 
  1076  0004                     	;# 
  1077  0005                     	;# 
  1078  0006                     	;# 
  1079  0007                     	;# 
  1080  0008                     	;# 
  1081  0009                     	;# 
  1082  000A                     	;# 
  1083  000B                     	;# 
  1084  000C                     	;# 
  1085  000D                     	;# 
  1086  000E                     	;# 
  1087  0011                     	;# 
  1088  0012                     	;# 
  1089  0015                     	;# 
  1090  0016                     	;# 
  1091  0016                     	;# 
  1092  0017                     	;# 
  1093  0018                     	;# 
  1094  0019                     	;# 
  1095  001A                     	;# 
  1096  001B                     	;# 
  1097  001C                     	;# 
  1098  008C                     	;# 
  1099  008D                     	;# 
  1100  008E                     	;# 
  1101  0091                     	;# 
  1102  0092                     	;# 
  1103  0095                     	;# 
  1104  0096                     	;# 
  1105  0097                     	;# 
  1106  0098                     	;# 
  1107  0099                     	;# 
  1108  009A                     	;# 
  1109  009B                     	;# 
  1110  009B                     	;# 
  1111  009C                     	;# 
  1112  009D                     	;# 
  1113  009E                     	;# 
  1114  009F                     	;# 
  1115  010C                     	;# 
  1116  010D                     	;# 
  1117  010E                     	;# 
  1118  0111                     	;# 
  1119  0112                     	;# 
  1120  0113                     	;# 
  1121  0114                     	;# 
  1122  0115                     	;# 
  1123  0116                     	;# 
  1124  0117                     	;# 
  1125  0118                     	;# 
  1126  0119                     	;# 
  1127  011D                     	;# 
  1128  018C                     	;# 
  1129  018D                     	;# 
  1130  018E                     	;# 
  1131  0191                     	;# 
  1132  0191                     	;# 
  1133  0192                     	;# 
  1134  0193                     	;# 
  1135  0193                     	;# 
  1136  0194                     	;# 
  1137  0195                     	;# 
  1138  0196                     	;# 
  1139  0199                     	;# 
  1140  019A                     	;# 
  1141  019B                     	;# 
  1142  019B                     	;# 
  1143  019C                     	;# 
  1144  019D                     	;# 
  1145  019E                     	;# 
  1146  019F                     	;# 
  1147  020C                     	;# 
  1148  020D                     	;# 
  1149  0211                     	;# 
  1150  0211                     	;# 
  1151  0212                     	;# 
  1152  0212                     	;# 
  1153  0213                     	;# 
  1154  0213                     	;# 
  1155  0214                     	;# 
  1156  0214                     	;# 
  1157  0215                     	;# 
  1158  0215                     	;# 
  1159  0215                     	;# 
  1160  0216                     	;# 
  1161  0216                     	;# 
  1162  0217                     	;# 
  1163  0217                     	;# 
  1164  0391                     	;# 
  1165  0392                     	;# 
  1166  0393                     	;# 
  1167  0394                     	;# 
  1168  0395                     	;# 
  1169  0396                     	;# 
  1170  039A                     	;# 
  1171  039B                     	;# 
  1172  0611                     	;# 
  1173  0612                     	;# 
  1174  0613                     	;# 
  1175  0613                     	;# 
  1176  0614                     	;# 
  1177  0615                     	;# 
  1178  0616                     	;# 
  1179  0616                     	;# 
  1180  0691                     	;# 
  1181  0692                     	;# 
  1182  0693                     	;# 
  1183  0694                     	;# 
  1184  0695                     	;# 
  1185  0E8E                     	;# 
  1186  0E8F                     	;# 
  1187  0E90                     	;# 
  1188  0E91                     	;# 
  1189  0E92                     	;# 
  1190  0E93                     	;# 
  1191  0E94                     	;# 
  1192  0E94                     	;# 
  1193  0E95                     	;# 
  1194  0E96                     	;# 
  1195  0E97                     	;# 
  1196  0E98                     	;# 
  1197  0E99                     	;# 
  1198  0E9A                     	;# 
  1199  0E9B                     	;# 
  1200  0E9C                     	;# 
  1201  0E9D                     	;# 
  1202  0E9E                     	;# 
  1203  0E9F                     	;# 
  1204  0FE4                     	;# 
  1205  0FE5                     	;# 
  1206  0FE6                     	;# 
  1207  0FE7                     	;# 
  1208  0FE8                     	;# 
  1209  0FE9                     	;# 
  1210  0FEA                     	;# 
  1211  0FEB                     	;# 
  1212  0FED                     	;# 
  1213  0FEE                     	;# 
  1214  0FEF                     	;# 
  1215  0000                     	;# 
  1216  0001                     	;# 
  1217  0002                     	;# 
  1218  0003                     	;# 
  1219  0004                     	;# 
  1220  0005                     	;# 
  1221  0006                     	;# 
  1222  0007                     	;# 
  1223  0008                     	;# 
  1224  0009                     	;# 
  1225  000A                     	;# 
  1226  000B                     	;# 
  1227  000C                     	;# 
  1228  000D                     	;# 
  1229  000E                     	;# 
  1230  0011                     	;# 
  1231  0012                     	;# 
  1232  0015                     	;# 
  1233  0016                     	;# 
  1234  0016                     	;# 
  1235  0017                     	;# 
  1236  0018                     	;# 
  1237  0019                     	;# 
  1238  001A                     	;# 
  1239  001B                     	;# 
  1240  001C                     	;# 
  1241  008C                     	;# 
  1242  008D                     	;# 
  1243  008E                     	;# 
  1244  0091                     	;# 
  1245  0092                     	;# 
  1246  0095                     	;# 
  1247  0096                     	;# 
  1248  0097                     	;# 
  1249  0098                     	;# 
  1250  0099                     	;# 
  1251  009A                     	;# 
  1252  009B                     	;# 
  1253  009B                     	;# 
  1254  009C                     	;# 
  1255  009D                     	;# 
  1256  009E                     	;# 
  1257  009F                     	;# 
  1258  010C                     	;# 
  1259  010D                     	;# 
  1260  010E                     	;# 
  1261  0111                     	;# 
  1262  0112                     	;# 
  1263  0113                     	;# 
  1264  0114                     	;# 
  1265  0115                     	;# 
  1266  0116                     	;# 
  1267  0117                     	;# 
  1268  0118                     	;# 
  1269  0119                     	;# 
  1270  011D                     	;# 
  1271  018C                     	;# 
  1272  018D                     	;# 
  1273  018E                     	;# 
  1274  0191                     	;# 
  1275  0191                     	;# 
  1276  0192                     	;# 
  1277  0193                     	;# 
  1278  0193                     	;# 
  1279  0194                     	;# 
  1280  0195                     	;# 
  1281  0196                     	;# 
  1282  0199                     	;# 
  1283  019A                     	;# 
  1284  019B                     	;# 
  1285  019B                     	;# 
  1286  019C                     	;# 
  1287  019D                     	;# 
  1288  019E                     	;# 
  1289  019F                     	;# 
  1290  020C                     	;# 
  1291  020D                     	;# 
  1292  0211                     	;# 
  1293  0211                     	;# 
  1294  0212                     	;# 
  1295  0212                     	;# 
  1296  0213                     	;# 
  1297  0213                     	;# 
  1298  0214                     	;# 
  1299  0214                     	;# 
  1300  0215                     	;# 
  1301  0215                     	;# 
  1302  0215                     	;# 
  1303  0216                     	;# 
  1304  0216                     	;# 
  1305  0217                     	;# 
  1306  0217                     	;# 
  1307  0391                     	;# 
  1308  0392                     	;# 
  1309  0393                     	;# 
  1310  0394                     	;# 
  1311  0395                     	;# 
  1312  0396                     	;# 
  1313  039A                     	;# 
  1314  039B                     	;# 
  1315  0611                     	;# 
  1316  0612                     	;# 
  1317  0613                     	;# 
  1318  0613                     	;# 
  1319  0614                     	;# 
  1320  0615                     	;# 
  1321  0616                     	;# 
  1322  0616                     	;# 
  1323  0691                     	;# 
  1324  0692                     	;# 
  1325  0693                     	;# 
  1326  0694                     	;# 
  1327  0695                     	;# 
  1328  0E8E                     	;# 
  1329  0E8F                     	;# 
  1330  0E90                     	;# 
  1331  0E91                     	;# 
  1332  0E92                     	;# 
  1333  0E93                     	;# 
  1334  0E94                     	;# 
  1335  0E94                     	;# 
  1336  0E95                     	;# 
  1337  0E96                     	;# 
  1338  0E97                     	;# 
  1339  0E98                     	;# 
  1340  0E99                     	;# 
  1341  0E9A                     	;# 
  1342  0E9B                     	;# 
  1343  0E9C                     	;# 
  1344  0E9D                     	;# 
  1345  0E9E                     	;# 
  1346  0E9F                     	;# 
  1347  0FE4                     	;# 
  1348  0FE5                     	;# 
  1349  0FE6                     	;# 
  1350  0FE7                     	;# 
  1351  0FE8                     	;# 
  1352  0FE9                     	;# 
  1353  0FEA                     	;# 
  1354  0FEB                     	;# 
  1355  0FED                     	;# 
  1356  0FEE                     	;# 
  1357  0FEF                     	;# 
  1358                           
  1359                           	psect	stringtext
  1360  031B                     __pstringtext:	
  1361  031B                     _USB_SD_Ptr:	
  1362  031B  34E0               	retlw	low (_sd000| (0+32768))
  1363  031C  3483               	retlw	high (_sd000| (0+32768))
  1364  031D  3466               	retlw	low (_sd001| (0+32768))
  1365  031E  3483               	retlw	high (_sd001| (0+32768))
  1366  031F  349A               	retlw	low (_sd002| (0+32768))
  1367  0320  3483               	retlw	high (_sd002| (0+32768))
  1368  0321                     __end_of_USB_SD_Ptr:	
  1369  0321                     _USB_CD_Ptr:	
  1370  0321  3423               	retlw	low (_configDescriptor1| (0+32768))
  1371  0322  3483               	retlw	high (_configDescriptor1| (0+32768))
  1372  0323                     __end_of_USB_CD_Ptr:	
  1373  0323                     _configDescriptor1:	
  1374  0323  3409               	retlw	9
  1375  0324  3402               	retlw	2
  1376  0325  3443               	retlw	67
  1377  0326  3400               	retlw	0
  1378  0327  3402               	retlw	2
  1379  0328  3401               	retlw	1
  1380  0329  3400               	retlw	0
  1381  032A  34C0               	retlw	192
  1382  032B  3432               	retlw	50
  1383  032C  3409               	retlw	9
  1384  032D  3404               	retlw	4
  1385  032E  3400               	retlw	0
  1386  032F  3400               	retlw	0
  1387  0330  3401               	retlw	1
  1388  0331  3402               	retlw	2
  1389  0332  3402               	retlw	2
  1390  0333  3401               	retlw	1
  1391  0334  3400               	retlw	0
  1392  0335  3405               	retlw	5
  1393  0336  3424               	retlw	36
  1394  0337  3400               	retlw	0
  1395  0338  3410               	retlw	16
  1396  0339  3401               	retlw	1
  1397  033A  3404               	retlw	4
  1398  033B  3424               	retlw	36
  1399  033C  3402               	retlw	2
  1400  033D  3402               	retlw	2
  1401  033E  3405               	retlw	5
  1402  033F  3424               	retlw	36
  1403  0340  3406               	retlw	6
  1404  0341  3400               	retlw	0
  1405  0342  3401               	retlw	1
  1406  0343  3405               	retlw	5
  1407  0344  3424               	retlw	36
  1408  0345  3401               	retlw	1
  1409  0346  3400               	retlw	0
  1410  0347  3401               	retlw	1
  1411  0348  3407               	retlw	7
  1412  0349  3405               	retlw	5
  1413  034A  3481               	retlw	129
  1414  034B  3403               	retlw	3
  1415  034C  3408               	retlw	8
  1416  034D  3400               	retlw	0
  1417  034E  3402               	retlw	2
  1418  034F  3409               	retlw	9
  1419  0350  3404               	retlw	4
  1420  0351  3401               	retlw	1
  1421  0352  3400               	retlw	0
  1422  0353  3402               	retlw	2
  1423  0354  340A               	retlw	10
  1424  0355  3400               	retlw	0
  1425  0356  3400               	retlw	0
  1426  0357  3400               	retlw	0
  1427  0358  3407               	retlw	7
  1428  0359  3405               	retlw	5
  1429  035A  3402               	retlw	2
  1430  035B  3402               	retlw	2
  1431  035C  3440               	retlw	64
  1432  035D  3400               	retlw	0
  1433  035E  3400               	retlw	0
  1434  035F  3407               	retlw	7
  1435  0360  3405               	retlw	5
  1436  0361  3482               	retlw	130
  1437  0362  3402               	retlw	2
  1438  0363  3440               	retlw	64
  1439  0364  3400               	retlw	0
  1440  0365  3400               	retlw	0
  1441  0366                     __end_of_configDescriptor1:	
  1442  0366                     _sd001:	
  1443  0366  3434               	retlw	52
  1444  0367  3403               	retlw	3
  1445  0368  344D               	retlw	77
  1446  0369  3400               	retlw	0
  1447  036A  3469               	retlw	105
  1448  036B  3400               	retlw	0
  1449  036C  3463               	retlw	99
  1450  036D  3400               	retlw	0
  1451  036E  3472               	retlw	114
  1452  036F  3400               	retlw	0
  1453  0370  346F               	retlw	111
  1454  0371  3400               	retlw	0
  1455  0372  3463               	retlw	99
  1456  0373  3400               	retlw	0
  1457  0374  3468               	retlw	104
  1458  0375  3400               	retlw	0
  1459  0376  3469               	retlw	105
  1460  0377  3400               	retlw	0
  1461  0378  3470               	retlw	112
  1462  0379  3400               	retlw	0
  1463  037A  3420               	retlw	32
  1464  037B  3400               	retlw	0
  1465  037C  3454               	retlw	84
  1466  037D  3400               	retlw	0
  1467  037E  3465               	retlw	101
  1468  037F  3400               	retlw	0
  1469  0380  3463               	retlw	99
  1470  0381  3400               	retlw	0
  1471  0382  3468               	retlw	104
  1472  0383  3400               	retlw	0
  1473  0384  346E               	retlw	110
  1474  0385  3400               	retlw	0
  1475  0386  346F               	retlw	111
  1476  0387  3400               	retlw	0
  1477  0388  346C               	retlw	108
  1478  0389  3400               	retlw	0
  1479  038A  346F               	retlw	111
  1480  038B  3400               	retlw	0
  1481  038C  3467               	retlw	103
  1482  038D  3400               	retlw	0
  1483  038E  3479               	retlw	121
  1484  038F  3400               	retlw	0
  1485  0390  3420               	retlw	32
  1486  0391  3400               	retlw	0
  1487  0392  3449               	retlw	73
  1488  0393  3400               	retlw	0
  1489  0394  346E               	retlw	110
  1490  0395  3400               	retlw	0
  1491  0396  3463               	retlw	99
  1492  0397  3400               	retlw	0
  1493  0398  342E               	retlw	46
  1494  0399  3400               	retlw	0
  1495  039A                     __end_of_sd001:	
  1496  039A                     _sd002:	
  1497  039A  3434               	retlw	52
  1498  039B  3403               	retlw	3
  1499  039C  3443               	retlw	67
  1500  039D  3400               	retlw	0
  1501  039E  3444               	retlw	68
  1502  039F  3400               	retlw	0
  1503  03A0  3443               	retlw	67
  1504  03A1  3400               	retlw	0
  1505  03A2  3420               	retlw	32
  1506  03A3  3400               	retlw	0
  1507  03A4  3452               	retlw	82
  1508  03A5  3400               	retlw	0
  1509  03A6  3453               	retlw	83
  1510  03A7  3400               	retlw	0
  1511  03A8  342D               	retlw	45
  1512  03A9  3400               	retlw	0
  1513  03AA  3432               	retlw	50
  1514  03AB  3400               	retlw	0
  1515  03AC  3433               	retlw	51
  1516  03AD  3400               	retlw	0
  1517  03AE  3432               	retlw	50
  1518  03AF  3400               	retlw	0
  1519  03B0  3420               	retlw	32
  1520  03B1  3400               	retlw	0
  1521  03B2  3445               	retlw	69
  1522  03B3  3400               	retlw	0
  1523  03B4  346D               	retlw	109
  1524  03B5  3400               	retlw	0
  1525  03B6  3475               	retlw	117
  1526  03B7  3400               	retlw	0
  1527  03B8  346C               	retlw	108
  1528  03B9  3400               	retlw	0
  1529  03BA  3461               	retlw	97
  1530  03BB  3400               	retlw	0
  1531  03BC  3474               	retlw	116
  1532  03BD  3400               	retlw	0
  1533  03BE  3469               	retlw	105
  1534  03BF  3400               	retlw	0
  1535  03C0  346F               	retlw	111
  1536  03C1  3400               	retlw	0
  1537  03C2  346E               	retlw	110
  1538  03C3  3400               	retlw	0
  1539  03C4  3420               	retlw	32
  1540  03C5  3400               	retlw	0
  1541  03C6  3444               	retlw	68
  1542  03C7  3400               	retlw	0
  1543  03C8  3465               	retlw	101
  1544  03C9  3400               	retlw	0
  1545  03CA  346D               	retlw	109
  1546  03CB  3400               	retlw	0
  1547  03CC  346F               	retlw	111
  1548  03CD  3400               	retlw	0
  1549  03CE                     __end_of_sd002:	
  1550  03CE                     _device_dsc:	
  1551  03CE  3412               	retlw	18
  1552  03CF  3401               	retlw	1
  1553  03D0  3400               	retlw	0
  1554  03D1  3402               	retlw	2
  1555  03D2  3402               	retlw	2
  1556  03D3  3400               	retlw	0
  1557  03D4  3400               	retlw	0
  1558  03D5  3408               	retlw	8
  1559  03D6  34D8               	retlw	216
  1560  03D7  3404               	retlw	4
  1561  03D8  340A               	retlw	10
  1562  03D9  3400               	retlw	0
  1563  03DA  3400               	retlw	0
  1564  03DB  3401               	retlw	1
  1565  03DC  3401               	retlw	1
  1566  03DD  3402               	retlw	2
  1567  03DE  3400               	retlw	0
  1568  03DF  3401               	retlw	1
  1569  03E0                     __end_of_device_dsc:	
  1570  03E0                     _sd000:	
  1571  03E0  3404               	retlw	4
  1572  03E1  3403               	retlw	3
  1573  03E2  3409               	retlw	9
  1574  03E3  3404               	retlw	4
  1575  03E4                     __end_of_sd000:	
  1576  000B                     _INTCONbits	set	11
  1577  0012                     _PIR2bits	set	18
  1578  0099                     _OSCCON	set	153
  1579  0099                     _OSCCONbits	set	153
  1580  0092                     _PIE2bits	set	146
  1581  008C                     _TRISAbits	set	140
  1582  008D                     _TRISBbits	set	141
  1583  008E                     _TRISCbits	set	142
  1584  010C                     _LATAbits	set	268
  1585  010E                     _LATCbits	set	270
  1586  018C                     _ANSELA	set	396
  1587  018D                     _ANSELB	set	397
  1588  018E                     _ANSELC	set	398
  1589  0211                     _SSPBUF	set	529
  1590  0215                     _SSPCON1bits	set	533
  1591  0214                     _SSPSTATbits	set	532
  1592  039B                     _ACTCON	set	923
  1593  0394                     _IOCBPbits	set	916
  1594  0E96                     _UADDR	set	3734
  1595  0E91                     _UCFG	set	3729
  1596  0E8E                     _UCON	set	3726
  1597  0E8E                     _UCONbits	set	3726
  1598  0E97                     _UEIE	set	3735
  1599  0E93                     _UEIR	set	3731
  1600  0E98                     _UEP0bits	set	3736
  1601  0E92                     _UIE	set	3730
  1602  0E92                     _UIEbits	set	3730
  1603  0E90                     _UIR	set	3728
  1604  0E90                     _UIRbits	set	3728
  1605  0E8F                     _USTAT	set	3727
  1606  0E98                     _UEP0	set	3736
  1607  0E99                     _UEP1	set	3737
  1608                           
  1609                           ; #config settings
  1610  0000                     
  1611                           	psect	cinit
  1612  0014                     start_initialization:	
  1613  0014                     __initialization:	
  1614                           
  1615                           ; Clear objects allocated to BANK1
  1616  0014  0021               	movlb	1	; select bank1
  1617  0015  01E0               	clrf	__pbssBANK1& (0+127)
  1618  0016  01E1               	clrf	(__pbssBANK1+1)& (0+127)
  1619  0017  01E2               	clrf	(__pbssBANK1+2)& (0+127)
  1620  0018  01E3               	clrf	(__pbssBANK1+3)& (0+127)
  1621  0019  01E4               	clrf	(__pbssBANK1+4)& (0+127)
  1622  001A  01E5               	clrf	(__pbssBANK1+5)& (0+127)
  1623                           
  1624                           ; Clear objects allocated to BANK3
  1625  001B  30A0               	movlw	low __pbssBANK3
  1626  001C  0084               	movwf	4
  1627  001D  3001               	movlw	high __pbssBANK3
  1628  001E  0085               	movwf	5
  1629  001F  304D               	movlw	77
  1630  0020  3197  2782  3180   	fcall	clear_ram0
  1631                           
  1632                           ; Clear objects allocated to BANK4
  1633  0023  3020               	movlw	low __pbssBANK4
  1634  0024  0084               	movwf	4
  1635  0025  3002               	movlw	high __pbssBANK4
  1636  0026  0085               	movwf	5
  1637  0027  3012               	movlw	18
  1638  0028  3197  2782  3180   	fcall	clear_ram0
  1639                           
  1640                           ; Clear objects allocated to BANK5
  1641  002B  30A0               	movlw	low __pbssBANK5
  1642  002C  0084               	movwf	4
  1643  002D  3002               	movlw	high __pbssBANK5
  1644  002E  0085               	movwf	5
  1645  002F  3040               	movlw	64
  1646  0030  3197  2782  3180   	fcall	clear_ram0
  1647                           
  1648                           ; Clear objects allocated to BANK6
  1649  0033  3020               	movlw	low __pbssBANK6
  1650  0034  0084               	movwf	4
  1651  0035  3003               	movlw	high __pbssBANK6
  1652  0036  0085               	movwf	5
  1653  0037  3040               	movlw	64
  1654  0038  3197  2782         	fcall	clear_ram0
  1655  003A                     end_of_initialization:	
  1656                           ;End of C runtime variable initialization code
  1657                           
  1658  003A                     __end_of__initialization:	
  1659  003A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1660  003B  0020               	movlb	0
  1661  003C  318F  2F7B         	ljmp	_main	;jump to C main() function
  1662                           
  1663                           	psect	bssBANK1
  1664  00E0                     __pbssBANK1:	
  1665  00E0                     _pBDTEntryEP0OutNext:	
  1666  00E0                     	ds	2
  1667  00E2                     _USBDeviceState:	
  1668  00E2                     	ds	1
  1669  00E3                     _controlTransferState:	
  1670  00E3                     	ds	1
  1671  00E4                     _pBDTEntryEP0OutCurrent:	
  1672  00E4                     	ds	1
  1673  00E5                     _USTATcopy:	
  1674  00E5                     	ds	1
  1675                           
  1676                           	psect	bssBANK3
  1677  01A0                     __pbssBANK3:	
  1678  01A0                     _outPipes:	
  1679  01A0                     	ds	7
  1680  01A7                     _pBDTEntryIn:	
  1681  01A7                     	ds	6
  1682  01AD                     _pBDTEntryOut:	
  1683  01AD                     	ds	6
  1684  01B3                     _inPipes:	
  1685  01B3                     	ds	5
  1686  01B8                     _BaudRateGen:	
  1687  01B8                     	ds	4
  1688  01BC                     _USB1msTickCount:	
  1689  01BC                     	ds	4
  1690  01C0                     _ep_data_in:	
  1691  01C0                     	ds	3
  1692  01C3                     _ep_data_out:	
  1693  01C3                     	ds	3
  1694  01C6                     _CDCDataInHandle:	
  1695  01C6                     	ds	2
  1696  01C8                     _CDCDataOutHandle:	
  1697  01C8                     	ds	2
  1698  01CA                     _pCDCDst:	
  1699  01CA                     	ds	2
  1700  01CC                     _pCDCSrc:	
  1701  01CC                     	ds	2
  1702  01CE                     _BothEP0OutUOWNsSet:	
  1703  01CE                     	ds	1
  1704  01CF                     _MUSHROOM_ON:	
  1705  01CF                     	ds	1
  1706  01D0                     _RemoteWakeup:	
  1707  01D0                     	ds	1
  1708  01D1                     _SW:	
  1709  01D1                     	ds	1
  1710  01D2                     _TMR_CNT:	
  1711  01D2                     	ds	1
  1712  01D3                     _USBBusIsSuspended:	
  1713  01D3                     	ds	1
  1714  01D4                     _USBDeferINDataStagePackets:	
  1715  01D4                     	ds	1
  1716  01D5                     _USBDeferOUTDataStagePackets:	
  1717  01D5                     	ds	1
  1718  01D6                     _USBDeferStatusStagePacket:	
  1719  01D6                     	ds	1
  1720  01D7                     _USBStatusStageEnabledFlag1:	
  1721  01D7                     	ds	1
  1722  01D8                     _USBStatusStageEnabledFlag2:	
  1723  01D8                     	ds	1
  1724  01D9                     _USBStatusStageTimeoutCounter:	
  1725  01D9                     	ds	1
  1726  01DA                     _USBTicksSinceSuspendEnd:	
  1727  01DA                     	ds	1
  1728  01DB                     _cdc_mem_type:	
  1729  01DB                     	ds	1
  1730  01DC                     _cdc_rx_len:	
  1731  01DC                     	ds	1
  1732  01DD                     _cdc_trf_state:	
  1733  01DD                     	ds	1
  1734  01DE                     _cdc_tx_len:	
  1735  01DE                     	ds	1
  1736  01DF                     _control_signal_bitmap:	
  1737  01DF                     	ds	1
  1738  01E0                     _endpoint_number:	
  1739  01E0                     	ds	1
  1740  01E1                     _pDst:	
  1741  01E1                     	ds	1
  1742  01E2                     _shortPacketStatus:	
  1743  01E2                     	ds	1
  1744  01E3                     _line_coding:	
  1745  01E3                     	ds	7
  1746  01EA                     _USBAlternateInterface:	
  1747  01EA                     	ds	2
  1748  01EC                     _USBActiveConfiguration:	
  1749  01EC                     	ds	1
  1750                           
  1751                           	psect	bssBANK4
  1752  0220                     __pbssBANK4:	
  1753  0220                     _cdc_notice:	
  1754  0220                     	ds	10
  1755  022A                     _dummy_encapsulated_cmd_response:	
  1756  022A                     	ds	8
  1757                           
  1758                           	psect	bssBANK5
  1759  02A0                     __pbssBANK5:	
  1760  02A0                     _readBuffer:	
  1761  02A0                     	ds	64
  1762                           
  1763                           	psect	bssBANK6
  1764  0320                     __pbssBANK6:	
  1765  0320                     _writeBuffer:	
  1766  0320                     	ds	64
  1767                           
  1768                           	psect	clrtext
  1769  1782                     clear_ram0:	
  1770                           ;	Called with FSR0 containing the base address, and
  1771                           ;	WREG with the size to clear
  1772                           
  1773  1782  0064               	clrwdt	;clear the watchdog before getting into this loop
  1774  1783                     clrloop0:	
  1775  1783  0180               	clrf	0	;clear RAM location pointed to by FSR
  1776  1784  3101               	addfsr 0,1
  1777  1785  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1778  1786  2F83               	goto	clrloop0	;have we reached the end yet?
  1779  1787  3400               	retlw	0	;all done for this memory range, return
  1780                           
  1781                           	psect	cstackBANK4
  1782  0232                     __pcstackBANK4:	
  1783  0232                     main@data:	
  1784                           
  1785                           ; 2 bytes @ 0x0
  1786  0232                     	ds	2
  1787  0234                     main@status:	
  1788                           
  1789                           ; 1 bytes @ 0x2
  1790  0234                     	ds	1
  1791                           
  1792                           	psect	cstackBANK3
  1793  01ED                     __pcstackBANK3:	
  1794  01ED                     ??_main:	
  1795                           
  1796                           ; 1 bytes @ 0x0
  1797  01ED                     	ds	3
  1798                           
  1799                           	psect	cstackBANK2
  1800  0160                     __pcstackBANK2:	
  1801  0160                     ??_SYSTEM_Initialize:	
  1802  0160                     ?_USBConfigureEndpoint:	
  1803                           ; 1 bytes @ 0x0
  1804                           
  1805  0160                     ??_SPI_init:	
  1806                           ; 1 bytes @ 0x0
  1807                           
  1808  0160                     ??_SPI_transfer:	
  1809                           ; 1 bytes @ 0x0
  1810                           
  1811  0160                     ??_USBDeviceInit:	
  1812                           ; 1 bytes @ 0x0
  1813                           
  1814  0160                     ??_USBDeviceAttach:	
  1815                           ; 1 bytes @ 0x0
  1816                           
  1817  0160                     ?_putUSBUSART:	
  1818                           ; 1 bytes @ 0x0
  1819                           
  1820  0160                     ?_USBTransferOnePacket:	
  1821                           ; 1 bytes @ 0x0
  1822                           
  1823  0160                     USBTransferOnePacket@dir:	
  1824                           ; 2 bytes @ 0x0
  1825                           
  1826  0160                     USBConfigureEndpoint@direction:	
  1827                           ; 1 bytes @ 0x0
  1828                           
  1829  0160                     putUSBUSART@length:	
  1830                           ; 1 bytes @ 0x0
  1831                           
  1832  0160                     SYSTEM_Initialize@state:	
  1833                           ; 1 bytes @ 0x0
  1834                           
  1835  0160                     SPI_transfer@data:	
  1836                           ; 1 bytes @ 0x0
  1837                           
  1838                           
  1839                           ; 1 bytes @ 0x0
  1840  0160                     	ds	1
  1841  0161                     ??_USBConfigureEndpoint:	
  1842  0161                     ??_ReadRegister:	
  1843                           ; 1 bytes @ 0x1
  1844                           
  1845  0161                     ?_ReadPayload:	
  1846                           ; 1 bytes @ 0x1
  1847                           
  1848  0161                     ?_WriteAddress:	
  1849                           ; 1 bytes @ 0x1
  1850                           
  1851  0161                     ?_WriteRegister:	
  1852                           ; 1 bytes @ 0x1
  1853                           
  1854  0161                     ??_putUSBUSART:	
  1855                           ; 1 bytes @ 0x1
  1856                           
  1857  0161                     WriteRegister@val:	
  1858                           ; 1 bytes @ 0x1
  1859                           
  1860  0161                     WriteAddress@num:	
  1861                           ; 1 bytes @ 0x1
  1862                           
  1863  0161                     ReadPayload@data:	
  1864                           ; 1 bytes @ 0x1
  1865                           
  1866  0161                     USBDeviceInit@p:	
  1867                           ; 1 bytes @ 0x1
  1868                           
  1869  0161                     USBTransferOnePacket@data:	
  1870                           ; 2 bytes @ 0x1
  1871                           
  1872                           
  1873                           ; 2 bytes @ 0x1
  1874  0161                     	ds	1
  1875  0162                     ??_ReadPayload:	
  1876  0162                     ??_WriteRegister:	
  1877                           ; 1 bytes @ 0x2
  1878                           
  1879  0162                     putUSBUSART@data:	
  1880                           ; 1 bytes @ 0x2
  1881                           
  1882  0162                     WriteAddress@addr:	
  1883                           ; 1 bytes @ 0x2
  1884                           
  1885                           
  1886                           ; 1 bytes @ 0x2
  1887  0162                     	ds	1
  1888  0163                     ??_WriteAddress:	
  1889  0163                     USBDeviceInit@i_821:	
  1890                           ; 1 bytes @ 0x3
  1891                           
  1892  0163                     USBTransferOnePacket@len:	
  1893                           ; 1 bytes @ 0x3
  1894                           
  1895  0163                     ReadRegister@reg:	
  1896                           ; 1 bytes @ 0x3
  1897                           
  1898                           
  1899                           ; 1 bytes @ 0x3
  1900  0163                     	ds	1
  1901  0164                     ??_USBTransferOnePacket:	
  1902  0164                     USBDeviceInit@i:	
  1903                           ; 1 bytes @ 0x4
  1904                           
  1905  0164                     WriteRegister@reg:	
  1906                           ; 1 bytes @ 0x4
  1907                           
  1908  0164                     ReadRegister@temp:	
  1909                           ; 1 bytes @ 0x4
  1910                           
  1911  0164                     ReadPayload@num:	
  1912                           ; 1 bytes @ 0x4
  1913                           
  1914                           
  1915                           ; 1 bytes @ 0x4
  1916  0164                     	ds	1
  1917  0165                     USBConfigureEndpoint@EPNum:	
  1918  0165                     WriteAddress@reg:	
  1919                           ; 1 bytes @ 0x5
  1920                           
  1921  0165                     ReadRegister@temp1:	
  1922                           ; 1 bytes @ 0x5
  1923                           
  1924  0165                     ReadPayload@i:	
  1925                           ; 1 bytes @ 0x5
  1926                           
  1927                           
  1928                           ; 1 bytes @ 0x5
  1929  0165                     	ds	1
  1930  0166                     USBConfigureEndpoint@handle:	
  1931  0166                     WriteAddress@i:	
  1932                           ; 1 bytes @ 0x6
  1933                           
  1934                           
  1935                           ; 2 bytes @ 0x6
  1936  0166                     	ds	1
  1937  0167                     ?_USBEnableEndpoint:	
  1938  0167                     USBEnableEndpoint@options:	
  1939                           ; 1 bytes @ 0x7
  1940                           
  1941                           
  1942                           ; 1 bytes @ 0x7
  1943  0167                     	ds	1
  1944  0168                     ??_nRF_Setup:	
  1945  0168                     ??_USBEnableEndpoint:	
  1946                           ; 1 bytes @ 0x8
  1947                           
  1948  0168                     USBTransferOnePacket@ep:	
  1949                           ; 1 bytes @ 0x8
  1950                           
  1951                           
  1952                           ; 1 bytes @ 0x8
  1953  0168                     	ds	1
  1954  0169                     USBTransferOnePacket@handle:	
  1955                           
  1956                           ; 2 bytes @ 0x9
  1957  0169                     	ds	1
  1958  016A                     nRF_Setup@status:	
  1959  016A                     USBEnableEndpoint@p:	
  1960                           ; 1 bytes @ 0xA
  1961                           
  1962                           
  1963                           ; 2 bytes @ 0xA
  1964  016A                     	ds	1
  1965  016B                     ??_CDCTxService:	
  1966  016B                     nRF_Setup@RXTX_ADDR:	
  1967                           ; 1 bytes @ 0xB
  1968                           
  1969                           
  1970                           ; 5 bytes @ 0xB
  1971  016B                     	ds	1
  1972  016C                     USBEnableEndpoint@ep:	
  1973  016C                     CDCTxService@i:	
  1974                           ; 1 bytes @ 0xC
  1975                           
  1976                           
  1977                           ; 1 bytes @ 0xC
  1978  016C                     	ds	1
  1979  016D                     ??_CDCInitEP:	
  1980  016D                     CDCTxService@byte_to_send:	
  1981                           ; 1 bytes @ 0xD
  1982                           
  1983                           
  1984                           ; 1 bytes @ 0xD
  1985  016D                     	ds	3
  1986                           
  1987                           	psect	cstackBANK1
  1988  00E6                     __pcstackBANK1:	
  1989  00E6                     ??_USBCtrlEPService:	
  1990                           
  1991                           ; 1 bytes @ 0x0
  1992  00E6                     	ds	3
  1993  00E9                     ??_USBDeviceTasks:	
  1994                           
  1995                           ; 1 bytes @ 0x3
  1996  00E9                     	ds	2
  1997  00EB                     ??_SYS_InterruptHigh:	
  1998                           
  1999                           ; 1 bytes @ 0x5
  2000  00EB                     	ds	1
  2001                           
  2002                           	psect	cstackCOMMON
  2003  0070                     __pcstackCOMMON:	
  2004  0070                     ?_SYSTEM_Initialize:	
  2005  0070                     ?_CDCInitEP:	
  2006                           ; 1 bytes @ 0x0
  2007                           
  2008  0070                     ?_USBCheckCDCRequest:	
  2009                           ; 1 bytes @ 0x0
  2010                           
  2011  0070                     ??_USBCheckCDCRequest:	
  2012                           ; 1 bytes @ 0x0
  2013                           
  2014  0070                     ?_USBWakeFromSuspend:	
  2015                           ; 1 bytes @ 0x0
  2016                           
  2017  0070                     ?_USBSuspend:	
  2018                           ; 1 bytes @ 0x0
  2019                           
  2020  0070                     ?_USBIncrement1msInternalTimers:	
  2021                           ; 1 bytes @ 0x0
  2022                           
  2023  0070                     ??_USBIncrement1msInternalTimers:	
  2024                           ; 1 bytes @ 0x0
  2025                           
  2026  0070                     ?_USBCtrlEPAllowStatusStage:	
  2027                           ; 1 bytes @ 0x0
  2028                           
  2029  0070                     ??_USBCtrlEPAllowStatusStage:	
  2030                           ; 1 bytes @ 0x0
  2031                           
  2032  0070                     ?_USBStallHandler:	
  2033                           ; 1 bytes @ 0x0
  2034                           
  2035  0070                     ??_USBStallHandler:	
  2036                           ; 1 bytes @ 0x0
  2037                           
  2038  0070                     ?_USBCtrlEPService:	
  2039                           ; 1 bytes @ 0x0
  2040                           
  2041  0070                     ?_USBCtrlTrfTxService:	
  2042                           ; 1 bytes @ 0x0
  2043                           
  2044  0070                     ??_USBCtrlTrfTxService:	
  2045                           ; 1 bytes @ 0x0
  2046                           
  2047  0070                     ?_USBCtrlTrfSetupHandler:	
  2048                           ; 1 bytes @ 0x0
  2049                           
  2050  0070                     ?_USBCtrlTrfOutHandler:	
  2051                           ; 1 bytes @ 0x0
  2052                           
  2053  0070                     ?_USBCtrlTrfInHandler:	
  2054                           ; 1 bytes @ 0x0
  2055                           
  2056  0070                     ?_USBCheckStdRequest:	
  2057                           ; 1 bytes @ 0x0
  2058                           
  2059  0070                     ?_USBStdFeatureReqHandler:	
  2060                           ; 1 bytes @ 0x0
  2061                           
  2062  0070                     ?_SPI_init:	
  2063                           ; 1 bytes @ 0x0
  2064                           
  2065  0070                     ?_ReadRegister:	
  2066                           ; 1 bytes @ 0x0
  2067                           
  2068  0070                     ?_SPI_transfer:	
  2069                           ; 1 bytes @ 0x0
  2070                           
  2071  0070                     ?_USBDeviceInit:	
  2072                           ; 1 bytes @ 0x0
  2073                           
  2074  0070                     ?_USBDeviceTasks:	
  2075                           ; 1 bytes @ 0x0
  2076                           
  2077  0070                     ?_USBDeviceAttach:	
  2078                           ; 1 bytes @ 0x0
  2079                           
  2080  0070                     ?_USBCtrlEPAllowDataStage:	
  2081                           ; 1 bytes @ 0x0
  2082                           
  2083  0070                     ?_USBCtrlEPServiceComplete:	
  2084                           ; 1 bytes @ 0x0
  2085                           
  2086  0070                     ?_USBCtrlTrfRxService:	
  2087                           ; 1 bytes @ 0x0
  2088                           
  2089  0070                     ?_USBStdSetCfgHandler:	
  2090                           ; 1 bytes @ 0x0
  2091                           
  2092  0070                     ?_USBStdGetDscHandler:	
  2093                           ; 1 bytes @ 0x0
  2094                           
  2095  0070                     ??_USBStdGetDscHandler:	
  2096                           ; 1 bytes @ 0x0
  2097                           
  2098  0070                     ?_USBStdGetStatusHandler:	
  2099                           ; 1 bytes @ 0x0
  2100                           
  2101  0070                     ??_USBStdGetStatusHandler:	
  2102                           ; 1 bytes @ 0x0
  2103                           
  2104  0070                     ?_CDCTxService:	
  2105                           ; 1 bytes @ 0x0
  2106                           
  2107  0070                     ?_SYS_InterruptHigh:	
  2108                           ; 1 bytes @ 0x0
  2109                           
  2110  0070                     ?_main:	
  2111                           ; 1 bytes @ 0x0
  2112                           
  2113  0070                     ?i1_USBDeviceInit:	
  2114                           ; 1 bytes @ 0x0
  2115                           
  2116  0070                     ??i1_USBDeviceInit:	
  2117                           ; 1 bytes @ 0x0
  2118                           
  2119  0070                     ?i1_USBConfigureEndpoint:	
  2120                           ; 1 bytes @ 0x0
  2121                           
  2122  0070                     ?i1_CDCInitEP:	
  2123                           ; 1 bytes @ 0x0
  2124                           
  2125  0070                     ?i1_SYSTEM_Initialize:	
  2126                           ; 1 bytes @ 0x0
  2127                           
  2128  0070                     ??i1_SYSTEM_Initialize:	
  2129                           ; 1 bytes @ 0x0
  2130                           
  2131  0070                     ?_memset:	
  2132                           ; 1 bytes @ 0x0
  2133                           
  2134  0070                     ?_nRF_Setup:	
  2135                           ; 2 bytes @ 0x0
  2136                           
  2137  0070                     ?i1_USBTransferOnePacket:	
  2138                           ; 2 bytes @ 0x0
  2139                           
  2140  0070                     i1USBTransferOnePacket@dir:	
  2141                           ; 2 bytes @ 0x0
  2142                           
  2143  0070                     i1USBConfigureEndpoint@direction:	
  2144                           ; 1 bytes @ 0x0
  2145                           
  2146  0070                     i1SYSTEM_Initialize@state:	
  2147                           ; 1 bytes @ 0x0
  2148                           
  2149  0070                     memset@p1:	
  2150                           ; 1 bytes @ 0x0
  2151                           
  2152                           
  2153                           ; 2 bytes @ 0x0
  2154  0070                     	ds	1
  2155  0071                     ??i1_USBConfigureEndpoint:	
  2156  0071                     USBStdGetStatusHandler@p:	
  2157                           ; 1 bytes @ 0x1
  2158                           
  2159  0071                     i1USBDeviceInit@p:	
  2160                           ; 2 bytes @ 0x1
  2161                           
  2162  0071                     i1USBTransferOnePacket@data:	
  2163                           ; 2 bytes @ 0x1
  2164                           
  2165                           
  2166                           ; 2 bytes @ 0x1
  2167  0071                     	ds	1
  2168  0072                     ??_USBCtrlTrfRxService:	
  2169  0072                     USBCtrlTrfTxService@byteToSend:	
  2170                           ; 1 bytes @ 0x2
  2171                           
  2172  0072                     memset@c:	
  2173                           ; 1 bytes @ 0x2
  2174                           
  2175                           
  2176                           ; 2 bytes @ 0x2
  2177  0072                     	ds	1
  2178  0073                     ??_USBCtrlTrfInHandler:	
  2179  0073                     ??_USBCtrlEPAllowDataStage:	
  2180                           ; 1 bytes @ 0x3
  2181                           
  2182  0073                     i1USBDeviceInit@i_821:	
  2183                           ; 1 bytes @ 0x3
  2184                           
  2185  0073                     i1USBTransferOnePacket@len:	
  2186                           ; 1 bytes @ 0x3
  2187                           
  2188                           
  2189                           ; 1 bytes @ 0x3
  2190  0073                     	ds	1
  2191  0074                     ??i1_USBTransferOnePacket:	
  2192  0074                     USBCtrlTrfRxService@i:	
  2193                           ; 1 bytes @ 0x4
  2194                           
  2195  0074                     i1USBDeviceInit@i:	
  2196                           ; 1 bytes @ 0x4
  2197                           
  2198  0074                     memset@n:	
  2199                           ; 1 bytes @ 0x4
  2200                           
  2201                           
  2202                           ; 2 bytes @ 0x4
  2203  0074                     	ds	1
  2204  0075                     ??_USBCtrlEPServiceComplete:	
  2205  0075                     USBCtrlTrfRxService@byteToRead:	
  2206                           ; 1 bytes @ 0x5
  2207                           
  2208  0075                     USBCtrlTrfInHandler@lastDTS:	
  2209                           ; 1 bytes @ 0x5
  2210                           
  2211  0075                     i1USBConfigureEndpoint@EPNum:	
  2212                           ; 1 bytes @ 0x5
  2213                           
  2214                           
  2215                           ; 1 bytes @ 0x5
  2216  0075                     	ds	1
  2217  0076                     ??_memset:	
  2218  0076                     ??_USBCtrlTrfOutHandler:	
  2219                           ; 1 bytes @ 0x6
  2220                           
  2221  0076                     i1USBConfigureEndpoint@handle:	
  2222                           ; 1 bytes @ 0x6
  2223                           
  2224  0076                     memset@p:	
  2225                           ; 1 bytes @ 0x6
  2226                           
  2227                           
  2228                           ; 2 bytes @ 0x6
  2229  0076                     	ds	1
  2230  0077                     ?i1_USBEnableEndpoint:	
  2231  0077                     i1USBEnableEndpoint@options:	
  2232                           ; 1 bytes @ 0x7
  2233                           
  2234                           
  2235                           ; 1 bytes @ 0x7
  2236  0077                     	ds	1
  2237  0078                     ??i1_USBEnableEndpoint:	
  2238  0078                     i1USBTransferOnePacket@ep:	
  2239                           ; 1 bytes @ 0x8
  2240                           
  2241                           
  2242                           ; 1 bytes @ 0x8
  2243  0078                     	ds	1
  2244  0079                     i1USBTransferOnePacket@handle:	
  2245                           
  2246                           ; 2 bytes @ 0x9
  2247  0079                     	ds	1
  2248  007A                     i1USBEnableEndpoint@p:	
  2249                           
  2250                           ; 2 bytes @ 0xA
  2251  007A                     	ds	2
  2252  007C                     i1USBEnableEndpoint@ep:	
  2253                           
  2254                           ; 1 bytes @ 0xC
  2255  007C                     	ds	1
  2256  007D                     ??i1_CDCInitEP:	
  2257                           
  2258                           ; 1 bytes @ 0xD
  2259  007D                     	ds	1
  2260  007E                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2261                           
  2262                           	psect	cstackBANK0
  2263  0060                     __pcstackBANK0:	
  2264                           ; 1 bytes @ 0xE
  2265                           
  2266  0060                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  2267  0060                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2268                           ; 1 bytes @ 0x0
  2269                           
  2270                           
  2271                           ; 2 bytes @ 0x0
  2272  0060                     	ds	2
  2273  0062                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2274                           
  2275                           ; 2 bytes @ 0x2
  2276  0062                     	ds	2
  2277  0064                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2278                           
  2279                           ; 2 bytes @ 0x4
  2280  0064                     	ds	2
  2281  0066                     ??_USBWakeFromSuspend:	
  2282  0066                     ??_USBSuspend:	
  2283                           ; 1 bytes @ 0x6
  2284                           
  2285  0066                     ??_USBStdFeatureReqHandler:	
  2286                           ; 1 bytes @ 0x6
  2287                           
  2288  0066                     ??_USBStdSetCfgHandler:	
  2289                           ; 1 bytes @ 0x6
  2290                           
  2291                           
  2292                           ; 1 bytes @ 0x6
  2293  0066                     	ds	1
  2294  0067                     USBStdSetCfgHandler@p:	
  2295                           
  2296                           ; 2 bytes @ 0x7
  2297  0067                     	ds	1
  2298  0068                     USBStdFeatureReqHandler@pUEP:	
  2299                           
  2300                           ; 2 bytes @ 0x8
  2301  0068                     	ds	1
  2302  0069                     USBStdSetCfgHandler@i_1174:	
  2303                           
  2304                           ; 1 bytes @ 0x9
  2305  0069                     	ds	1
  2306  006A                     USBStdSetCfgHandler@i:	
  2307  006A                     USBStdFeatureReqHandler@current_ep_data:	
  2308                           ; 1 bytes @ 0xA
  2309                           
  2310                           
  2311                           ; 1 bytes @ 0xA
  2312  006A                     	ds	1
  2313  006B                     USBStdFeatureReqHandler@p:	
  2314                           
  2315                           ; 2 bytes @ 0xB
  2316  006B                     	ds	2
  2317  006D                     ??_USBCheckStdRequest:	
  2318                           
  2319                           ; 1 bytes @ 0xD
  2320  006D                     	ds	1
  2321  006E                     ??_USBCtrlTrfSetupHandler:	
  2322                           
  2323                           ; 1 bytes @ 0xE
  2324  006E                     	ds	1
  2325  006F                     USBDeviceTasks@i:	
  2326                           
  2327                           ; 1 bytes @ 0xF
  2328  006F                     	ds	1
  2329                           
  2330                           	psect	maintext
  2331  0F7B                     __pmaintext:	
  2332 ;;
  2333 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2334 ;;
  2335 ;; *************** function _main *****************
  2336 ;; Defined at:
  2337 ;;		line 19 in file "../src/main.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;		None
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;  data            2    0[BANK4 ] unsigned char [2]
  2342 ;;  status          1    2[BANK4 ] unsigned char 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  1    wreg      void 
  2345 ;; Registers used:
  2346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2347 ;; Tracked objects:
  2348 ;;		On entry : B1F/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2353 ;;      Locals:         0       0       0       0       0       3       0       0       0       0       0       0       
      +0       0
  2354 ;;      Temps:          0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0
  2355 ;;      Totals:         0       0       0       0       3       3       0       0       0       0       0       0       
      +0       0
  2356 ;;Total ram usage:        6 bytes
  2357 ;; Hardware stack levels required when called:   13
  2358 ;; This function calls:
  2359 ;;		_CDCInitEP
  2360 ;;		_CDCTxService
  2361 ;;		_ReadPayload
  2362 ;;		_ReadRegister
  2363 ;;		_SPI_init
  2364 ;;		_SYSTEM_Initialize
  2365 ;;		_USBDeviceAttach
  2366 ;;		_USBDeviceInit
  2367 ;;		_nRF_Setup
  2368 ;;		_putUSBUSART
  2369 ;; This function is called by:
  2370 ;;		Startup code after reset
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           
  2375                           ;psect for function _main
  2376  0F7B                     _main:	
  2377                           
  2378                           ;main.c: 25: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  2379                           
  2380                           ;incstack = 0
  2381                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2382  0F7B  3000               	movlw	0
  2383  0F7C  3197  27B9  318F   	fcall	_SYSTEM_Initialize
  2384                           
  2385                           ;main.c: 26: ANSELA=0;
  2386  0F7F  0023               	movlb	3	; select bank3
  2387  0F80  018C               	clrf	12	;volatile
  2388                           
  2389                           ;main.c: 27: ANSELB=0;
  2390  0F81  018D               	clrf	13	;volatile
  2391                           
  2392                           ;main.c: 28: ANSELC=0;
  2393  0F82  018E               	clrf	14	;volatile
  2394                           
  2395                           ;main.c: 29: USBDeviceInit();
  2396  0F83  3183  23E4  318F   	fcall	_USBDeviceInit
  2397                           
  2398                           ;main.c: 30: USBDeviceAttach();
  2399  0F86  3188  201E  318F   	fcall	_USBDeviceAttach
  2400                           
  2401                           ;main.c: 31: CDCInitEP();
  2402  0F89  318A  2202  318F   	fcall	_CDCInitEP
  2403                           
  2404                           ;main.c: 32: {line_coding.dwDTERate=1200;};
  2405  0F8C  3000               	movlw	0
  2406  0F8D  0023               	movlb	3	; select bank3
  2407  0F8E  00E6               	movwf	(_line_coding+3)^(0+384)
  2408  0F8F  3000               	movlw	0
  2409  0F90  00E5               	movwf	(_line_coding+2)^(0+384)
  2410  0F91  3004               	movlw	4
  2411  0F92  00E4               	movwf	(_line_coding+1)^(0+384)
  2412  0F93  30B0               	movlw	176
  2413  0F94  00E3               	movwf	_line_coding^(0+384)
  2414                           
  2415                           ;main.c: 38: LATAbits.LATA4=1;
  2416  0F95  0022               	movlb	2	; select bank2
  2417  0F96  160C               	bsf	12,4	;volatile
  2418                           
  2419                           ;main.c: 39: LATCbits.LATC6 = 0;
  2420  0F97  130E               	bcf	14,6	;volatile
  2421                           
  2422                           ;main.c: 40: SPI_init();
  2423  0F98  3197  2791  318F   	fcall	_SPI_init
  2424                           
  2425                           ;main.c: 41: nRF_Setup();
  2426  0F9B  3187  2709  318F   	fcall	_nRF_Setup
  2427                           
  2428                           ;main.c: 42: _delay((unsigned long)((1000)*(8000000L/4000.0)));
  2429  0F9E  300B               	movlw	11
  2430  0F9F  0023               	movlb	3	; select bank3
  2431  0FA0  00EF               	movwf	(??_main^(0+384)+2)
  2432  0FA1  3026               	movlw	38
  2433  0FA2  00EE               	movwf	(??_main^(0+384)+1)
  2434  0FA3  3066               	movlw	102
  2435  0FA4  00ED               	movwf	??_main^(0+384)
  2436  0FA5                     u4097:	
  2437  0FA5  0BED               	decfsz	??_main^(0+384),f
  2438  0FA6  2FA5               	goto	u4097
  2439  0FA7  0BEE               	decfsz	(??_main^(0+384)+1),f
  2440  0FA8  2FA5               	goto	u4097
  2441  0FA9  0BEF               	decfsz	(??_main^(0+384)+2),f
  2442  0FAA  2FA5               	goto	u4097
  2443  0FAB  3200               	nop2
  2444                           
  2445                           ;main.c: 44: uint8_t status;
  2446                           ;main.c: 45: uint8_t data[2];
  2447                           ;main.c: 48: status = ReadRegister(0x00);
  2448  0FAC  3000               	movlw	0
  2449  0FAD  3189  2107  318F   	fcall	_ReadRegister
  2450  0FB0  0023               	movlb	3	; select bank3
  2451  0FB1  00ED               	movwf	??_main^(0+384)
  2452  0FB2  086D               	movf	??_main^(0+384),w
  2453  0FB3  0024               	movlb	4	; select bank4
  2454  0FB4  00B4               	movwf	main@status^(0+512)
  2455                           
  2456                           ;main.c: 49: status = ReadRegister(0x07);
  2457  0FB5  3007               	movlw	7
  2458  0FB6  3189  2107  318F   	fcall	_ReadRegister
  2459  0FB9  0023               	movlb	3	; select bank3
  2460  0FBA  00ED               	movwf	??_main^(0+384)
  2461  0FBB  086D               	movf	??_main^(0+384),w
  2462  0FBC  0024               	movlb	4	; select bank4
  2463  0FBD  00B4               	movwf	main@status^(0+512)
  2464                           
  2465                           ;main.c: 50: status = ReadRegister(0x09);
  2466  0FBE  3009               	movlw	9
  2467  0FBF  3189  2107  318F   	fcall	_ReadRegister
  2468  0FC2  0023               	movlb	3	; select bank3
  2469  0FC3  00ED               	movwf	??_main^(0+384)
  2470  0FC4  086D               	movf	??_main^(0+384),w
  2471  0FC5  0024               	movlb	4	; select bank4
  2472  0FC6  00B4               	movwf	main@status^(0+512)
  2473                           
  2474                           ;main.c: 51: ReadPayload(2, data);
  2475  0FC7  3032               	movlw	(low (main@data| (0+512)))& (0+255)
  2476  0FC8  0023               	movlb	3	; select bank3
  2477  0FC9  00ED               	movwf	??_main^(0+384)
  2478  0FCA  086D               	movf	??_main^(0+384),w
  2479  0FCB  0022               	movlb	2	; select bank2
  2480  0FCC  00E1               	movwf	ReadPayload@data^(0+256)
  2481  0FCD  3002               	movlw	2
  2482  0FCE  3189  2131  318F   	fcall	_ReadPayload
  2483                           
  2484                           ;main.c: 52: LATAbits.LATA4 = 1;
  2485  0FD1  0022               	movlb	2	; select bank2
  2486  0FD2  160C               	bsf	12,4	;volatile
  2487  0FD3                     l4782:	
  2488                           ;main.c: 54: while(1){
  2489                           
  2490                           
  2491                           ;main.c: 56: status = ReadRegister(0x07);
  2492  0FD3  3007               	movlw	7
  2493  0FD4  3189  2107  318F   	fcall	_ReadRegister
  2494  0FD7  0023               	movlb	3	; select bank3
  2495  0FD8  00ED               	movwf	??_main^(0+384)
  2496  0FD9  086D               	movf	??_main^(0+384),w
  2497  0FDA  0024               	movlb	4	; select bank4
  2498  0FDB  00B4               	movwf	main@status^(0+512)
  2499                           
  2500                           ;main.c: 57: if( (cdc_trf_state == 0) == 1){
  2501  0FDC  0023               	movlb	3	; select bank3
  2502  0FDD  085D               	movf	_cdc_trf_state^(0+384),w
  2503  0FDE  1D03               	btfss	3,2
  2504  0FDF  2FFC               	goto	l4792
  2505                           
  2506                           ;main.c: 58: if(status==0) {
  2507  0FE0  0024               	movlb	4	; select bank4
  2508  0FE1  0834               	movf	main@status^(0+512),w
  2509  0FE2  1D03               	btfss	3,2
  2510  0FE3  2FFC               	goto	l4792
  2511                           
  2512                           ;main.c: 59: putUSBUSART(data,2);
  2513  0FE4  3002               	movlw	2
  2514  0FE5  0023               	movlb	3	; select bank3
  2515  0FE6  00ED               	movwf	??_main^(0+384)
  2516  0FE7  086D               	movf	??_main^(0+384),w
  2517  0FE8  0022               	movlb	2	; select bank2
  2518  0FE9  00E0               	movwf	putUSBUSART@length^(0+256)
  2519  0FEA  3032               	movlw	(low (main@data| (0+512)))& (0+255)
  2520  0FEB  3188  2003  318F   	fcall	_putUSBUSART
  2521                           
  2522                           ;main.c: 60: _delay((unsigned long)((500)*(8000000L/4000.0)));
  2523  0FEE  3006               	movlw	6
  2524  0FEF  0023               	movlb	3	; select bank3
  2525  0FF0  00EF               	movwf	(??_main^(0+384)+2)
  2526  0FF1  3013               	movlw	19
  2527  0FF2  00EE               	movwf	(??_main^(0+384)+1)
  2528  0FF3  30B1               	movlw	177
  2529  0FF4  00ED               	movwf	??_main^(0+384)
  2530  0FF5                     u4107:	
  2531  0FF5  0BED               	decfsz	??_main^(0+384),f
  2532  0FF6  2FF5               	goto	u4107
  2533  0FF7  0BEE               	decfsz	(??_main^(0+384)+1),f
  2534  0FF8  2FF5               	goto	u4107
  2535  0FF9  0BEF               	decfsz	(??_main^(0+384)+2),f
  2536  0FFA  2FF5               	goto	u4107
  2537  0FFB  3200               	nop2
  2538  0FFC                     l4792:	
  2539                           
  2540                           ;main.c: 61: }
  2541                           ;main.c: 62: }
  2542                           ;main.c: 63: CDCTxService();
  2543  0FFC  3182  224B  318F   	fcall	_CDCTxService
  2544  0FFF  2FD3               	goto	l4782
  2545  1000                     __end_of_main:	
  2546                           
  2547                           	psect	text1
  2548  0803                     __ptext1:	
  2549 ;; *************** function _putUSBUSART *****************
  2550 ;; Defined at:
  2551 ;;		line 556 in file "../lib/usb/src/usb_device_cdc.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  data            1    wreg     PTR unsigned char 
  2554 ;;		 -> main@data(2), 
  2555 ;;  length          1    0[BANK2 ] unsigned char 
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;  data            1    2[BANK2 ] PTR unsigned char 
  2558 ;;		 -> main@data(2), 
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  1    wreg      void 
  2561 ;; Registers used:
  2562 ;;		wreg, status,2, status,0
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2568 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2569 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2570 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2571 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  2572 ;;Total ram usage:        3 bytes
  2573 ;; Hardware stack levels used:    1
  2574 ;; Hardware stack levels required when called:   10
  2575 ;; This function calls:
  2576 ;;		Nothing
  2577 ;; This function is called by:
  2578 ;;		_main
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           
  2583                           ;psect for function _putUSBUSART
  2584  0803                     _putUSBUSART:	
  2585                           
  2586                           ;incstack = 0
  2587                           ; Regs used in _putUSBUSART: [wreg+status,2+status,0]
  2588                           ;putUSBUSART@data stored from wreg
  2589  0803  0022               	movlb	2	; select bank2
  2590  0804  00E2               	movwf	putUSBUSART@data^(0+256)
  2591                           
  2592                           ;usb_device_cdc.c: 581: {PIE2bits.USBIE = 0;};
  2593  0805  0021               	movlb	1	; select bank1
  2594  0806  1112               	bcf	18,2	;volatile
  2595                           
  2596                           ;usb_device_cdc.c: 582: if(cdc_trf_state == 0)
  2597  0807  0023               	movlb	3	; select bank3
  2598  0808  085D               	movf	_cdc_trf_state^(0+384),w
  2599  0809  1D03               	btfss	3,2
  2600  080A  281B               	goto	l4562
  2601                           
  2602                           ;usb_device_cdc.c: 583: {
  2603                           ;usb_device_cdc.c: 584: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  2604  080B  0022               	movlb	2	; select bank2
  2605  080C  0862               	movf	putUSBUSART@data^(0+256),w
  2606  080D  00E1               	movwf	??_putUSBUSART^(0+256)
  2607  080E  0861               	movf	??_putUSBUSART^(0+256),w
  2608  080F  0023               	movlb	3	; select bank3
  2609  0810  00CC               	movwf	_pCDCSrc^(0+384)
  2610  0811  0022               	movlb	2	; select bank2
  2611  0812  0860               	movf	putUSBUSART@length^(0+256),w
  2612  0813  00E1               	movwf	??_putUSBUSART^(0+256)
  2613  0814  0861               	movf	??_putUSBUSART^(0+256),w
  2614  0815  0023               	movlb	3	; select bank3
  2615  0816  00DE               	movwf	_cdc_tx_len^(0+384)
  2616  0817  01DB               	clrf	_cdc_mem_type^(0+384)
  2617  0818  0ADB               	incf	_cdc_mem_type^(0+384),f
  2618  0819  01DD               	clrf	_cdc_trf_state^(0+384)
  2619  081A  0ADD               	incf	_cdc_trf_state^(0+384),f
  2620  081B                     l4562:	
  2621                           
  2622                           ;usb_device_cdc.c: 585: }
  2623                           ;usb_device_cdc.c: 586: {PIE2bits.USBIE = 1;};
  2624  081B  0021               	movlb	1	; select bank1
  2625  081C  1512               	bsf	18,2	;volatile
  2626  081D  0008               	return
  2627  081E                     __end_of_putUSBUSART:	
  2628                           
  2629                           	psect	text2
  2630  0709                     __ptext2:	
  2631 ;; *************** function _nRF_Setup *****************
  2632 ;; Defined at:
  2633 ;;		line 20 in file "nRF24L01P.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;		None
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;  RXTX_ADDR       5   11[BANK2 ] unsigned char [5]
  2638 ;;  status          1   10[BANK2 ] unsigned char 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  2  597[None  ] int 
  2641 ;; Registers used:
  2642 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2649 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  2650 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2651 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  2652 ;;Total ram usage:        8 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:   12
  2655 ;; This function calls:
  2656 ;;		_ReadRegister
  2657 ;;		_WriteAddress
  2658 ;;		_WriteRegister
  2659 ;; This function is called by:
  2660 ;;		_main
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           
  2665                           ;psect for function _nRF_Setup
  2666  0709                     _nRF_Setup:	
  2667                           
  2668                           ;nRF24L01P.c: 23: uint8_t RXTX_ADDR[5];
  2669                           ;nRF24L01P.c: 24: RXTX_ADDR[4] = 0xAB;
  2670                           
  2671                           ;incstack = 0
  2672                           ; Regs used in _nRF_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2673  0709  30AB               	movlw	171
  2674  070A  0022               	movlb	2	; select bank2
  2675  070B  00E8               	movwf	??_nRF_Setup^(0+256)
  2676  070C  0868               	movf	??_nRF_Setup^(0+256),w
  2677  070D  00EF               	movwf	(nRF_Setup@RXTX_ADDR^(0+256)+4)
  2678                           
  2679                           ;nRF24L01P.c: 25: RXTX_ADDR[3] = 0xAC;
  2680  070E  30AC               	movlw	172
  2681  070F  00E8               	movwf	??_nRF_Setup^(0+256)
  2682  0710  0868               	movf	??_nRF_Setup^(0+256),w
  2683  0711  00EE               	movwf	(nRF_Setup@RXTX_ADDR^(0+256)+3)
  2684                           
  2685                           ;nRF24L01P.c: 26: RXTX_ADDR[2] = 0xAD;
  2686  0712  30AD               	movlw	173
  2687  0713  00E8               	movwf	??_nRF_Setup^(0+256)
  2688  0714  0868               	movf	??_nRF_Setup^(0+256),w
  2689  0715  00ED               	movwf	(nRF_Setup@RXTX_ADDR^(0+256)+2)
  2690                           
  2691                           ;nRF24L01P.c: 27: RXTX_ADDR[1] = 0xAE;
  2692  0716  30AE               	movlw	174
  2693  0717  00E8               	movwf	??_nRF_Setup^(0+256)
  2694  0718  0868               	movf	??_nRF_Setup^(0+256),w
  2695  0719  00EC               	movwf	(nRF_Setup@RXTX_ADDR^(0+256)+1)
  2696                           
  2697                           ;nRF24L01P.c: 28: RXTX_ADDR[0] = 0xAF;
  2698  071A  30AF               	movlw	175
  2699  071B  00E8               	movwf	??_nRF_Setup^(0+256)
  2700  071C  0868               	movf	??_nRF_Setup^(0+256),w
  2701  071D  00EB               	movwf	nRF_Setup@RXTX_ADDR^(0+256)
  2702                           
  2703                           ;nRF24L01P.c: 30: LATAbits.LATA4 = 1;
  2704  071E  160C               	bsf	12,4	;volatile
  2705                           
  2706                           ;nRF24L01P.c: 32: WriteAddress(0x10, 5, RXTX_ADDR);
  2707  071F  3005               	movlw	5
  2708  0720  00E8               	movwf	??_nRF_Setup^(0+256)
  2709  0721  0868               	movf	??_nRF_Setup^(0+256),w
  2710  0722  00E1               	movwf	WriteAddress@num^(0+256)
  2711  0723  306B               	movlw	(low (nRF_Setup@RXTX_ADDR| (0+256)))& (0+255)
  2712  0724  00E9               	movwf	(??_nRF_Setup+1)^(0+256)
  2713  0725  0869               	movf	(??_nRF_Setup+1)^(0+256),w
  2714  0726  00E2               	movwf	WriteAddress@addr^(0+256)
  2715  0727  3010               	movlw	16
  2716  0728  318A  223F  3187   	fcall	_WriteAddress
  2717                           
  2718                           ;nRF24L01P.c: 33: uint8_t status;
  2719                           ;nRF24L01P.c: 34: status = ReadRegister(0x10);
  2720  072B  3010               	movlw	16
  2721  072C  3189  2107  3187   	fcall	_ReadRegister
  2722  072F  0022               	movlb	2	; select bank2
  2723  0730  00E8               	movwf	??_nRF_Setup^(0+256)
  2724  0731  0868               	movf	??_nRF_Setup^(0+256),w
  2725  0732  00EA               	movwf	nRF_Setup@status^(0+256)
  2726                           
  2727                           ;nRF24L01P.c: 35: WriteAddress(0x0A, 5, RXTX_ADDR);
  2728  0733  3005               	movlw	5
  2729  0734  00E8               	movwf	??_nRF_Setup^(0+256)
  2730  0735  0868               	movf	??_nRF_Setup^(0+256),w
  2731  0736  00E1               	movwf	WriteAddress@num^(0+256)
  2732  0737  306B               	movlw	(low (nRF_Setup@RXTX_ADDR| (0+256)))& (0+255)
  2733  0738  00E9               	movwf	(??_nRF_Setup+1)^(0+256)
  2734  0739  0869               	movf	(??_nRF_Setup+1)^(0+256),w
  2735  073A  00E2               	movwf	WriteAddress@addr^(0+256)
  2736  073B  300A               	movlw	10
  2737  073C  318A  223F  3187   	fcall	_WriteAddress
  2738                           
  2739                           ;nRF24L01P.c: 40: WriteRegister(0x01, 0x01);
  2740  073F  0022               	movlb	2	; select bank2
  2741  0740  01E1               	clrf	WriteRegister@val^(0+256)
  2742  0741  0AE1               	incf	WriteRegister@val^(0+256),f
  2743  0742  3001               	movlw	1
  2744  0743  3188  20BD  3187   	fcall	_WriteRegister
  2745                           
  2746                           ;nRF24L01P.c: 41: WriteRegister(0x02, 0x01);
  2747  0746  0022               	movlb	2	; select bank2
  2748  0747  01E1               	clrf	WriteRegister@val^(0+256)
  2749  0748  0AE1               	incf	WriteRegister@val^(0+256),f
  2750  0749  3002               	movlw	2
  2751  074A  3188  20BD  3187   	fcall	_WriteRegister
  2752                           
  2753                           ;nRF24L01P.c: 42: WriteRegister(0x03, 0x03);
  2754  074D  3003               	movlw	3
  2755  074E  0022               	movlb	2	; select bank2
  2756  074F  00E8               	movwf	??_nRF_Setup^(0+256)
  2757  0750  0868               	movf	??_nRF_Setup^(0+256),w
  2758  0751  00E1               	movwf	WriteRegister@val^(0+256)
  2759  0752  3003               	movlw	3
  2760  0753  3188  20BD  3187   	fcall	_WriteRegister
  2761                           
  2762                           ;nRF24L01P.c: 45: WriteRegister(0x04, 0x2F);
  2763  0756  302F               	movlw	47
  2764  0757  0022               	movlb	2	; select bank2
  2765  0758  00E8               	movwf	??_nRF_Setup^(0+256)
  2766  0759  0868               	movf	??_nRF_Setup^(0+256),w
  2767  075A  00E1               	movwf	WriteRegister@val^(0+256)
  2768  075B  3004               	movlw	4
  2769  075C  3188  20BD  3187   	fcall	_WriteRegister
  2770                           
  2771                           ;nRF24L01P.c: 46: status = ReadRegister(0x04);
  2772  075F  3004               	movlw	4
  2773  0760  3189  2107  3187   	fcall	_ReadRegister
  2774  0763  0022               	movlb	2	; select bank2
  2775  0764  00E8               	movwf	??_nRF_Setup^(0+256)
  2776  0765  0868               	movf	??_nRF_Setup^(0+256),w
  2777  0766  00EA               	movwf	nRF_Setup@status^(0+256)
  2778                           
  2779                           ;nRF24L01P.c: 47: WriteRegister(0x05, 0x14);
  2780  0767  3014               	movlw	20
  2781  0768  00E8               	movwf	??_nRF_Setup^(0+256)
  2782  0769  0868               	movf	??_nRF_Setup^(0+256),w
  2783  076A  00E1               	movwf	WriteRegister@val^(0+256)
  2784  076B  3005               	movlw	5
  2785  076C  3188  20BD  3187   	fcall	_WriteRegister
  2786                           
  2787                           ;nRF24L01P.c: 50: WriteRegister(0x06, 0x06);
  2788  076F  3006               	movlw	6
  2789  0770  0022               	movlb	2	; select bank2
  2790  0771  00E8               	movwf	??_nRF_Setup^(0+256)
  2791  0772  0868               	movf	??_nRF_Setup^(0+256),w
  2792  0773  00E1               	movwf	WriteRegister@val^(0+256)
  2793  0774  3006               	movlw	6
  2794  0775  3188  20BD  3187   	fcall	_WriteRegister
  2795                           
  2796                           ;nRF24L01P.c: 51: WriteRegister(0x07,0x70);
  2797  0778  3070               	movlw	112
  2798  0779  0022               	movlb	2	; select bank2
  2799  077A  00E8               	movwf	??_nRF_Setup^(0+256)
  2800  077B  0868               	movf	??_nRF_Setup^(0+256),w
  2801  077C  00E1               	movwf	WriteRegister@val^(0+256)
  2802  077D  3007               	movlw	7
  2803  077E  3188  20BD  3187   	fcall	_WriteRegister
  2804                           
  2805                           ;nRF24L01P.c: 54: WriteRegister(0x11, 0x02);
  2806  0781  3002               	movlw	2
  2807  0782  0022               	movlb	2	; select bank2
  2808  0783  00E8               	movwf	??_nRF_Setup^(0+256)
  2809  0784  0868               	movf	??_nRF_Setup^(0+256),w
  2810  0785  00E1               	movwf	WriteRegister@val^(0+256)
  2811  0786  3011               	movlw	17
  2812  0787  3188  20BD  3187   	fcall	_WriteRegister
  2813                           
  2814                           ;nRF24L01P.c: 55: WriteRegister(0x00,0x7B);
  2815  078A  307B               	movlw	123
  2816  078B  0022               	movlb	2	; select bank2
  2817  078C  00E8               	movwf	??_nRF_Setup^(0+256)
  2818  078D  0868               	movf	??_nRF_Setup^(0+256),w
  2819  078E  00E1               	movwf	WriteRegister@val^(0+256)
  2820  078F  3000               	movlw	0
  2821  0790  3188  20BD         	fcall	_WriteRegister
  2822  0792  0008               	return
  2823  0793                     __end_of_nRF_Setup:	
  2824                           
  2825                           	psect	text3
  2826  08BD                     __ptext3:	
  2827 ;; *************** function _WriteRegister *****************
  2828 ;; Defined at:
  2829 ;;		line 72 in file "nRF24L01P.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;  reg             1    wreg     unsigned char 
  2832 ;;  val             1    1[BANK2 ] unsigned char 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  reg             1    4[BANK2 ] unsigned char 
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  1    wreg      void 
  2837 ;; Registers used:
  2838 ;;		wreg, status,2, status,0, pclath, cstack
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2844 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2845 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2846 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2847 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2848 ;;Total ram usage:        4 bytes
  2849 ;; Hardware stack levels used:    1
  2850 ;; Hardware stack levels required when called:   11
  2851 ;; This function calls:
  2852 ;;		_SPI_transfer
  2853 ;; This function is called by:
  2854 ;;		_nRF_Setup
  2855 ;;		_FlushTXRX
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           
  2860                           ;psect for function _WriteRegister
  2861  08BD                     _WriteRegister:	
  2862                           
  2863                           ;incstack = 0
  2864                           ; Regs used in _WriteRegister: [wreg+status,2+status,0+pclath+cstack]
  2865                           ;WriteRegister@reg stored from wreg
  2866  08BD  0022               	movlb	2	; select bank2
  2867  08BE  00E4               	movwf	WriteRegister@reg^(0+256)
  2868                           
  2869                           ;nRF24L01P.c: 74: LATCbits.LATC6 = 0;
  2870  08BF  130E               	bcf	14,6	;volatile
  2871                           
  2872                           ;nRF24L01P.c: 75: _delay((unsigned long)((1)*(8000000L/4000.0)));
  2873  08C0  3003               	movlw	3
  2874  08C1  00E3               	movwf	(??_WriteRegister^(0+256)+1)
  2875  08C2  3097               	movlw	151
  2876  08C3  00E2               	movwf	??_WriteRegister^(0+256)
  2877  08C4                     u4117:	
  2878  08C4  0BE2               	decfsz	??_WriteRegister^(0+256),f
  2879  08C5  28C4               	goto	u4117
  2880  08C6  0BE3               	decfsz	(??_WriteRegister^(0+256)+1),f
  2881  08C7  28C4               	goto	u4117
  2882  08C8  3200               	nop2
  2883                           
  2884                           ;nRF24L01P.c: 77: SPI_transfer(0x20 | reg);
  2885  08C9  0022               	movlb	2	; select bank2
  2886  08CA  0864               	movf	WriteRegister@reg^(0+256),w
  2887  08CB  3820               	iorlw	32
  2888  08CC  3197  2788  3188   	fcall	_SPI_transfer
  2889                           
  2890                           ;nRF24L01P.c: 78: SPI_transfer(val);
  2891  08CF  0022               	movlb	2	; select bank2
  2892  08D0  0861               	movf	WriteRegister@val^(0+256),w
  2893  08D1  3197  2788  3188   	fcall	_SPI_transfer
  2894                           
  2895                           ;nRF24L01P.c: 79: LATCbits.LATC6 = 1;
  2896  08D4  0022               	movlb	2	; select bank2
  2897  08D5  170E               	bsf	14,6	;volatile
  2898                           
  2899                           ;nRF24L01P.c: 80: _delay((unsigned long)((1)*(8000000L/4000.0)));
  2900  08D6  3003               	movlw	3
  2901  08D7  00E3               	movwf	(??_WriteRegister^(0+256)+1)
  2902  08D8  3097               	movlw	151
  2903  08D9  00E2               	movwf	??_WriteRegister^(0+256)
  2904  08DA                     u4127:	
  2905  08DA  0BE2               	decfsz	??_WriteRegister^(0+256),f
  2906  08DB  28DA               	goto	u4127
  2907  08DC  0BE3               	decfsz	(??_WriteRegister^(0+256)+1),f
  2908  08DD  28DA               	goto	u4127
  2909  08DE  3200               	nop2
  2910  08DF  0008               	return
  2911  08E0                     __end_of_WriteRegister:	
  2912                           
  2913                           	psect	text4
  2914  0A3F                     __ptext4:	
  2915 ;; *************** function _WriteAddress *****************
  2916 ;; Defined at:
  2917 ;;		line 84 in file "nRF24L01P.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  reg             1    wreg     unsigned char 
  2920 ;;  num             1    1[BANK2 ] unsigned char 
  2921 ;;  addr            1    2[BANK2 ] PTR unsigned char 
  2922 ;;		 -> nRF_Setup@RXTX_ADDR(5), 
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;  reg             1    5[BANK2 ] unsigned char 
  2925 ;;  i               2    6[BANK2 ] int 
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2935 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2936 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  2937 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2938 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0
  2939 ;;Total ram usage:        7 bytes
  2940 ;; Hardware stack levels used:    1
  2941 ;; Hardware stack levels required when called:   11
  2942 ;; This function calls:
  2943 ;;		_SPI_transfer
  2944 ;; This function is called by:
  2945 ;;		_nRF_Setup
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           
  2950                           ;psect for function _WriteAddress
  2951  0A3F                     _WriteAddress:	
  2952                           
  2953                           ;incstack = 0
  2954                           ; Regs used in _WriteAddress: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2955                           ;WriteAddress@reg stored from wreg
  2956  0A3F  0022               	movlb	2	; select bank2
  2957  0A40  00E5               	movwf	WriteAddress@reg^(0+256)
  2958                           
  2959                           ;nRF24L01P.c: 86: LATCbits.LATC6 = 0;
  2960  0A41  130E               	bcf	14,6	;volatile
  2961                           
  2962                           ;nRF24L01P.c: 87: _delay((unsigned long)((1)*(8000000L/4000.0)));
  2963  0A42  3003               	movlw	3
  2964  0A43  00E4               	movwf	(??_WriteAddress^(0+256)+1)
  2965  0A44  3097               	movlw	151
  2966  0A45  00E3               	movwf	??_WriteAddress^(0+256)
  2967  0A46                     u4137:	
  2968  0A46  0BE3               	decfsz	??_WriteAddress^(0+256),f
  2969  0A47  2A46               	goto	u4137
  2970  0A48  0BE4               	decfsz	(??_WriteAddress^(0+256)+1),f
  2971  0A49  2A46               	goto	u4137
  2972  0A4A  3200               	nop2
  2973                           
  2974                           ;nRF24L01P.c: 88: SPI_transfer(0x20 | reg);
  2975  0A4B  0022               	movlb	2	; select bank2
  2976  0A4C  0865               	movf	WriteAddress@reg^(0+256),w
  2977  0A4D  3820               	iorlw	32
  2978  0A4E  3197  2788  318A   	fcall	_SPI_transfer
  2979                           
  2980                           ;nRF24L01P.c: 89: for (int i=0; i<num; i++)
  2981  0A51  0022               	movlb	2	; select bank2
  2982  0A52  01E6               	clrf	WriteAddress@i^(0+256)
  2983  0A53  01E7               	clrf	(WriteAddress@i+1)^(0+256)
  2984  0A54                     l4408:	
  2985  0A54  0867               	movf	(WriteAddress@i+1)^(0+256),w
  2986  0A55  3A80               	xorlw	128
  2987  0A56  00E3               	movwf	??_WriteAddress^(0+256)
  2988  0A57  3080               	movlw	128
  2989  0A58  0263               	subwf	??_WriteAddress^(0+256),w
  2990  0A59  1D03               	skipz
  2991  0A5A  2A5D               	goto	u3755
  2992  0A5B  0861               	movf	WriteAddress@num^(0+256),w
  2993  0A5C  0266               	subwf	WriteAddress@i^(0+256),w
  2994  0A5D                     u3755:	
  2995  0A5D  1803               	btfsc	3,0
  2996  0A5E  2A71               	goto	l680
  2997                           
  2998                           ;nRF24L01P.c: 90: SPI_transfer(addr[i]);
  2999  0A5F  0022               	movlb	2	; select bank2
  3000  0A60  0866               	movf	WriteAddress@i^(0+256),w
  3001  0A61  0762               	addwf	WriteAddress@addr^(0+256),w
  3002  0A62  00E3               	movwf	??_WriteAddress^(0+256)
  3003  0A63  0863               	movf	??_WriteAddress^(0+256),w
  3004  0A64  0086               	movwf	6
  3005  0A65  3001               	movlw	1	; select bank2/3
  3006  0A66  0087               	movwf	7
  3007  0A67  0801               	movf	1,w
  3008  0A68  3197  2788  318A   	fcall	_SPI_transfer
  3009  0A6B  3001               	movlw	1
  3010  0A6C  0022               	movlb	2	; select bank2
  3011  0A6D  07E6               	addwf	WriteAddress@i^(0+256),f
  3012  0A6E  3000               	movlw	0
  3013  0A6F  3DE7               	addwfc	(WriteAddress@i+1)^(0+256),f
  3014  0A70  2A54               	goto	l4408
  3015  0A71                     l680:	
  3016                           
  3017                           ;nRF24L01P.c: 91: LATCbits.LATC6 = 1;
  3018  0A71  0022               	movlb	2	; select bank2
  3019  0A72  170E               	bsf	14,6	;volatile
  3020                           
  3021                           ;nRF24L01P.c: 92: _delay((unsigned long)((1)*(8000000L/4000.0)));
  3022  0A73  3003               	movlw	3
  3023  0A74  00E4               	movwf	(??_WriteAddress^(0+256)+1)
  3024  0A75  3097               	movlw	151
  3025  0A76  00E3               	movwf	??_WriteAddress^(0+256)
  3026  0A77                     u4147:	
  3027  0A77  0BE3               	decfsz	??_WriteAddress^(0+256),f
  3028  0A78  2A77               	goto	u4147
  3029  0A79  0BE4               	decfsz	(??_WriteAddress^(0+256)+1),f
  3030  0A7A  2A77               	goto	u4147
  3031  0A7B  3200               	nop2
  3032  0A7C  0008               	return
  3033  0A7D                     __end_of_WriteAddress:	
  3034                           
  3035                           	psect	text5
  3036  0907                     __ptext5:	
  3037 ;; *************** function _ReadRegister *****************
  3038 ;; Defined at:
  3039 ;;		line 95 in file "nRF24L01P.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;  reg             1    wreg     unsigned char 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;  reg             1    3[BANK2 ] unsigned char 
  3044 ;;  temp1           1    5[BANK2 ] unsigned char 
  3045 ;;  temp            1    4[BANK2 ] unsigned char 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  1    wreg      unsigned char 
  3048 ;; Registers used:
  3049 ;;		wreg, status,2, status,0, pclath, cstack
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3056 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3057 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3058 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  3059 ;;Total ram usage:        5 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:   11
  3062 ;; This function calls:
  3063 ;;		_SPI_transfer
  3064 ;; This function is called by:
  3065 ;;		_main
  3066 ;;		_nRF_Setup
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           
  3071                           ;psect for function _ReadRegister
  3072  0907                     _ReadRegister:	
  3073                           
  3074                           ;incstack = 0
  3075                           ; Regs used in _ReadRegister: [wreg+status,2+status,0+pclath+cstack]
  3076                           ;ReadRegister@reg stored from wreg
  3077  0907  0022               	movlb	2	; select bank2
  3078  0908  00E3               	movwf	ReadRegister@reg^(0+256)
  3079                           
  3080                           ;nRF24L01P.c: 97: uint8_t temp;
  3081                           ;nRF24L01P.c: 98: uint8_t temp1;
  3082                           ;nRF24L01P.c: 100: LATCbits.LATC6 = 0;
  3083  0909  130E               	bcf	14,6	;volatile
  3084                           
  3085                           ;nRF24L01P.c: 101: _delay((unsigned long)((1)*(8000000L/4000.0)));
  3086  090A  3003               	movlw	3
  3087  090B  00E2               	movwf	(??_ReadRegister^(0+256)+1)
  3088  090C  3097               	movlw	151
  3089  090D  00E1               	movwf	??_ReadRegister^(0+256)
  3090  090E                     u4157:	
  3091  090E  0BE1               	decfsz	??_ReadRegister^(0+256),f
  3092  090F  290E               	goto	u4157
  3093  0910  0BE2               	decfsz	(??_ReadRegister^(0+256)+1),f
  3094  0911  290E               	goto	u4157
  3095  0912  3200               	nop2
  3096                           
  3097                           ;nRF24L01P.c: 102: temp = 0x00 | reg;
  3098  0913  0022               	movlb	2	; select bank2
  3099  0914  0863               	movf	ReadRegister@reg^(0+256),w
  3100  0915  00E1               	movwf	??_ReadRegister^(0+256)
  3101  0916  0861               	movf	??_ReadRegister^(0+256),w
  3102  0917  00E4               	movwf	ReadRegister@temp^(0+256)
  3103                           
  3104                           ;nRF24L01P.c: 103: SPI_transfer(temp);
  3105  0918  0864               	movf	ReadRegister@temp^(0+256),w
  3106  0919  3197  2788  3189   	fcall	_SPI_transfer
  3107                           
  3108                           ;nRF24L01P.c: 105: temp1= SPI_transfer(0xFF);
  3109  091C  30FF               	movlw	255
  3110  091D  3197  2788  3189   	fcall	_SPI_transfer
  3111  0920  0022               	movlb	2	; select bank2
  3112  0921  00E1               	movwf	??_ReadRegister^(0+256)
  3113  0922  0861               	movf	??_ReadRegister^(0+256),w
  3114  0923  00E5               	movwf	ReadRegister@temp1^(0+256)
  3115                           
  3116                           ;nRF24L01P.c: 106: LATCbits.LATC6 = 1;
  3117  0924  170E               	bsf	14,6	;volatile
  3118                           
  3119                           ;nRF24L01P.c: 107: _delay((unsigned long)((1)*(8000000L/4000.0)));
  3120  0925  3003               	movlw	3
  3121  0926  00E2               	movwf	(??_ReadRegister^(0+256)+1)
  3122  0927  3097               	movlw	151
  3123  0928  00E1               	movwf	??_ReadRegister^(0+256)
  3124  0929                     u4167:	
  3125  0929  0BE1               	decfsz	??_ReadRegister^(0+256),f
  3126  092A  2929               	goto	u4167
  3127  092B  0BE2               	decfsz	(??_ReadRegister^(0+256)+1),f
  3128  092C  2929               	goto	u4167
  3129  092D  3200               	nop2
  3130                           
  3131                           ;nRF24L01P.c: 109: return temp1;
  3132  092E  0022               	movlb	2	; select bank2
  3133  092F  0865               	movf	ReadRegister@temp1^(0+256),w
  3134  0930  0008               	return
  3135  0931                     __end_of_ReadRegister:	
  3136                           
  3137                           	psect	text6
  3138  03E4                     __ptext6:	
  3139 ;; *************** function _USBDeviceInit *****************
  3140 ;; Defined at:
  3141 ;;		line 277 in file "../lib/usb/src/usb_device.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;		None
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;  p               2    1[BANK2 ] PTR unsigned char 
  3146 ;;		 -> UEP1(1), 
  3147 ;;  i               1    3[BANK2 ] unsigned char 
  3148 ;;  i               1    4[BANK2 ] unsigned char 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      void 
  3151 ;; Registers used:
  3152 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3159 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3160 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3161 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  3162 ;;Total ram usage:        5 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; Hardware stack levels required when called:   10
  3165 ;; This function calls:
  3166 ;;		Nothing
  3167 ;; This function is called by:
  3168 ;;		_main
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           
  3173                           ;psect for function _USBDeviceInit
  3174  03E4                     _USBDeviceInit:	
  3175                           
  3176                           ;usb_device.c: 279: uint8_t i;
  3177                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  3178                           
  3179                           ;incstack = 0
  3180                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  3181  03E4  0021               	movlb	1	; select bank1
  3182  03E5  1112               	bcf	18,2	;volatile
  3183                           
  3184                           ;usb_device.c: 285: ;
  3185                           ;usb_device.c: 288: {UEIR = 0;};
  3186  03E6  003D               	movlb	29	; select bank29
  3187  03E7  0193               	clrf	19	;volatile
  3188                           
  3189                           ;usb_device.c: 291: {UIR = 0;};
  3190  03E8  0190               	clrf	16	;volatile
  3191                           
  3192                           ;usb_device.c: 294: UEP0 = 0;
  3193  03E9  0198               	clrf	24	;volatile
  3194                           
  3195                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  3196  03EA  300E               	movlw	14
  3197  03EB  0022               	movlb	2	; select bank2
  3198  03EC  00E2               	movwf	(USBDeviceInit@p+1)^(0+256)
  3199  03ED  3099               	movlw	153
  3200  03EE  00E1               	movwf	USBDeviceInit@p^(0+256)
  3201  03EF  01E3               	clrf	USBDeviceInit@i_821^(0+256)
  3202  03F0  3002               	movlw	2
  3203  03F1  0263               	subwf	USBDeviceInit@i_821^(0+256),w
  3204  03F2  1803               	btfsc	3,0
  3205  03F3  2C05               	goto	l4466
  3206  03F4                     l4458:	
  3207  03F4  0861               	movf	USBDeviceInit@p^(0+256),w
  3208  03F5  0086               	movwf	6
  3209  03F6  0862               	movf	(USBDeviceInit@p+1)^(0+256),w
  3210  03F7  0087               	movwf	7
  3211  03F8  0181               	clrf	1
  3212  03F9  3001               	movlw	1
  3213  03FA  07E1               	addwf	USBDeviceInit@p^(0+256),f
  3214  03FB  3000               	movlw	0
  3215  03FC  3DE2               	addwfc	(USBDeviceInit@p+1)^(0+256),f
  3216  03FD  3001               	movlw	1
  3217  03FE  00E0               	movwf	??_USBDeviceInit^(0+256)
  3218  03FF  0860               	movf	??_USBDeviceInit^(0+256),w
  3219  0400  07E3               	addwf	USBDeviceInit@i_821^(0+256),f
  3220  0401  3002               	movlw	2
  3221  0402  0263               	subwf	USBDeviceInit@i_821^(0+256),w
  3222  0403  1C03               	skipc
  3223  0404  2BF4               	goto	l4458
  3224  0405                     l4466:	
  3225                           
  3226                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  3227  0405  3016               	movlw	22
  3228  0406  003D               	movlb	29	; select bank29
  3229  0407  0091               	movwf	17	;volatile
  3230  0408  309F               	movlw	159
  3231  0409  0097               	movwf	23	;volatile
  3232  040A  307B               	movlw	123
  3233  040B  0092               	movwf	18	;volatile
  3234                           
  3235                           ;usb_device.c: 301: ;
  3236                           ;usb_device.c: 304: ;
  3237                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  3238  040C  0022               	movlb	2	; select bank2
  3239  040D  01E4               	clrf	USBDeviceInit@i^(0+256)
  3240  040E  300C               	movlw	12
  3241  040F  0264               	subwf	USBDeviceInit@i^(0+256),w
  3242  0410  1803               	btfsc	3,0
  3243  0411  2C2B               	goto	l173
  3244  0412                     l4474:	
  3245                           
  3246                           ;usb_device.c: 308: {
  3247                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  3248  0412  0864               	movf	USBDeviceInit@i^(0+256),w
  3249  0413  00E0               	movwf	??_USBDeviceInit^(0+256)
  3250  0414  3001               	movlw	1
  3251  0415                     u3795:	
  3252  0415  35E0               	lslf	??_USBDeviceInit^(0+256),f
  3253  0416  3EFF               	addlw	-1
  3254  0417  1D03               	skipz
  3255  0418  2C15               	goto	u3795
  3256  0419  3560               	lslf	??_USBDeviceInit^(0+256),w
  3257  041A  3E20               	addlw	32
  3258  041B  0086               	movwf	6
  3259  041C  0187               	clrf	7
  3260  041D  3000               	movlw	0
  3261  041E  3FC0               	movwi [0]fsr1
  3262  041F  3000               	movlw	0
  3263  0420  3FC1               	movwi [1]fsr1
  3264  0421  3FC2               	movwi [2]fsr1
  3265  0422  3FC3               	movwi [3]fsr1
  3266  0423  3001               	movlw	1
  3267  0424  00E0               	movwf	??_USBDeviceInit^(0+256)
  3268  0425  0860               	movf	??_USBDeviceInit^(0+256),w
  3269  0426  07E4               	addwf	USBDeviceInit@i^(0+256),f
  3270  0427  300C               	movlw	12
  3271  0428  0264               	subwf	USBDeviceInit@i^(0+256),w
  3272  0429  1C03               	skipc
  3273  042A  2C12               	goto	l4474
  3274  042B                     l173:	
  3275                           
  3276                           ;usb_device.c: 310: }
  3277                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  3278  042B  003D               	movlb	29	; select bank29
  3279  042C  170E               	bsf	14,6	;volatile
  3280                           
  3281                           ;usb_device.c: 316: UADDR = 0x00;
  3282  042D  0196               	clrf	22	;volatile
  3283                           
  3284                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  3285  042E  120E               	bcf	14,4	;volatile
  3286                           
  3287                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  3288  042F  130E               	bcf	14,6	;volatile
  3289  0430                     l4486:	
  3290                           ;usb_device.c: 325: do
  3291                           
  3292                           
  3293                           ;usb_device.c: 326: {
  3294                           ;usb_device.c: 327: (UIR &= 0xF7);
  3295  0430  30F7               	movlw	247
  3296  0431  0022               	movlb	2	; select bank2
  3297  0432  00E0               	movwf	??_USBDeviceInit^(0+256)
  3298  0433  0860               	movf	??_USBDeviceInit^(0+256),w
  3299  0434  003D               	movlb	29	; select bank29
  3300  0435  0590               	andwf	16,f	;volatile
  3301                           
  3302                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  3303  0436  0023               	movlb	3	; select bank3
  3304  0437  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  3305                           
  3306                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  3307  0438  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  3308                           
  3309                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  3310  0439  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  3311  043A  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  3312                           
  3313                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  3314  043B  003D               	movlb	29	; select bank29
  3315  043C  1990               	btfsc	16,3	;volatile
  3316  043D  2C30               	goto	l4486
  3317                           
  3318                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  3319  043E  3001               	movlw	1
  3320  043F  0022               	movlb	2	; select bank2
  3321  0440  00E0               	movwf	??_USBDeviceInit^(0+256)
  3322  0441  0860               	movf	??_USBDeviceInit^(0+256),w
  3323  0442  0023               	movlb	3	; select bank3
  3324  0443  00D7               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  3325                           
  3326                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  3327  0444  3001               	movlw	1
  3328  0445  0022               	movlb	2	; select bank2
  3329  0446  00E0               	movwf	??_USBDeviceInit^(0+256)
  3330  0447  0860               	movf	??_USBDeviceInit^(0+256),w
  3331  0448  0023               	movlb	3	; select bank3
  3332  0449  00D8               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  3333                           
  3334                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  3335  044A  01D4               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  3336                           
  3337                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  3338  044B  01D5               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  3339                           
  3340                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  3341  044C  01D3               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  3342                           
  3343                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  3344  044D  0022               	movlb	2	; select bank2
  3345  044E  01E4               	clrf	USBDeviceInit@i^(0+256)
  3346  044F  3003               	movlw	3
  3347  0450  0264               	subwf	USBDeviceInit@i^(0+256),w
  3348  0451  1803               	btfsc	3,0
  3349  0452  2C77               	goto	l4514
  3350  0453                     l4508:	
  3351                           
  3352                           ;usb_device.c: 346: {
  3353                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  3354  0453  3564               	lslf	USBDeviceInit@i^(0+256),w
  3355  0454  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  3356  0455  0086               	movwf	6
  3357  0456  3001               	movlw	1	; select bank3/4
  3358  0457  0087               	movwf	7
  3359  0458  3000               	movlw	0
  3360  0459  3FC0               	movwi [0]fsr1
  3361  045A  3FC1               	movwi [1]fsr1
  3362                           
  3363                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  3364  045B  3564               	lslf	USBDeviceInit@i^(0+256),w
  3365  045C  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3366  045D  0086               	movwf	6
  3367  045E  3001               	movlw	1	; select bank3/4
  3368  045F  0087               	movwf	7
  3369  0460  3000               	movlw	0
  3370  0461  3FC0               	movwi [0]fsr1
  3371  0462  3FC1               	movwi [1]fsr1
  3372                           
  3373                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  3374  0463  0864               	movf	USBDeviceInit@i^(0+256),w
  3375  0464  3EC0               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  3376  0465  0086               	movwf	6
  3377  0466  3001               	movlw	1	; select bank3/4
  3378  0467  0087               	movwf	7
  3379  0468  0181               	clrf	1
  3380                           
  3381                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  3382  0469  0864               	movf	USBDeviceInit@i^(0+256),w
  3383  046A  3EC3               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  3384  046B  0086               	movwf	6
  3385  046C  3001               	movlw	1	; select bank3/4
  3386  046D  0087               	movwf	7
  3387  046E  0181               	clrf	1
  3388  046F  3001               	movlw	1
  3389  0470  00E0               	movwf	??_USBDeviceInit^(0+256)
  3390  0471  0860               	movf	??_USBDeviceInit^(0+256),w
  3391  0472  07E4               	addwf	USBDeviceInit@i^(0+256),f
  3392  0473  3003               	movlw	3
  3393  0474  0264               	subwf	USBDeviceInit@i^(0+256),w
  3394  0475  1C03               	skipc
  3395  0476  2C53               	goto	l4508
  3396  0477                     l4514:	
  3397                           
  3398                           ;usb_device.c: 351: }
  3399                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  3400  0477  3028               	movlw	40
  3401  0478  0023               	movlb	3	; select bank3
  3402  0479  00A7               	movwf	_pBDTEntryIn^(0+384)
  3403  047A  3000               	movlw	0
  3404  047B  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  3405                           
  3406                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  3407  047C  3016               	movlw	22
  3408  047D  003D               	movlb	29	; select bank29
  3409  047E  0098               	movwf	24	;volatile
  3410                           
  3411                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3412  047F  3000               	movlw	0
  3413  0480  0020               	movlb	0	; select bank0
  3414  0481  00A3               	movwf	35	;volatile
  3415  0482  3050               	movlw	80
  3416  0483  00A2               	movwf	34	;volatile
  3417                           
  3418                           ;usb_device.c: 359: BDT[0].CNT = 8;
  3419  0484  3008               	movlw	8
  3420  0485  00A1               	movwf	33	;volatile
  3421                           
  3422                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  3423  0486  3004               	movlw	4
  3424  0487  0022               	movlb	2	; select bank2
  3425  0488  00E0               	movwf	??_USBDeviceInit^(0+256)
  3426  0489  0860               	movf	??_USBDeviceInit^(0+256),w
  3427  048A  0020               	movlb	0	; select bank0
  3428  048B  00A0               	movwf	32	;volatile
  3429                           
  3430                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  3431  048C  17A0               	bsf	32,7	;volatile
  3432                           
  3433                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  3434  048D  0023               	movlb	3	; select bank3
  3435  048E  01EC               	clrf	_USBActiveConfiguration^(0+384)	;volatile
  3436                           
  3437                           ;usb_device.c: 366: USB1msTickCount = 0;
  3438  048F  3000               	movlw	0
  3439  0490  00BF               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
  3440  0491  3000               	movlw	0
  3441  0492  00BE               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
  3442  0493  3000               	movlw	0
  3443  0494  00BD               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
  3444  0495  3000               	movlw	0
  3445  0496  00BC               	movwf	_USB1msTickCount^(0+384)	;volatile
  3446                           
  3447                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  3448  0497  01DA               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  3449                           
  3450                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  3451  0498  0021               	movlb	1	; select bank1
  3452  0499  01E2               	clrf	_USBDeviceState^(0+128)	;volatile
  3453  049A  0008               	return
  3454  049B                     __end_of_USBDeviceInit:	
  3455                           
  3456                           	psect	text7
  3457  081E                     __ptext7:	
  3458 ;; *************** function _USBDeviceAttach *****************
  3459 ;; Defined at:
  3460 ;;		line 1352 in file "../lib/usb/src/usb_device.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1    wreg      void 
  3467 ;; Registers used:
  3468 ;;		wreg, status,2, status,0
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3476 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3477 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3478 ;;Total ram usage:        1 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:   10
  3481 ;; This function calls:
  3482 ;;		Nothing
  3483 ;; This function is called by:
  3484 ;;		_main
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           
  3489                           ;psect for function _USBDeviceAttach
  3490  081E                     _USBDeviceAttach:	
  3491                           
  3492                           ;usb_device.c: 1356: {
  3493                           ;usb_device.c: 1357: if(1 == 1)
  3494                           
  3495                           ;incstack = 0
  3496                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  3497  081E  0021               	movlb	1	; select bank1
  3498  081F  0862               	movf	_USBDeviceState^(0+128),w	;volatile
  3499  0820  1D03               	btfss	3,2
  3500  0821  0008               	return
  3501                           
  3502                           ;usb_device.c: 1358: {
  3503                           ;usb_device.c: 1360: UCON = 0;
  3504  0822  003D               	movlb	29	; select bank29
  3505  0823  018E               	clrf	14	;volatile
  3506                           
  3507                           ;usb_device.c: 1363: UIE = 0;
  3508  0824  0192               	clrf	18	;volatile
  3509                           
  3510                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  3511  0825  3016               	movlw	22
  3512  0826  0091               	movwf	17	;volatile
  3513  0827  309F               	movlw	159
  3514  0828  0097               	movwf	23	;volatile
  3515  0829  307B               	movlw	123
  3516  082A  0092               	movwf	18	;volatile
  3517                           
  3518                           ;usb_device.c: 1369: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  3519  082B  0021               	movlb	1	; select bank1
  3520  082C  1512               	bsf	18,2	;volatile
  3521  082D  170B               	bsf	11,6	;volatile
  3522  082E  178B               	bsf	11,7	;volatile
  3523  082F                     l233:	
  3524                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  3525                           
  3526  082F  003D               	movlb	29	; select bank29
  3527  0830  198E               	btfsc	14,3	;volatile
  3528  0831  2834               	goto	l4550
  3529  0832  158E               	bsf	14,3	;volatile
  3530  0833  282F               	goto	l233
  3531  0834                     l4550:	
  3532                           
  3533                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  3534  0834  3001               	movlw	1
  3535  0835  0022               	movlb	2	; select bank2
  3536  0836  00E0               	movwf	??_USBDeviceAttach^(0+256)
  3537  0837  0860               	movf	??_USBDeviceAttach^(0+256),w
  3538  0838  0021               	movlb	1	; select bank1
  3539  0839  00E2               	movwf	_USBDeviceState^(0+128)	;volatile
  3540  083A  0008               	return
  3541  083B                     __end_of_USBDeviceAttach:	
  3542                           
  3543                           	psect	text8
  3544  17B9                     __ptext8:	
  3545 ;; *************** function _SYSTEM_Initialize *****************
  3546 ;; Defined at:
  3547 ;;		line 82 in file "system.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;  state           1    wreg     enum E2598
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;  state           1    0[BANK2 ] enum E2598
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      void 
  3554 ;; Registers used:
  3555 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3562 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3564 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3565 ;;Total ram usage:        1 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:   10
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_main
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           
  3576                           ;psect for function _SYSTEM_Initialize
  3577  17B9                     _SYSTEM_Initialize:	
  3578                           
  3579                           ;incstack = 0
  3580                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0]
  3581                           ;SYSTEM_Initialize@state stored from wreg
  3582  17B9  0022               	movlb	2	; select bank2
  3583  17BA  00E0               	movwf	SYSTEM_Initialize@state^(0+256)
  3584                           
  3585                           ;system.c: 84: switch(state)
  3586  17BB  2FC3               	goto	l4428
  3587  17BC                     l4424:	
  3588                           ;system.c: 85: {
  3589                           ;system.c: 86: case SYSTEM_STATE_USB_START:
  3590                           
  3591                           
  3592                           ;system.c: 90: OSCCON = 0xFC;
  3593  17BC  30FC               	movlw	252
  3594  17BD  0021               	movlb	1	; select bank1
  3595  17BE  0099               	movwf	25	;volatile
  3596                           
  3597                           ;system.c: 91: ACTCON = 0x90;
  3598  17BF  3090               	movlw	144
  3599  17C0  0027               	movlb	7	; select bank7
  3600  17C1  009B               	movwf	27	;volatile
  3601                           
  3602                           ;system.c: 102: }
  3603                           
  3604                           ;system.c: 101: break;
  3605                           
  3606                           ;system.c: 100: case SYSTEM_STATE_USB_RESUME:
  3607                           
  3608                           ;system.c: 98: break;
  3609                           
  3610                           ;system.c: 97: case SYSTEM_STATE_USB_SUSPEND:
  3611                           
  3612                           ;system.c: 95: break;
  3613  17C2  0008               	return
  3614  17C3                     l4428:	
  3615  17C3  0022               	movlb	2	; select bank2
  3616  17C4  0860               	movf	SYSTEM_Initialize@state^(0+256),w
  3617                           
  3618                           ; Switch size 1, requested type "space"
  3619                           ; Number of cases is 3, Range of values is 0 to 2
  3620                           ; switch strategies available:
  3621                           ; Name         Instructions Cycles
  3622                           ; simple_byte           10     6 (average)
  3623                           ; direct_byte           12     6 (fixed)
  3624                           ; jumptable            260     6 (fixed)
  3625                           ;	Chosen strategy is simple_byte
  3626  17C5  3A00               	xorlw	0	; case 0
  3627  17C6  1903               	skipnz
  3628  17C7  2FBC               	goto	l4424
  3629  17C8  3A01               	xorlw	1	; case 1
  3630  17C9  1903               	skipnz
  3631  17CA  2FCF               	goto	l567
  3632  17CB  3A03               	xorlw	3	; case 2
  3633  17CC  1903               	skipnz
  3634  17CD  2FCF               	goto	l567
  3635  17CE  2FCF               	goto	l567
  3636  17CF                     l567:	
  3637  17CF  0008               	return
  3638  17D0                     __end_of_SYSTEM_Initialize:	
  3639                           
  3640                           	psect	text9
  3641  1791                     __ptext9:	
  3642 ;; *************** function _SPI_init *****************
  3643 ;; Defined at:
  3644 ;;		line 13 in file "spi_nino.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;		None
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;		None
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  1    wreg      void 
  3651 ;; Registers used:
  3652 ;;		wreg, status,2, status,0
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3662 ;;Total ram usage:        0 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; Hardware stack levels required when called:   10
  3665 ;; This function calls:
  3666 ;;		Nothing
  3667 ;; This function is called by:
  3668 ;;		_main
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           
  3673                           ;psect for function _SPI_init
  3674  1791                     _SPI_init:	
  3675                           
  3676                           ;spi_nino.c: 15: SSPCON1bits.SSPEN = 1;
  3677                           
  3678                           ;incstack = 0
  3679                           ; Regs used in _SPI_init: [wreg+status,2+status,0]
  3680  1791  0024               	movlb	4	; select bank4
  3681  1792  1695               	bsf	21,5	;volatile
  3682                           
  3683                           ;spi_nino.c: 17: SSPBUF = 0;
  3684  1793  0191               	clrf	17	;volatile
  3685                           
  3686                           ;spi_nino.c: 21: TRISBbits.TRISB6 = 0;
  3687  1794  0021               	movlb	1	; select bank1
  3688  1795  130D               	bcf	13,6	;volatile
  3689                           
  3690                           ;spi_nino.c: 22: TRISBbits.TRISB4 = 1;
  3691  1796  160D               	bsf	13,4	;volatile
  3692                           
  3693                           ;spi_nino.c: 23: TRISCbits.TRISC7 = 0;
  3694  1797  138E               	bcf	14,7	;volatile
  3695                           
  3696                           ;spi_nino.c: 24: TRISCbits.TRISC6 = 0;
  3697  1798  130E               	bcf	14,6	;volatile
  3698                           
  3699                           ;spi_nino.c: 25: TRISAbits.TRISA4 = 0;
  3700  1799  120C               	bcf	12,4	;volatile
  3701                           
  3702                           ;spi_nino.c: 27: LATCbits.LATC6 = 1;
  3703  179A  0022               	movlb	2	; select bank2
  3704  179B  170E               	bsf	14,6	;volatile
  3705                           
  3706                           ;spi_nino.c: 28: LATAbits.LATA4 = 0;
  3707  179C  120C               	bcf	12,4	;volatile
  3708                           
  3709                           ;spi_nino.c: 31: SSPSTATbits.CKE = 1;
  3710  179D  0024               	movlb	4	; select bank4
  3711  179E  1714               	bsf	20,6	;volatile
  3712                           
  3713                           ;spi_nino.c: 33: SSPCON1bits.CKP = 0;
  3714  179F  1215               	bcf	21,4	;volatile
  3715                           
  3716                           ;spi_nino.c: 35: SSPSTATbits.SMP = 0;
  3717  17A0  1394               	bcf	20,7	;volatile
  3718                           
  3719                           ;spi_nino.c: 41: SSPCON1bits.SSPM = 0b0000;
  3720  17A1  30F0               	movlw	-16
  3721  17A2  0595               	andwf	21,f	;volatile
  3722  17A3  0008               	return
  3723  17A4                     __end_of_SPI_init:	
  3724                           
  3725                           	psect	text10
  3726  0931                     __ptext10:	
  3727 ;; *************** function _ReadPayload *****************
  3728 ;; Defined at:
  3729 ;;		line 132 in file "nRF24L01P.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;  num             1    wreg     unsigned char 
  3732 ;;  data            1    1[BANK2 ] PTR unsigned char 
  3733 ;;		 -> main@data(2), 
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;  num             1    4[BANK2 ] unsigned char 
  3736 ;;  i               1    5[BANK2 ] unsigned char 
  3737 ;; Return value:  Size  Location     Type
  3738 ;;                  1    wreg      void 
  3739 ;; Registers used:
  3740 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3746 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3747 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3748 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3749 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  3750 ;;Total ram usage:        5 bytes
  3751 ;; Hardware stack levels used:    1
  3752 ;; Hardware stack levels required when called:   11
  3753 ;; This function calls:
  3754 ;;		_SPI_transfer
  3755 ;; This function is called by:
  3756 ;;		_main
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           
  3761                           ;psect for function _ReadPayload
  3762  0931                     _ReadPayload:	
  3763                           
  3764                           ;incstack = 0
  3765                           ; Regs used in _ReadPayload: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3766                           ;ReadPayload@num stored from wreg
  3767  0931  0022               	movlb	2	; select bank2
  3768  0932  00E4               	movwf	ReadPayload@num^(0+256)
  3769                           
  3770                           ;nRF24L01P.c: 134: LATCbits.LATC6 = 0;
  3771  0933  130E               	bcf	14,6	;volatile
  3772                           
  3773                           ;nRF24L01P.c: 135: SPI_transfer(0x61);
  3774  0934  3061               	movlw	97
  3775  0935  3197  2788  3189   	fcall	_SPI_transfer
  3776                           
  3777                           ;nRF24L01P.c: 136: for(uint8_t i=0; i<num; i++)
  3778  0938  0022               	movlb	2	; select bank2
  3779  0939  01E5               	clrf	ReadPayload@i^(0+256)
  3780  093A                     l4702:	
  3781  093A  0864               	movf	ReadPayload@num^(0+256),w
  3782  093B  0265               	subwf	ReadPayload@i^(0+256),w
  3783  093C  1803               	btfsc	3,0
  3784  093D  2952               	goto	l698
  3785                           
  3786                           ;nRF24L01P.c: 137: data[i]=SPI_transfer(0);
  3787  093E  3000               	movlw	0
  3788  093F  3197  2788  3189   	fcall	_SPI_transfer
  3789  0942  0022               	movlb	2	; select bank2
  3790  0943  00E2               	movwf	??_ReadPayload^(0+256)
  3791  0944  0865               	movf	ReadPayload@i^(0+256),w
  3792  0945  0761               	addwf	ReadPayload@data^(0+256),w
  3793  0946  00E3               	movwf	(??_ReadPayload+1)^(0+256)
  3794  0947  0863               	movf	(??_ReadPayload+1)^(0+256),w
  3795  0948  0086               	movwf	6
  3796  0949  3002               	movlw	2	; select bank4/5
  3797  094A  0087               	movwf	7
  3798  094B  0862               	movf	??_ReadPayload^(0+256),w
  3799  094C  0081               	movwf	1
  3800  094D  3001               	movlw	1
  3801  094E  00E2               	movwf	??_ReadPayload^(0+256)
  3802  094F  0862               	movf	??_ReadPayload^(0+256),w
  3803  0950  07E5               	addwf	ReadPayload@i^(0+256),f
  3804  0951  293A               	goto	l4702
  3805  0952                     l698:	
  3806                           
  3807                           ;nRF24L01P.c: 138: LATCbits.LATC6=1;
  3808  0952  170E               	bsf	14,6	;volatile
  3809                           
  3810                           ;nRF24L01P.c: 139: LATAbits.LATA4=1;
  3811  0953  160C               	bsf	12,4	;volatile
  3812                           
  3813                           ;nRF24L01P.c: 140: _delay((unsigned long)((1)*(8000000L/4000.0)));
  3814  0954  3003               	movlw	3
  3815  0955  00E3               	movwf	(??_ReadPayload^(0+256)+1)
  3816  0956  3097               	movlw	151
  3817  0957  00E2               	movwf	??_ReadPayload^(0+256)
  3818  0958                     u4177:	
  3819  0958  0BE2               	decfsz	??_ReadPayload^(0+256),f
  3820  0959  2958               	goto	u4177
  3821  095A  0BE3               	decfsz	(??_ReadPayload^(0+256)+1),f
  3822  095B  2958               	goto	u4177
  3823  095C  3200               	nop2
  3824  095D  0008               	return
  3825  095E                     __end_of_ReadPayload:	
  3826                           
  3827                           	psect	text11
  3828  1788                     __ptext11:	
  3829 ;; *************** function _SPI_transfer *****************
  3830 ;; Defined at:
  3831 ;;		line 45 in file "spi_nino.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;  data            1    wreg     unsigned char 
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;  data            1    0[BANK2 ] unsigned char 
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  1    wreg      unsigned char 
  3838 ;; Registers used:
  3839 ;;		wreg
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3846 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3848 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3849 ;;Total ram usage:        1 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; Hardware stack levels required when called:   10
  3852 ;; This function calls:
  3853 ;;		Nothing
  3854 ;; This function is called by:
  3855 ;;		_WriteRegister
  3856 ;;		_WriteAddress
  3857 ;;		_ReadRegister
  3858 ;;		_ReadPayload
  3859 ;;		_WriteCommand
  3860 ;;		_WritePayload
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           
  3865                           ;psect for function _SPI_transfer
  3866  1788                     _SPI_transfer:	
  3867                           
  3868                           ;incstack = 0
  3869                           ; Regs used in _SPI_transfer: [wreg]
  3870                           ;SPI_transfer@data stored from wreg
  3871  1788  0022               	movlb	2	; select bank2
  3872  1789  00E0               	movwf	SPI_transfer@data^(0+256)
  3873                           
  3874                           ;spi_nino.c: 47: SSPBUF = data;
  3875  178A  0860               	movf	SPI_transfer@data^(0+256),w
  3876  178B  0024               	movlb	4	; select bank4
  3877  178C  0091               	movwf	17	;volatile
  3878  178D                     l727:	
  3879                           ;spi_nino.c: 48: while (!SSPSTATbits.BF);
  3880                           
  3881  178D  1C14               	btfss	20,0	;volatile
  3882  178E  2F8D               	goto	l727
  3883                           
  3884                           ;spi_nino.c: 50: return SSPBUF;
  3885  178F  0811               	movf	17,w	;volatile
  3886  1790  0008               	return
  3887  1791                     __end_of_SPI_transfer:	
  3888                           
  3889                           	psect	text12
  3890  024B                     __ptext12:	
  3891 ;; *************** function _CDCTxService *****************
  3892 ;; Defined at:
  3893 ;;		line 836 in file "../lib/usb/src/usb_device_cdc.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;		None
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;  byte_to_send    1   13[BANK2 ] unsigned char 
  3898 ;;  i               1   12[BANK2 ] unsigned char 
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  1    wreg      void 
  3901 ;; Registers used:
  3902 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3909 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3910 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3911 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3912 ;;Total ram usage:        3 bytes
  3913 ;; Hardware stack levels used:    1
  3914 ;; Hardware stack levels required when called:   11
  3915 ;; This function calls:
  3916 ;;		_USBTransferOnePacket
  3917 ;; This function is called by:
  3918 ;;		_main
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           
  3923                           ;psect for function _CDCTxService
  3924  024B                     _CDCTxService:	
  3925                           
  3926                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  3927                           ;usb_device_cdc.c: 839: uint8_t i;
  3928                           ;usb_device_cdc.c: 841: {PIE2bits.USBIE = 0;};
  3929                           
  3930                           ;incstack = 0
  3931                           ; Regs used in _CDCTxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3932  024B  0021               	movlb	1	; select bank1
  3933  024C  1112               	bcf	18,2	;volatile
  3934                           
  3935                           ;usb_device_cdc.c: 843: {};
  3936                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  3937  024D  0023               	movlb	3	; select bank3
  3938  024E  0846               	movf	_CDCDataInHandle^(0+384),w
  3939  024F  0447               	iorwf	(_CDCDataInHandle+1)^(0+384),w
  3940  0250  1903               	btfsc	3,2
  3941  0251  2A5B               	goto	l4572
  3942  0252  0846               	movf	_CDCDataInHandle^(0+384),w
  3943  0253  0086               	movwf	6
  3944  0254  0847               	movf	(_CDCDataInHandle+1)^(0+384),w
  3945  0255  0087               	movwf	7
  3946  0256  1F81               	btfss	1,7
  3947  0257  2A5B               	goto	l4572
  3948                           
  3949                           ;usb_device_cdc.c: 846: {
  3950                           ;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  3951  0258  0021               	movlb	1	; select bank1
  3952  0259  1512               	bsf	18,2	;volatile
  3953                           
  3954                           ;usb_device_cdc.c: 848: return;
  3955  025A  0008               	return
  3956  025B                     l4572:	
  3957                           
  3958                           ;usb_device_cdc.c: 849: }
  3959                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  3960  025B  3003               	movlw	3
  3961  025C  0023               	movlb	3	; select bank3
  3962  025D  065D               	xorwf	_cdc_trf_state^(0+384),w
  3963  025E  1903               	btfsc	3,2
  3964                           
  3965                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  3966  025F  01DD               	clrf	_cdc_trf_state^(0+384)
  3967                           
  3968                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  3969  0260  085D               	movf	_cdc_trf_state^(0+384),w
  3970  0261  1D03               	btfss	3,2
  3971  0262  2A66               	goto	l4580
  3972                           
  3973                           ;usb_device_cdc.c: 863: {
  3974                           ;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  3975  0263  0021               	movlb	1	; select bank1
  3976  0264  1512               	bsf	18,2	;volatile
  3977                           
  3978                           ;usb_device_cdc.c: 865: return;
  3979  0265  0008               	return
  3980  0266                     l4580:	
  3981                           
  3982                           ;usb_device_cdc.c: 866: }
  3983                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  3984  0266  3002               	movlw	2
  3985  0267  0023               	movlb	3	; select bank3
  3986  0268  065D               	xorwf	_cdc_trf_state^(0+384),w
  3987  0269  1D03               	btfss	3,2
  3988  026A  2A86               	goto	l4586
  3989                           
  3990                           ;usb_device_cdc.c: 872: {
  3991                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  3992  026B  0022               	movlb	2	; select bank2
  3993  026C  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  3994  026D  0AE0               	incf	USBTransferOnePacket@dir^(0+256),f
  3995  026E  3000               	movlw	0
  3996  026F  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  3997  0270  3000               	movlw	0
  3998  0271  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  3999  0272  01E3               	clrf	USBTransferOnePacket@len^(0+256)
  4000  0273  3002               	movlw	2
  4001  0274  318E  26F7  3182   	fcall	_USBTransferOnePacket
  4002  0277  0022               	movlb	2	; select bank2
  4003  0278  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  4004  0279  0023               	movlb	3	; select bank3
  4005  027A  00C7               	movwf	(_CDCDataInHandle+1)^(0+384)
  4006  027B  0022               	movlb	2	; select bank2
  4007  027C  0860               	movf	?_USBTransferOnePacket^(0+256),w
  4008  027D  0023               	movlb	3	; select bank3
  4009  027E  00C6               	movwf	_CDCDataInHandle^(0+384)
  4010                           
  4011                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  4012  027F  3003               	movlw	3
  4013  0280  0022               	movlb	2	; select bank2
  4014  0281  00EB               	movwf	??_CDCTxService^(0+256)
  4015  0282  086B               	movf	??_CDCTxService^(0+256),w
  4016  0283  0023               	movlb	3	; select bank3
  4017  0284  00DD               	movwf	_cdc_trf_state^(0+384)
  4018                           
  4019                           ;usb_device_cdc.c: 876: }
  4020  0285  2B18               	goto	l4634
  4021  0286                     l4586:	
  4022                           
  4023                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  4024  0286  035D               	decf	_cdc_trf_state^(0+384),w
  4025  0287  1D03               	btfss	3,2
  4026  0288  2B18               	goto	l4634
  4027                           
  4028                           ;usb_device_cdc.c: 878: {
  4029                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  4030  0289  3041               	movlw	65
  4031  028A  025E               	subwf	_cdc_tx_len^(0+384),w
  4032  028B  1C03               	skipc
  4033  028C  2A8F               	goto	l4592
  4034                           
  4035                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  4036  028D  3040               	movlw	64
  4037  028E  2A91               	goto	L1
  4038  028F                     l4592:	
  4039                           
  4040                           ;usb_device_cdc.c: 884: else
  4041                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  4042  028F  0023               	movlb	3	; select bank3
  4043  0290  085E               	movf	_cdc_tx_len^(0+384),w
  4044  0291                     L1:	
  4045  0291  0022               	movlb	2	; select bank2
  4046  0292  00EB               	movwf	??_CDCTxService^(0+256)
  4047  0293  086B               	movf	??_CDCTxService^(0+256),w
  4048  0294  00ED               	movwf	CDCTxService@byte_to_send^(0+256)
  4049                           
  4050                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  4051  0295  036D               	decf	CDCTxService@byte_to_send^(0+256),w
  4052  0296  3AFF               	xorlw	255
  4053  0297  0023               	movlb	3	; select bank3
  4054  0298  075E               	addwf	_cdc_tx_len^(0+384),w
  4055  0299  0022               	movlb	2	; select bank2
  4056  029A  00EB               	movwf	??_CDCTxService^(0+256)
  4057  029B  086B               	movf	??_CDCTxService^(0+256),w
  4058  029C  0023               	movlb	3	; select bank3
  4059  029D  00DE               	movwf	_cdc_tx_len^(0+384)
  4060                           
  4061                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  4062  029E  30A0               	movlw	160
  4063  029F  0022               	movlb	2	; select bank2
  4064  02A0  00EB               	movwf	??_CDCTxService^(0+256)
  4065  02A1  086B               	movf	??_CDCTxService^(0+256),w
  4066  02A2  0023               	movlb	3	; select bank3
  4067  02A3  00CA               	movwf	_pCDCDst^(0+384)
  4068                           
  4069                           ;usb_device_cdc.c: 894: i = byte_to_send;
  4070  02A4  0022               	movlb	2	; select bank2
  4071  02A5  086D               	movf	CDCTxService@byte_to_send^(0+256),w
  4072  02A6  00EB               	movwf	??_CDCTxService^(0+256)
  4073  02A7  086B               	movf	??_CDCTxService^(0+256),w
  4074  02A8  00EC               	movwf	CDCTxService@i^(0+256)
  4075                           
  4076                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  4077  02A9  0023               	movlb	3	; select bank3
  4078  02AA  085B               	movf	_cdc_mem_type^(0+384),w
  4079  02AB  1903               	btfsc	3,2
  4080  02AC  2ACB               	goto	l4612
  4081  02AD  2AED               	goto	l4622
  4082  02AE                     l4604:	
  4083                           ;usb_device_cdc.c: 896: {
  4084                           ;usb_device_cdc.c: 897: while(i)
  4085                           
  4086                           
  4087                           ;usb_device_cdc.c: 898: {
  4088                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  4089  02AE  0023               	movlb	3	; select bank3
  4090  02AF  084C               	movf	_pCDCSrc^(0+384),w
  4091  02B0  0086               	movwf	6
  4092  02B1  3002               	movlw	2	; select bank4/5
  4093  02B2  0087               	movwf	7
  4094  02B3  0801               	movf	1,w
  4095  02B4  0022               	movlb	2	; select bank2
  4096  02B5  00EB               	movwf	??_CDCTxService^(0+256)
  4097  02B6  0023               	movlb	3	; select bank3
  4098  02B7  084A               	movf	_pCDCDst^(0+384),w
  4099  02B8  0086               	movwf	6
  4100  02B9  0187               	clrf	7
  4101  02BA  0022               	movlb	2	; select bank2
  4102  02BB  086B               	movf	??_CDCTxService^(0+256),w
  4103  02BC  0081               	movwf	1
  4104                           
  4105                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  4106  02BD  3001               	movlw	1
  4107  02BE  00EB               	movwf	??_CDCTxService^(0+256)
  4108  02BF  086B               	movf	??_CDCTxService^(0+256),w
  4109  02C0  0023               	movlb	3	; select bank3
  4110  02C1  07CA               	addwf	_pCDCDst^(0+384),f
  4111                           
  4112                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  4113  02C2  3001               	movlw	1
  4114  02C3  0022               	movlb	2	; select bank2
  4115  02C4  00EB               	movwf	??_CDCTxService^(0+256)
  4116  02C5  086B               	movf	??_CDCTxService^(0+256),w
  4117  02C6  0023               	movlb	3	; select bank3
  4118  02C7  07CC               	addwf	_pCDCSrc^(0+384),f
  4119                           
  4120                           ;usb_device_cdc.c: 902: i--;
  4121  02C8  3001               	movlw	1
  4122  02C9  0022               	movlb	2	; select bank2
  4123  02CA  02EC               	subwf	CDCTxService@i^(0+256),f
  4124  02CB                     l4612:	
  4125  02CB  0022               	movlb	2	; select bank2
  4126  02CC  086C               	movf	CDCTxService@i^(0+256),w
  4127  02CD  1903               	btfsc	3,2
  4128  02CE  2AF1               	goto	l4624
  4129  02CF  2AAE               	goto	l4604
  4130  02D0                     l4614:	
  4131                           ;usb_device_cdc.c: 905: else
  4132                           ;usb_device_cdc.c: 906: {
  4133                           ;usb_device_cdc.c: 907: while(i)
  4134                           
  4135                           ;usb_device_cdc.c: 903: }
  4136                           ;usb_device_cdc.c: 904: }
  4137                           
  4138                           
  4139                           ;usb_device_cdc.c: 908: {
  4140                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  4141  02D0  0023               	movlb	3	; select bank3
  4142  02D1  084C               	movf	_pCDCSrc^(0+384),w
  4143  02D2  0086               	movwf	6
  4144  02D3  3002               	movlw	2	; select bank4/5
  4145  02D4  0087               	movwf	7
  4146  02D5  0801               	movf	1,w
  4147  02D6  0022               	movlb	2	; select bank2
  4148  02D7  00EB               	movwf	??_CDCTxService^(0+256)
  4149  02D8  0023               	movlb	3	; select bank3
  4150  02D9  084A               	movf	_pCDCDst^(0+384),w
  4151  02DA  0086               	movwf	6
  4152  02DB  0187               	clrf	7
  4153  02DC  0022               	movlb	2	; select bank2
  4154  02DD  086B               	movf	??_CDCTxService^(0+256),w
  4155  02DE  0081               	movwf	1
  4156                           
  4157                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  4158  02DF  3001               	movlw	1
  4159  02E0  00EB               	movwf	??_CDCTxService^(0+256)
  4160  02E1  086B               	movf	??_CDCTxService^(0+256),w
  4161  02E2  0023               	movlb	3	; select bank3
  4162  02E3  07CA               	addwf	_pCDCDst^(0+384),f
  4163                           
  4164                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  4165  02E4  3001               	movlw	1
  4166  02E5  0022               	movlb	2	; select bank2
  4167  02E6  00EB               	movwf	??_CDCTxService^(0+256)
  4168  02E7  086B               	movf	??_CDCTxService^(0+256),w
  4169  02E8  0023               	movlb	3	; select bank3
  4170  02E9  07CC               	addwf	_pCDCSrc^(0+384),f
  4171                           
  4172                           ;usb_device_cdc.c: 912: i--;
  4173  02EA  3001               	movlw	1
  4174  02EB  0022               	movlb	2	; select bank2
  4175  02EC  02EC               	subwf	CDCTxService@i^(0+256),f
  4176  02ED                     l4622:	
  4177  02ED  0022               	movlb	2	; select bank2
  4178  02EE  086C               	movf	CDCTxService@i^(0+256),w
  4179  02EF  1D03               	btfss	3,2
  4180  02F0  2AD0               	goto	l4614
  4181  02F1                     l4624:	
  4182                           
  4183                           ;usb_device_cdc.c: 913: }
  4184                           ;usb_device_cdc.c: 914: }
  4185                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  4186  02F1  0023               	movlb	3	; select bank3
  4187  02F2  085E               	movf	_cdc_tx_len^(0+384),w
  4188  02F3  1D03               	btfss	3,2
  4189  02F4  2B02               	goto	l4632
  4190                           
  4191                           ;usb_device_cdc.c: 921: {
  4192                           ;usb_device_cdc.c: 922: if(byte_to_send == 64)
  4193  02F5  3040               	movlw	64
  4194  02F6  0022               	movlb	2	; select bank2
  4195  02F7  066D               	xorwf	CDCTxService@byte_to_send^(0+256),w
  4196  02F8  1D03               	btfss	3,2
  4197  02F9  2AFC               	goto	l4630
  4198                           
  4199                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  4200  02FA  3002               	movlw	2
  4201  02FB  2AFE               	goto	L2
  4202  02FC                     l4630:	
  4203                           
  4204                           ;usb_device_cdc.c: 924: else
  4205                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  4206  02FC  3003               	movlw	3
  4207  02FD  0022               	movlb	2	; select bank2
  4208  02FE                     L2:	
  4209  02FE  00EB               	movwf	??_CDCTxService^(0+256)
  4210  02FF  086B               	movf	??_CDCTxService^(0+256),w
  4211  0300  0023               	movlb	3	; select bank3
  4212  0301  00DD               	movwf	_cdc_trf_state^(0+384)
  4213  0302                     l4632:	
  4214                           
  4215                           ;usb_device_cdc.c: 926: }
  4216                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  4217  0302  0022               	movlb	2	; select bank2
  4218  0303  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  4219  0304  0AE0               	incf	USBTransferOnePacket@dir^(0+256),f
  4220  0305  30A0               	movlw	160
  4221  0306  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  4222  0307  3000               	movlw	0
  4223  0308  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  4224  0309  086D               	movf	CDCTxService@byte_to_send^(0+256),w
  4225  030A  00EB               	movwf	??_CDCTxService^(0+256)
  4226  030B  086B               	movf	??_CDCTxService^(0+256),w
  4227  030C  00E3               	movwf	USBTransferOnePacket@len^(0+256)
  4228  030D  3002               	movlw	2
  4229  030E  318E  26F7         	fcall	_USBTransferOnePacket
  4230  0310  0022               	movlb	2	; select bank2
  4231  0311  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  4232  0312  0023               	movlb	3	; select bank3
  4233  0313  00C7               	movwf	(_CDCDataInHandle+1)^(0+384)
  4234  0314  0022               	movlb	2	; select bank2
  4235  0315  0860               	movf	?_USBTransferOnePacket^(0+256),w
  4236  0316  0023               	movlb	3	; select bank3
  4237  0317  00C6               	movwf	_CDCDataInHandle^(0+384)
  4238  0318                     l4634:	
  4239                           
  4240                           ;usb_device_cdc.c: 929: }
  4241                           ;usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  4242  0318  0021               	movlb	1	; select bank1
  4243  0319  1512               	bsf	18,2	;volatile
  4244  031A  0008               	return
  4245  031B                     __end_of_CDCTxService:	
  4246                           
  4247                           	psect	text13
  4248  0A02                     __ptext13:	
  4249 ;; *************** function _CDCInitEP *****************
  4250 ;; Defined at:
  4251 ;;		line 294 in file "../lib/usb/src/usb_device_cdc.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;		None
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;		None
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1    wreg      void 
  4258 ;; Registers used:
  4259 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4267 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4268 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4269 ;;Total ram usage:        1 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:   12
  4272 ;; This function calls:
  4273 ;;		_USBEnableEndpoint
  4274 ;;		_USBTransferOnePacket
  4275 ;; This function is called by:
  4276 ;;		_main
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           
  4281                           ;psect for function _CDCInitEP
  4282  0A02                     _CDCInitEP:	
  4283                           
  4284                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
  4285                           
  4286                           ;incstack = 0
  4287                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4288  0A02  3000               	movlw	0
  4289  0A03  0023               	movlb	3	; select bank3
  4290  0A04  00E6               	movwf	(_line_coding+3)^(0+384)
  4291  0A05  3000               	movlw	0
  4292  0A06  00E5               	movwf	(_line_coding+2)^(0+384)
  4293  0A07  304B               	movlw	75
  4294  0A08  00E4               	movwf	(_line_coding+1)^(0+384)
  4295  0A09  3000               	movlw	0
  4296  0A0A  00E3               	movwf	_line_coding^(0+384)
  4297                           
  4298                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  4299  0A0B  01E7               	clrf	(_line_coding^(0+384)+4)
  4300                           
  4301                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  4302  0A0C  01E8               	clrf	(_line_coding^(0+384)+5)
  4303                           
  4304                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  4305  0A0D  3008               	movlw	8
  4306  0A0E  0022               	movlb	2	; select bank2
  4307  0A0F  00ED               	movwf	??_CDCInitEP^(0+256)
  4308  0A10  086D               	movf	??_CDCInitEP^(0+256),w
  4309  0A11  0023               	movlb	3	; select bank3
  4310  0A12  00E9               	movwf	(_line_coding^(0+384)+6)
  4311                           
  4312                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  4313  0A13  01DC               	clrf	_cdc_rx_len^(0+384)
  4314                           
  4315                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  4316  0A14  301A               	movlw	26
  4317  0A15  0022               	movlb	2	; select bank2
  4318  0A16  00ED               	movwf	??_CDCInitEP^(0+256)
  4319  0A17  086D               	movf	??_CDCInitEP^(0+256),w
  4320  0A18  00E7               	movwf	USBEnableEndpoint@options^(0+256)
  4321  0A19  3001               	movlw	1
  4322  0A1A  3188  209A  318A   	fcall	_USBEnableEndpoint
  4323                           
  4324                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  4325  0A1D  301E               	movlw	30
  4326  0A1E  0022               	movlb	2	; select bank2
  4327  0A1F  00ED               	movwf	??_CDCInitEP^(0+256)
  4328  0A20  086D               	movf	??_CDCInitEP^(0+256),w
  4329  0A21  00E7               	movwf	USBEnableEndpoint@options^(0+256)
  4330  0A22  3002               	movlw	2
  4331  0A23  3188  209A  318A   	fcall	_USBEnableEndpoint
  4332                           
  4333                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  4334  0A26  0022               	movlb	2	; select bank2
  4335  0A27  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  4336  0A28  3020               	movlw	32
  4337  0A29  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  4338  0A2A  3001               	movlw	1
  4339  0A2B  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  4340  0A2C  3040               	movlw	64
  4341  0A2D  00ED               	movwf	??_CDCInitEP^(0+256)
  4342  0A2E  086D               	movf	??_CDCInitEP^(0+256),w
  4343  0A2F  00E3               	movwf	USBTransferOnePacket@len^(0+256)
  4344  0A30  3002               	movlw	2
  4345  0A31  318E  26F7         	fcall	_USBTransferOnePacket
  4346  0A33  0022               	movlb	2	; select bank2
  4347  0A34  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  4348  0A35  0023               	movlb	3	; select bank3
  4349  0A36  00C9               	movwf	(_CDCDataOutHandle+1)^(0+384)
  4350  0A37  0022               	movlb	2	; select bank2
  4351  0A38  0860               	movf	?_USBTransferOnePacket^(0+256),w
  4352  0A39  0023               	movlb	3	; select bank3
  4353  0A3A  00C8               	movwf	_CDCDataOutHandle^(0+384)
  4354                           
  4355                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  4356  0A3B  01C6               	clrf	_CDCDataInHandle^(0+384)
  4357  0A3C  01C7               	clrf	(_CDCDataInHandle+1)^(0+384)
  4358                           
  4359                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
  4360  0A3D  01DD               	clrf	_cdc_trf_state^(0+384)
  4361  0A3E  0008               	return
  4362  0A3F                     __end_of_CDCInitEP:	
  4363                           
  4364                           	psect	text14
  4365  0EF7                     __ptext14:	
  4366 ;; *************** function _USBTransferOnePacket *****************
  4367 ;; Defined at:
  4368 ;;		line 995 in file "../lib/usb/src/usb_device.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;  ep              1    wreg     unsigned char 
  4371 ;;  dir             1    0[BANK2 ] unsigned char 
  4372 ;;  data            2    1[BANK2 ] PTR unsigned char 
  4373 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  4374 ;;  len             1    3[BANK2 ] unsigned char 
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;  ep              1    8[BANK2 ] unsigned char 
  4377 ;;  handle          2    9[BANK2 ] PTR volatile struct __BD
  4378 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  2    0[BANK2 ] PTR void 
  4381 ;; Registers used:
  4382 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4388 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4389 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4390 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4391 ;;      Totals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0
  4392 ;;Total ram usage:       11 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:   10
  4395 ;; This function calls:
  4396 ;;		Nothing
  4397 ;; This function is called by:
  4398 ;;		_CDCInitEP
  4399 ;;		_CDCTxService
  4400 ;;		_USBCDCEventHandler
  4401 ;;		_getsUSBUSART
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405                           
  4406                           ;psect for function _USBTransferOnePacket
  4407  0EF7                     _USBTransferOnePacket:	
  4408                           
  4409                           ;incstack = 0
  4410                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  4411                           ;USBTransferOnePacket@ep stored from wreg
  4412  0EF7  0022               	movlb	2	; select bank2
  4413  0EF8  00E8               	movwf	USBTransferOnePacket@ep^(0+256)
  4414                           
  4415                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  4416                           ;usb_device.c: 1000: if(dir != 0)
  4417  0EF9  0860               	movf	USBTransferOnePacket@dir^(0+256),w
  4418  0EFA  1903               	btfsc	3,2
  4419  0EFB  2F05               	goto	l4356
  4420                           
  4421                           ;usb_device.c: 1001: {
  4422                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  4423  0EFC  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  4424  0EFD  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  4425  0EFE  0086               	movwf	6
  4426  0EFF  3001               	movlw	1	; select bank3/4
  4427  0F00  0087               	movwf	7
  4428  0F01  3F40               	moviw [0]fsr1
  4429  0F02  00E9               	movwf	USBTransferOnePacket@handle^(0+256)
  4430  0F03  3F41               	moviw [1]fsr1
  4431  0F04  2F0D               	goto	L3
  4432  0F05                     l4356:	
  4433                           ;usb_device.c: 1004: }
  4434                           
  4435                           
  4436                           ;usb_device.c: 1005: else
  4437                           ;usb_device.c: 1006: {
  4438                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  4439  0F05  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  4440  0F06  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4441  0F07  0086               	movwf	6
  4442  0F08  3001               	movlw	1	; select bank3/4
  4443  0F09  0087               	movwf	7
  4444  0F0A  3F40               	moviw [0]fsr1
  4445  0F0B  00E9               	movwf	USBTransferOnePacket@handle^(0+256)
  4446  0F0C  3F41               	moviw [1]fsr1
  4447  0F0D                     L3:	
  4448  0F0D  00EA               	movwf	(USBTransferOnePacket@handle+1)^(0+256)
  4449                           
  4450                           ;usb_device.c: 1009: }
  4451                           ;usb_device.c: 1013: if(handle == 0)
  4452  0F0E  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  4453  0F0F  046A               	iorwf	(USBTransferOnePacket@handle+1)^(0+256),w
  4454  0F10  1D03               	btfss	3,2
  4455  0F11  2F15               	goto	l4364
  4456                           
  4457                           ;usb_device.c: 1014: {
  4458                           ;usb_device.c: 1015: return 0;
  4459  0F12  01E0               	clrf	?_USBTransferOnePacket^(0+256)
  4460  0F13  01E1               	clrf	(?_USBTransferOnePacket+1)^(0+256)
  4461  0F14  0008               	return
  4462  0F15                     l4364:	
  4463                           
  4464                           ;usb_device.c: 1016: }
  4465                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  4466  0F15  30FF               	movlw	255
  4467  0F16  0561               	andwf	USBTransferOnePacket@data^(0+256),w
  4468  0F17  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4469  0F18  307F               	movlw	127
  4470  0F19  0562               	andwf	(USBTransferOnePacket@data+1)^(0+256),w
  4471  0F1A  00E5               	movwf	(??_USBTransferOnePacket+1)^(0+256)
  4472  0F1B  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  4473  0F1C  0086               	movwf	6
  4474  0F1D  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  4475  0F1E  0087               	movwf	7
  4476  0F1F  3142               	addfsr 1,2
  4477  0F20  0864               	movf	??_USBTransferOnePacket^(0+256),w
  4478  0F21  3FC0               	movwi [0]fsr1
  4479  0F22  0865               	movf	(??_USBTransferOnePacket^(0+256)+1),w
  4480  0F23  3FC1               	movwi [1]fsr1
  4481                           
  4482                           ;usb_device.c: 1030: handle->CNT = len;
  4483  0F24  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  4484  0F25  3E01               	addlw	1
  4485  0F26  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4486  0F27  3000               	movlw	0
  4487  0F28  3D6A               	addwfc	(USBTransferOnePacket@handle+1)^(0+256),w
  4488  0F29  00E5               	movwf	(??_USBTransferOnePacket+1)^(0+256)
  4489  0F2A  0864               	movf	??_USBTransferOnePacket^(0+256),w
  4490  0F2B  0086               	movwf	6
  4491  0F2C  0865               	movf	(??_USBTransferOnePacket+1)^(0+256),w
  4492  0F2D  0087               	movwf	7
  4493  0F2E  0863               	movf	USBTransferOnePacket@len^(0+256),w
  4494  0F2F  0081               	movwf	1
  4495                           
  4496                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  4497  0F30  3040               	movlw	64
  4498  0F31  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4499  0F32  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  4500  0F33  0086               	movwf	6
  4501  0F34  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  4502  0F35  0087               	movwf	7
  4503  0F36  0864               	movf	??_USBTransferOnePacket^(0+256),w
  4504  0F37  0581               	andwf	1,f
  4505                           
  4506                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  4507  0F38  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  4508  0F39  0086               	movwf	6
  4509  0F3A  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  4510  0F3B  0087               	movwf	7
  4511  0F3C  1581               	bsf	1,3
  4512                           
  4513                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  4514  0F3D  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  4515  0F3E  0086               	movwf	6
  4516  0F3F  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  4517  0F40  0087               	movwf	7
  4518  0F41  1781               	bsf	1,7
  4519                           
  4520                           ;usb_device.c: 1036: if(dir != 0)
  4521  0F42  0860               	movf	USBTransferOnePacket@dir^(0+256),w
  4522  0F43  1903               	btfsc	3,2
  4523  0F44  2F5E               	goto	l4374
  4524                           
  4525                           ;usb_device.c: 1037: {
  4526                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  4527  0F45  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  4528  0F46  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  4529  0F47  0086               	movwf	6
  4530  0F48  3001               	movlw	1	; select bank3/4
  4531  0F49  0087               	movwf	7
  4532  0F4A  3F40               	moviw [0]fsr1
  4533  0F4B  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4534  0F4C  3F41               	moviw [1]fsr1
  4535  0F4D  00E5               	movwf	(??_USBTransferOnePacket^(0+256)+1)
  4536  0F4E  3004               	movlw	4
  4537  0F4F  0664               	xorwf	??_USBTransferOnePacket^(0+256),w
  4538  0F50  00E6               	movwf	(??_USBTransferOnePacket+2)^(0+256)
  4539  0F51  3000               	movlw	0
  4540  0F52  0665               	xorwf	(??_USBTransferOnePacket+1)^(0+256),w
  4541  0F53  00E7               	movwf	(??_USBTransferOnePacket+3)^(0+256)
  4542  0F54  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  4543  0F55  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  4544  0F56  0086               	movwf	6
  4545  0F57  3001               	movlw	1	; select bank3/4
  4546  0F58  0087               	movwf	7
  4547  0F59  0866               	movf	(??_USBTransferOnePacket+2)^(0+256),w
  4548  0F5A  3FC0               	movwi [0]fsr1
  4549  0F5B  0867               	movf	(??_USBTransferOnePacket+3)^(0+256),w
  4550  0F5C  3FC1               	movwi [1]fsr1
  4551                           
  4552                           ;usb_device.c: 1040: }
  4553  0F5D  2F76               	goto	l4376
  4554  0F5E                     l4374:	
  4555                           
  4556                           ;usb_device.c: 1041: else
  4557                           ;usb_device.c: 1042: {
  4558                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  4559  0F5E  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  4560  0F5F  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4561  0F60  0086               	movwf	6
  4562  0F61  3001               	movlw	1	; select bank3/4
  4563  0F62  0087               	movwf	7
  4564  0F63  3F40               	moviw [0]fsr1
  4565  0F64  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4566  0F65  3F41               	moviw [1]fsr1
  4567  0F66  00E5               	movwf	(??_USBTransferOnePacket^(0+256)+1)
  4568  0F67  3004               	movlw	4
  4569  0F68  0664               	xorwf	??_USBTransferOnePacket^(0+256),w
  4570  0F69  00E6               	movwf	(??_USBTransferOnePacket+2)^(0+256)
  4571  0F6A  3000               	movlw	0
  4572  0F6B  0665               	xorwf	(??_USBTransferOnePacket+1)^(0+256),w
  4573  0F6C  00E7               	movwf	(??_USBTransferOnePacket+3)^(0+256)
  4574  0F6D  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  4575  0F6E  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4576  0F6F  0086               	movwf	6
  4577  0F70  3001               	movlw	1	; select bank3/4
  4578  0F71  0087               	movwf	7
  4579  0F72  0866               	movf	(??_USBTransferOnePacket+2)^(0+256),w
  4580  0F73  3FC0               	movwi [0]fsr1
  4581  0F74  0867               	movf	(??_USBTransferOnePacket+3)^(0+256),w
  4582  0F75  3FC1               	movwi [1]fsr1
  4583  0F76                     l4376:	
  4584                           
  4585                           ;usb_device.c: 1045: }
  4586                           ;usb_device.c: 1046: return (void*)handle;
  4587  0F76  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  4588  0F77  00E1               	movwf	(?_USBTransferOnePacket+1)^(0+256)
  4589  0F78  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  4590  0F79  00E0               	movwf	?_USBTransferOnePacket^(0+256)
  4591  0F7A  0008               	return
  4592  0F7B                     __end_of_USBTransferOnePacket:	
  4593                           
  4594                           	psect	text15
  4595  089A                     __ptext15:	
  4596 ;; *************** function _USBEnableEndpoint *****************
  4597 ;; Defined at:
  4598 ;;		line 878 in file "../lib/usb/src/usb_device.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  ep              1    wreg     unsigned char 
  4601 ;;  options         1    7[BANK2 ] unsigned char 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  ep              1   12[BANK2 ] unsigned char 
  4604 ;;  p               2   10[BANK2 ] PTR unsigned char 
  4605 ;;		 -> UEP0(1), 
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  1    wreg      void 
  4608 ;; Registers used:
  4609 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4615 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4616 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4617 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4618 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  4619 ;;Total ram usage:        6 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; Hardware stack levels required when called:   11
  4622 ;; This function calls:
  4623 ;;		_USBConfigureEndpoint
  4624 ;; This function is called by:
  4625 ;;		_CDCInitEP
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           
  4630                           ;psect for function _USBEnableEndpoint
  4631  089A                     _USBEnableEndpoint:	
  4632                           
  4633                           ;incstack = 0
  4634                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4635                           ;USBEnableEndpoint@ep stored from wreg
  4636  089A  0022               	movlb	2	; select bank2
  4637  089B  00EC               	movwf	USBEnableEndpoint@ep^(0+256)
  4638                           
  4639                           ;usb_device.c: 880: unsigned char* p;
  4640                           ;usb_device.c: 884: if(options & 0x04)
  4641  089C  1D67               	btfss	USBEnableEndpoint@options^(0+256),2
  4642  089D  28A3               	goto	l4344
  4643                           
  4644                           ;usb_device.c: 885: {
  4645                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  4646  089E  01E0               	clrf	USBConfigureEndpoint@direction^(0+256)
  4647  089F  086C               	movf	USBEnableEndpoint@ep^(0+256),w
  4648  08A0  318A  22BF  3188   	fcall	_USBConfigureEndpoint
  4649  08A3                     l4344:	
  4650                           
  4651                           ;usb_device.c: 887: }
  4652                           ;usb_device.c: 888: if(options & 0x02)
  4653  08A3  0022               	movlb	2	; select bank2
  4654  08A4  1CE7               	btfss	USBEnableEndpoint@options^(0+256),1
  4655  08A5  28AB               	goto	l4348
  4656                           
  4657                           ;usb_device.c: 889: {
  4658                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  4659  08A6  01E0               	clrf	USBConfigureEndpoint@direction^(0+256)
  4660  08A7  0AE0               	incf	USBConfigureEndpoint@direction^(0+256),f
  4661  08A8  086C               	movf	USBEnableEndpoint@ep^(0+256),w
  4662  08A9  318A  22BF         	fcall	_USBConfigureEndpoint
  4663  08AB                     l4348:	
  4664                           
  4665                           ;usb_device.c: 891: }
  4666                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  4667  08AB  0022               	movlb	2	; select bank2
  4668  08AC  086C               	movf	USBEnableEndpoint@ep^(0+256),w
  4669  08AD  3E98               	addlw	152
  4670  08AE  00E8               	movwf	??_USBEnableEndpoint^(0+256)
  4671  08AF  01E9               	clrf	(??_USBEnableEndpoint^(0+256)+1)
  4672  08B0  300E               	movlw	14
  4673  08B1  3DE9               	addwfc	(??_USBEnableEndpoint^(0+256)+1),f
  4674  08B2  0868               	movf	??_USBEnableEndpoint^(0+256),w
  4675  08B3  00EA               	movwf	USBEnableEndpoint@p^(0+256)
  4676  08B4  0869               	movf	(??_USBEnableEndpoint+1)^(0+256),w
  4677  08B5  00EB               	movwf	(USBEnableEndpoint@p+1)^(0+256)
  4678                           
  4679                           ;usb_device.c: 901: *p = options;
  4680  08B6  086A               	movf	USBEnableEndpoint@p^(0+256),w
  4681  08B7  0086               	movwf	6
  4682  08B8  086B               	movf	(USBEnableEndpoint@p+1)^(0+256),w
  4683  08B9  0087               	movwf	7
  4684  08BA  0867               	movf	USBEnableEndpoint@options^(0+256),w
  4685  08BB  0081               	movwf	1
  4686  08BC  0008               	return
  4687  08BD                     __end_of_USBEnableEndpoint:	
  4688                           
  4689                           	psect	text16
  4690  0ABF                     __ptext16:	
  4691 ;; *************** function _USBConfigureEndpoint *****************
  4692 ;; Defined at:
  4693 ;;		line 1543 in file "../lib/usb/src/usb_device.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;  EPNum           1    wreg     unsigned char 
  4696 ;;  direction       1    0[BANK2 ] unsigned char 
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;  EPNum           1    5[BANK2 ] unsigned char 
  4699 ;;  handle          1    6[BANK2 ] PTR volatile struct __BD
  4700 ;;		 -> BDT(48), 
  4701 ;; Return value:  Size  Location     Type
  4702 ;;                  1    wreg      void 
  4703 ;; Registers used:
  4704 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4710 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4711 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4712 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4713 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0
  4714 ;;Total ram usage:        7 bytes
  4715 ;; Hardware stack levels used:    1
  4716 ;; Hardware stack levels required when called:   10
  4717 ;; This function calls:
  4718 ;;		Nothing
  4719 ;; This function is called by:
  4720 ;;		_USBEnableEndpoint
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           
  4725                           ;psect for function _USBConfigureEndpoint
  4726  0ABF                     _USBConfigureEndpoint:	
  4727                           
  4728                           ;incstack = 0
  4729                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  4730                           ;USBConfigureEndpoint@EPNum stored from wreg
  4731  0ABF  0022               	movlb	2	; select bank2
  4732  0AC0  00E5               	movwf	USBConfigureEndpoint@EPNum^(0+256)
  4733                           
  4734                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  4735                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  4736  0AC1  3020               	movlw	32
  4737  0AC2  00E1               	movwf	??_USBConfigureEndpoint^(0+256)
  4738  0AC3  0861               	movf	??_USBConfigureEndpoint^(0+256),w
  4739  0AC4  00E6               	movwf	USBConfigureEndpoint@handle^(0+256)
  4740                           
  4741                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  4742  0AC5  0860               	movf	USBConfigureEndpoint@direction^(0+256),w
  4743  0AC6  00E1               	movwf	??_USBConfigureEndpoint^(0+256)
  4744  0AC7  3001               	movlw	1
  4745  0AC8                     u3655:	
  4746  0AC8  35E1               	lslf	??_USBConfigureEndpoint^(0+256),f
  4747  0AC9  0B89               	decfsz	9,f
  4748  0ACA  2AC8               	goto	u3655
  4749  0ACB  0865               	movf	USBConfigureEndpoint@EPNum^(0+256),w
  4750  0ACC  00E2               	movwf	(??_USBConfigureEndpoint+1)^(0+256)
  4751  0ACD  3001               	movlw	1
  4752  0ACE                     u3665:	
  4753  0ACE  35E2               	lslf	(??_USBConfigureEndpoint+1)^(0+256),f
  4754  0ACF  3EFF               	addlw	-1
  4755  0AD0  1D03               	skipz
  4756  0AD1  2ACE               	goto	u3665
  4757  0AD2  3562               	lslf	(??_USBConfigureEndpoint+1)^(0+256),w
  4758  0AD3  0761               	addwf	??_USBConfigureEndpoint^(0+256),w
  4759  0AD4  00E3               	movwf	(??_USBConfigureEndpoint+2)^(0+256)
  4760  0AD5  3001               	movlw	1
  4761  0AD6                     u3675:	
  4762  0AD6  35E3               	lslf	(??_USBConfigureEndpoint+2)^(0+256),f
  4763  0AD7  3EFF               	addlw	-1
  4764  0AD8  1D03               	skipz
  4765  0AD9  2AD6               	goto	u3675
  4766  0ADA  3563               	lslf	(??_USBConfigureEndpoint+2)^(0+256),w
  4767  0ADB  00E4               	movwf	(??_USBConfigureEndpoint+3)^(0+256)
  4768  0ADC  0864               	movf	(??_USBConfigureEndpoint+3)^(0+256),w
  4769  0ADD  07E6               	addwf	USBConfigureEndpoint@handle^(0+256),f
  4770                           
  4771                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  4772  0ADE  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  4773  0ADF  0086               	movwf	6
  4774  0AE0  0187               	clrf	7
  4775  0AE1  1381               	bcf	1,7
  4776                           
  4777                           ;usb_device.c: 1557: if(direction == 0)
  4778  0AE2  0860               	movf	USBConfigureEndpoint@direction^(0+256),w
  4779  0AE3  1D03               	btfss	3,2
  4780  0AE4  2AEF               	goto	l4328
  4781                           
  4782                           ;usb_device.c: 1558: {
  4783                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  4784  0AE5  3565               	lslf	USBConfigureEndpoint@EPNum^(0+256),w
  4785  0AE6  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4786  0AE7  0086               	movwf	6
  4787  0AE8  3001               	movlw	1	; select bank3/4
  4788  0AE9  0087               	movwf	7
  4789  0AEA  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  4790  0AEB  3FC0               	movwi [0]fsr1
  4791  0AEC  3000               	movlw	0
  4792  0AED  3FC1               	movwi [1]fsr1
  4793                           
  4794                           ;usb_device.c: 1560: }
  4795  0AEE  2AF8               	goto	l4330
  4796  0AEF                     l4328:	
  4797                           
  4798                           ;usb_device.c: 1561: else
  4799                           ;usb_device.c: 1562: {
  4800                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  4801  0AEF  3565               	lslf	USBConfigureEndpoint@EPNum^(0+256),w
  4802  0AF0  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  4803  0AF1  0086               	movwf	6
  4804  0AF2  3001               	movlw	1	; select bank3/4
  4805  0AF3  0087               	movwf	7
  4806  0AF4  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  4807  0AF5  3FC0               	movwi [0]fsr1
  4808  0AF6  3000               	movlw	0
  4809  0AF7  3FC1               	movwi [1]fsr1
  4810  0AF8                     l4330:	
  4811                           
  4812                           ;usb_device.c: 1564: }
  4813                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  4814  0AF8  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  4815  0AF9  0086               	movwf	6
  4816  0AFA  0187               	clrf	7
  4817  0AFB  1301               	bcf	1,6
  4818                           
  4819                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  4820  0AFC  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  4821  0AFD  3E04               	addlw	4
  4822  0AFE  0086               	movwf	6
  4823  0AFF  0187               	clrf	7
  4824  0B00  1701               	bsf	1,6
  4825  0B01  0008               	return
  4826  0B02                     __end_of_USBConfigureEndpoint:	
  4827                           
  4828                           	psect	intentry
  4829  0004                     __pintentry:	
  4830 ;; *************** function _SYS_InterruptHigh *****************
  4831 ;; Defined at:
  4832 ;;		line 107 in file "system.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;		None
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;		None
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  1    wreg      void 
  4839 ;; Registers used:
  4840 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4848 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4849 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4850 ;;Total ram usage:        1 bytes
  4851 ;; Hardware stack levels used:    1
  4852 ;; Hardware stack levels required when called:    9
  4853 ;; This function calls:
  4854 ;;		_USBDeviceTasks
  4855 ;; This function is called by:
  4856 ;;		Interrupt level 1
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860  0004                     _SYS_InterruptHigh:	
  4861                           
  4862                           ;incstack = 0
  4863  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4864                           
  4865                           ; Regs used in _SYS_InterruptHigh: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4866  0005  3180               	pagesel	$
  4867  0006  0020               	movlb	0	; select bank0
  4868  0007  087F               	movf	127,w
  4869  0008  0021               	movlb	1	; select bank1
  4870  0009  00EB               	movwf	??_SYS_InterruptHigh^(0+128)
  4871                           
  4872                           ;system.c: 110: USBDeviceTasks();
  4873  000A  3181  2167         	fcall	_USBDeviceTasks
  4874  000C  0021               	movlb	1	; select bank1
  4875  000D  086B               	movf	??_SYS_InterruptHigh^(0+128),w
  4876  000E  0020               	movlb	0	; select bank0
  4877  000F  00FF               	movwf	127
  4878  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4879  0011  0009               	retfie
  4880  0012                     __end_of_SYS_InterruptHigh:	
  4881                           
  4882                           	psect	text18
  4883  0167                     __ptext18:	
  4884 ;; *************** function _USBDeviceTasks *****************
  4885 ;; Defined at:
  4886 ;;		line 477 in file "../lib/usb/src/usb_device.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;		None
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;  i               1   15[BANK0 ] unsigned char 
  4891 ;; Return value:  Size  Location     Type
  4892 ;;                  1    wreg      void 
  4893 ;; Registers used:
  4894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4901 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4902 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4903 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4904 ;;Total ram usage:        3 bytes
  4905 ;; Hardware stack levels used:    1
  4906 ;; Hardware stack levels required when called:    8
  4907 ;; This function calls:
  4908 ;;		_USBCtrlEPAllowStatusStage
  4909 ;;		_USBCtrlEPService
  4910 ;;		_USBIncrement1msInternalTimers
  4911 ;;		_USBStallHandler
  4912 ;;		_USBSuspend
  4913 ;;		_USBWakeFromSuspend
  4914 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4915 ;;		i1_USBDeviceInit
  4916 ;; This function is called by:
  4917 ;;		_SYS_InterruptHigh
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           
  4922                           ;psect for function _USBDeviceTasks
  4923  0167                     _USBDeviceTasks:	
  4924                           
  4925                           ;usb_device.c: 479: uint8_t i;
  4926                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  4927                           
  4928                           ;incstack = 0
  4929                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4930  0167  0021               	movlb	1	; select bank1
  4931  0168  0362               	decf	_USBDeviceState^(0+128),w	;volatile
  4932  0169  1D03               	btfss	3,2
  4933  016A  2976               	goto	i1l3796
  4934                           
  4935                           ;usb_device.c: 591: {
  4936                           ;usb_device.c: 601: if(!UCONbits.SE0)
  4937  016B  003D               	movlb	29	; select bank29
  4938  016C  1A8E               	btfsc	14,5	;volatile
  4939  016D  2976               	goto	i1l3796
  4940                           
  4941                           ;usb_device.c: 602: {
  4942                           ;usb_device.c: 608: {UIR = 0;};
  4943  016E  0190               	clrf	16	;volatile
  4944                           
  4945                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  4946  016F  1412               	bsf	18,0	;volatile
  4947                           
  4948                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  4949  0170  1612               	bsf	18,4	;volatile
  4950                           
  4951                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  4952  0171  3002               	movlw	2
  4953  0172  0021               	movlb	1	; select bank1
  4954  0173  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4955  0174  0869               	movf	??_USBDeviceTasks^(0+128),w
  4956  0175  00E2               	movwf	_USBDeviceState^(0+128)	;volatile
  4957  0176                     i1l3796:	
  4958                           
  4959                           ;usb_device.c: 617: }
  4960                           ;usb_device.c: 618: }
  4961                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4962  0176  003D               	movlb	29	; select bank29
  4963  0177  1910               	btfsc	16,2	;volatile
  4964  0178  1D12               	btfss	18,2	;volatile
  4965  0179  2983               	goto	i1l3804
  4966                           
  4967                           ;usb_device.c: 635: {
  4968                           ;usb_device.c: 636: (UIR &= 0xFB);
  4969  017A  30FB               	movlw	251
  4970  017B  0021               	movlb	1	; select bank1
  4971  017C  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4972  017D  0869               	movf	??_USBDeviceTasks^(0+128),w
  4973  017E  003D               	movlb	29	; select bank29
  4974  017F  0590               	andwf	16,f	;volatile
  4975                           
  4976                           ;usb_device.c: 640: USBWakeFromSuspend();
  4977  0180  3188  207A  3181   	fcall	_USBWakeFromSuspend
  4978  0183                     i1l3804:	
  4979                           
  4980                           ;usb_device.c: 642: }
  4981                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  4982  0183  003D               	movlb	29	; select bank29
  4983  0184  1C8E               	btfss	14,1	;volatile
  4984  0185  2989               	goto	i1l184
  4985                           
  4986                           ;usb_device.c: 648: {
  4987                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
  4988  0186  0020               	movlb	0	; select bank0
  4989  0187  1112               	bcf	18,2	;volatile
  4990                           
  4991                           ;usb_device.c: 650: return;
  4992  0188  0008               	return
  4993  0189                     i1l184:	
  4994                           
  4995                           ;usb_device.c: 651: }
  4996                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4997  0189  1810               	btfsc	16,0	;volatile
  4998  018A  1C12               	btfss	18,0	;volatile
  4999  018B  299A               	goto	i1l3818
  5000                           
  5001                           ;usb_device.c: 664: {
  5002                           ;usb_device.c: 665: USBDeviceInit();
  5003  018C  3184  249B  3181   	fcall	i1_USBDeviceInit
  5004                           
  5005                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  5006  018F  0021               	movlb	1	; select bank1
  5007  0190  1512               	bsf	18,2	;volatile
  5008                           
  5009                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  5010  0191  3004               	movlw	4
  5011  0192  00E9               	movwf	??_USBDeviceTasks^(0+128)
  5012  0193  0869               	movf	??_USBDeviceTasks^(0+128),w
  5013  0194  00E2               	movwf	_USBDeviceState^(0+128)	;volatile
  5014                           
  5015                           ;usb_device.c: 681: (UIR &= 0xFE);
  5016  0195  30FE               	movlw	254
  5017  0196  00E9               	movwf	??_USBDeviceTasks^(0+128)
  5018  0197  0869               	movf	??_USBDeviceTasks^(0+128),w
  5019  0198  003D               	movlb	29	; select bank29
  5020  0199  0590               	andwf	16,f	;volatile
  5021  019A                     i1l3818:	
  5022                           
  5023                           ;usb_device.c: 682: }
  5024                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  5025  019A  1A10               	btfsc	16,4	;volatile
  5026  019B  1E12               	btfss	18,4	;volatile
  5027  019C  29A0               	goto	i1l3824
  5028                           
  5029                           ;usb_device.c: 688: {
  5030                           ;usb_device.c: 694: USBSuspend();
  5031  019D  3188  203B  3181   	fcall	_USBSuspend
  5032  01A0                     i1l3824:	
  5033                           
  5034                           ;usb_device.c: 696: }
  5035                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  5036  01A0  003D               	movlb	29	; select bank29
  5037  01A1  1F10               	btfss	16,6	;volatile
  5038  01A2  29CA               	goto	i1l3840
  5039                           
  5040                           ;usb_device.c: 709: {
  5041                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  5042  01A3  1F12               	btfss	18,6	;volatile
  5043  01A4  29B5               	goto	i1l3830
  5044                           
  5045                           ;usb_device.c: 712: {
  5046                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  5047  01A5  3073               	movlw	115
  5048  01A6  0020               	movlb	0	; select bank0
  5049  01A7  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5050  01A8  3000               	movlw	0
  5051  01A9  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5052  01AA  3000               	movlw	0
  5053  01AB  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5054  01AC  3000               	movlw	0
  5055  01AD  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5056  01AE  3001               	movlw	1
  5057  01AF  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5058  01B0  3000               	movlw	0
  5059  01B1  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5060  01B2  3189  21CA  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5061  01B5                     i1l3830:	
  5062                           
  5063                           ;usb_device.c: 714: }
  5064                           ;usb_device.c: 715: (UIR &= 0xBF);
  5065  01B5  30BF               	movlw	191
  5066  01B6  0021               	movlb	1	; select bank1
  5067  01B7  00E9               	movwf	??_USBDeviceTasks^(0+128)
  5068  01B8  0869               	movf	??_USBDeviceTasks^(0+128),w
  5069  01B9  003D               	movlb	29	; select bank29
  5070  01BA  0590               	andwf	16,f	;volatile
  5071                           
  5072                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  5073  01BB  3197  27E8  3181   	fcall	_USBIncrement1msInternalTimers
  5074                           
  5075                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  5076  01BE  0023               	movlb	3	; select bank3
  5077  01BF  0859               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  5078  01C0  1903               	btfsc	3,2
  5079  01C1  29C4               	goto	i1l190
  5080                           
  5081                           ;usb_device.c: 736: {
  5082                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  5083  01C2  3001               	movlw	1
  5084  01C3  02D9               	subwf	_USBStatusStageTimeoutCounter^(0+384),f	;volatile
  5085  01C4                     i1l190:	
  5086                           
  5087                           ;usb_device.c: 738: }
  5088                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  5089  01C4  0859               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  5090  01C5  1D03               	btfss	3,2
  5091  01C6  29CA               	goto	i1l3840
  5092                           
  5093                           ;usb_device.c: 745: {
  5094                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  5095  01C7  318D  2583  3181   	fcall	_USBCtrlEPAllowStatusStage
  5096  01CA                     i1l3840:	
  5097                           
  5098                           ;usb_device.c: 747: }
  5099                           ;usb_device.c: 749: }
  5100                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  5101  01CA  003D               	movlb	29	; select bank29
  5102  01CB  1A90               	btfsc	16,5	;volatile
  5103  01CC  1E92               	btfss	18,5	;volatile
  5104  01CD  29D1               	goto	i1l3846
  5105                           
  5106                           ;usb_device.c: 752: {
  5107                           ;usb_device.c: 753: USBStallHandler();
  5108  01CE  3188  20E0  3181   	fcall	_USBStallHandler
  5109  01D1                     i1l3846:	
  5110                           
  5111                           ;usb_device.c: 754: }
  5112                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  5113  01D1  003D               	movlb	29	; select bank29
  5114  01D2  1890               	btfsc	16,1	;volatile
  5115  01D3  1C92               	btfss	18,1	;volatile
  5116  01D4  29E7               	goto	i1l3854
  5117                           
  5118                           ;usb_device.c: 757: {
  5119                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  5120  01D5  30FF               	movlw	255
  5121  01D6  0020               	movlb	0	; select bank0
  5122  01D7  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5123  01D8  307F               	movlw	127
  5124  01D9  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5125  01DA  3000               	movlw	0
  5126  01DB  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5127  01DC  3000               	movlw	0
  5128  01DD  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5129  01DE  3001               	movlw	1
  5130  01DF  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5131  01E0  3000               	movlw	0
  5132  01E1  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5133  01E2  3189  21CA  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5134                           
  5135                           ;usb_device.c: 759: {UEIR = 0;};
  5136  01E5  003D               	movlb	29	; select bank29
  5137  01E6  0193               	clrf	19	;volatile
  5138  01E7                     i1l3854:	
  5139                           
  5140                           ;usb_device.c: 767: }
  5141                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  5142  01E7  3004               	movlw	4
  5143  01E8  0021               	movlb	1	; select bank1
  5144  01E9  0262               	subwf	_USBDeviceState^(0+128),w	;volatile
  5145  01EA  1803               	skipnc
  5146  01EB  29EF               	goto	i1l194
  5147                           
  5148                           ;usb_device.c: 775: {
  5149                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  5150  01EC  0020               	movlb	0	; select bank0
  5151  01ED  1112               	bcf	18,2	;volatile
  5152                           
  5153                           ;usb_device.c: 777: return;
  5154  01EE  0008               	return
  5155  01EF                     i1l194:	
  5156                           
  5157                           ;usb_device.c: 778: }
  5158                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  5159  01EF  003D               	movlb	29	; select bank29
  5160  01F0  1D92               	btfss	18,3	;volatile
  5161  01F1  2A48               	goto	i1l195
  5162                           
  5163                           ;usb_device.c: 784: {
  5164                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  5165  01F2  0020               	movlb	0	; select bank0
  5166  01F3  01EF               	clrf	USBDeviceTasks@i
  5167  01F4  3004               	movlw	4
  5168  01F5  026F               	subwf	USBDeviceTasks@i,w
  5169  01F6  1803               	btfsc	3,0
  5170  01F7  2A48               	goto	i1l195
  5171  01F8                     i1l196:	
  5172                           
  5173                           ;usb_device.c: 786: {
  5174                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  5175  01F8  003D               	movlb	29	; select bank29
  5176  01F9  1D90               	btfss	16,3	;volatile
  5177  01FA  2A48               	goto	i1l195
  5178                           
  5179                           ;usb_device.c: 788: {
  5180                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  5181  01FB  080F               	movf	15,w	;volatile
  5182  01FC  0021               	movlb	1	; select bank1
  5183  01FD  00E9               	movwf	??_USBDeviceTasks^(0+128)
  5184  01FE  0869               	movf	??_USBDeviceTasks^(0+128),w
  5185  01FF  00E5               	movwf	_USTATcopy^(0+128)	;volatile
  5186                           
  5187                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  5188  0200  0C65               	rrf	_USTATcopy^(0+128),w	;volatile
  5189  0201  00E9               	movwf	??_USBDeviceTasks^(0+128)
  5190  0202  0CE9               	rrf	??_USBDeviceTasks^(0+128),f
  5191  0203  0C69               	rrf	??_USBDeviceTasks^(0+128),w
  5192  0204  390F               	andlw	15
  5193  0205  00EA               	movwf	(??_USBDeviceTasks+1)^(0+128)
  5194  0206  086A               	movf	(??_USBDeviceTasks+1)^(0+128),w
  5195  0207  0023               	movlb	3	; select bank3
  5196  0208  00E0               	movwf	_endpoint_number^(0+384)	;volatile
  5197                           
  5198                           ;usb_device.c: 793: (UIR &= 0xF7);
  5199  0209  30F7               	movlw	247
  5200  020A  0021               	movlb	1	; select bank1
  5201  020B  00E9               	movwf	??_USBDeviceTasks^(0+128)
  5202  020C  0869               	movf	??_USBDeviceTasks^(0+128),w
  5203  020D  003D               	movlb	29	; select bank29
  5204  020E  0590               	andwf	16,f	;volatile
  5205                           
  5206                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  5207  020F  0021               	movlb	1	; select bank1
  5208  0210  1965               	btfsc	_USTATcopy^(0+128),2	;volatile
  5209  0211  2A16               	goto	i1l3874
  5210                           
  5211                           ;usb_device.c: 799: {
  5212                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  5213  0212  0023               	movlb	3	; select bank3
  5214  0213  0860               	movf	_endpoint_number^(0+384),w	;volatile
  5215  0214  3EC3               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5216  0215  2A19               	goto	L4
  5217  0216                     i1l3874:	
  5218                           ;usb_device.c: 801: }
  5219                           
  5220                           
  5221                           ;usb_device.c: 802: else
  5222                           ;usb_device.c: 803: {
  5223                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  5224  0216  0023               	movlb	3	; select bank3
  5225  0217  0860               	movf	_endpoint_number^(0+384),w	;volatile
  5226  0218  3EC0               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5227  0219                     L4:	
  5228  0219  0086               	movwf	6
  5229  021A  3001               	movlw	1	; select bank3/4
  5230  021B  0087               	movwf	7
  5231  021C  0801               	movf	1,w
  5232  021D  3901               	andlw	1
  5233  021E  0021               	movlb	1	; select bank1
  5234  021F  00E9               	movwf	??_USBDeviceTasks^(0+128)
  5235  0220  3001               	movlw	1
  5236  0221  06E9               	xorwf	??_USBDeviceTasks^(0+128),f
  5237  0222  0801               	movf	1,w
  5238  0223  0669               	xorwf	??_USBDeviceTasks^(0+128),w
  5239  0224  39FE               	andlw	-2
  5240  0225  0669               	xorwf	??_USBDeviceTasks^(0+128),w
  5241  0226  0081               	movwf	1
  5242                           
  5243                           ;usb_device.c: 805: }
  5244                           ;usb_device.c: 810: if(endpoint_number == 0)
  5245  0227  0023               	movlb	3	; select bank3
  5246  0228  0860               	movf	_endpoint_number^(0+384),w	;volatile
  5247  0229  1D03               	btfss	3,2
  5248  022A  2A2F               	goto	i1l3880
  5249                           
  5250                           ;usb_device.c: 811: {
  5251                           ;usb_device.c: 812: USBCtrlEPService();
  5252  022B  318B  2355  3181   	fcall	_USBCtrlEPService
  5253                           
  5254                           ;usb_device.c: 813: }
  5255  022E  2A3E               	goto	i1l3882
  5256  022F                     i1l3880:	
  5257                           
  5258                           ;usb_device.c: 814: else
  5259                           ;usb_device.c: 815: {
  5260                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  5261  022F  3072               	movlw	114
  5262  0230  0020               	movlb	0	; select bank0
  5263  0231  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5264  0232  3000               	movlw	0
  5265  0233  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5266  0234  30E5               	movlw	low _USTATcopy
  5267  0235  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5268  0236  3000               	movlw	high _USTATcopy
  5269  0237  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5270  0238  3000               	movlw	0
  5271  0239  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5272  023A  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5273  023B  3189  21CA  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5274  023E                     i1l3882:	
  5275                           ;usb_device.c: 819: else
  5276                           ;usb_device.c: 820: {
  5277                           ;usb_device.c: 821: break;
  5278                           
  5279                           ;usb_device.c: 817: }
  5280                           ;usb_device.c: 818: }
  5281                           
  5282  023E  3001               	movlw	1
  5283  023F  0021               	movlb	1	; select bank1
  5284  0240  00E9               	movwf	??_USBDeviceTasks^(0+128)
  5285  0241  0869               	movf	??_USBDeviceTasks^(0+128),w
  5286  0242  0020               	movlb	0	; select bank0
  5287  0243  07EF               	addwf	USBDeviceTasks@i,f
  5288  0244  3004               	movlw	4
  5289  0245  026F               	subwf	USBDeviceTasks@i,w
  5290  0246  1C03               	skipc
  5291  0247  29F8               	goto	i1l196
  5292  0248                     i1l195:	
  5293                           
  5294                           ;usb_device.c: 822: }
  5295                           ;usb_device.c: 823: }
  5296                           ;usb_device.c: 824: }
  5297                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  5298  0248  0020               	movlb	0	; select bank0
  5299  0249  1112               	bcf	18,2	;volatile
  5300  024A  0008               	return
  5301  024B                     __end_of_USBDeviceTasks:	
  5302                           
  5303                           	psect	text19
  5304  049B                     __ptext19:	
  5305 ;; *************** function i1_USBDeviceInit *****************
  5306 ;; Defined at:
  5307 ;;		line 277 in file "../lib/usb/src/usb_device.c"
  5308 ;; Parameters:    Size  Location     Type
  5309 ;;		None
  5310 ;; Auto vars:     Size  Location     Type
  5311 ;;  USBDeviceIni    2    1[COMMON] PTR unsigned char 
  5312 ;;		 -> UEP1(1), 
  5313 ;;  USBDeviceIni    1    4[COMMON] unsigned char 
  5314 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
  5315 ;; Return value:  Size  Location     Type
  5316 ;;                  1    wreg      void 
  5317 ;; Registers used:
  5318 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5319 ;; Tracked objects:
  5320 ;;		On entry : 0/0
  5321 ;;		On exit  : 0/0
  5322 ;;		Unchanged: 0/0
  5323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5325 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5326 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5327 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5328 ;;Total ram usage:        5 bytes
  5329 ;; Hardware stack levels used:    1
  5330 ;; This function calls:
  5331 ;;		Nothing
  5332 ;; This function is called by:
  5333 ;;		_USBDeviceTasks
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           
  5338                           ;psect for function i1_USBDeviceInit
  5339  049B                     i1_USBDeviceInit:	
  5340                           
  5341                           ;usb_device.c: 279: uint8_t i;
  5342                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  5343                           
  5344                           ;incstack = 0
  5345                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  5346  049B  0021               	movlb	1	; select bank1
  5347  049C  1112               	bcf	18,2	;volatile
  5348                           
  5349                           ;usb_device.c: 285: ;
  5350                           ;usb_device.c: 288: {UEIR = 0;};
  5351  049D  003D               	movlb	29	; select bank29
  5352  049E  0193               	clrf	19	;volatile
  5353                           
  5354                           ;usb_device.c: 291: {UIR = 0;};
  5355  049F  0190               	clrf	16	;volatile
  5356                           
  5357                           ;usb_device.c: 294: UEP0 = 0;
  5358  04A0  0198               	clrf	24	;volatile
  5359                           
  5360                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  5361  04A1  300E               	movlw	14
  5362  04A2  00F2               	movwf	i1USBDeviceInit@p+1
  5363  04A3  3099               	movlw	153
  5364  04A4  00F1               	movwf	i1USBDeviceInit@p
  5365  04A5  01F3               	clrf	i1USBDeviceInit@i_821
  5366  04A6  3002               	movlw	2
  5367  04A7  0273               	subwf	i1USBDeviceInit@i_821,w
  5368  04A8  1803               	btfsc	3,0
  5369  04A9  2CBB               	goto	i1l3604
  5370  04AA                     i1l3596:	
  5371  04AA  0871               	movf	i1USBDeviceInit@p,w
  5372  04AB  0086               	movwf	6
  5373  04AC  0872               	movf	i1USBDeviceInit@p+1,w
  5374  04AD  0087               	movwf	7
  5375  04AE  0181               	clrf	1
  5376  04AF  3001               	movlw	1
  5377  04B0  07F1               	addwf	i1USBDeviceInit@p,f
  5378  04B1  3000               	movlw	0
  5379  04B2  3DF2               	addwfc	i1USBDeviceInit@p+1,f
  5380  04B3  3001               	movlw	1
  5381  04B4  00F0               	movwf	??i1_USBDeviceInit
  5382  04B5  0870               	movf	??i1_USBDeviceInit,w
  5383  04B6  07F3               	addwf	i1USBDeviceInit@i_821,f
  5384  04B7  3002               	movlw	2
  5385  04B8  0273               	subwf	i1USBDeviceInit@i_821,w
  5386  04B9  1C03               	skipc
  5387  04BA  2CAA               	goto	i1l3596
  5388  04BB                     i1l3604:	
  5389                           
  5390                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  5391  04BB  3016               	movlw	22
  5392  04BC  003D               	movlb	29	; select bank29
  5393  04BD  0091               	movwf	17	;volatile
  5394  04BE  309F               	movlw	159
  5395  04BF  0097               	movwf	23	;volatile
  5396  04C0  307B               	movlw	123
  5397  04C1  0092               	movwf	18	;volatile
  5398                           
  5399                           ;usb_device.c: 301: ;
  5400                           ;usb_device.c: 304: ;
  5401                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  5402  04C2  01F4               	clrf	i1USBDeviceInit@i
  5403  04C3  300C               	movlw	12
  5404  04C4  0274               	subwf	i1USBDeviceInit@i,w
  5405  04C5  1803               	btfsc	3,0
  5406  04C6  2CE0               	goto	i1l173
  5407  04C7                     i1l3612:	
  5408                           
  5409                           ;usb_device.c: 308: {
  5410                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  5411  04C7  0874               	movf	i1USBDeviceInit@i,w
  5412  04C8  00F0               	movwf	??i1_USBDeviceInit
  5413  04C9  3001               	movlw	1
  5414  04CA                     u288_25:	
  5415  04CA  35F0               	lslf	??i1_USBDeviceInit,f
  5416  04CB  3EFF               	addlw	-1
  5417  04CC  1D03               	skipz
  5418  04CD  2CCA               	goto	u288_25
  5419  04CE  3570               	lslf	??i1_USBDeviceInit,w
  5420  04CF  3E20               	addlw	32
  5421  04D0  0086               	movwf	6
  5422  04D1  0187               	clrf	7
  5423  04D2  3000               	movlw	0
  5424  04D3  3FC0               	movwi [0]fsr1
  5425  04D4  3000               	movlw	0
  5426  04D5  3FC1               	movwi [1]fsr1
  5427  04D6  3FC2               	movwi [2]fsr1
  5428  04D7  3FC3               	movwi [3]fsr1
  5429  04D8  3001               	movlw	1
  5430  04D9  00F0               	movwf	??i1_USBDeviceInit
  5431  04DA  0870               	movf	??i1_USBDeviceInit,w
  5432  04DB  07F4               	addwf	i1USBDeviceInit@i,f
  5433  04DC  300C               	movlw	12
  5434  04DD  0274               	subwf	i1USBDeviceInit@i,w
  5435  04DE  1C03               	skipc
  5436  04DF  2CC7               	goto	i1l3612
  5437  04E0                     i1l173:	
  5438                           
  5439                           ;usb_device.c: 310: }
  5440                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  5441  04E0  003D               	movlb	29	; select bank29
  5442  04E1  170E               	bsf	14,6	;volatile
  5443                           
  5444                           ;usb_device.c: 316: UADDR = 0x00;
  5445  04E2  0196               	clrf	22	;volatile
  5446                           
  5447                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  5448  04E3  120E               	bcf	14,4	;volatile
  5449                           
  5450                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  5451  04E4  130E               	bcf	14,6	;volatile
  5452  04E5                     i1l3624:	
  5453                           ;usb_device.c: 325: do
  5454                           
  5455                           
  5456                           ;usb_device.c: 326: {
  5457                           ;usb_device.c: 327: (UIR &= 0xF7);
  5458  04E5  30F7               	movlw	247
  5459  04E6  00F0               	movwf	??i1_USBDeviceInit
  5460  04E7  0870               	movf	??i1_USBDeviceInit,w
  5461  04E8  0590               	andwf	16,f	;volatile
  5462                           
  5463                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  5464  04E9  0023               	movlb	3	; select bank3
  5465  04EA  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  5466                           
  5467                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  5468  04EB  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  5469                           
  5470                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  5471  04EC  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  5472  04ED  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  5473                           
  5474                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  5475  04EE  003D               	movlb	29	; select bank29
  5476  04EF  1990               	btfsc	16,3	;volatile
  5477  04F0  2CE5               	goto	i1l3624
  5478                           
  5479                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  5480  04F1  3001               	movlw	1
  5481  04F2  00F0               	movwf	??i1_USBDeviceInit
  5482  04F3  0870               	movf	??i1_USBDeviceInit,w
  5483  04F4  0023               	movlb	3	; select bank3
  5484  04F5  00D7               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5485                           
  5486                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  5487  04F6  3001               	movlw	1
  5488  04F7  00F0               	movwf	??i1_USBDeviceInit
  5489  04F8  0870               	movf	??i1_USBDeviceInit,w
  5490  04F9  00D8               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5491                           
  5492                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  5493  04FA  01D4               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  5494                           
  5495                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  5496  04FB  01D5               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  5497                           
  5498                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  5499  04FC  01D3               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  5500                           
  5501                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  5502  04FD  01F4               	clrf	i1USBDeviceInit@i
  5503  04FE  3003               	movlw	3
  5504  04FF  0274               	subwf	i1USBDeviceInit@i,w
  5505  0500  1803               	btfsc	3,0
  5506  0501  2D26               	goto	i1l3652
  5507  0502                     i1l3646:	
  5508                           
  5509                           ;usb_device.c: 346: {
  5510                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  5511  0502  3574               	lslf	i1USBDeviceInit@i,w
  5512  0503  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  5513  0504  0086               	movwf	6
  5514  0505  3001               	movlw	1	; select bank3/4
  5515  0506  0087               	movwf	7
  5516  0507  3000               	movlw	0
  5517  0508  3FC0               	movwi [0]fsr1
  5518  0509  3FC1               	movwi [1]fsr1
  5519                           
  5520                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  5521  050A  3574               	lslf	i1USBDeviceInit@i,w
  5522  050B  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5523  050C  0086               	movwf	6
  5524  050D  3001               	movlw	1	; select bank3/4
  5525  050E  0087               	movwf	7
  5526  050F  3000               	movlw	0
  5527  0510  3FC0               	movwi [0]fsr1
  5528  0511  3FC1               	movwi [1]fsr1
  5529                           
  5530                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  5531  0512  0874               	movf	i1USBDeviceInit@i,w
  5532  0513  3EC0               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5533  0514  0086               	movwf	6
  5534  0515  3001               	movlw	1	; select bank3/4
  5535  0516  0087               	movwf	7
  5536  0517  0181               	clrf	1
  5537                           
  5538                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  5539  0518  0874               	movf	i1USBDeviceInit@i,w
  5540  0519  3EC3               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5541  051A  0086               	movwf	6
  5542  051B  3001               	movlw	1	; select bank3/4
  5543  051C  0087               	movwf	7
  5544  051D  0181               	clrf	1
  5545  051E  3001               	movlw	1
  5546  051F  00F0               	movwf	??i1_USBDeviceInit
  5547  0520  0870               	movf	??i1_USBDeviceInit,w
  5548  0521  07F4               	addwf	i1USBDeviceInit@i,f
  5549  0522  3003               	movlw	3
  5550  0523  0274               	subwf	i1USBDeviceInit@i,w
  5551  0524  1C03               	skipc
  5552  0525  2D02               	goto	i1l3646
  5553  0526                     i1l3652:	
  5554                           
  5555                           ;usb_device.c: 351: }
  5556                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5557  0526  3028               	movlw	40
  5558  0527  0023               	movlb	3	; select bank3
  5559  0528  00A7               	movwf	_pBDTEntryIn^(0+384)
  5560  0529  3000               	movlw	0
  5561  052A  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  5562                           
  5563                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  5564  052B  3016               	movlw	22
  5565  052C  003D               	movlb	29	; select bank29
  5566  052D  0098               	movwf	24	;volatile
  5567                           
  5568                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5569  052E  3000               	movlw	0
  5570  052F  0020               	movlb	0	; select bank0
  5571  0530  00A3               	movwf	35	;volatile
  5572  0531  3050               	movlw	80
  5573  0532  00A2               	movwf	34	;volatile
  5574                           
  5575                           ;usb_device.c: 359: BDT[0].CNT = 8;
  5576  0533  3008               	movlw	8
  5577  0534  00A1               	movwf	33	;volatile
  5578                           
  5579                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  5580  0535  3004               	movlw	4
  5581  0536  00F0               	movwf	??i1_USBDeviceInit
  5582  0537  0870               	movf	??i1_USBDeviceInit,w
  5583  0538  00A0               	movwf	32	;volatile
  5584                           
  5585                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  5586  0539  17A0               	bsf	32,7	;volatile
  5587                           
  5588                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  5589  053A  0023               	movlb	3	; select bank3
  5590  053B  01EC               	clrf	_USBActiveConfiguration^(0+384)	;volatile
  5591                           
  5592                           ;usb_device.c: 366: USB1msTickCount = 0;
  5593  053C  3000               	movlw	0
  5594  053D  00BF               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
  5595  053E  3000               	movlw	0
  5596  053F  00BE               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
  5597  0540  3000               	movlw	0
  5598  0541  00BD               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
  5599  0542  3000               	movlw	0
  5600  0543  00BC               	movwf	_USB1msTickCount^(0+384)	;volatile
  5601                           
  5602                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  5603  0544  01DA               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5604                           
  5605                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  5606  0545  0021               	movlb	1	; select bank1
  5607  0546  01E2               	clrf	_USBDeviceState^(0+128)	;volatile
  5608  0547  0008               	return
  5609  0548                     __end_ofi1_USBDeviceInit:	
  5610                           
  5611                           	psect	text20
  5612  087A                     __ptext20:	
  5613 ;; *************** function _USBWakeFromSuspend *****************
  5614 ;; Defined at:
  5615 ;;		line 2303 in file "../lib/usb/src/usb_device.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;		None
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;		None
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  1    wreg      void 
  5622 ;; Registers used:
  5623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5631 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5632 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5633 ;;Total ram usage:        1 bytes
  5634 ;; Hardware stack levels used:    1
  5635 ;; Hardware stack levels required when called:    4
  5636 ;; This function calls:
  5637 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5638 ;; This function is called by:
  5639 ;;		_USBDeviceTasks
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           
  5644                           ;psect for function _USBWakeFromSuspend
  5645  087A                     _USBWakeFromSuspend:	
  5646                           
  5647                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  5648                           
  5649                           ;incstack = 0
  5650                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5651  087A  0023               	movlb	3	; select bank3
  5652  087B  01D3               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  5653                           
  5654                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  5655  087C  3074               	movlw	116
  5656  087D  0020               	movlb	0	; select bank0
  5657  087E  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5658  087F  3000               	movlw	0
  5659  0880  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5660  0881  3000               	movlw	0
  5661  0882  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5662  0883  3000               	movlw	0
  5663  0884  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5664  0885  3000               	movlw	0
  5665  0886  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5666  0887  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5667  0888  3189  21CA  3188   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5668                           
  5669                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  5670  088B  003D               	movlb	29	; select bank29
  5671  088C  108E               	bcf	14,1	;volatile
  5672                           
  5673                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  5674  088D  1112               	bcf	18,2	;volatile
  5675  088E                     i1l3446:	
  5676                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  5677                           
  5678  088E  1D10               	btfss	16,2	;volatile
  5679  088F  2897               	goto	i1l3448
  5680                           
  5681                           ;usb_device.c: 2343: {
  5682                           ;usb_device.c: 2344: (UIR &= 0xFB);
  5683  0890  30FB               	movlw	251
  5684  0891  0020               	movlb	0	; select bank0
  5685  0892  00E6               	movwf	??_USBWakeFromSuspend
  5686  0893  0866               	movf	??_USBWakeFromSuspend,w
  5687  0894  003D               	movlb	29	; select bank29
  5688  0895  0590               	andwf	16,f	;volatile
  5689  0896  288E               	goto	i1l3446
  5690  0897                     i1l3448:	
  5691                           
  5692                           ;usb_device.c: 2345: }
  5693                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  5694  0897  0023               	movlb	3	; select bank3
  5695  0898  01DA               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5696  0899  0008               	return
  5697  089A                     __end_of_USBWakeFromSuspend:	
  5698                           
  5699                           	psect	text21
  5700  083B                     __ptext21:	
  5701 ;; *************** function _USBSuspend *****************
  5702 ;; Defined at:
  5703 ;;		line 2245 in file "../lib/usb/src/usb_device.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;		None
  5706 ;; Auto vars:     Size  Location     Type
  5707 ;;		None
  5708 ;; Return value:  Size  Location     Type
  5709 ;;                  1    wreg      void 
  5710 ;; Registers used:
  5711 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/0
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5719 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5720 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5721 ;;Total ram usage:        1 bytes
  5722 ;; Hardware stack levels used:    1
  5723 ;; Hardware stack levels required when called:    4
  5724 ;; This function calls:
  5725 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5726 ;; This function is called by:
  5727 ;;		_USBDeviceTasks
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           
  5731                           
  5732                           ;psect for function _USBSuspend
  5733  083B                     _USBSuspend:	
  5734                           
  5735                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  5736                           
  5737                           ;incstack = 0
  5738                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5739  083B  003D               	movlb	29	; select bank29
  5740  083C  1512               	bsf	18,2	;volatile
  5741                           
  5742                           ;usb_device.c: 2271: (UIR &= 0xEF);
  5743  083D  30EF               	movlw	239
  5744  083E  0020               	movlb	0	; select bank0
  5745  083F  00E6               	movwf	??_USBSuspend
  5746  0840  0866               	movf	??_USBSuspend,w
  5747  0841  003D               	movlb	29	; select bank29
  5748  0842  0590               	andwf	16,f	;volatile
  5749                           
  5750                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  5751  0843  148E               	bsf	14,1	;volatile
  5752                           
  5753                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  5754  0844  3001               	movlw	1
  5755  0845  0020               	movlb	0	; select bank0
  5756  0846  00E6               	movwf	??_USBSuspend
  5757  0847  0866               	movf	??_USBSuspend,w
  5758  0848  0023               	movlb	3	; select bank3
  5759  0849  00D3               	movwf	_USBBusIsSuspended^(0+384)	;volatile
  5760                           
  5761                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  5762  084A  01DA               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5763                           
  5764                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  5765  084B  3075               	movlw	117
  5766  084C  0020               	movlb	0	; select bank0
  5767  084D  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5768  084E  3000               	movlw	0
  5769  084F  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5770  0850  3000               	movlw	0
  5771  0851  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5772  0852  3000               	movlw	0
  5773  0853  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5774  0854  3000               	movlw	0
  5775  0855  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5776  0856  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5777  0857  3189  21CA         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5778  0859  0008               	return
  5779  085A                     __end_of_USBSuspend:	
  5780                           
  5781                           	psect	text22
  5782  08E0                     __ptext22:	
  5783 ;; *************** function _USBStallHandler *****************
  5784 ;; Defined at:
  5785 ;;		line 2202 in file "../lib/usb/src/usb_device.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;		None
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;		None
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  1    wreg      void 
  5792 ;; Registers used:
  5793 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5801 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5802 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5803 ;;Total ram usage:        1 bytes
  5804 ;; Hardware stack levels used:    1
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_USBDeviceTasks
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           
  5813                           ;psect for function _USBStallHandler
  5814  08E0                     _USBStallHandler:	
  5815                           
  5816                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  5817                           
  5818                           ;incstack = 0
  5819                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  5820  08E0  003D               	movlb	29	; select bank29
  5821  08E1  1C18               	btfss	24,0	;volatile
  5822  08E2  2902               	goto	i1l3480
  5823                           
  5824                           ;usb_device.c: 2215: {
  5825                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  5826  08E3  0021               	movlb	1	; select bank1
  5827  08E4  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5828  08E5  0086               	movwf	6
  5829  08E6  0187               	clrf	7
  5830  08E7  3080               	movlw	128
  5831  08E8  0601               	xorwf	1,w
  5832  08E9  1D03               	btfss	3,2
  5833  08EA  2900               	goto	i1l3478
  5834  08EB  0023               	movlb	3	; select bank3
  5835  08EC  0827               	movf	_pBDTEntryIn^(0+384),w
  5836  08ED  0086               	movwf	6
  5837  08EE  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5838  08EF  0087               	movwf	7
  5839  08F0  3084               	movlw	132
  5840  08F1  0601               	xorwf	1,w
  5841  08F2  1D03               	btfss	3,2
  5842  08F3  2900               	goto	i1l3478
  5843                           
  5844                           ;usb_device.c: 2218: {
  5845                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5846  08F4  300C               	movlw	12
  5847  08F5  00F0               	movwf	??_USBStallHandler
  5848  08F6  0021               	movlb	1	; select bank1
  5849  08F7  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5850  08F8  0086               	movwf	6
  5851  08F9  0187               	clrf	7
  5852  08FA  0870               	movf	??_USBStallHandler,w
  5853  08FB  0081               	movwf	1
  5854                           
  5855                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  5856  08FC  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5857  08FD  0086               	movwf	6
  5858  08FE  0187               	clrf	7
  5859  08FF  1781               	bsf	1,7
  5860  0900                     i1l3478:	
  5861                           
  5862                           ;usb_device.c: 2222: }
  5863                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  5864  0900  003D               	movlb	29	; select bank29
  5865  0901  1018               	bcf	24,0	;volatile
  5866  0902                     i1l3480:	
  5867                           
  5868                           ;usb_device.c: 2224: }
  5869                           ;usb_device.c: 2226: (UIR &= 0xDF);
  5870  0902  30DF               	movlw	223
  5871  0903  00F0               	movwf	??_USBStallHandler
  5872  0904  0870               	movf	??_USBStallHandler,w
  5873  0905  0590               	andwf	16,f	;volatile
  5874  0906  0008               	return
  5875  0907                     __end_of_USBStallHandler:	
  5876                           
  5877                           	psect	text23
  5878  17E8                     __ptext23:	
  5879 ;; *************** function _USBIncrement1msInternalTimers *****************
  5880 ;; Defined at:
  5881 ;;		line 3025 in file "../lib/usb/src/usb_device.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;		None
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;		None
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  1    wreg      void 
  5888 ;; Registers used:
  5889 ;;		wreg, status,2, status,0
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5897 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5898 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5899 ;;Total ram usage:        1 bytes
  5900 ;; Hardware stack levels used:    1
  5901 ;; This function calls:
  5902 ;;		Nothing
  5903 ;; This function is called by:
  5904 ;;		_USBDeviceTasks
  5905 ;; This function uses a non-reentrant model
  5906 ;;
  5907                           
  5908                           
  5909                           ;psect for function _USBIncrement1msInternalTimers
  5910  17E8                     _USBIncrement1msInternalTimers:	
  5911                           
  5912                           ;usb_device.c: 3033: USB1msTickCount++;
  5913                           
  5914                           ;incstack = 0
  5915                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  5916  17E8  3001               	movlw	1
  5917  17E9  0023               	movlb	3	; select bank3
  5918  17EA  07BC               	addwf	_USB1msTickCount^(0+384),f	;volatile
  5919  17EB  3000               	movlw	0
  5920  17EC  3DBD               	addwfc	(_USB1msTickCount+1)^(0+384),f	;volatile
  5921  17ED  3000               	movlw	0
  5922  17EE  3DBE               	addwfc	(_USB1msTickCount+2)^(0+384),f	;volatile
  5923  17EF  3000               	movlw	0
  5924  17F0  3DBF               	addwfc	(_USB1msTickCount+3)^(0+384),f	;volatile
  5925                           
  5926                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  5927  17F1  0853               	movf	_USBBusIsSuspended^(0+384),w	;volatile
  5928  17F2  1D03               	btfss	3,2
  5929  17F3  0008               	return
  5930                           
  5931                           ;usb_device.c: 3035: {
  5932                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  5933  17F4  3001               	movlw	1
  5934  17F5  00F0               	movwf	??_USBIncrement1msInternalTimers
  5935  17F6  0870               	movf	??_USBIncrement1msInternalTimers,w
  5936  17F7  07DA               	addwf	_USBTicksSinceSuspendEnd^(0+384),f	;volatile
  5937                           
  5938                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  5939  17F8  085A               	movf	_USBTicksSinceSuspendEnd^(0+384),w	;volatile
  5940  17F9  1D03               	btfss	3,2
  5941  17FA  0008               	return
  5942                           
  5943                           ;usb_device.c: 3039: {
  5944                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  5945  17FB  30FF               	movlw	255
  5946  17FC  00F0               	movwf	??_USBIncrement1msInternalTimers
  5947  17FD  0870               	movf	??_USBIncrement1msInternalTimers,w
  5948  17FE  00DA               	movwf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5949  17FF  0008               	return
  5950  1800                     __end_of_USBIncrement1msInternalTimers:	
  5951                           
  5952                           	psect	text24
  5953  0B55                     __ptext24:	
  5954 ;; *************** function _USBCtrlEPService *****************
  5955 ;; Defined at:
  5956 ;;		line 2372 in file "../lib/usb/src/usb_device.c"
  5957 ;; Parameters:    Size  Location     Type
  5958 ;;		None
  5959 ;; Auto vars:     Size  Location     Type
  5960 ;;		None
  5961 ;; Return value:  Size  Location     Type
  5962 ;;                  1    wreg      void 
  5963 ;; Registers used:
  5964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5965 ;; Tracked objects:
  5966 ;;		On entry : 0/0
  5967 ;;		On exit  : 0/0
  5968 ;;		Unchanged: 0/0
  5969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5972 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5973 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5974 ;;Total ram usage:        3 bytes
  5975 ;; Hardware stack levels used:    1
  5976 ;; Hardware stack levels required when called:    7
  5977 ;; This function calls:
  5978 ;;		_USBCtrlTrfInHandler
  5979 ;;		_USBCtrlTrfOutHandler
  5980 ;;		_USBCtrlTrfSetupHandler
  5981 ;; This function is called by:
  5982 ;;		_USBDeviceTasks
  5983 ;; This function uses a non-reentrant model
  5984 ;;
  5985                           
  5986                           
  5987                           ;psect for function _USBCtrlEPService
  5988  0B55                     _USBCtrlEPService:	
  5989                           
  5990                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  5991                           
  5992                           ;incstack = 0
  5993                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5994  0B55  302D               	movlw	45
  5995  0B56  0021               	movlb	1	; select bank1
  5996  0B57  00E6               	movwf	??_USBCtrlEPService^(0+128)
  5997  0B58  0866               	movf	??_USBCtrlEPService^(0+128),w
  5998  0B59  0023               	movlb	3	; select bank3
  5999  0B5A  00D9               	movwf	_USBStatusStageTimeoutCounter^(0+384)	;volatile
  6000                           
  6001                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  6002  0B5B  0021               	movlb	1	; select bank1
  6003  0B5C  0865               	movf	_USTATcopy^(0+128),w	;volatile
  6004  0B5D  39FD               	andlw	253
  6005  0B5E  1D03               	btfss	3,2
  6006  0B5F  2B9E               	goto	i1l3500
  6007                           
  6008                           ;usb_device.c: 2383: {
  6009                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  6010  0B60  3665               	lsrf	_USTATcopy^(0+128),w	;volatile
  6011  0B61  393F               	andlw	63
  6012  0B62  00E6               	movwf	??_USBCtrlEPService^(0+128)
  6013  0B63  3001               	movlw	1
  6014  0B64                     u275_25:	
  6015  0B64  35E6               	lslf	??_USBCtrlEPService^(0+128),f
  6016  0B65  3EFF               	addlw	-1
  6017  0B66  1D03               	skipz
  6018  0B67  2B64               	goto	u275_25
  6019  0B68  3566               	lslf	??_USBCtrlEPService^(0+128),w
  6020  0B69  3E20               	addlw	32
  6021  0B6A  00E7               	movwf	(??_USBCtrlEPService+1)^(0+128)
  6022  0B6B  0867               	movf	(??_USBCtrlEPService+1)^(0+128),w
  6023  0B6C  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  6024                           
  6025                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6026  0B6D  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6027  0B6E  00E0               	movwf	_pBDTEntryEP0OutNext^(0+128)
  6028  0B6F  39FF               	andlw	255
  6029  0B70  1D03               	skipz
  6030  0B71  3000               	movlw	0
  6031  0B72  00E1               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  6032                           
  6033                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  6034  0B73  3004               	movlw	4
  6035  0B74  0660               	xorwf	_pBDTEntryEP0OutNext^(0+128),w
  6036  0B75  00E0               	movwf	_pBDTEntryEP0OutNext^(0+128)
  6037  0B76  3000               	movlw	0
  6038  0B77  0661               	xorwf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6039  0B78  00E1               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  6040                           
  6041                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  6042  0B79  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6043  0B7A  0086               	movwf	6
  6044  0B7B  0187               	clrf	7
  6045  0B7C  0C01               	rrf	1,w
  6046  0B7D  0C89               	rrf	9,f
  6047  0B7E  390F               	andlw	15
  6048  0B7F  3A0D               	xorlw	13
  6049  0B80  1D03               	skipz
  6050  0B81  2B9B               	goto	i1l3498
  6051                           
  6052                           ;usb_device.c: 2400: {
  6053                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
  6054  0B82  3050               	movlw	80
  6055  0B83  0086               	movwf	6
  6056  0B84  0187               	clrf	7
  6057  0B85  0021               	movlb	1	; select bank1
  6058  0B86  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  6059  0B87  3E02               	addlw	2
  6060  0B88  0084               	movwf	4
  6061  0B89  0185               	clrf	5
  6062  0B8A  3F00               	moviw [0]fsr0
  6063  0B8B  00E6               	movwf	??_USBCtrlEPService^(0+128)
  6064  0B8C  3F01               	moviw [1]fsr0
  6065  0B8D  00E7               	movwf	(??_USBCtrlEPService^(0+128)+1)
  6066  0B8E  0866               	movf	??_USBCtrlEPService^(0+128),w
  6067  0B8F  0084               	movwf	4
  6068  0B90  0867               	movf	(??_USBCtrlEPService+1)^(0+128),w
  6069  0B91  0085               	movwf	5
  6070  0B92  3008               	movlw	8
  6071  0B93  00E8               	movwf	(??_USBCtrlEPService+2)^(0+128)
  6072  0B94                     u277_2m0:	
  6073  0B94  0012               	moviw fsr0++
  6074  0B95  001E               	movwi fsr1++
  6075  0B96  0BE8               	decfsz	(??_USBCtrlEPService+2)^(0+128),f
  6076  0B97  2B94               	goto	u277_2m0
  6077                           
  6078                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  6079  0B98  318B  2302         	fcall	_USBCtrlTrfSetupHandler
  6080                           
  6081                           ;usb_device.c: 2409: }
  6082  0B9A  0008               	return
  6083  0B9B                     i1l3498:	
  6084                           
  6085                           ;usb_device.c: 2410: else
  6086                           ;usb_device.c: 2411: {
  6087                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
  6088  0B9B  3189  2193         	fcall	_USBCtrlTrfOutHandler
  6089                           
  6090                           ;usb_device.c: 2414: }
  6091                           ;usb_device.c: 2415: }
  6092  0B9D  0008               	return
  6093  0B9E                     i1l3500:	
  6094                           
  6095                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  6096  0B9E  30FD               	movlw	253
  6097  0B9F  0021               	movlb	1	; select bank1
  6098  0BA0  0565               	andwf	_USTATcopy^(0+128),w	;volatile
  6099  0BA1  00E6               	movwf	??_USBCtrlEPService^(0+128)
  6100  0BA2  3004               	movlw	4
  6101  0BA3  0666               	xorwf	??_USBCtrlEPService^(0+128),w
  6102  0BA4  1D03               	btfss	3,2
  6103  0BA5  0008               	return
  6104                           
  6105                           ;usb_device.c: 2417: {
  6106                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  6107  0BA6  3187  2793         	fcall	_USBCtrlTrfInHandler
  6108  0BA8  0008               	return
  6109  0BA9                     __end_of_USBCtrlEPService:	
  6110                           
  6111                           	psect	text25
  6112  0B02                     __ptext25:	
  6113 ;; *************** function _USBCtrlTrfSetupHandler *****************
  6114 ;; Defined at:
  6115 ;;		line 2465 in file "../lib/usb/src/usb_device.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;		None
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;		None
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  1    wreg      void 
  6122 ;; Registers used:
  6123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6131 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6132 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6133 ;;Total ram usage:        1 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; Hardware stack levels required when called:    6
  6136 ;; This function calls:
  6137 ;;		_USBCheckStdRequest
  6138 ;;		_USBCtrlEPServiceComplete
  6139 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6140 ;; This function is called by:
  6141 ;;		_USBCtrlEPService
  6142 ;; This function uses a non-reentrant model
  6143 ;;
  6144                           
  6145                           
  6146                           ;psect for function _USBCtrlTrfSetupHandler
  6147  0B02                     _USBCtrlTrfSetupHandler:	
  6148                           
  6149                           ;usb_device.c: 2470: shortPacketStatus = 0;
  6150                           
  6151                           ;incstack = 0
  6152                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6153  0B02  0023               	movlb	3	; select bank3
  6154  0B03  01E2               	clrf	_shortPacketStatus^(0+384)	;volatile
  6155                           
  6156                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  6157  0B04  01D6               	clrf	_USBDeferStatusStagePacket^(0+384)	;volatile
  6158                           
  6159                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  6160  0B05  01D4               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  6161                           
  6162                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  6163  0B06  01D5               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  6164                           
  6165                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  6166  0B07  01CE               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  6167                           
  6168                           ;usb_device.c: 2475: controlTransferState = 0;
  6169  0B08  0021               	movlb	1	; select bank1
  6170  0B09  01E3               	clrf	_controlTransferState^(0+128)	;volatile
  6171                           
  6172                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  6173  0B0A  307F               	movlw	127
  6174  0B0B  0020               	movlb	0	; select bank0
  6175  0B0C  00EE               	movwf	??_USBCtrlTrfSetupHandler
  6176  0B0D  0023               	movlb	3	; select bank3
  6177  0B0E  0827               	movf	_pBDTEntryIn^(0+384),w
  6178  0B0F  0086               	movwf	6
  6179  0B10  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6180  0B11  0087               	movwf	7
  6181  0B12  0020               	movlb	0	; select bank0
  6182  0B13  086E               	movf	??_USBCtrlTrfSetupHandler,w
  6183  0B14  0581               	andwf	1,f
  6184                           
  6185                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  6186  0B15  3004               	movlw	4
  6187  0B16  0023               	movlb	3	; select bank3
  6188  0B17  0627               	xorwf	_pBDTEntryIn^(0+384),w
  6189  0B18  00A7               	movwf	_pBDTEntryIn^(0+384)
  6190  0B19  3000               	movlw	0
  6191  0B1A  0628               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  6192  0B1B  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  6193                           
  6194                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  6195  0B1C  307F               	movlw	127
  6196  0B1D  0020               	movlb	0	; select bank0
  6197  0B1E  00EE               	movwf	??_USBCtrlTrfSetupHandler
  6198  0B1F  0023               	movlb	3	; select bank3
  6199  0B20  0827               	movf	_pBDTEntryIn^(0+384),w
  6200  0B21  0086               	movwf	6
  6201  0B22  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6202  0B23  0087               	movwf	7
  6203  0B24  0020               	movlb	0	; select bank0
  6204  0B25  086E               	movf	??_USBCtrlTrfSetupHandler,w
  6205  0B26  0581               	andwf	1,f
  6206                           
  6207                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  6208  0B27  3004               	movlw	4
  6209  0B28  0023               	movlb	3	; select bank3
  6210  0B29  0627               	xorwf	_pBDTEntryIn^(0+384),w
  6211  0B2A  00A7               	movwf	_pBDTEntryIn^(0+384)
  6212  0B2B  3000               	movlw	0
  6213  0B2C  0628               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  6214  0B2D  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  6215                           
  6216                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  6217  0B2E  307F               	movlw	127
  6218  0B2F  0020               	movlb	0	; select bank0
  6219  0B30  00EE               	movwf	??_USBCtrlTrfSetupHandler
  6220  0B31  0021               	movlb	1	; select bank1
  6221  0B32  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6222  0B33  0086               	movwf	6
  6223  0B34  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6224  0B35  0087               	movwf	7
  6225  0B36  0020               	movlb	0	; select bank0
  6226  0B37  086E               	movf	??_USBCtrlTrfSetupHandler,w
  6227  0B38  0581               	andwf	1,f
  6228                           
  6229                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  6230  0B39  0023               	movlb	3	; select bank3
  6231  0B3A  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  6232                           
  6233                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  6234  0B3B  01B6               	clrf	(_inPipes^(0+384)+3)	;volatile
  6235  0B3C  01B7               	clrf	((_inPipes+1)^(0+384)+3)	;volatile
  6236                           
  6237                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  6238  0B3D  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  6239                           
  6240                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  6241  0B3E  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  6242  0B3F  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  6243                           
  6244                           ;usb_device.c: 2500: USBCheckStdRequest();
  6245  0B40  318C  24B9  318B   	fcall	_USBCheckStdRequest
  6246                           
  6247                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  6248  0B43  3000               	movlw	0
  6249  0B44  0020               	movlb	0	; select bank0
  6250  0B45  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6251  0B46  3003               	movlw	3
  6252  0B47  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6253  0B48  3000               	movlw	0
  6254  0B49  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6255  0B4A  3000               	movlw	0
  6256  0B4B  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  6257  0B4C  3000               	movlw	0
  6258  0B4D  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6259  0B4E  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6260  0B4F  3189  21CA  318B   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6261                           
  6262                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  6263  0B52  3185  25E9         	fcall	_USBCtrlEPServiceComplete
  6264  0B54  0008               	return
  6265  0B55                     __end_of_USBCtrlTrfSetupHandler:	
  6266                           
  6267                           	psect	text26
  6268  05E9                     __ptext26:	
  6269 ;; *************** function _USBCtrlEPServiceComplete *****************
  6270 ;; Defined at:
  6271 ;;		line 1616 in file "../lib/usb/src/usb_device.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;		None
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;		None
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  1    wreg      void 
  6278 ;; Registers used:
  6279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6287 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6288 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6289 ;;Total ram usage:        2 bytes
  6290 ;; Hardware stack levels used:    1
  6291 ;; Hardware stack levels required when called:    2
  6292 ;; This function calls:
  6293 ;;		_USBCtrlEPAllowDataStage
  6294 ;;		_USBCtrlEPAllowStatusStage
  6295 ;; This function is called by:
  6296 ;;		_USBCtrlTrfSetupHandler
  6297 ;; This function uses a non-reentrant model
  6298 ;;
  6299                           
  6300                           
  6301                           ;psect for function _USBCtrlEPServiceComplete
  6302  05E9                     _USBCtrlEPServiceComplete:	
  6303                           
  6304                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  6305                           
  6306                           ;incstack = 0
  6307                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6308  05E9  003D               	movlb	29	; select bank29
  6309  05EA  120E               	bcf	14,4	;volatile
  6310                           
  6311                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  6312  05EB  0023               	movlb	3	; select bank3
  6313  05EC  1BB5               	btfsc	(_inPipes^(0+384)+2),7	;volatile
  6314  05ED  2E31               	goto	i1l258
  6315                           
  6316                           ;usb_device.c: 1629: {
  6317                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  6318  05EE  1FA2               	btfss	(_outPipes^(0+384)+2),7	;volatile
  6319  05EF  2DFF               	goto	i1l3210
  6320                           
  6321                           ;usb_device.c: 1631: {
  6322                           ;usb_device.c: 1632: controlTransferState = 2;
  6323  05F0  3002               	movlw	2
  6324  05F1  00F5               	movwf	??_USBCtrlEPServiceComplete
  6325  05F2  0875               	movf	??_USBCtrlEPServiceComplete,w
  6326  05F3  0021               	movlb	1	; select bank1
  6327  05F4  00E3               	movwf	_controlTransferState^(0+128)	;volatile
  6328                           
  6329                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  6330  05F5  0023               	movlb	3	; select bank3
  6331  05F6  0855               	movf	_USBDeferOUTDataStagePackets^(0+384),w	;volatile
  6332  05F7  1D03               	btfss	3,2
  6333  05F8  2DFB               	goto	i1l3206
  6334                           
  6335                           ;usb_device.c: 1644: {
  6336                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  6337  05F9  318B  23FE         	fcall	_USBCtrlEPAllowDataStage
  6338  05FB                     i1l3206:	
  6339                           
  6340                           ;usb_device.c: 1646: }
  6341                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  6342  05FB  0023               	movlb	3	; select bank3
  6343  05FC  01D8               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  6344                           
  6345                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  6346  05FD  01D7               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  6347                           
  6348                           ;usb_device.c: 1652: }
  6349  05FE  0008               	return
  6350  05FF                     i1l3210:	
  6351                           
  6352                           ;usb_device.c: 1653: else
  6353                           ;usb_device.c: 1654: {
  6354                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  6355  05FF  0021               	movlb	1	; select bank1
  6356  0600  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6357  0601  3E01               	addlw	1
  6358  0602  00F5               	movwf	??_USBCtrlEPServiceComplete
  6359  0603  3000               	movlw	0
  6360  0604  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6361  0605  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  6362  0606  0875               	movf	??_USBCtrlEPServiceComplete,w
  6363  0607  0086               	movwf	6
  6364  0608  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  6365  0609  0087               	movwf	7
  6366  060A  3008               	movlw	8
  6367  060B  0081               	movwf	1
  6368                           
  6369                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6370  060C  3050               	movlw	80
  6371  060D  00F5               	movwf	??_USBCtrlEPServiceComplete
  6372  060E  3000               	movlw	0
  6373  060F  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  6374  0610  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6375  0611  0086               	movwf	6
  6376  0612  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6377  0613  0087               	movwf	7
  6378  0614  3142               	addfsr 1,2
  6379  0615  0875               	movf	??_USBCtrlEPServiceComplete,w
  6380  0616  3FC0               	movwi [0]fsr1
  6381  0617  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  6382  0618  3FC1               	movwi [1]fsr1
  6383                           
  6384                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6385  0619  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6386  061A  0086               	movwf	6
  6387  061B  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6388  061C  0087               	movwf	7
  6389  061D  300C               	movlw	12
  6390  061E  0081               	movwf	1
  6391                           
  6392                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6393  061F  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6394  0620  0086               	movwf	6
  6395  0621  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6396  0622  0087               	movwf	7
  6397  0623  1781               	bsf	1,7
  6398                           
  6399                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  6400  0624  0023               	movlb	3	; select bank3
  6401  0625  0827               	movf	_pBDTEntryIn^(0+384),w
  6402  0626  0086               	movwf	6
  6403  0627  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6404  0628  0087               	movwf	7
  6405  0629  3004               	movlw	4
  6406  062A  0081               	movwf	1
  6407                           
  6408                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6409  062B  0827               	movf	_pBDTEntryIn^(0+384),w
  6410  062C  0086               	movwf	6
  6411  062D  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6412  062E  0087               	movwf	7
  6413  062F  1781               	bsf	1,7
  6414                           
  6415                           ;usb_device.c: 1665: }
  6416                           ;usb_device.c: 1666: }
  6417  0630  0008               	return
  6418  0631                     i1l258:	
  6419                           
  6420                           ;usb_device.c: 1667: else
  6421                           ;usb_device.c: 1668: {
  6422                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  6423  0631  0020               	movlb	0	; select bank0
  6424  0632  1FD0               	btfss	80,7	;volatile
  6425  0633  2E49               	goto	i1l3236
  6426                           
  6427                           ;usb_device.c: 1670: {
  6428                           ;usb_device.c: 1671: controlTransferState = 1;
  6429  0634  3001               	movlw	1
  6430  0635  00F5               	movwf	??_USBCtrlEPServiceComplete
  6431  0636  0875               	movf	??_USBCtrlEPServiceComplete,w
  6432  0637  0021               	movlb	1	; select bank1
  6433  0638  00E3               	movwf	_controlTransferState^(0+128)	;volatile
  6434                           
  6435                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  6436  0639  0023               	movlb	3	; select bank3
  6437  063A  0854               	movf	_USBDeferINDataStagePackets^(0+384),w	;volatile
  6438  063B  1D03               	btfss	3,2
  6439  063C  2E40               	goto	i1l3228
  6440                           
  6441                           ;usb_device.c: 1686: {
  6442                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  6443  063D  318B  23FE  3185   	fcall	_USBCtrlEPAllowDataStage
  6444  0640                     i1l3228:	
  6445                           
  6446                           ;usb_device.c: 1688: }
  6447                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  6448  0640  0023               	movlb	3	; select bank3
  6449  0641  01D8               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  6450                           
  6451                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  6452  0642  01D7               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  6453                           
  6454                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  6455  0643  0856               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  6456  0644  1D03               	btfss	3,2
  6457  0645  0008               	return
  6458                           
  6459                           ;usb_device.c: 1713: {
  6460                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  6461  0646  318D  2583         	fcall	_USBCtrlEPAllowStatusStage
  6462                           
  6463                           ;usb_device.c: 1715: }
  6464                           ;usb_device.c: 1716: }
  6465  0648  0008               	return
  6466  0649                     i1l3236:	
  6467                           
  6468                           ;usb_device.c: 1717: else
  6469                           ;usb_device.c: 1718: {
  6470                           ;usb_device.c: 1729: controlTransferState = 2;
  6471  0649  3002               	movlw	2
  6472  064A  00F5               	movwf	??_USBCtrlEPServiceComplete
  6473  064B  0875               	movf	??_USBCtrlEPServiceComplete,w
  6474  064C  0021               	movlb	1	; select bank1
  6475  064D  00E3               	movwf	_controlTransferState^(0+128)	;volatile
  6476                           
  6477                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  6478  064E  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6479  064F  3E01               	addlw	1
  6480  0650  00F5               	movwf	??_USBCtrlEPServiceComplete
  6481  0651  3000               	movlw	0
  6482  0652  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6483  0653  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  6484  0654  0875               	movf	??_USBCtrlEPServiceComplete,w
  6485  0655  0086               	movwf	6
  6486  0656  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  6487  0657  0087               	movwf	7
  6488  0658  3008               	movlw	8
  6489  0659  0081               	movwf	1
  6490                           
  6491                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6492  065A  3050               	movlw	80
  6493  065B  00F5               	movwf	??_USBCtrlEPServiceComplete
  6494  065C  3000               	movlw	0
  6495  065D  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  6496  065E  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6497  065F  0086               	movwf	6
  6498  0660  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6499  0661  0087               	movwf	7
  6500  0662  3142               	addfsr 1,2
  6501  0663  0875               	movf	??_USBCtrlEPServiceComplete,w
  6502  0664  3FC0               	movwi [0]fsr1
  6503  0665  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  6504  0666  3FC1               	movwi [1]fsr1
  6505                           
  6506                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  6507  0667  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6508  0668  0086               	movwf	6
  6509  0669  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6510  066A  0087               	movwf	7
  6511  066B  3004               	movlw	4
  6512  066C  0081               	movwf	1
  6513                           
  6514                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6515  066D  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6516  066E  0086               	movwf	6
  6517  066F  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6518  0670  0087               	movwf	7
  6519  0671  1781               	bsf	1,7
  6520                           
  6521                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  6522  0672  0023               	movlb	3	; select bank3
  6523  0673  01D8               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  6524                           
  6525                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  6526  0674  01D7               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  6527                           
  6528                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  6529  0675  0856               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  6530  0676  1D03               	btfss	3,2
  6531  0677  0008               	return
  6532                           
  6533                           ;usb_device.c: 1741: {
  6534                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
  6535  0678  318D  2583         	fcall	_USBCtrlEPAllowStatusStage
  6536  067A  0008               	return
  6537  067B                     __end_of_USBCtrlEPServiceComplete:	
  6538                           
  6539                           	psect	text27
  6540  0BFE                     __ptext27:	
  6541 ;; *************** function _USBCtrlEPAllowDataStage *****************
  6542 ;; Defined at:
  6543 ;;		line 1488 in file "../lib/usb/src/usb_device.c"
  6544 ;; Parameters:    Size  Location     Type
  6545 ;;		None
  6546 ;; Auto vars:     Size  Location     Type
  6547 ;;		None
  6548 ;; Return value:  Size  Location     Type
  6549 ;;                  1    wreg      void 
  6550 ;; Registers used:
  6551 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6552 ;; Tracked objects:
  6553 ;;		On entry : 0/0
  6554 ;;		On exit  : 0/0
  6555 ;;		Unchanged: 0/0
  6556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6559 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6560 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6561 ;;Total ram usage:        2 bytes
  6562 ;; Hardware stack levels used:    1
  6563 ;; Hardware stack levels required when called:    1
  6564 ;; This function calls:
  6565 ;;		_USBCtrlTrfTxService
  6566 ;; This function is called by:
  6567 ;;		_USBCtrlEPServiceComplete
  6568 ;; This function uses a non-reentrant model
  6569 ;;
  6570                           
  6571                           
  6572                           ;psect for function _USBCtrlEPAllowDataStage
  6573  0BFE                     _USBCtrlEPAllowDataStage:	
  6574                           
  6575                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  6576                           
  6577                           ;incstack = 0
  6578                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6579  0BFE  0023               	movlb	3	; select bank3
  6580  0BFF  01D4               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  6581                           
  6582                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  6583  0C00  01D5               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  6584                           
  6585                           ;usb_device.c: 1493: if(controlTransferState == 2)
  6586  0C01  3002               	movlw	2
  6587  0C02  0021               	movlb	1	; select bank1
  6588  0C03  0663               	xorwf	_controlTransferState^(0+128),w	;volatile
  6589  0C04  1D03               	btfss	3,2
  6590  0C05  2C2B               	goto	i1l2988
  6591                           
  6592                           ;usb_device.c: 1494: {
  6593                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  6594  0C06  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6595  0C07  3E01               	addlw	1
  6596  0C08  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6597  0C09  3000               	movlw	0
  6598  0C0A  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6599  0C0B  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  6600  0C0C  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6601  0C0D  0086               	movwf	6
  6602  0C0E  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  6603  0C0F  0087               	movwf	7
  6604  0C10  3008               	movlw	8
  6605  0C11  0081               	movwf	1
  6606                           
  6607                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  6608  0C12  3058               	movlw	88
  6609  0C13  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6610  0C14  3000               	movlw	0
  6611  0C15  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  6612  0C16  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6613  0C17  0086               	movwf	6
  6614  0C18  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6615  0C19  0087               	movwf	7
  6616  0C1A  3142               	addfsr 1,2
  6617  0C1B  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6618  0C1C  3FC0               	movwi [0]fsr1
  6619  0C1D  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  6620  0C1E  3FC1               	movwi [1]fsr1
  6621                           
  6622                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  6623  0C1F  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6624  0C20  0086               	movwf	6
  6625  0C21  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6626  0C22  0087               	movwf	7
  6627  0C23  3048               	movlw	72
  6628  0C24  0081               	movwf	1
  6629                           
  6630                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6631  0C25  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6632  0C26  0086               	movwf	6
  6633  0C27  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6634  0C28  0087               	movwf	7
  6635  0C29  1781               	bsf	1,7
  6636                           
  6637                           ;usb_device.c: 1500: }
  6638  0C2A  0008               	return
  6639  0C2B                     i1l2988:	
  6640                           
  6641                           ;usb_device.c: 1501: else
  6642                           ;usb_device.c: 1502: {
  6643                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  6644  0C2B  0023               	movlb	3	; select bank3
  6645  0C2C  0837               	movf	((_inPipes+1)^(0+384)+3),w	;volatile
  6646  0C2D  0020               	movlb	0	; select bank0
  6647  0C2E  0257               	subwf	87,w	;volatile
  6648  0C2F  1D03               	skipz
  6649  0C30  2C35               	goto	u210_25
  6650  0C31  0023               	movlb	3	; select bank3
  6651  0C32  0836               	movf	(_inPipes^(0+384)+3),w	;volatile
  6652  0C33  0020               	movlb	0	; select bank0
  6653  0C34  0256               	subwf	86,w	;volatile
  6654  0C35                     u210_25:	
  6655  0C35  1803               	skipnc
  6656  0C36  2C3E               	goto	i1l2992
  6657                           
  6658                           ;usb_device.c: 1506: {
  6659                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  6660  0C37  0857               	movf	87,w	;volatile
  6661  0C38  0023               	movlb	3	; select bank3
  6662  0C39  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  6663  0C3A  0020               	movlb	0	; select bank0
  6664  0C3B  0856               	movf	86,w	;volatile
  6665  0C3C  0023               	movlb	3	; select bank3
  6666  0C3D  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6667  0C3E                     i1l2992:	
  6668                           
  6669                           ;usb_device.c: 1508: }
  6670                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  6671  0C3E  318D  251B         	fcall	_USBCtrlTrfTxService
  6672                           
  6673                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  6674  0C40  3058               	movlw	88
  6675  0C41  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6676  0C42  3000               	movlw	0
  6677  0C43  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  6678  0C44  0023               	movlb	3	; select bank3
  6679  0C45  0827               	movf	_pBDTEntryIn^(0+384),w
  6680  0C46  0086               	movwf	6
  6681  0C47  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6682  0C48  0087               	movwf	7
  6683  0C49  3142               	addfsr 1,2
  6684  0C4A  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6685  0C4B  3FC0               	movwi [0]fsr1
  6686  0C4C  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  6687  0C4D  3FC1               	movwi [1]fsr1
  6688                           
  6689                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  6690  0C4E  0827               	movf	_pBDTEntryIn^(0+384),w
  6691  0C4F  0086               	movwf	6
  6692  0C50  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6693  0C51  0087               	movwf	7
  6694  0C52  3048               	movlw	72
  6695  0C53  0081               	movwf	1
  6696                           
  6697                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6698  0C54  0827               	movf	_pBDTEntryIn^(0+384),w
  6699  0C55  0086               	movwf	6
  6700  0C56  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6701  0C57  0087               	movwf	7
  6702  0C58  1781               	bsf	1,7
  6703  0C59  0008               	return
  6704  0C5A                     __end_of_USBCtrlEPAllowDataStage:	
  6705                           
  6706                           	psect	text28
  6707  0CB9                     __ptext28:	
  6708 ;; *************** function _USBCheckStdRequest *****************
  6709 ;; Defined at:
  6710 ;;		line 2686 in file "../lib/usb/src/usb_device.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;		None
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;		None
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  1    wreg      void 
  6717 ;; Registers used:
  6718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6726 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6727 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6728 ;;Total ram usage:        1 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; Hardware stack levels required when called:    5
  6731 ;; This function calls:
  6732 ;;		_USBStdFeatureReqHandler
  6733 ;;		_USBStdGetDscHandler
  6734 ;;		_USBStdGetStatusHandler
  6735 ;;		_USBStdSetCfgHandler
  6736 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6737 ;; This function is called by:
  6738 ;;		_USBCtrlTrfSetupHandler
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           
  6743                           ;psect for function _USBCheckStdRequest
  6744  0CB9                     _USBCheckStdRequest:	
  6745                           
  6746                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  6747                           
  6748                           ;incstack = 0
  6749                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6750  0CB9  0020               	movlb	0	; select bank0
  6751  0CBA  0E50               	swapf	80,w	;volatile
  6752  0CBB  0C89               	rrf	9,f
  6753  0CBC  3903               	andlw	3
  6754  0CBD  3A00               	xorlw	0
  6755  0CBE  1D03               	btfss	3,2
  6756  0CBF  0008               	return
  6757  0CC0  2D0F               	goto	i1l3330
  6758  0CC1                     i1l385:	
  6759                           ;usb_device.c: 2691: {
  6760                           ;usb_device.c: 2692: case 5:
  6761                           
  6762                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
  6763                           
  6764                           
  6765                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  6766  0CC1  0023               	movlb	3	; select bank3
  6767  0CC2  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6768                           
  6769                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  6770  0CC3  3008               	movlw	8
  6771  0CC4  0020               	movlb	0	; select bank0
  6772  0CC5  00ED               	movwf	??_USBCheckStdRequest
  6773  0CC6  086D               	movf	??_USBCheckStdRequest,w
  6774  0CC7  0021               	movlb	1	; select bank1
  6775  0CC8  00E2               	movwf	_USBDeviceState^(0+128)	;volatile
  6776                           
  6777                           ;usb_device.c: 2696: break;
  6778  0CC9  0008               	return
  6779  0CCA                     i1l3300:	
  6780                           ;usb_device.c: 2697: case 6:
  6781                           
  6782                           
  6783                           ;usb_device.c: 2698: USBStdGetDscHandler();
  6784  0CCA  318D  25F5         	fcall	_USBStdGetDscHandler
  6785                           
  6786                           ;usb_device.c: 2699: break;
  6787  0CCC  0008               	return
  6788  0CCD                     i1l3302:	
  6789                           ;usb_device.c: 2700: case 9:
  6790                           
  6791                           
  6792                           ;usb_device.c: 2701: USBStdSetCfgHandler();
  6793  0CCD  3186  267B         	fcall	_USBStdSetCfgHandler
  6794                           
  6795                           ;usb_device.c: 2702: break;
  6796  0CCF  0008               	return
  6797  0CD0                     i1l3304:	
  6798                           ;usb_device.c: 2703: case 8:
  6799                           
  6800                           
  6801                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  6802  0CD0  30EC               	movlw	low _USBActiveConfiguration
  6803  0CD1  0023               	movlb	3	; select bank3
  6804  0CD2  00B3               	movwf	_inPipes^(0+384)	;volatile
  6805  0CD3  3001               	movlw	high _USBActiveConfiguration
  6806  0CD4  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  6807                           
  6808                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6809  0CD5  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  6810                           
  6811                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  6812  0CD6  3001               	movlw	1
  6813  0CD7  0020               	movlb	0	; select bank0
  6814  0CD8  00ED               	movwf	??_USBCheckStdRequest
  6815  0CD9  086D               	movf	??_USBCheckStdRequest,w
  6816  0CDA  0023               	movlb	3	; select bank3
  6817  0CDB  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6818                           
  6819                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  6820  0CDC  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6821                           
  6822                           ;usb_device.c: 2708: break;
  6823  0CDD  0008               	return
  6824  0CDE                     i1l3312:	
  6825                           ;usb_device.c: 2709: case 0:
  6826                           
  6827                           
  6828                           ;usb_device.c: 2710: USBStdGetStatusHandler();
  6829  0CDE  318B  23A9         	fcall	_USBStdGetStatusHandler
  6830                           
  6831                           ;usb_device.c: 2711: break;
  6832  0CE0  0008               	return
  6833  0CE1                     i1l3314:	
  6834                           ;usb_device.c: 2712: case 1:
  6835                           
  6836                           
  6837                           ;usb_device.c: 2713: case 3:
  6838                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
  6839  0CE1  3180  203E         	fcall	_USBStdFeatureReqHandler
  6840                           
  6841                           ;usb_device.c: 2715: break;
  6842  0CE3  0008               	return
  6843  0CE4                     i1l3316:	
  6844                           ;usb_device.c: 2716: case 10:
  6845                           
  6846                           
  6847                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  6848  0CE4  0020               	movlb	0	; select bank0
  6849  0CE5  0854               	movf	84,w	;volatile
  6850  0CE6  3EEA               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  6851  0CE7  0023               	movlb	3	; select bank3
  6852  0CE8  00B3               	movwf	_inPipes^(0+384)	;volatile
  6853  0CE9  3001               	movlw	1
  6854  0CEA  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  6855                           
  6856                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6857  0CEB  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  6858                           
  6859                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  6860  0CEC  3001               	movlw	1
  6861  0CED  0020               	movlb	0	; select bank0
  6862  0CEE  00ED               	movwf	??_USBCheckStdRequest
  6863  0CEF  086D               	movf	??_USBCheckStdRequest,w
  6864  0CF0  0023               	movlb	3	; select bank3
  6865  0CF1  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6866                           
  6867                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  6868  0CF2  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6869                           
  6870                           ;usb_device.c: 2721: break;
  6871  0CF3  0008               	return
  6872  0CF4                     i1l394:	
  6873                           ;usb_device.c: 2722: case 11:
  6874                           
  6875                           
  6876                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  6877  0CF4  0023               	movlb	3	; select bank3
  6878  0CF5  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6879                           
  6880                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  6881  0CF6  0020               	movlb	0	; select bank0
  6882  0CF7  0852               	movf	82,w	;volatile
  6883  0CF8  00ED               	movwf	??_USBCheckStdRequest
  6884  0CF9  0854               	movf	84,w	;volatile
  6885  0CFA  3EEA               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  6886  0CFB  0086               	movwf	6
  6887  0CFC  3001               	movlw	1	; select bank3/4
  6888  0CFD  0087               	movwf	7
  6889  0CFE  086D               	movf	??_USBCheckStdRequest,w
  6890  0CFF  0081               	movwf	1
  6891                           
  6892                           ;usb_device.c: 2725: break;
  6893  0D00  0008               	return
  6894  0D01                     i1l3326:	
  6895                           ;usb_device.c: 2726: case 7:
  6896                           
  6897                           
  6898                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  6899  0D01  3000               	movlw	0
  6900  0D02  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6901  0D03  3002               	movlw	2
  6902  0D04  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6903  0D05  3000               	movlw	0
  6904  0D06  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6905  0D07  3000               	movlw	0
  6906  0D08  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  6907  0D09  3000               	movlw	0
  6908  0D0A  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6909  0D0B  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6910  0D0C  3189  21CA         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6911                           
  6912                           ;usb_device.c: 2732: }
  6913                           
  6914                           ;usb_device.c: 2731: break;
  6915                           
  6916                           ;usb_device.c: 2730: default:
  6917                           
  6918                           ;usb_device.c: 2729: case 12:
  6919                           
  6920                           ;usb_device.c: 2728: break;
  6921  0D0E  0008               	return
  6922  0D0F                     i1l3330:	
  6923  0D0F  0020               	movlb	0	; select bank0
  6924  0D10  0851               	movf	81,w	;volatile
  6925                           
  6926                           ; Switch size 1, requested type "space"
  6927                           ; Number of cases is 11, Range of values is 0 to 12
  6928                           ; switch strategies available:
  6929                           ; Name         Instructions Cycles
  6930                           ; direct_byte           32     6 (fixed)
  6931                           ; simple_byte           34    18 (average)
  6932                           ; jumptable            260     6 (fixed)
  6933                           ;	Chosen strategy is direct_byte
  6934  0D11  0084               	movwf	4
  6935  0D12  300D               	movlw	13
  6936  0D13  0204               	subwf	4,w
  6937  0D14  1803               	skipnc
  6938  0D15  0008               	return
  6939  0D16  3190               	movlp	high i1S4878
  6940  0D17  3504               	lslf	4,w
  6941  0D18  3E00               	addlw	low i1S4878
  6942  0D19  0082               	movwf	2
  6943  0D1A                     i1l383:	
  6944  0D1A  0008               	return
  6945  0D1B                     __end_of_USBCheckStdRequest:	
  6946                           
  6947                           	psect	swtext1
  6948  1000                     __pswtext1:	
  6949  1000                     i1S4878:	
  6950  1000  318C  2CDE         	ljmp	i1l3312
  6951  1002  318C  2CE1         	ljmp	i1l3314
  6952  1004  318D  2D1A         	ljmp	i1l383
  6953  1006  318C  2CE1         	ljmp	i1l3314
  6954  1008  318D  2D1A         	ljmp	i1l383
  6955  100A  318C  2CC1         	ljmp	i1l385
  6956  100C  318C  2CCA         	ljmp	i1l3300
  6957  100E  318D  2D01         	ljmp	i1l3326
  6958  1010  318C  2CD0         	ljmp	i1l3304
  6959  1012  318C  2CCD         	ljmp	i1l3302
  6960  1014  318C  2CE4         	ljmp	i1l3316
  6961  1016  318C  2CF4         	ljmp	i1l394
  6962  1018  318D  2D1A         	ljmp	i1l383
  6963                           
  6964                           	psect	text29
  6965  067B                     __ptext29:	
  6966 ;; *************** function _USBStdSetCfgHandler *****************
  6967 ;; Defined at:
  6968 ;;		line 1968 in file "../lib/usb/src/usb_device.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;		None
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;  p               2    7[BANK0 ] PTR unsigned char 
  6973 ;;		 -> UEP1(1), 
  6974 ;;  i               1    9[BANK0 ] unsigned char 
  6975 ;;  i               1   10[BANK0 ] unsigned char 
  6976 ;; Return value:  Size  Location     Type
  6977 ;;                  1    wreg      void 
  6978 ;; Registers used:
  6979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6980 ;; Tracked objects:
  6981 ;;		On entry : 0/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6986 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6987 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6988 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6989 ;;Total ram usage:        5 bytes
  6990 ;; Hardware stack levels used:    1
  6991 ;; Hardware stack levels required when called:    4
  6992 ;; This function calls:
  6993 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6994 ;;		_memset
  6995 ;; This function is called by:
  6996 ;;		_USBCheckStdRequest
  6997 ;; This function uses a non-reentrant model
  6998 ;;
  6999                           
  7000                           
  7001                           ;psect for function _USBStdSetCfgHandler
  7002  067B                     _USBStdSetCfgHandler:	
  7003                           
  7004                           ;usb_device.c: 1970: uint8_t i;
  7005                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  7006                           
  7007                           ;incstack = 0
  7008                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7009  067B  0023               	movlb	3	; select bank3
  7010  067C  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  7011                           
  7012                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
  7013  067D  300E               	movlw	14
  7014  067E  0020               	movlb	0	; select bank0
  7015  067F  00E8               	movwf	USBStdSetCfgHandler@p+1
  7016  0680  3099               	movlw	153
  7017  0681  00E7               	movwf	USBStdSetCfgHandler@p
  7018  0682  01E9               	clrf	USBStdSetCfgHandler@i_1174
  7019  0683  3002               	movlw	2
  7020  0684  0269               	subwf	USBStdSetCfgHandler@i_1174,w
  7021  0685  1803               	btfsc	3,0
  7022  0686  2E98               	goto	i1l3016
  7023  0687                     i1l3008:	
  7024  0687  0867               	movf	USBStdSetCfgHandler@p,w
  7025  0688  0086               	movwf	6
  7026  0689  0868               	movf	USBStdSetCfgHandler@p+1,w
  7027  068A  0087               	movwf	7
  7028  068B  0181               	clrf	1
  7029  068C  3001               	movlw	1
  7030  068D  07E7               	addwf	USBStdSetCfgHandler@p,f
  7031  068E  3000               	movlw	0
  7032  068F  3DE8               	addwfc	USBStdSetCfgHandler@p+1,f
  7033  0690  3001               	movlw	1
  7034  0691  00E6               	movwf	??_USBStdSetCfgHandler
  7035  0692  0866               	movf	??_USBStdSetCfgHandler,w
  7036  0693  07E9               	addwf	USBStdSetCfgHandler@i_1174,f
  7037  0694  3002               	movlw	2
  7038  0695  0269               	subwf	USBStdSetCfgHandler@i_1174,w
  7039  0696  1C03               	skipc
  7040  0697  2E87               	goto	i1l3008
  7041  0698                     i1l3016:	
  7042                           
  7043                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  7044  0698  3020               	movlw	32
  7045  0699  00F0               	movwf	memset@p1
  7046  069A  3000               	movlw	0
  7047  069B  00F1               	movwf	memset@p1+1
  7048  069C  3000               	movlw	0
  7049  069D  00F2               	movwf	memset@c
  7050  069E  00F3               	movwf	memset@c+1
  7051  069F  3030               	movlw	48
  7052  06A0  00F4               	movwf	memset@n
  7053  06A1  3000               	movlw	0
  7054  06A2  00F5               	movwf	memset@n+1
  7055  06A3  3197  27D0  3186   	fcall	_memset
  7056                           
  7057                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  7058  06A6  003D               	movlb	29	; select bank29
  7059  06A7  170E               	bsf	14,6	;volatile
  7060                           
  7061                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  7062  06A8  0020               	movlb	0	; select bank0
  7063  06A9  01EA               	clrf	USBStdSetCfgHandler@i
  7064  06AA  3003               	movlw	3
  7065  06AB  026A               	subwf	USBStdSetCfgHandler@i,w
  7066  06AC  1803               	btfsc	3,0
  7067  06AD  2EC2               	goto	i1l3032
  7068  06AE                     i1l3026:	
  7069                           
  7070                           ;usb_device.c: 1988: {
  7071                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  7072  06AE  086A               	movf	USBStdSetCfgHandler@i,w
  7073  06AF  3EC0               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7074  06B0  0086               	movwf	6
  7075  06B1  3001               	movlw	1	; select bank3/4
  7076  06B2  0087               	movwf	7
  7077  06B3  0181               	clrf	1
  7078                           
  7079                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  7080  06B4  086A               	movf	USBStdSetCfgHandler@i,w
  7081  06B5  3EC3               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7082  06B6  0086               	movwf	6
  7083  06B7  3001               	movlw	1	; select bank3/4
  7084  06B8  0087               	movwf	7
  7085  06B9  0181               	clrf	1
  7086  06BA  3001               	movlw	1
  7087  06BB  00E6               	movwf	??_USBStdSetCfgHandler
  7088  06BC  0866               	movf	??_USBStdSetCfgHandler,w
  7089  06BD  07EA               	addwf	USBStdSetCfgHandler@i,f
  7090  06BE  3003               	movlw	3
  7091  06BF  026A               	subwf	USBStdSetCfgHandler@i,w
  7092  06C0  1C03               	skipc
  7093  06C1  2EAE               	goto	i1l3026
  7094  06C2                     i1l3032:	
  7095                           
  7096                           ;usb_device.c: 1991: }
  7097                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  7098  06C2  30EA               	movlw	low _USBAlternateInterface
  7099  06C3  00F0               	movwf	memset@p1
  7100  06C4  3001               	movlw	high _USBAlternateInterface
  7101  06C5  00F1               	movwf	memset@p1+1
  7102  06C6  3000               	movlw	0
  7103  06C7  00F2               	movwf	memset@c
  7104  06C8  00F3               	movwf	memset@c+1
  7105  06C9  3002               	movlw	2
  7106  06CA  00F4               	movwf	memset@n
  7107  06CB  3000               	movlw	0
  7108  06CC  00F5               	movwf	memset@n+1
  7109  06CD  3197  27D0  3186   	fcall	_memset
  7110                           
  7111                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  7112  06D0  003D               	movlb	29	; select bank29
  7113  06D1  130E               	bcf	14,6	;volatile
  7114                           
  7115                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7116  06D2  3028               	movlw	40
  7117  06D3  0023               	movlb	3	; select bank3
  7118  06D4  00A7               	movwf	_pBDTEntryIn^(0+384)
  7119  06D5  3000               	movlw	0
  7120  06D6  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  7121                           
  7122                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  7123  06D7  3020               	movlw	32
  7124  06D8  0020               	movlb	0	; select bank0
  7125  06D9  00E6               	movwf	??_USBStdSetCfgHandler
  7126  06DA  0866               	movf	??_USBStdSetCfgHandler,w
  7127  06DB  0021               	movlb	1	; select bank1
  7128  06DC  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  7129                           
  7130                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  7131  06DD  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  7132  06DE  00E0               	movwf	_pBDTEntryEP0OutNext^(0+128)
  7133  06DF  39FF               	andlw	255
  7134  06E0  1D03               	skipz
  7135  06E1  3000               	movlw	0
  7136  06E2  00E1               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  7137                           
  7138                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  7139  06E3  0020               	movlb	0	; select bank0
  7140  06E4  0852               	movf	82,w	;volatile
  7141  06E5  00E6               	movwf	??_USBStdSetCfgHandler
  7142  06E6  0866               	movf	??_USBStdSetCfgHandler,w
  7143  06E7  0023               	movlb	3	; select bank3
  7144  06E8  00EC               	movwf	_USBActiveConfiguration^(0+384)	;volatile
  7145                           
  7146                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  7147  06E9  086C               	movf	_USBActiveConfiguration^(0+384),w	;volatile
  7148  06EA  1D03               	btfss	3,2
  7149  06EB  2EF3               	goto	i1l3048
  7150                           
  7151                           ;usb_device.c: 2010: {
  7152                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  7153  06EC  3010               	movlw	16
  7154  06ED  0020               	movlb	0	; select bank0
  7155  06EE  00E6               	movwf	??_USBStdSetCfgHandler
  7156  06EF  0866               	movf	??_USBStdSetCfgHandler,w
  7157  06F0  0021               	movlb	1	; select bank1
  7158  06F1  00E2               	movwf	_USBDeviceState^(0+128)	;volatile
  7159                           
  7160                           ;usb_device.c: 2013: }
  7161  06F2  0008               	return
  7162  06F3                     i1l3048:	
  7163                           
  7164                           ;usb_device.c: 2014: else
  7165                           ;usb_device.c: 2015: {
  7166                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  7167  06F3  3000               	movlw	0
  7168  06F4  0020               	movlb	0	; select bank0
  7169  06F5  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7170  06F6  3001               	movlw	1
  7171  06F7  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7172  06F8  30EC               	movlw	low _USBActiveConfiguration
  7173  06F9  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7174  06FA  3001               	movlw	high _USBActiveConfiguration
  7175  06FB  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7176  06FC  3001               	movlw	1
  7177  06FD  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7178  06FE  3000               	movlw	0
  7179  06FF  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7180  0700  3189  21CA         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7181                           
  7182                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  7183  0702  3020               	movlw	32
  7184  0703  0020               	movlb	0	; select bank0
  7185  0704  00E6               	movwf	??_USBStdSetCfgHandler
  7186  0705  0866               	movf	??_USBStdSetCfgHandler,w
  7187  0706  0021               	movlb	1	; select bank1
  7188  0707  00E2               	movwf	_USBDeviceState^(0+128)	;volatile
  7189  0708  0008               	return
  7190  0709                     __end_of_USBStdSetCfgHandler:	
  7191                           
  7192                           	psect	text30
  7193  17D0                     __ptext30:	
  7194 ;; *************** function _memset *****************
  7195 ;; Defined at:
  7196 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;  p1              2    0[COMMON] PTR void 
  7199 ;;		 -> USBAlternateInterface(2), BDT(48), 
  7200 ;;  c               2    2[COMMON] int 
  7201 ;;  n               2    4[COMMON] unsigned int 
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;  p               2    6[COMMON] PTR unsigned char 
  7204 ;;		 -> USBAlternateInterface(2), BDT(48), 
  7205 ;; Return value:  Size  Location     Type
  7206 ;;                  2    0[COMMON] PTR void 
  7207 ;; Registers used:
  7208 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7209 ;; Tracked objects:
  7210 ;;		On entry : 0/0
  7211 ;;		On exit  : 0/0
  7212 ;;		Unchanged: 0/0
  7213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7214 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7215 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7217 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7218 ;;Total ram usage:        8 bytes
  7219 ;; Hardware stack levels used:    1
  7220 ;; This function calls:
  7221 ;;		Nothing
  7222 ;; This function is called by:
  7223 ;;		_USBStdSetCfgHandler
  7224 ;; This function uses a non-reentrant model
  7225 ;;
  7226                           
  7227                           
  7228                           ;psect for function _memset
  7229  17D0                     _memset:	
  7230                           
  7231                           ;incstack = 0
  7232                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7233  17D0  0871               	movf	memset@p1+1,w
  7234  17D1  00F7               	movwf	memset@p+1
  7235  17D2  0870               	movf	memset@p1,w
  7236  17D3  00F6               	movwf	memset@p
  7237  17D4                     i1l2938:	
  7238  17D4  3001               	movlw	1
  7239  17D5  02F4               	subwf	memset@n,f
  7240  17D6  3000               	movlw	0
  7241  17D7  3BF5               	subwfb	memset@n+1,f
  7242  17D8  0A74               	incf	memset@n,w
  7243  17D9  1903               	btfsc	3,2
  7244  17DA  0A75               	incf	memset@n+1,w
  7245  17DB  1903               	btfsc	3,2
  7246  17DC  0008               	return
  7247  17DD  0876               	movf	memset@p,w
  7248  17DE  0086               	movwf	6
  7249  17DF  0877               	movf	memset@p+1,w
  7250  17E0  0087               	movwf	7
  7251  17E1  0872               	movf	memset@c,w
  7252  17E2  0081               	movwf	1
  7253  17E3  3001               	movlw	1
  7254  17E4  07F6               	addwf	memset@p,f
  7255  17E5  3000               	movlw	0
  7256  17E6  3DF7               	addwfc	memset@p+1,f
  7257  17E7  2FD4               	goto	i1l2938
  7258  17E8                     __end_of_memset:	
  7259                           ;	Return value of _memset is never used
  7260                           
  7261                           
  7262                           	psect	text31
  7263  0BA9                     __ptext31:	
  7264 ;; *************** function _USBStdGetStatusHandler *****************
  7265 ;; Defined at:
  7266 ;;		line 2129 in file "../lib/usb/src/usb_device.c"
  7267 ;; Parameters:    Size  Location     Type
  7268 ;;		None
  7269 ;; Auto vars:     Size  Location     Type
  7270 ;;  p               2    1[COMMON] PTR struct __BDT
  7271 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  7272 ;; Return value:  Size  Location     Type
  7273 ;;                  1    wreg      void 
  7274 ;; Registers used:
  7275 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7276 ;; Tracked objects:
  7277 ;;		On entry : 0/0
  7278 ;;		On exit  : 0/0
  7279 ;;		Unchanged: 0/0
  7280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7282 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7283 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7284 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7285 ;;Total ram usage:        3 bytes
  7286 ;; Hardware stack levels used:    1
  7287 ;; This function calls:
  7288 ;;		Nothing
  7289 ;; This function is called by:
  7290 ;;		_USBCheckStdRequest
  7291 ;; This function uses a non-reentrant model
  7292 ;;
  7293                           
  7294                           
  7295                           ;psect for function _USBStdGetStatusHandler
  7296  0BA9                     _USBStdGetStatusHandler:	
  7297                           
  7298                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  7299                           
  7300                           ;incstack = 0
  7301                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  7302  0BA9  0020               	movlb	0	; select bank0
  7303  0BAA  01D8               	clrf	88	;volatile
  7304                           
  7305                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  7306  0BAB  01D9               	clrf	89	;volatile
  7307                           
  7308                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  7309  0BAC  2BE5               	goto	i1l3104
  7310  0BAD                     i1l323:	
  7311                           ;usb_device.c: 2135: {
  7312                           ;usb_device.c: 2136: case (0x00):
  7313                           
  7314                           
  7315                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  7316  0BAD  0023               	movlb	3	; select bank3
  7317  0BAE  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  7318                           
  7319                           ;usb_device.c: 2145: }
  7320                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  7321                           
  7322                           ;usb_device.c: 2143: {
  7323                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
  7324                           
  7325                           ;usb_device.c: 2142: if(0 == 1)
  7326  0BAF  0023               	movlb	3	; select bank3
  7327  0BB0  0350               	decf	_RemoteWakeup^(0+384),w	;volatile
  7328  0BB1  1D03               	btfss	3,2
  7329  0BB2  2BF1               	goto	i1l326
  7330                           
  7331                           ;usb_device.c: 2148: {
  7332                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  7333  0BB3  0020               	movlb	0	; select bank0
  7334  0BB4  14D8               	bsf	88,1	;volatile
  7335                           
  7336                           ;usb_device.c: 2150: }
  7337                           ;usb_device.c: 2151: break;
  7338  0BB5  2BF1               	goto	i1l326
  7339  0BB6                     i1l327:	
  7340                           ;usb_device.c: 2152: case (0x01):
  7341                           
  7342                           
  7343                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  7344  0BB6  0023               	movlb	3	; select bank3
  7345  0BB7  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  7346                           
  7347                           ;usb_device.c: 2154: break;
  7348  0BB8  2BF1               	goto	i1l326
  7349  0BB9                     i1l328:	
  7350                           ;usb_device.c: 2155: case (0x02):
  7351                           
  7352                           
  7353                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  7354  0BB9  0023               	movlb	3	; select bank3
  7355  0BBA  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  7356                           
  7357                           ;usb_device.c: 2160: {
  7358                           ;usb_device.c: 2161: BDT_ENTRY *p;
  7359                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  7360  0BBB  0020               	movlb	0	; select bank0
  7361  0BBC  1BD4               	btfsc	84,7	;volatile
  7362  0BBD  2BC9               	goto	i1l3094
  7363                           
  7364                           ;usb_device.c: 2164: {
  7365                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7366  0BBE  0854               	movf	84,w	;volatile
  7367  0BBF  390F               	andlw	15
  7368  0BC0  0709               	addwf	9,w
  7369  0BC1  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7370  0BC2  0086               	movwf	6
  7371  0BC3  3001               	movlw	1	; select bank3/4
  7372  0BC4  0087               	movwf	7
  7373  0BC5  3F40               	moviw [0]fsr1
  7374  0BC6  00F1               	movwf	USBStdGetStatusHandler@p
  7375  0BC7  3F41               	moviw [1]fsr1
  7376  0BC8  2BD3               	goto	L5
  7377  0BC9                     i1l3094:	
  7378                           ;usb_device.c: 2166: }
  7379                           
  7380                           
  7381                           ;usb_device.c: 2167: else
  7382                           ;usb_device.c: 2168: {
  7383                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7384  0BC9  0854               	movf	84,w	;volatile
  7385  0BCA  390F               	andlw	15
  7386  0BCB  0709               	addwf	9,w
  7387  0BCC  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7388  0BCD  0086               	movwf	6
  7389  0BCE  3001               	movlw	1	; select bank3/4
  7390  0BCF  0087               	movwf	7
  7391  0BD0  3F40               	moviw [0]fsr1
  7392  0BD1  00F1               	movwf	USBStdGetStatusHandler@p
  7393  0BD2  3F41               	moviw [1]fsr1
  7394  0BD3                     L5:	
  7395  0BD3  00F2               	movwf	USBStdGetStatusHandler@p+1
  7396                           
  7397                           ;usb_device.c: 2170: }
  7398                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  7399  0BD4  0871               	movf	USBStdGetStatusHandler@p,w
  7400  0BD5  0086               	movwf	6
  7401  0BD6  0872               	movf	USBStdGetStatusHandler@p+1,w
  7402  0BD7  0087               	movwf	7
  7403  0BD8  1F81               	btfss	1,7
  7404  0BD9  2BF1               	goto	i1l326
  7405  0BDA  0871               	movf	USBStdGetStatusHandler@p,w
  7406  0BDB  0086               	movwf	6
  7407  0BDC  0872               	movf	USBStdGetStatusHandler@p+1,w
  7408  0BDD  0087               	movwf	7
  7409  0BDE  1D01               	btfss	1,2
  7410  0BDF  2BF1               	goto	i1l326
  7411                           
  7412                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  7413  0BE0  3001               	movlw	1
  7414  0BE1  00F0               	movwf	??_USBStdGetStatusHandler
  7415  0BE2  0870               	movf	??_USBStdGetStatusHandler,w
  7416  0BE3  00D8               	movwf	88	;volatile
  7417                           
  7418                           ;usb_device.c: 2175: }
  7419                           ;usb_device.c: 2176: }
  7420                           
  7421                           ;usb_device.c: 2174: break;
  7422  0BE4  2BF1               	goto	i1l326
  7423  0BE5                     i1l3104:	
  7424  0BE5  0850               	movf	80,w	;volatile
  7425  0BE6  391F               	andlw	31
  7426                           
  7427                           ; Switch size 1, requested type "space"
  7428                           ; Number of cases is 3, Range of values is 0 to 2
  7429                           ; switch strategies available:
  7430                           ; Name         Instructions Cycles
  7431                           ; simple_byte           10     6 (average)
  7432                           ; direct_byte           12     6 (fixed)
  7433                           ; jumptable            260     6 (fixed)
  7434                           ;	Chosen strategy is simple_byte
  7435  0BE7  3A00               	xorlw	0	; case 0
  7436  0BE8  1903               	skipnz
  7437  0BE9  2BAD               	goto	i1l323
  7438  0BEA  3A01               	xorlw	1	; case 1
  7439  0BEB  1903               	skipnz
  7440  0BEC  2BB6               	goto	i1l327
  7441  0BED  3A03               	xorlw	3	; case 2
  7442  0BEE  1903               	skipnz
  7443  0BEF  2BB9               	goto	i1l328
  7444  0BF0  2BF1               	goto	i1l326
  7445  0BF1                     i1l326:	
  7446                           
  7447                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  7448  0BF1  0023               	movlb	3	; select bank3
  7449  0BF2  1FB5               	btfss	(_inPipes^(0+384)+2),7	;volatile
  7450  0BF3  0008               	return
  7451                           
  7452                           ;usb_device.c: 2179: {
  7453                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  7454  0BF4  3058               	movlw	88
  7455  0BF5  00B3               	movwf	_inPipes^(0+384)	;volatile
  7456  0BF6  3000               	movlw	0
  7457  0BF7  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  7458                           
  7459                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7460  0BF8  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  7461                           
  7462                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  7463  0BF9  3002               	movlw	2
  7464  0BFA  00F0               	movwf	??_USBStdGetStatusHandler
  7465  0BFB  0870               	movf	??_USBStdGetStatusHandler,w
  7466  0BFC  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  7467  0BFD  0008               	return
  7468  0BFE                     __end_of_USBStdGetStatusHandler:	
  7469                           
  7470                           	psect	text32
  7471  0DF5                     __ptext32:	
  7472 ;; *************** function _USBStdGetDscHandler *****************
  7473 ;; Defined at:
  7474 ;;		line 2043 in file "../lib/usb/src/usb_device.c"
  7475 ;; Parameters:    Size  Location     Type
  7476 ;;		None
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;		None
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  1    wreg      void 
  7481 ;; Registers used:
  7482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7490 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7491 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7492 ;;Total ram usage:        3 bytes
  7493 ;; Hardware stack levels used:    1
  7494 ;; This function calls:
  7495 ;;		Nothing
  7496 ;; This function is called by:
  7497 ;;		_USBCheckStdRequest
  7498 ;; This function uses a non-reentrant model
  7499 ;;
  7500                           
  7501                           
  7502                           ;psect for function _USBStdGetDscHandler
  7503  0DF5                     _USBStdGetDscHandler:	
  7504                           
  7505                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  7506                           
  7507                           ;incstack = 0
  7508                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  7509  0DF5  3080               	movlw	128
  7510  0DF6  0020               	movlb	0	; select bank0
  7511  0DF7  0650               	xorwf	80,w	;volatile
  7512  0DF8  1D03               	btfss	3,2
  7513  0DF9  0008               	return
  7514                           
  7515                           ;usb_device.c: 2046: {
  7516                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  7517  0DFA  30C0               	movlw	192
  7518  0DFB  00F0               	movwf	??_USBStdGetDscHandler
  7519  0DFC  0870               	movf	??_USBStdGetDscHandler,w
  7520  0DFD  0023               	movlb	3	; select bank3
  7521  0DFE  00B5               	movwf	(_inPipes^(0+384)+2)	;volatile
  7522                           
  7523                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  7524  0DFF  2E67               	goto	i1l3082
  7525  0E00                     i1l3056:	
  7526                           ;usb_device.c: 2050: {
  7527                           ;usb_device.c: 2051: case 0x01:
  7528                           
  7529                           
  7530                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  7531  0E00  30CE               	movlw	low (_device_dsc| (0+32768))
  7532  0E01  0023               	movlb	3	; select bank3
  7533  0E02  00B3               	movwf	_inPipes^(0+384)	;volatile
  7534  0E03  3083               	movlw	high (_device_dsc| (0+32768))
  7535  0E04  00B4               	movwf	(_inPipes^(0+384)+1)	;volatile
  7536                           
  7537                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  7538  0E05  3000               	movlw	0
  7539  0E06  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  7540  0E07  3012               	movlw	18
  7541  0E08  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  7542                           
  7543                           ;usb_device.c: 2058: break;
  7544  0E09  0008               	return
  7545  0E0A                     i1l3060:	
  7546                           ;usb_device.c: 2059: case 0x02:
  7547                           
  7548                           
  7549                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  7550  0E0A  0020               	movlb	0	; select bank0
  7551  0E0B  0852               	movf	82,w	;volatile
  7552  0E0C  1D03               	btfss	3,2
  7553  0E0D  2E3D               	goto	i1l3068
  7554                           
  7555                           ;usb_device.c: 2064: {
  7556                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  7557  0E0E  0852               	movf	82,w	;volatile
  7558  0E0F  00F0               	movwf	??_USBStdGetDscHandler
  7559  0E10  01F1               	clrf	??_USBStdGetDscHandler+1
  7560  0E11  35F0               	lslf	??_USBStdGetDscHandler,f
  7561  0E12  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  7562  0E13  3021               	movlw	low (_USB_CD_Ptr| (0+32768))
  7563  0E14  0770               	addwf	??_USBStdGetDscHandler,w
  7564  0E15  0084               	movwf	4
  7565  0E16  3083               	movlw	high (_USB_CD_Ptr| (0+32768))
  7566  0E17  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  7567  0E18  0085               	movwf	5
  7568  0E19  3F00               	moviw [0]fsr0
  7569  0E1A  0023               	movlb	3	; select bank3
  7570  0E1B  00B3               	movwf	_inPipes^(0+384)	;volatile
  7571  0E1C  3F01               	moviw [1]fsr0
  7572  0E1D  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  7573                           
  7574                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  7575  0E1E  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  7576  0E1F  00F1               	movwf	??_USBStdGetDscHandler+1
  7577  0E20  0833               	movf	_inPipes^(0+384),w	;volatile
  7578  0E21  00F0               	movwf	??_USBStdGetDscHandler
  7579  0E22  3002               	movlw	2
  7580  0E23  0770               	addwf	??_USBStdGetDscHandler,w
  7581  0E24  0084               	movwf	4
  7582  0E25  0871               	movf	??_USBStdGetDscHandler+1,w
  7583  0E26  1803               	skipnc
  7584  0E27  0A71               	incf	??_USBStdGetDscHandler+1,w
  7585  0E28  0085               	movwf	5
  7586  0E29  0800               	movf	0,w	;code access
  7587  0E2A  00F2               	movwf	??_USBStdGetDscHandler+2
  7588  0E2B  0872               	movf	??_USBStdGetDscHandler+2,w
  7589  0E2C  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  7590                           
  7591                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  7592  0E2D  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  7593  0E2E  00F1               	movwf	??_USBStdGetDscHandler+1
  7594  0E2F  0833               	movf	_inPipes^(0+384),w	;volatile
  7595  0E30  00F0               	movwf	??_USBStdGetDscHandler
  7596  0E31  3003               	movlw	3
  7597  0E32  0770               	addwf	??_USBStdGetDscHandler,w
  7598  0E33  0084               	movwf	4
  7599  0E34  0871               	movf	??_USBStdGetDscHandler+1,w
  7600  0E35  1803               	skipnc
  7601  0E36  0A71               	incf	??_USBStdGetDscHandler+1,w
  7602  0E37  0085               	movwf	5
  7603  0E38  0800               	movf	0,w	;code access
  7604  0E39  00F2               	movwf	??_USBStdGetDscHandler+2
  7605  0E3A  0872               	movf	??_USBStdGetDscHandler+2,w
  7606  0E3B  00B7               	movwf	(_inPipes^(0+384)+4)	;volatile
  7607                           
  7608                           ;usb_device.c: 2076: }
  7609  0E3C  0008               	return
  7610  0E3D                     i1l3068:	
  7611                           
  7612                           ;usb_device.c: 2077: else
  7613                           ;usb_device.c: 2078: {
  7614                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  7615  0E3D  0023               	movlb	3	; select bank3
  7616  0E3E  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  7617                           
  7618                           ;usb_device.c: 2080: }
  7619                           ;usb_device.c: 2081: break;
  7620  0E3F  0008               	return
  7621  0E40                     i1l3070:	
  7622                           ;usb_device.c: 2082: case 0x03:
  7623                           
  7624                           
  7625                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  7626  0E40  3003               	movlw	3
  7627  0E41  0020               	movlb	0	; select bank0
  7628  0E42  0252               	subwf	82,w	;volatile
  7629  0E43  1803               	skipnc
  7630  0E44  2E61               	goto	i1l3076
  7631                           
  7632                           ;usb_device.c: 2087: {
  7633                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  7634  0E45  0852               	movf	82,w	;volatile
  7635  0E46  00F0               	movwf	??_USBStdGetDscHandler
  7636  0E47  01F1               	clrf	??_USBStdGetDscHandler+1
  7637  0E48  35F0               	lslf	??_USBStdGetDscHandler,f
  7638  0E49  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  7639  0E4A  301B               	movlw	low (_USB_SD_Ptr| (0+32768))
  7640  0E4B  0770               	addwf	??_USBStdGetDscHandler,w
  7641  0E4C  0084               	movwf	4
  7642  0E4D  3083               	movlw	high (_USB_SD_Ptr| (0+32768))
  7643  0E4E  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  7644  0E4F  0085               	movwf	5
  7645  0E50  3F00               	moviw [0]fsr0
  7646  0E51  0023               	movlb	3	; select bank3
  7647  0E52  00B3               	movwf	_inPipes^(0+384)	;volatile
  7648  0E53  3F01               	moviw [1]fsr0
  7649  0E54  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  7650                           
  7651                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  7652  0E55  0833               	movf	_inPipes^(0+384),w	;volatile
  7653  0E56  0084               	movwf	4
  7654  0E57  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  7655  0E58  0085               	movwf	5
  7656  0E59  0800               	movf	0,w	;code access
  7657  0E5A  00F0               	movwf	??_USBStdGetDscHandler
  7658  0E5B  01F1               	clrf	??_USBStdGetDscHandler+1
  7659  0E5C  0870               	movf	??_USBStdGetDscHandler,w
  7660  0E5D  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  7661  0E5E  0871               	movf	??_USBStdGetDscHandler+1,w
  7662  0E5F  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  7663                           
  7664                           ;usb_device.c: 2092: }
  7665  0E60  0008               	return
  7666  0E61                     i1l3076:	
  7667                           
  7668                           ;usb_device.c: 2102: else
  7669                           ;usb_device.c: 2103: {
  7670                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  7671  0E61  0023               	movlb	3	; select bank3
  7672  0E62  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  7673                           
  7674                           ;usb_device.c: 2105: }
  7675                           ;usb_device.c: 2106: break;
  7676  0E63  0008               	return
  7677  0E64                     i1l3078:	
  7678                           ;usb_device.c: 2107: default:
  7679                           
  7680                           
  7681                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  7682  0E64  0023               	movlb	3	; select bank3
  7683  0E65  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  7684                           
  7685                           ;usb_device.c: 2110: }
  7686                           
  7687                           ;usb_device.c: 2109: break;
  7688  0E66  0008               	return
  7689  0E67                     i1l3082:	
  7690  0E67  0020               	movlb	0	; select bank0
  7691  0E68  0853               	movf	83,w	;volatile
  7692                           
  7693                           ; Switch size 1, requested type "space"
  7694                           ; Number of cases is 3, Range of values is 1 to 3
  7695                           ; switch strategies available:
  7696                           ; Name         Instructions Cycles
  7697                           ; simple_byte           10     6 (average)
  7698                           ; direct_byte           15     9 (fixed)
  7699                           ; jumptable            263     9 (fixed)
  7700                           ;	Chosen strategy is simple_byte
  7701  0E69  3A01               	xorlw	1	; case 1
  7702  0E6A  1903               	skipnz
  7703  0E6B  2E00               	goto	i1l3056
  7704  0E6C  3A03               	xorlw	3	; case 2
  7705  0E6D  1903               	skipnz
  7706  0E6E  2E0A               	goto	i1l3060
  7707  0E6F  3A01               	xorlw	1	; case 3
  7708  0E70  1903               	skipnz
  7709  0E71  2E40               	goto	i1l3070
  7710  0E72  2E64               	goto	i1l3078
  7711  0E73  0008               	return
  7712  0E74                     __end_of_USBStdGetDscHandler:	
  7713                           
  7714                           	psect	text33
  7715  003E                     __ptext33:	
  7716 ;; *************** function _USBStdFeatureReqHandler *****************
  7717 ;; Defined at:
  7718 ;;		line 2754 in file "../lib/usb/src/usb_device.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;		None
  7721 ;; Auto vars:     Size  Location     Type
  7722 ;;  p               2   11[BANK0 ] PTR struct __BDT
  7723 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  7724 ;;  pUEP            2    8[BANK0 ] PTR unsigned char 
  7725 ;;		 -> UEP0(1), 
  7726 ;;  current_ep_d    1   10[BANK0 ] struct .
  7727 ;; Return value:  Size  Location     Type
  7728 ;;                  1    wreg      void 
  7729 ;; Registers used:
  7730 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7731 ;; Tracked objects:
  7732 ;;		On entry : 0/0
  7733 ;;		On exit  : 0/0
  7734 ;;		Unchanged: 0/0
  7735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7737 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7738 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7739 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7740 ;;Total ram usage:        7 bytes
  7741 ;; Hardware stack levels used:    1
  7742 ;; Hardware stack levels required when called:    4
  7743 ;; This function calls:
  7744 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7745 ;; This function is called by:
  7746 ;;		_USBCheckStdRequest
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           
  7751                           ;psect for function _USBStdFeatureReqHandler
  7752  003E                     _USBStdFeatureReqHandler:	
  7753                           
  7754                           ;usb_device.c: 2756: BDT_ENTRY *p;
  7755                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  7756                           ;usb_device.c: 2761: unsigned char* pUEP;
  7757                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  7758                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  7759                           
  7760                           ;incstack = 0
  7761                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7762  003E  0020               	movlb	0	; select bank0
  7763  003F  0352               	decf	82,w	;volatile
  7764  0040  1D03               	btfss	3,2
  7765  0041  2856               	goto	i1l3124
  7766  0042  0850               	movf	80,w	;volatile
  7767  0043  391F               	andlw	31
  7768  0044  3A00               	xorlw	0
  7769  0045  1D03               	skipz
  7770  0046  2856               	goto	i1l3124
  7771                           
  7772                           ;usb_device.c: 2801: {
  7773                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  7774  0047  0023               	movlb	3	; select bank3
  7775  0048  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  7776                           
  7777                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  7778  0049  3003               	movlw	3
  7779  004A  0020               	movlb	0	; select bank0
  7780  004B  0651               	xorwf	81,w	;volatile
  7781  004C  1D03               	btfss	3,2
  7782  004D  2854               	goto	i1l3122
  7783                           
  7784                           ;usb_device.c: 2804: RemoteWakeup = 1;
  7785  004E  3001               	movlw	1
  7786  004F  00E6               	movwf	??_USBStdFeatureReqHandler
  7787  0050  0866               	movf	??_USBStdFeatureReqHandler,w
  7788  0051  0023               	movlb	3	; select bank3
  7789  0052  00D0               	movwf	_RemoteWakeup^(0+384)	;volatile
  7790  0053  2856               	goto	i1l3124
  7791  0054                     i1l3122:	
  7792                           
  7793                           ;usb_device.c: 2805: else
  7794                           ;usb_device.c: 2806: RemoteWakeup = 0;
  7795  0054  0023               	movlb	3	; select bank3
  7796  0055  01D0               	clrf	_RemoteWakeup^(0+384)	;volatile
  7797  0056                     i1l3124:	
  7798                           
  7799                           ;usb_device.c: 2807: }
  7800                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  7801                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  7802                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  7803                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  7804  0056  0020               	movlb	0	; select bank0
  7805  0057  0852               	movf	82,w	;volatile
  7806  0058  1D03               	btfss	3,2
  7807  0059  0008               	return
  7808  005A  0850               	movf	80,w	;volatile
  7809  005B  391F               	andlw	31
  7810  005C  3A02               	xorlw	2
  7811  005D  1D03               	skipz
  7812  005E  0008               	return
  7813  005F  0854               	movf	84,w	;volatile
  7814  0060  390F               	andlw	15
  7815  0061  3A00               	xorlw	0
  7816  0062  1903               	skipnz
  7817  0063  0008               	return
  7818  0064  0854               	movf	84,w	;volatile
  7819  0065  390F               	andlw	15
  7820  0066  00E6               	movwf	??_USBStdFeatureReqHandler
  7821  0067  3003               	movlw	3
  7822  0068  0266               	subwf	??_USBStdFeatureReqHandler,w
  7823  0069  1803               	skipnc
  7824  006A  0008               	return
  7825  006B  3020               	movlw	32
  7826  006C  0021               	movlb	1	; select bank1
  7827  006D  0662               	xorwf	_USBDeviceState^(0+128),w	;volatile
  7828  006E  1D03               	btfss	3,2
  7829  006F  0008               	return
  7830                           
  7831                           ;usb_device.c: 2814: {
  7832                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  7833  0070  0023               	movlb	3	; select bank3
  7834  0071  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  7835                           
  7836                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  7837  0072  0020               	movlb	0	; select bank0
  7838  0073  1BD4               	btfsc	84,7	;volatile
  7839  0074  2884               	goto	i1l3138
  7840                           
  7841                           ;usb_device.c: 2821: {
  7842                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7843  0075  0854               	movf	84,w	;volatile
  7844  0076  390F               	andlw	15
  7845  0077  0709               	addwf	9,w
  7846  0078  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7847  0079  0086               	movwf	6
  7848  007A  3001               	movlw	1	; select bank3/4
  7849  007B  0087               	movwf	7
  7850  007C  3F40               	moviw [0]fsr1
  7851  007D  00EB               	movwf	USBStdFeatureReqHandler@p
  7852  007E  3F41               	moviw [1]fsr1
  7853  007F  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7854                           
  7855                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  7856  0080  0854               	movf	84,w	;volatile
  7857  0081  390F               	andlw	15
  7858  0082  3EC3               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7859  0083  2892               	goto	L6
  7860  0084                     i1l3138:	
  7861                           ;usb_device.c: 2824: }
  7862                           
  7863                           
  7864                           ;usb_device.c: 2825: else
  7865                           ;usb_device.c: 2826: {
  7866                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7867  0084  0854               	movf	84,w	;volatile
  7868  0085  390F               	andlw	15
  7869  0086  0709               	addwf	9,w
  7870  0087  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7871  0088  0086               	movwf	6
  7872  0089  3001               	movlw	1	; select bank3/4
  7873  008A  0087               	movwf	7
  7874  008B  3F40               	moviw [0]fsr1
  7875  008C  00EB               	movwf	USBStdFeatureReqHandler@p
  7876  008D  3F41               	moviw [1]fsr1
  7877  008E  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7878                           
  7879                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  7880  008F  0854               	movf	84,w	;volatile
  7881  0090  390F               	andlw	15
  7882  0091  3EC0               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7883  0092                     L6:	
  7884  0092  0086               	movwf	6
  7885  0093  3001               	movlw	1	; select bank3/4
  7886  0094  0087               	movwf	7
  7887  0095  0801               	movf	1,w
  7888  0096  00E6               	movwf	??_USBStdFeatureReqHandler
  7889  0097  0866               	movf	??_USBStdFeatureReqHandler,w
  7890  0098  00EA               	movwf	USBStdFeatureReqHandler@current_ep_data
  7891                           
  7892                           ;usb_device.c: 2829: }
  7893                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  7894  0099  186A               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  7895  009A  28A5               	goto	i1l3144
  7896                           
  7897                           ;usb_device.c: 2836: {
  7898                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  7899  009B  30FB               	movlw	251
  7900  009C  00E6               	movwf	??_USBStdFeatureReqHandler
  7901  009D  30FF               	movlw	255
  7902  009E  00E7               	movwf	??_USBStdFeatureReqHandler+1
  7903  009F  086B               	movf	USBStdFeatureReqHandler@p,w
  7904  00A0  0566               	andwf	??_USBStdFeatureReqHandler,w
  7905  00A1  00EB               	movwf	USBStdFeatureReqHandler@p
  7906  00A2  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7907  00A3  0567               	andwf	??_USBStdFeatureReqHandler+1,w
  7908  00A4  28AA               	goto	L7
  7909  00A5                     i1l3144:	
  7910                           ;usb_device.c: 2838: }
  7911                           
  7912                           
  7913                           ;usb_device.c: 2839: else
  7914                           ;usb_device.c: 2840: {
  7915                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  7916  00A5  3004               	movlw	4
  7917  00A6  046B               	iorwf	USBStdFeatureReqHandler@p,w
  7918  00A7  00EB               	movwf	USBStdFeatureReqHandler@p
  7919  00A8  3000               	movlw	0
  7920  00A9  046C               	iorwf	USBStdFeatureReqHandler@p+1,w
  7921  00AA                     L7:	
  7922  00AA  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7923                           
  7924                           ;usb_device.c: 2842: }
  7925                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  7926  00AB  1BD4               	btfsc	84,7	;volatile
  7927  00AC  28B9               	goto	i1l3150
  7928                           
  7929                           ;usb_device.c: 2848: {
  7930                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7931  00AD  0854               	movf	84,w	;volatile
  7932  00AE  390F               	andlw	15
  7933  00AF  0709               	addwf	9,w
  7934  00B0  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7935  00B1  0086               	movwf	6
  7936  00B2  3001               	movlw	1	; select bank3/4
  7937  00B3  0087               	movwf	7
  7938  00B4  086B               	movf	USBStdFeatureReqHandler@p,w
  7939  00B5  3FC0               	movwi [0]fsr1
  7940  00B6  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7941  00B7  3FC1               	movwi [1]fsr1
  7942                           
  7943                           ;usb_device.c: 2850: }
  7944  00B8  28C4               	goto	i1l3152
  7945  00B9                     i1l3150:	
  7946                           
  7947                           ;usb_device.c: 2851: else
  7948                           ;usb_device.c: 2852: {
  7949                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7950  00B9  0854               	movf	84,w	;volatile
  7951  00BA  390F               	andlw	15
  7952  00BB  0709               	addwf	9,w
  7953  00BC  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7954  00BD  0086               	movwf	6
  7955  00BE  3001               	movlw	1	; select bank3/4
  7956  00BF  0087               	movwf	7
  7957  00C0  086B               	movf	USBStdFeatureReqHandler@p,w
  7958  00C1  3FC0               	movwi [0]fsr1
  7959  00C2  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7960  00C3  3FC1               	movwi [1]fsr1
  7961  00C4                     i1l3152:	
  7962                           
  7963                           ;usb_device.c: 2854: }
  7964                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  7965  00C4  3003               	movlw	3
  7966  00C5  0651               	xorwf	81,w	;volatile
  7967  00C6  1D03               	btfss	3,2
  7968  00C7  28E6               	goto	i1l3166
  7969                           
  7970                           ;usb_device.c: 2858: {
  7971                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  7972  00C8  086B               	movf	USBStdFeatureReqHandler@p,w
  7973  00C9  0086               	movwf	6
  7974  00CA  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7975  00CB  0087               	movwf	7
  7976  00CC  1F81               	btfss	1,7
  7977  00CD  28DB               	goto	i1l3162
  7978                           
  7979                           ;usb_device.c: 2860: {
  7980                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  7981  00CE  1BD4               	btfsc	84,7	;volatile
  7982  00CF  28D4               	goto	i1l3160
  7983                           
  7984                           ;usb_device.c: 2864: {
  7985                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7986  00D0  0854               	movf	84,w	;volatile
  7987  00D1  390F               	andlw	15
  7988  00D2  3EC3               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7989  00D3  28D7               	goto	L8
  7990  00D4                     i1l3160:	
  7991                           ;usb_device.c: 2866: }
  7992                           
  7993                           
  7994                           ;usb_device.c: 2867: else
  7995                           ;usb_device.c: 2868: {
  7996                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7997  00D4  0854               	movf	84,w	;volatile
  7998  00D5  390F               	andlw	15
  7999  00D6  3EC0               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  8000  00D7                     L8:	
  8001  00D7  0086               	movwf	6
  8002  00D8  3001               	movlw	1	; select bank3/4
  8003  00D9  0087               	movwf	7
  8004  00DA  1481               	bsf	1,1
  8005  00DB                     i1l3162:	
  8006                           
  8007                           ;usb_device.c: 2870: }
  8008                           ;usb_device.c: 2871: }
  8009                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  8010  00DB  086B               	movf	USBStdFeatureReqHandler@p,w
  8011  00DC  0086               	movwf	6
  8012  00DD  086C               	movf	USBStdFeatureReqHandler@p+1,w
  8013  00DE  0087               	movwf	7
  8014  00DF  1501               	bsf	1,2
  8015                           
  8016                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  8017  00E0  086B               	movf	USBStdFeatureReqHandler@p,w
  8018  00E1  0086               	movwf	6
  8019  00E2  086C               	movf	USBStdFeatureReqHandler@p+1,w
  8020  00E3  0087               	movwf	7
  8021  00E4  1781               	bsf	1,7
  8022                           
  8023                           ;usb_device.c: 2876: }
  8024  00E5  0008               	return
  8025  00E6                     i1l3166:	
  8026                           
  8027                           ;usb_device.c: 2877: else
  8028                           ;usb_device.c: 2878: {
  8029                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  8030  00E6  3004               	movlw	4
  8031  00E7  066B               	xorwf	USBStdFeatureReqHandler@p,w
  8032  00E8  00EB               	movwf	USBStdFeatureReqHandler@p
  8033  00E9  3000               	movlw	0
  8034  00EA  066C               	xorwf	USBStdFeatureReqHandler@p+1,w
  8035  00EB  00EC               	movwf	USBStdFeatureReqHandler@p+1
  8036                           
  8037                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  8038  00EC  086B               	movf	USBStdFeatureReqHandler@p,w
  8039  00ED  0086               	movwf	6
  8040  00EE  086C               	movf	USBStdFeatureReqHandler@p+1,w
  8041  00EF  0087               	movwf	7
  8042  00F0  1F81               	btfss	1,7
  8043  00F1  290F               	goto	i1l3176
  8044                           
  8045                           ;usb_device.c: 2885: {
  8046                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  8047  00F2  307F               	movlw	127
  8048  00F3  00E6               	movwf	??_USBStdFeatureReqHandler
  8049  00F4  086B               	movf	USBStdFeatureReqHandler@p,w
  8050  00F5  0086               	movwf	6
  8051  00F6  086C               	movf	USBStdFeatureReqHandler@p+1,w
  8052  00F7  0087               	movwf	7
  8053  00F8  0866               	movf	??_USBStdFeatureReqHandler,w
  8054  00F9  0581               	andwf	1,f
  8055                           
  8056                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  8057  00FA  086B               	movf	USBStdFeatureReqHandler@p,w
  8058  00FB  0086               	movwf	6
  8059  00FC  086C               	movf	USBStdFeatureReqHandler@p+1,w
  8060  00FD  0087               	movwf	7
  8061  00FE  1701               	bsf	1,6
  8062                           
  8063                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  8064  00FF  3000               	movlw	0
  8065  0100  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  8066  0101  3005               	movlw	5
  8067  0102  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  8068  0103  086C               	movf	USBStdFeatureReqHandler@p+1,w
  8069  0104  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  8070  0105  086B               	movf	USBStdFeatureReqHandler@p,w
  8071  0106  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  8072  0107  3002               	movlw	2
  8073  0108  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  8074  0109  3000               	movlw	0
  8075  010A  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  8076  010B  3189  21CA  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  8077                           
  8078                           ;usb_device.c: 2891: }
  8079  010E  2915               	goto	i1l3178
  8080  010F                     i1l3176:	
  8081                           
  8082                           ;usb_device.c: 2892: else
  8083                           ;usb_device.c: 2893: {
  8084                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  8085  010F  0020               	movlb	0	; select bank0
  8086  0110  086B               	movf	USBStdFeatureReqHandler@p,w
  8087  0111  0086               	movwf	6
  8088  0112  086C               	movf	USBStdFeatureReqHandler@p+1,w
  8089  0113  0087               	movwf	7
  8090  0114  1701               	bsf	1,6
  8091  0115                     i1l3178:	
  8092                           
  8093                           ;usb_device.c: 2896: }
  8094                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  8095  0115  3004               	movlw	4
  8096  0116  0020               	movlb	0	; select bank0
  8097  0117  066B               	xorwf	USBStdFeatureReqHandler@p,w
  8098  0118  00EB               	movwf	USBStdFeatureReqHandler@p
  8099  0119  3000               	movlw	0
  8100  011A  066C               	xorwf	USBStdFeatureReqHandler@p+1,w
  8101  011B  00EC               	movwf	USBStdFeatureReqHandler@p+1
  8102                           
  8103                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  8104  011C  18EA               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  8105  011D  2924               	goto	i1l419
  8106  011E  086B               	movf	USBStdFeatureReqHandler@p,w
  8107  011F  0086               	movwf	6
  8108  0120  086C               	movf	USBStdFeatureReqHandler@p+1,w
  8109  0121  0087               	movwf	7
  8110  0122  1F81               	btfss	1,7
  8111  0123  2949               	goto	i1l3190
  8112  0124                     i1l419:	
  8113                           
  8114                           ;usb_device.c: 2907: {
  8115                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  8116  0124  1BD4               	btfsc	84,7	;volatile
  8117  0125  292A               	goto	i1l3186
  8118                           
  8119                           ;usb_device.c: 2909: {
  8120                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  8121  0126  0854               	movf	84,w	;volatile
  8122  0127  390F               	andlw	15
  8123  0128  3EC3               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  8124  0129  292D               	goto	L9
  8125  012A                     i1l3186:	
  8126                           ;usb_device.c: 2911: }
  8127                           
  8128                           
  8129                           ;usb_device.c: 2912: else
  8130                           ;usb_device.c: 2913: {
  8131                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  8132  012A  0854               	movf	84,w	;volatile
  8133  012B  390F               	andlw	15
  8134  012C  3EC0               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  8135  012D                     L9:	
  8136  012D  0086               	movwf	6
  8137  012E  3001               	movlw	1	; select bank3/4
  8138  012F  0087               	movwf	7
  8139  0130  1081               	bcf	1,1
  8140                           
  8141                           ;usb_device.c: 2915: }
  8142                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  8143  0131  303B               	movlw	59
  8144  0132  00E6               	movwf	??_USBStdFeatureReqHandler
  8145  0133  086B               	movf	USBStdFeatureReqHandler@p,w
  8146  0134  0086               	movwf	6
  8147  0135  086C               	movf	USBStdFeatureReqHandler@p+1,w
  8148  0136  0087               	movwf	7
  8149  0137  0866               	movf	??_USBStdFeatureReqHandler,w
  8150  0138  0581               	andwf	1,f
  8151                           
  8152                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  8153  0139  3000               	movlw	0
  8154  013A  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  8155  013B  3005               	movlw	5
  8156  013C  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  8157  013D  086C               	movf	USBStdFeatureReqHandler@p+1,w
  8158  013E  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  8159  013F  086B               	movf	USBStdFeatureReqHandler@p,w
  8160  0140  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  8161  0141  3002               	movlw	2
  8162  0142  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  8163  0143  3000               	movlw	0
  8164  0144  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  8165  0145  3189  21CA  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  8166                           
  8167                           ;usb_device.c: 2921: }
  8168  0148  2952               	goto	i1l3192
  8169  0149                     i1l3190:	
  8170                           
  8171                           ;usb_device.c: 2922: else
  8172                           ;usb_device.c: 2923: {
  8173                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  8174  0149  303B               	movlw	59
  8175  014A  0020               	movlb	0	; select bank0
  8176  014B  00E6               	movwf	??_USBStdFeatureReqHandler
  8177  014C  086B               	movf	USBStdFeatureReqHandler@p,w
  8178  014D  0086               	movwf	6
  8179  014E  086C               	movf	USBStdFeatureReqHandler@p+1,w
  8180  014F  0087               	movwf	7
  8181  0150  0866               	movf	??_USBStdFeatureReqHandler,w
  8182  0151  0581               	andwf	1,f
  8183  0152                     i1l3192:	
  8184                           
  8185                           ;usb_device.c: 2926: }
  8186                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  8187  0152  0020               	movlb	0	; select bank0
  8188  0153  0854               	movf	84,w	;volatile
  8189  0154  390F               	andlw	15
  8190  0155  3E98               	addlw	152
  8191  0156  00E6               	movwf	??_USBStdFeatureReqHandler
  8192  0157  01E7               	clrf	??_USBStdFeatureReqHandler+1
  8193  0158  300E               	movlw	14
  8194  0159  3DE7               	addwfc	??_USBStdFeatureReqHandler+1,f
  8195  015A  0866               	movf	??_USBStdFeatureReqHandler,w
  8196  015B  00E8               	movwf	USBStdFeatureReqHandler@pUEP
  8197  015C  0867               	movf	??_USBStdFeatureReqHandler+1,w
  8198  015D  00E9               	movwf	USBStdFeatureReqHandler@pUEP+1
  8199                           
  8200                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  8201  015E  30FE               	movlw	254
  8202  015F  00E6               	movwf	??_USBStdFeatureReqHandler
  8203  0160  0868               	movf	USBStdFeatureReqHandler@pUEP,w
  8204  0161  0086               	movwf	6
  8205  0162  0869               	movf	USBStdFeatureReqHandler@pUEP+1,w
  8206  0163  0087               	movwf	7
  8207  0164  0866               	movf	??_USBStdFeatureReqHandler,w
  8208  0165  0581               	andwf	1,f
  8209  0166  0008               	return
  8210  0167                     __end_of_USBStdFeatureReqHandler:	
  8211                           
  8212                           	psect	text34
  8213  09CA                     __ptext34:	
  8214 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  8215 ;; Defined at:
  8216 ;;		line 51 in file "../src/usb_events.c"
  8217 ;; Parameters:    Size  Location     Type
  8218 ;;  event           2    0[BANK0 ] enum E2645
  8219 ;;  pdata           2    2[BANK0 ] PTR void 
  8220 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
  8221 ;;		 -> BDT(48), 
  8222 ;;  size            2    4[BANK0 ] unsigned int 
  8223 ;; Auto vars:     Size  Location     Type
  8224 ;;		None
  8225 ;; Return value:  Size  Location     Type
  8226 ;;                  1    wreg      unsigned char 
  8227 ;; Registers used:
  8228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8229 ;; Tracked objects:
  8230 ;;		On entry : 0/0
  8231 ;;		On exit  : 0/0
  8232 ;;		Unchanged: 0/0
  8233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8234 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8237 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8238 ;;Total ram usage:        6 bytes
  8239 ;; Hardware stack levels used:    1
  8240 ;; Hardware stack levels required when called:    3
  8241 ;; This function calls:
  8242 ;;		_USBCheckCDCRequest
  8243 ;;		i1_CDCInitEP
  8244 ;;		i1_SYSTEM_Initialize
  8245 ;; This function is called by:
  8246 ;;		_USBDeviceTasks
  8247 ;;		_USBStdSetCfgHandler
  8248 ;;		_USBSuspend
  8249 ;;		_USBWakeFromSuspend
  8250 ;;		_USBCtrlTrfSetupHandler
  8251 ;;		_USBCheckStdRequest
  8252 ;;		_USBStdFeatureReqHandler
  8253 ;; This function uses a non-reentrant model
  8254 ;;
  8255                           
  8256                           
  8257                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  8258  09CA                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  8259                           
  8260                           ;usb_events.c: 53: switch( (int) event )
  8261                           
  8262                           ;incstack = 0
  8263                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  8264  09CA  29D9               	goto	i1l2882
  8265  09CB                     i1l2872:	
  8266                           ;usb_events.c: 64: case EVENT_SUSPEND:
  8267                           
  8268                           ;usb_events.c: 62: break;
  8269                           
  8270                           ;usb_events.c: 58: case EVENT_SOF:
  8271                           
  8272                           ;usb_events.c: 56: break;
  8273                           
  8274                           ;usb_events.c: 54: {
  8275                           ;usb_events.c: 55: case EVENT_TRANSFER:
  8276                           
  8277                           
  8278                           ;usb_events.c: 74: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
  8279  09CB  3001               	movlw	1
  8280  09CC  3197  27A4         	fcall	i1_SYSTEM_Initialize
  8281                           
  8282                           ;usb_events.c: 75: break;
  8283  09CE  0008               	return
  8284  09CF                     i1l2874:	
  8285                           ;usb_events.c: 77: case EVENT_RESUME:
  8286                           
  8287                           
  8288                           ;usb_events.c: 85: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
  8289  09CF  3002               	movlw	2
  8290  09D0  3197  27A4         	fcall	i1_SYSTEM_Initialize
  8291                           
  8292                           ;usb_events.c: 86: break;
  8293  09D2  0008               	return
  8294  09D3                     i1l2876:	
  8295                           ;usb_events.c: 88: case EVENT_CONFIGURED:
  8296                           
  8297                           
  8298                           ;usb_events.c: 91: CDCInitEP();
  8299  09D3  3189  215E         	fcall	i1_CDCInitEP
  8300                           
  8301                           ;usb_events.c: 96: break;
  8302                           
  8303                           ;usb_events.c: 95: case EVENT_SET_DESCRIPTOR:
  8304                           
  8305                           ;usb_events.c: 93: break;
  8306  09D5  0008               	return
  8307  09D6                     i1l2878:	
  8308                           ;usb_events.c: 98: case EVENT_EP0_REQUEST:
  8309                           
  8310                           
  8311                           ;usb_events.c: 101: USBCheckCDCRequest();
  8312  09D6  318C  245A         	fcall	_USBCheckCDCRequest
  8313                           
  8314                           ;usb_events.c: 112: }
  8315                           
  8316                           ;usb_events.c: 111: break;
  8317                           
  8318                           ;usb_events.c: 110: default:
  8319                           
  8320                           ;usb_events.c: 108: break;
  8321                           
  8322                           ;usb_events.c: 107: case EVENT_TRANSFER_TERMINATED:
  8323                           
  8324                           ;usb_events.c: 105: break;
  8325                           
  8326                           ;usb_events.c: 104: case EVENT_BUS_ERROR:
  8327                           
  8328                           ;usb_events.c: 102: break;
  8329  09D8  0008               	return
  8330  09D9                     i1l2882:	
  8331                           
  8332                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  8333                           ; Switch size 1, requested type "space"
  8334                           ; Number of cases is 2, Range of values is 0 to 127
  8335                           ; switch strategies available:
  8336                           ; Name         Instructions Cycles
  8337                           ; simple_byte            7     4 (average)
  8338                           ; direct_byte          262     6 (fixed)
  8339                           ; jumptable            260     6 (fixed)
  8340                           ;	Chosen strategy is simple_byte
  8341  09D9  0020               	movlb	0	; select bank0
  8342  09DA  0861               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  8343  09DB  3A00               	xorlw	0	; case 0
  8344  09DC  1903               	skipnz
  8345  09DD  29E2               	goto	i1l4880
  8346  09DE  3A7F               	xorlw	127	; case 127
  8347  09DF  1903               	skipnz
  8348  09E0  29FC               	goto	i1l4882
  8349  09E1  2A01               	goto	i1l35
  8350  09E2                     i1l4880:	
  8351                           
  8352                           ; Switch size 1, requested type "space"
  8353                           ; Number of cases is 8, Range of values is 1 to 117
  8354                           ; switch strategies available:
  8355                           ; Name         Instructions Cycles
  8356                           ; simple_byte           25    13 (average)
  8357                           ; direct_byte          243     9 (fixed)
  8358                           ; jumptable            263     9 (fixed)
  8359                           ;	Chosen strategy is simple_byte
  8360  09E2  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  8361  09E3  3A01               	xorlw	1	; case 1
  8362  09E4  1903               	skipnz
  8363  09E5  29D3               	goto	i1l2876
  8364  09E6  3A03               	xorlw	3	; case 2
  8365  09E7  1903               	skipnz
  8366  09E8  2A01               	goto	i1l35
  8367  09E9  3A01               	xorlw	1	; case 3
  8368  09EA  1903               	skipnz
  8369  09EB  29D6               	goto	i1l2878
  8370  09EC  3A06               	xorlw	6	; case 5
  8371  09ED  1903               	skipnz
  8372  09EE  2A01               	goto	i1l35
  8373  09EF  3A77               	xorlw	119	; case 114
  8374  09F0  1903               	skipnz
  8375  09F1  2A01               	goto	i1l35
  8376  09F2  3A01               	xorlw	1	; case 115
  8377  09F3  1903               	skipnz
  8378  09F4  2A01               	goto	i1l35
  8379  09F5  3A07               	xorlw	7	; case 116
  8380  09F6  1903               	skipnz
  8381  09F7  29CF               	goto	i1l2874
  8382  09F8  3A01               	xorlw	1	; case 117
  8383  09F9  1903               	skipnz
  8384  09FA  29CB               	goto	i1l2872
  8385  09FB  2A01               	goto	i1l35
  8386  09FC                     i1l4882:	
  8387                           
  8388                           ; Switch size 1, requested type "space"
  8389                           ; Number of cases is 1, Range of values is 255 to 255
  8390                           ; switch strategies available:
  8391                           ; Name         Instructions Cycles
  8392                           ; simple_byte            4     3 (average)
  8393                           ; direct_byte            7     5 (fixed)
  8394                           ; jumptable            263     9 (fixed)
  8395                           ;	Chosen strategy is simple_byte
  8396  09FC  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  8397  09FD  3AFF               	xorlw	255	; case 255
  8398  09FE  1903               	skipnz
  8399  09FF  2A01               	goto	i1l35
  8400  0A00  2A01               	goto	i1l35
  8401  0A01                     i1l35:	
  8402                           ;usb_events.c: 113: return 1;
  8403                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  8404                           
  8405  0A01  0008               	return
  8406  0A02                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  8407                           
  8408                           	psect	text35
  8409  17A4                     __ptext35:	
  8410 ;; *************** function i1_SYSTEM_Initialize *****************
  8411 ;; Defined at:
  8412 ;;		line 82 in file "system.c"
  8413 ;; Parameters:    Size  Location     Type
  8414 ;;  state           1    wreg     enum E2598
  8415 ;; Auto vars:     Size  Location     Type
  8416 ;;  state           1    0[COMMON] enum E2598
  8417 ;; Return value:  Size  Location     Type
  8418 ;;                  1    wreg      void 
  8419 ;; Registers used:
  8420 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8421 ;; Tracked objects:
  8422 ;;		On entry : 0/0
  8423 ;;		On exit  : 0/0
  8424 ;;		Unchanged: 0/0
  8425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8427 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8429 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8430 ;;Total ram usage:        1 bytes
  8431 ;; Hardware stack levels used:    1
  8432 ;; This function calls:
  8433 ;;		Nothing
  8434 ;; This function is called by:
  8435 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8436 ;; This function uses a non-reentrant model
  8437 ;;
  8438                           
  8439                           
  8440                           ;psect for function i1_SYSTEM_Initialize
  8441  17A4                     i1_SYSTEM_Initialize:	
  8442                           
  8443                           ;incstack = 0
  8444                           ; Regs used in i1_SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0]
  8445                           ;i1SYSTEM_Initialize@state stored from wreg
  8446  17A4  00F0               	movwf	i1SYSTEM_Initialize@state
  8447                           
  8448                           ;system.c: 84: switch(state)
  8449  17A5  2FAD               	goto	i1l2868
  8450  17A6                     i1l2864:	
  8451                           ;system.c: 85: {
  8452                           ;system.c: 86: case SYSTEM_STATE_USB_START:
  8453                           
  8454                           
  8455                           ;system.c: 90: OSCCON = 0xFC;
  8456  17A6  30FC               	movlw	252
  8457  17A7  0021               	movlb	1	; select bank1
  8458  17A8  0099               	movwf	25	;volatile
  8459                           
  8460                           ;system.c: 91: ACTCON = 0x90;
  8461  17A9  3090               	movlw	144
  8462  17AA  0027               	movlb	7	; select bank7
  8463  17AB  009B               	movwf	27	;volatile
  8464                           
  8465                           ;system.c: 102: }
  8466                           
  8467                           ;system.c: 101: break;
  8468                           
  8469                           ;system.c: 100: case SYSTEM_STATE_USB_RESUME:
  8470                           
  8471                           ;system.c: 98: break;
  8472                           
  8473                           ;system.c: 97: case SYSTEM_STATE_USB_SUSPEND:
  8474                           
  8475                           ;system.c: 95: break;
  8476  17AC  0008               	return
  8477  17AD                     i1l2868:	
  8478  17AD  0870               	movf	i1SYSTEM_Initialize@state,w
  8479                           
  8480                           ; Switch size 1, requested type "space"
  8481                           ; Number of cases is 3, Range of values is 0 to 2
  8482                           ; switch strategies available:
  8483                           ; Name         Instructions Cycles
  8484                           ; simple_byte           10     6 (average)
  8485                           ; direct_byte           12     6 (fixed)
  8486                           ; jumptable            260     6 (fixed)
  8487                           ;	Chosen strategy is simple_byte
  8488  17AE  3A00               	xorlw	0	; case 0
  8489  17AF  1903               	skipnz
  8490  17B0  2FA6               	goto	i1l2864
  8491  17B1  3A01               	xorlw	1	; case 1
  8492  17B2  1903               	skipnz
  8493  17B3  2FB8               	goto	i1l567
  8494  17B4  3A03               	xorlw	3	; case 2
  8495  17B5  1903               	skipnz
  8496  17B6  2FB8               	goto	i1l567
  8497  17B7  2FB8               	goto	i1l567
  8498  17B8                     i1l567:	
  8499  17B8  0008               	return
  8500  17B9                     __end_ofi1_SYSTEM_Initialize:	
  8501                           
  8502                           	psect	text36
  8503  095E                     __ptext36:	
  8504 ;; *************** function i1_CDCInitEP *****************
  8505 ;; Defined at:
  8506 ;;		line 294 in file "../lib/usb/src/usb_device_cdc.c"
  8507 ;; Parameters:    Size  Location     Type
  8508 ;;		None
  8509 ;; Auto vars:     Size  Location     Type
  8510 ;;		None
  8511 ;; Return value:  Size  Location     Type
  8512 ;;                  1    wreg      void 
  8513 ;; Registers used:
  8514 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8515 ;; Tracked objects:
  8516 ;;		On entry : 0/0
  8517 ;;		On exit  : 0/0
  8518 ;;		Unchanged: 0/0
  8519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8522 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8524 ;;Total ram usage:        1 bytes
  8525 ;; Hardware stack levels used:    1
  8526 ;; Hardware stack levels required when called:    2
  8527 ;; This function calls:
  8528 ;;		i1_USBEnableEndpoint
  8529 ;;		i1_USBTransferOnePacket
  8530 ;; This function is called by:
  8531 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8532 ;; This function uses a non-reentrant model
  8533 ;;
  8534                           
  8535                           
  8536                           ;psect for function i1_CDCInitEP
  8537  095E                     i1_CDCInitEP:	
  8538                           
  8539                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
  8540                           
  8541                           ;incstack = 0
  8542                           ; Regs used in i1_CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8543  095E  3000               	movlw	0
  8544  095F  0023               	movlb	3	; select bank3
  8545  0960  00E6               	movwf	(_line_coding+3)^(0+384)
  8546  0961  3000               	movlw	0
  8547  0962  00E5               	movwf	(_line_coding+2)^(0+384)
  8548  0963  304B               	movlw	75
  8549  0964  00E4               	movwf	(_line_coding+1)^(0+384)
  8550  0965  3000               	movlw	0
  8551  0966  00E3               	movwf	_line_coding^(0+384)
  8552                           
  8553                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  8554  0967  01E7               	clrf	(_line_coding^(0+384)+4)
  8555                           
  8556                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  8557  0968  01E8               	clrf	(_line_coding^(0+384)+5)
  8558                           
  8559                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  8560  0969  3008               	movlw	8
  8561  096A  00FD               	movwf	??i1_CDCInitEP
  8562  096B  087D               	movf	??i1_CDCInitEP,w
  8563  096C  00E9               	movwf	(_line_coding^(0+384)+6)
  8564                           
  8565                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  8566  096D  01DC               	clrf	_cdc_rx_len^(0+384)
  8567                           
  8568                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  8569  096E  301A               	movlw	26
  8570  096F  00FD               	movwf	??i1_CDCInitEP
  8571  0970  087D               	movf	??i1_CDCInitEP,w
  8572  0971  00F7               	movwf	i1USBEnableEndpoint@options
  8573  0972  3001               	movlw	1
  8574  0973  3188  205A  3189   	fcall	i1_USBEnableEndpoint
  8575                           
  8576                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  8577  0976  301E               	movlw	30
  8578  0977  00FD               	movwf	??i1_CDCInitEP
  8579  0978  087D               	movf	??i1_CDCInitEP,w
  8580  0979  00F7               	movwf	i1USBEnableEndpoint@options
  8581  097A  3002               	movlw	2
  8582  097B  3188  205A  3189   	fcall	i1_USBEnableEndpoint
  8583                           
  8584                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  8585  097E  01F0               	clrf	i1USBTransferOnePacket@dir
  8586  097F  3020               	movlw	32
  8587  0980  00F1               	movwf	i1USBTransferOnePacket@data
  8588  0981  3001               	movlw	1
  8589  0982  00F2               	movwf	i1USBTransferOnePacket@data+1
  8590  0983  3040               	movlw	64
  8591  0984  00FD               	movwf	??i1_CDCInitEP
  8592  0985  087D               	movf	??i1_CDCInitEP,w
  8593  0986  00F3               	movwf	i1USBTransferOnePacket@len
  8594  0987  3002               	movlw	2
  8595  0988  318E  2674         	fcall	i1_USBTransferOnePacket
  8596  098A  0871               	movf	?i1_USBTransferOnePacket+1,w
  8597  098B  0023               	movlb	3	; select bank3
  8598  098C  00C9               	movwf	(_CDCDataOutHandle+1)^(0+384)
  8599  098D  0870               	movf	?i1_USBTransferOnePacket,w
  8600  098E  00C8               	movwf	_CDCDataOutHandle^(0+384)
  8601                           
  8602                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  8603  098F  01C6               	clrf	_CDCDataInHandle^(0+384)
  8604  0990  01C7               	clrf	(_CDCDataInHandle+1)^(0+384)
  8605                           
  8606                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
  8607  0991  01DD               	clrf	_cdc_trf_state^(0+384)
  8608  0992  0008               	return
  8609  0993                     __end_ofi1_CDCInitEP:	
  8610                           
  8611                           	psect	text37
  8612  0E74                     __ptext37:	
  8613 ;; *************** function i1_USBTransferOnePacket *****************
  8614 ;; Defined at:
  8615 ;;		line 995 in file "../lib/usb/src/usb_device.c"
  8616 ;; Parameters:    Size  Location     Type
  8617 ;;  ep              1    wreg     unsigned char 
  8618 ;;  dir             1    0[COMMON] unsigned char 
  8619 ;;  data            2    1[COMMON] PTR unsigned char 
  8620 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  8621 ;;  len             1    3[COMMON] unsigned char 
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;  ep              1    8[COMMON] unsigned char 
  8624 ;;  USBTransferO    2    9[COMMON] PTR volatile struct __BD
  8625 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  8626 ;; Return value:  Size  Location     Type
  8627 ;;                  2    0[COMMON] PTR void 
  8628 ;; Registers used:
  8629 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8630 ;; Tracked objects:
  8631 ;;		On entry : 0/0
  8632 ;;		On exit  : 0/0
  8633 ;;		Unchanged: 0/0
  8634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8635 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8636 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8637 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8638 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8639 ;;Total ram usage:       11 bytes
  8640 ;; Hardware stack levels used:    1
  8641 ;; This function calls:
  8642 ;;		Nothing
  8643 ;; This function is called by:
  8644 ;;		i1_CDCInitEP
  8645 ;; This function uses a non-reentrant model
  8646 ;;
  8647                           
  8648                           
  8649                           ;psect for function i1_USBTransferOnePacket
  8650  0E74                     i1_USBTransferOnePacket:	
  8651                           
  8652                           ;incstack = 0
  8653                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  8654                           ;i1USBTransferOnePacket@ep stored from wreg
  8655  0E74  00F8               	movwf	i1USBTransferOnePacket@ep
  8656                           
  8657                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  8658                           ;usb_device.c: 1000: if(dir != 0)
  8659  0E75  0870               	movf	i1USBTransferOnePacket@dir,w
  8660  0E76  1903               	btfsc	3,2
  8661  0E77  2E81               	goto	i1l2774
  8662                           
  8663                           ;usb_device.c: 1001: {
  8664                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  8665  0E78  3578               	lslf	i1USBTransferOnePacket@ep,w
  8666  0E79  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  8667  0E7A  0086               	movwf	6
  8668  0E7B  3001               	movlw	1	; select bank3/4
  8669  0E7C  0087               	movwf	7
  8670  0E7D  3F40               	moviw [0]fsr1
  8671  0E7E  00F9               	movwf	i1USBTransferOnePacket@handle
  8672  0E7F  3F41               	moviw [1]fsr1
  8673  0E80  2E89               	goto	L10
  8674  0E81                     i1l2774:	
  8675                           ;usb_device.c: 1004: }
  8676                           
  8677                           
  8678                           ;usb_device.c: 1005: else
  8679                           ;usb_device.c: 1006: {
  8680                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  8681  0E81  3578               	lslf	i1USBTransferOnePacket@ep,w
  8682  0E82  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8683  0E83  0086               	movwf	6
  8684  0E84  3001               	movlw	1	; select bank3/4
  8685  0E85  0087               	movwf	7
  8686  0E86  3F40               	moviw [0]fsr1
  8687  0E87  00F9               	movwf	i1USBTransferOnePacket@handle
  8688  0E88  3F41               	moviw [1]fsr1
  8689  0E89                     L10:	
  8690  0E89  00FA               	movwf	i1USBTransferOnePacket@handle+1
  8691                           
  8692                           ;usb_device.c: 1009: }
  8693                           ;usb_device.c: 1013: if(handle == 0)
  8694  0E8A  0879               	movf	i1USBTransferOnePacket@handle,w
  8695  0E8B  047A               	iorwf	i1USBTransferOnePacket@handle+1,w
  8696  0E8C  1D03               	btfss	3,2
  8697  0E8D  2E91               	goto	i1l2782
  8698                           
  8699                           ;usb_device.c: 1014: {
  8700                           ;usb_device.c: 1015: return 0;
  8701  0E8E  01F0               	clrf	?i1_USBTransferOnePacket
  8702  0E8F  01F1               	clrf	?i1_USBTransferOnePacket+1
  8703  0E90  0008               	return
  8704  0E91                     i1l2782:	
  8705                           
  8706                           ;usb_device.c: 1016: }
  8707                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  8708  0E91  30FF               	movlw	255
  8709  0E92  0571               	andwf	i1USBTransferOnePacket@data,w
  8710  0E93  00F4               	movwf	??i1_USBTransferOnePacket
  8711  0E94  307F               	movlw	127
  8712  0E95  0572               	andwf	i1USBTransferOnePacket@data+1,w
  8713  0E96  00F5               	movwf	??i1_USBTransferOnePacket+1
  8714  0E97  0879               	movf	i1USBTransferOnePacket@handle,w
  8715  0E98  0086               	movwf	6
  8716  0E99  087A               	movf	i1USBTransferOnePacket@handle+1,w
  8717  0E9A  0087               	movwf	7
  8718  0E9B  3142               	addfsr 1,2
  8719  0E9C  0874               	movf	??i1_USBTransferOnePacket,w
  8720  0E9D  3FC0               	movwi [0]fsr1
  8721  0E9E  0875               	movf	??i1_USBTransferOnePacket+1,w
  8722  0E9F  3FC1               	movwi [1]fsr1
  8723                           
  8724                           ;usb_device.c: 1030: handle->CNT = len;
  8725  0EA0  0879               	movf	i1USBTransferOnePacket@handle,w
  8726  0EA1  3E01               	addlw	1
  8727  0EA2  00F4               	movwf	??i1_USBTransferOnePacket
  8728  0EA3  3000               	movlw	0
  8729  0EA4  3D7A               	addwfc	i1USBTransferOnePacket@handle+1,w
  8730  0EA5  00F5               	movwf	??i1_USBTransferOnePacket+1
  8731  0EA6  0874               	movf	??i1_USBTransferOnePacket,w
  8732  0EA7  0086               	movwf	6
  8733  0EA8  0875               	movf	??i1_USBTransferOnePacket+1,w
  8734  0EA9  0087               	movwf	7
  8735  0EAA  0873               	movf	i1USBTransferOnePacket@len,w
  8736  0EAB  0081               	movwf	1
  8737                           
  8738                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  8739  0EAC  3040               	movlw	64
  8740  0EAD  00F4               	movwf	??i1_USBTransferOnePacket
  8741  0EAE  0879               	movf	i1USBTransferOnePacket@handle,w
  8742  0EAF  0086               	movwf	6
  8743  0EB0  087A               	movf	i1USBTransferOnePacket@handle+1,w
  8744  0EB1  0087               	movwf	7
  8745  0EB2  0874               	movf	??i1_USBTransferOnePacket,w
  8746  0EB3  0581               	andwf	1,f
  8747                           
  8748                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  8749  0EB4  0879               	movf	i1USBTransferOnePacket@handle,w
  8750  0EB5  0086               	movwf	6
  8751  0EB6  087A               	movf	i1USBTransferOnePacket@handle+1,w
  8752  0EB7  0087               	movwf	7
  8753  0EB8  1581               	bsf	1,3
  8754                           
  8755                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  8756  0EB9  0879               	movf	i1USBTransferOnePacket@handle,w
  8757  0EBA  0086               	movwf	6
  8758  0EBB  087A               	movf	i1USBTransferOnePacket@handle+1,w
  8759  0EBC  0087               	movwf	7
  8760  0EBD  1781               	bsf	1,7
  8761                           
  8762                           ;usb_device.c: 1036: if(dir != 0)
  8763  0EBE  0870               	movf	i1USBTransferOnePacket@dir,w
  8764  0EBF  1903               	btfsc	3,2
  8765  0EC0  2EDA               	goto	i1l2792
  8766                           
  8767                           ;usb_device.c: 1037: {
  8768                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  8769  0EC1  3578               	lslf	i1USBTransferOnePacket@ep,w
  8770  0EC2  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  8771  0EC3  0086               	movwf	6
  8772  0EC4  3001               	movlw	1	; select bank3/4
  8773  0EC5  0087               	movwf	7
  8774  0EC6  3F40               	moviw [0]fsr1
  8775  0EC7  00F4               	movwf	??i1_USBTransferOnePacket
  8776  0EC8  3F41               	moviw [1]fsr1
  8777  0EC9  00F5               	movwf	??i1_USBTransferOnePacket+1
  8778  0ECA  3004               	movlw	4
  8779  0ECB  0674               	xorwf	??i1_USBTransferOnePacket,w
  8780  0ECC  00F6               	movwf	??i1_USBTransferOnePacket+2
  8781  0ECD  3000               	movlw	0
  8782  0ECE  0675               	xorwf	??i1_USBTransferOnePacket+1,w
  8783  0ECF  00F7               	movwf	??i1_USBTransferOnePacket+3
  8784  0ED0  3578               	lslf	i1USBTransferOnePacket@ep,w
  8785  0ED1  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  8786  0ED2  0086               	movwf	6
  8787  0ED3  3001               	movlw	1	; select bank3/4
  8788  0ED4  0087               	movwf	7
  8789  0ED5  0876               	movf	??i1_USBTransferOnePacket+2,w
  8790  0ED6  3FC0               	movwi [0]fsr1
  8791  0ED7  0877               	movf	??i1_USBTransferOnePacket+3,w
  8792  0ED8  3FC1               	movwi [1]fsr1
  8793                           
  8794                           ;usb_device.c: 1040: }
  8795  0ED9  2EF2               	goto	i1l2794
  8796  0EDA                     i1l2792:	
  8797                           
  8798                           ;usb_device.c: 1041: else
  8799                           ;usb_device.c: 1042: {
  8800                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  8801  0EDA  3578               	lslf	i1USBTransferOnePacket@ep,w
  8802  0EDB  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8803  0EDC  0086               	movwf	6
  8804  0EDD  3001               	movlw	1	; select bank3/4
  8805  0EDE  0087               	movwf	7
  8806  0EDF  3F40               	moviw [0]fsr1
  8807  0EE0  00F4               	movwf	??i1_USBTransferOnePacket
  8808  0EE1  3F41               	moviw [1]fsr1
  8809  0EE2  00F5               	movwf	??i1_USBTransferOnePacket+1
  8810  0EE3  3004               	movlw	4
  8811  0EE4  0674               	xorwf	??i1_USBTransferOnePacket,w
  8812  0EE5  00F6               	movwf	??i1_USBTransferOnePacket+2
  8813  0EE6  3000               	movlw	0
  8814  0EE7  0675               	xorwf	??i1_USBTransferOnePacket+1,w
  8815  0EE8  00F7               	movwf	??i1_USBTransferOnePacket+3
  8816  0EE9  3578               	lslf	i1USBTransferOnePacket@ep,w
  8817  0EEA  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8818  0EEB  0086               	movwf	6
  8819  0EEC  3001               	movlw	1	; select bank3/4
  8820  0EED  0087               	movwf	7
  8821  0EEE  0876               	movf	??i1_USBTransferOnePacket+2,w
  8822  0EEF  3FC0               	movwi [0]fsr1
  8823  0EF0  0877               	movf	??i1_USBTransferOnePacket+3,w
  8824  0EF1  3FC1               	movwi [1]fsr1
  8825  0EF2                     i1l2794:	
  8826                           
  8827                           ;usb_device.c: 1045: }
  8828                           ;usb_device.c: 1046: return (void*)handle;
  8829  0EF2  087A               	movf	i1USBTransferOnePacket@handle+1,w
  8830  0EF3  00F1               	movwf	?i1_USBTransferOnePacket+1
  8831  0EF4  0879               	movf	i1USBTransferOnePacket@handle,w
  8832  0EF5  00F0               	movwf	?i1_USBTransferOnePacket
  8833  0EF6  0008               	return
  8834  0EF7                     __end_ofi1_USBTransferOnePacket:	
  8835                           
  8836                           	psect	text38
  8837  085A                     __ptext38:	
  8838 ;; *************** function i1_USBEnableEndpoint *****************
  8839 ;; Defined at:
  8840 ;;		line 878 in file "../lib/usb/src/usb_device.c"
  8841 ;; Parameters:    Size  Location     Type
  8842 ;;  ep              1    wreg     unsigned char 
  8843 ;;  options         1    7[COMMON] unsigned char 
  8844 ;; Auto vars:     Size  Location     Type
  8845 ;;  ep              1   12[COMMON] unsigned char 
  8846 ;;  USBEnableEnd    2   10[COMMON] PTR unsigned char 
  8847 ;;		 -> UEP0(1), 
  8848 ;; Return value:  Size  Location     Type
  8849 ;;                  1    wreg      void 
  8850 ;; Registers used:
  8851 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8852 ;; Tracked objects:
  8853 ;;		On entry : 0/0
  8854 ;;		On exit  : 0/0
  8855 ;;		Unchanged: 0/0
  8856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8857 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8858 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8859 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8860 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8861 ;;Total ram usage:        6 bytes
  8862 ;; Hardware stack levels used:    1
  8863 ;; Hardware stack levels required when called:    1
  8864 ;; This function calls:
  8865 ;;		i1_USBConfigureEndpoint
  8866 ;; This function is called by:
  8867 ;;		i1_CDCInitEP
  8868 ;; This function uses a non-reentrant model
  8869 ;;
  8870                           
  8871                           
  8872                           ;psect for function i1_USBEnableEndpoint
  8873  085A                     i1_USBEnableEndpoint:	
  8874                           
  8875                           ;incstack = 0
  8876                           ; Regs used in i1_USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8877                           ;i1USBEnableEndpoint@ep stored from wreg
  8878  085A  00FC               	movwf	i1USBEnableEndpoint@ep
  8879                           
  8880                           ;usb_device.c: 880: unsigned char* p;
  8881                           ;usb_device.c: 884: if(options & 0x04)
  8882  085B  1D77               	btfss	i1USBEnableEndpoint@options,2
  8883  085C  2862               	goto	i1l2762
  8884                           
  8885                           ;usb_device.c: 885: {
  8886                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  8887  085D  01F0               	clrf	i1USBConfigureEndpoint@direction
  8888  085E  087C               	movf	i1USBEnableEndpoint@ep,w
  8889  085F  318A  227D  3188   	fcall	i1_USBConfigureEndpoint
  8890  0862                     i1l2762:	
  8891                           
  8892                           ;usb_device.c: 887: }
  8893                           ;usb_device.c: 888: if(options & 0x02)
  8894  0862  1CF7               	btfss	i1USBEnableEndpoint@options,1
  8895  0863  2869               	goto	i1l2766
  8896                           
  8897                           ;usb_device.c: 889: {
  8898                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  8899  0864  01F0               	clrf	i1USBConfigureEndpoint@direction
  8900  0865  0AF0               	incf	i1USBConfigureEndpoint@direction,f
  8901  0866  087C               	movf	i1USBEnableEndpoint@ep,w
  8902  0867  318A  227D         	fcall	i1_USBConfigureEndpoint
  8903  0869                     i1l2766:	
  8904                           
  8905                           ;usb_device.c: 891: }
  8906                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  8907  0869  087C               	movf	i1USBEnableEndpoint@ep,w
  8908  086A  3E98               	addlw	152
  8909  086B  00F8               	movwf	??i1_USBEnableEndpoint
  8910  086C  01F9               	clrf	??i1_USBEnableEndpoint+1
  8911  086D  300E               	movlw	14
  8912  086E  3DF9               	addwfc	??i1_USBEnableEndpoint+1,f
  8913  086F  0878               	movf	??i1_USBEnableEndpoint,w
  8914  0870  00FA               	movwf	i1USBEnableEndpoint@p
  8915  0871  0879               	movf	??i1_USBEnableEndpoint+1,w
  8916  0872  00FB               	movwf	i1USBEnableEndpoint@p+1
  8917                           
  8918                           ;usb_device.c: 901: *p = options;
  8919  0873  087A               	movf	i1USBEnableEndpoint@p,w
  8920  0874  0086               	movwf	6
  8921  0875  087B               	movf	i1USBEnableEndpoint@p+1,w
  8922  0876  0087               	movwf	7
  8923  0877  0877               	movf	i1USBEnableEndpoint@options,w
  8924  0878  0081               	movwf	1
  8925  0879  0008               	return
  8926  087A                     __end_ofi1_USBEnableEndpoint:	
  8927                           
  8928                           	psect	text39
  8929  0A7D                     __ptext39:	
  8930 ;; *************** function i1_USBConfigureEndpoint *****************
  8931 ;; Defined at:
  8932 ;;		line 1543 in file "../lib/usb/src/usb_device.c"
  8933 ;; Parameters:    Size  Location     Type
  8934 ;;  EPNum           1    wreg     unsigned char 
  8935 ;;  direction       1    0[COMMON] unsigned char 
  8936 ;; Auto vars:     Size  Location     Type
  8937 ;;  EPNum           1    5[COMMON] unsigned char 
  8938 ;;  USBConfigure    1    6[COMMON] PTR volatile struct __BD
  8939 ;;		 -> BDT(48), 
  8940 ;; Return value:  Size  Location     Type
  8941 ;;                  1    wreg      void 
  8942 ;; Registers used:
  8943 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8944 ;; Tracked objects:
  8945 ;;		On entry : 0/0
  8946 ;;		On exit  : 0/0
  8947 ;;		Unchanged: 0/0
  8948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8949 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8950 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8951 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8952 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8953 ;;Total ram usage:        7 bytes
  8954 ;; Hardware stack levels used:    1
  8955 ;; This function calls:
  8956 ;;		Nothing
  8957 ;; This function is called by:
  8958 ;;		i1_USBEnableEndpoint
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962                           
  8963                           ;psect for function i1_USBConfigureEndpoint
  8964  0A7D                     i1_USBConfigureEndpoint:	
  8965                           
  8966                           ;incstack = 0
  8967                           ; Regs used in i1_USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  8968                           ;i1USBConfigureEndpoint@EPNum stored from wreg
  8969  0A7D  00F5               	movwf	i1USBConfigureEndpoint@EPNum
  8970                           
  8971                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  8972                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  8973  0A7E  3020               	movlw	32
  8974  0A7F  00F1               	movwf	??i1_USBConfigureEndpoint
  8975  0A80  0871               	movf	??i1_USBConfigureEndpoint,w
  8976  0A81  00F6               	movwf	i1USBConfigureEndpoint@handle
  8977                           
  8978                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  8979  0A82  0870               	movf	i1USBConfigureEndpoint@direction,w
  8980  0A83  00F1               	movwf	??i1_USBConfigureEndpoint
  8981  0A84  3001               	movlw	1
  8982  0A85                     u185_25:	
  8983  0A85  35F1               	lslf	??i1_USBConfigureEndpoint,f
  8984  0A86  0B89               	decfsz	9,f
  8985  0A87  2A85               	goto	u185_25
  8986  0A88  0875               	movf	i1USBConfigureEndpoint@EPNum,w
  8987  0A89  00F2               	movwf	??i1_USBConfigureEndpoint+1
  8988  0A8A  3001               	movlw	1
  8989  0A8B                     u186_25:	
  8990  0A8B  35F2               	lslf	??i1_USBConfigureEndpoint+1,f
  8991  0A8C  3EFF               	addlw	-1
  8992  0A8D  1D03               	skipz
  8993  0A8E  2A8B               	goto	u186_25
  8994  0A8F  3572               	lslf	??i1_USBConfigureEndpoint+1,w
  8995  0A90  0771               	addwf	??i1_USBConfigureEndpoint,w
  8996  0A91  00F3               	movwf	??i1_USBConfigureEndpoint+2
  8997  0A92  3001               	movlw	1
  8998  0A93                     u187_25:	
  8999  0A93  35F3               	lslf	??i1_USBConfigureEndpoint+2,f
  9000  0A94  3EFF               	addlw	-1
  9001  0A95  1D03               	skipz
  9002  0A96  2A93               	goto	u187_25
  9003  0A97  3573               	lslf	??i1_USBConfigureEndpoint+2,w
  9004  0A98  00F4               	movwf	??i1_USBConfigureEndpoint+3
  9005  0A99  0874               	movf	??i1_USBConfigureEndpoint+3,w
  9006  0A9A  07F6               	addwf	i1USBConfigureEndpoint@handle,f
  9007                           
  9008                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  9009  0A9B  0876               	movf	i1USBConfigureEndpoint@handle,w
  9010  0A9C  0086               	movwf	6
  9011  0A9D  0187               	clrf	7
  9012  0A9E  1381               	bcf	1,7
  9013                           
  9014                           ;usb_device.c: 1557: if(direction == 0)
  9015  0A9F  0870               	movf	i1USBConfigureEndpoint@direction,w
  9016  0AA0  1D03               	btfss	3,2
  9017  0AA1  2AAC               	goto	i1l2752
  9018                           
  9019                           ;usb_device.c: 1558: {
  9020                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  9021  0AA2  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
  9022  0AA3  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  9023  0AA4  0086               	movwf	6
  9024  0AA5  3001               	movlw	1	; select bank3/4
  9025  0AA6  0087               	movwf	7
  9026  0AA7  0876               	movf	i1USBConfigureEndpoint@handle,w
  9027  0AA8  3FC0               	movwi [0]fsr1
  9028  0AA9  3000               	movlw	0
  9029  0AAA  3FC1               	movwi [1]fsr1
  9030                           
  9031                           ;usb_device.c: 1560: }
  9032  0AAB  2AB5               	goto	i1l2754
  9033  0AAC                     i1l2752:	
  9034                           
  9035                           ;usb_device.c: 1561: else
  9036                           ;usb_device.c: 1562: {
  9037                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  9038  0AAC  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
  9039  0AAD  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  9040  0AAE  0086               	movwf	6
  9041  0AAF  3001               	movlw	1	; select bank3/4
  9042  0AB0  0087               	movwf	7
  9043  0AB1  0876               	movf	i1USBConfigureEndpoint@handle,w
  9044  0AB2  3FC0               	movwi [0]fsr1
  9045  0AB3  3000               	movlw	0
  9046  0AB4  3FC1               	movwi [1]fsr1
  9047  0AB5                     i1l2754:	
  9048                           
  9049                           ;usb_device.c: 1564: }
  9050                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  9051  0AB5  0876               	movf	i1USBConfigureEndpoint@handle,w
  9052  0AB6  0086               	movwf	6
  9053  0AB7  0187               	clrf	7
  9054  0AB8  1301               	bcf	1,6
  9055                           
  9056                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  9057  0AB9  0876               	movf	i1USBConfigureEndpoint@handle,w
  9058  0ABA  3E04               	addlw	4
  9059  0ABB  0086               	movwf	6
  9060  0ABC  0187               	clrf	7
  9061  0ABD  1701               	bsf	1,6
  9062  0ABE  0008               	return
  9063  0ABF                     __end_ofi1_USBConfigureEndpoint:	
  9064                           
  9065                           	psect	text40
  9066  0C5A                     __ptext40:	
  9067 ;; *************** function _USBCheckCDCRequest *****************
  9068 ;; Defined at:
  9069 ;;		line 147 in file "../lib/usb/src/usb_device_cdc.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;		None
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;		None
  9074 ;; Return value:  Size  Location     Type
  9075 ;;                  1    wreg      void 
  9076 ;; Registers used:
  9077 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9078 ;; Tracked objects:
  9079 ;;		On entry : 0/0
  9080 ;;		On exit  : 0/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9085 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9086 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9087 ;;Total ram usage:        1 bytes
  9088 ;; Hardware stack levels used:    1
  9089 ;; This function calls:
  9090 ;;		Nothing
  9091 ;; This function is called by:
  9092 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9093 ;; This function uses a non-reentrant model
  9094 ;;
  9095                           
  9096                           
  9097                           ;psect for function _USBCheckCDCRequest
  9098  0C5A                     _USBCheckCDCRequest:	
  9099                           
  9100                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
  9101                           
  9102                           ;incstack = 0
  9103                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
  9104  0C5A  0020               	movlb	0	; select bank0
  9105  0C5B  0850               	movf	80,w	;volatile
  9106  0C5C  391F               	andlw	31
  9107  0C5D  3A01               	xorlw	1
  9108  0C5E  1D03               	btfss	3,2
  9109  0C5F  0008               	return
  9110                           
  9111                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
  9112  0C60  0E50               	swapf	80,w	;volatile
  9113  0C61  0C89               	rrf	9,f
  9114  0C62  3903               	andlw	3
  9115  0C63  3A01               	xorlw	1
  9116  0C64  1D03               	btfss	3,2
  9117  0C65  0008               	return
  9118                           
  9119                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
  9120                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
  9121  0C66  0854               	movf	84,w	;volatile
  9122  0C67  1903               	btfsc	3,2
  9123  0C68  2CA6               	goto	i1l2842
  9124  0C69  0354               	decf	84,w	;volatile
  9125  0C6A  1D03               	btfss	3,2
  9126  0C6B  0008               	return
  9127  0C6C  2CA6               	goto	i1l2842
  9128  0C6D                     i1l2812:	
  9129                           ;usb_device_cdc.c: 167: {
  9130                           ;usb_device_cdc.c: 169: case 0x00:
  9131                           
  9132                           ;usb_device_cdc.c: 166: switch(SetupPkt.bRequest)
  9133                           
  9134                           
  9135                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  9136  0C6D  302A               	movlw	low _dummy_encapsulated_cmd_response
  9137  0C6E  0023               	movlb	3	; select bank3
  9138  0C6F  00B3               	movwf	_inPipes^(0+384)	;volatile
  9139  0C70  3002               	movlw	high _dummy_encapsulated_cmd_response
  9140  0C71  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  9141                           
  9142                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
  9143  0C72  3000               	movlw	0
  9144  0C73  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  9145  0C74  3008               	movlw	8
  9146  0C75  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  9147                           
  9148                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9149  0C76  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  9150                           
  9151                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
  9152  0C77  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  9153                           
  9154                           ;usb_device_cdc.c: 175: break;
  9155  0C78  0008               	return
  9156  0C79                     i1l2820:	
  9157                           ;usb_device_cdc.c: 176: case 0x01:
  9158                           
  9159                           
  9160                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  9161  0C79  302A               	movlw	low _dummy_encapsulated_cmd_response
  9162  0C7A  0023               	movlb	3	; select bank3
  9163  0C7B  00B3               	movwf	_inPipes^(0+384)	;volatile
  9164  0C7C  3002               	movlw	high _dummy_encapsulated_cmd_response
  9165  0C7D  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  9166                           
  9167                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
  9168  0C7E  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  9169                           
  9170                           ;usb_device_cdc.c: 180: break;
  9171  0C7F  0008               	return
  9172  0C80                     i1l2824:	
  9173                           ;usb_device_cdc.c: 184: case 0x20:
  9174                           
  9175                           
  9176                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
  9177  0C80  0020               	movlb	0	; select bank0
  9178  0C81  0857               	movf	87,w	;volatile
  9179  0C82  0023               	movlb	3	; select bank3
  9180  0C83  00A4               	movwf	((_outPipes+1)^(0+384)+3)	;volatile
  9181  0C84  0020               	movlb	0	; select bank0
  9182  0C85  0856               	movf	86,w	;volatile
  9183  0C86  0023               	movlb	3	; select bank3
  9184  0C87  00A3               	movwf	(_outPipes^(0+384)+3)	;volatile
  9185                           
  9186                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  9187  0C88  30E3               	movlw	(low (_line_coding| (0+256)))& (0+255)
  9188  0C89  00F0               	movwf	??_USBCheckCDCRequest
  9189  0C8A  0870               	movf	??_USBCheckCDCRequest,w
  9190  0C8B  00A0               	movwf	_outPipes^(0+384)	;volatile
  9191                           
  9192                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
  9193  0C8C  01A5               	clrf	(low ((_outPipes| (0+256)+5)))^(0+128)	;volatile
  9194  0C8D  01A6               	clrf	((low ((_outPipes| (0+256)+5))+1))^(0+128)	;volatile
  9195                           
  9196                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
  9197  0C8E  17A2               	bsf	(_outPipes^(0+384)+2),7	;volatile
  9198                           
  9199                           ;usb_device_cdc.c: 189: break;
  9200  0C8F  0008               	return
  9201  0C90                     i1l2830:	
  9202                           ;usb_device_cdc.c: 191: case 0x21:
  9203                           
  9204                           
  9205                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  9206  0C90  30E3               	movlw	low _line_coding
  9207  0C91  0023               	movlb	3	; select bank3
  9208  0C92  00B3               	movwf	_inPipes^(0+384)	;volatile
  9209  0C93  3001               	movlw	high _line_coding
  9210  0C94  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  9211  0C95  3000               	movlw	0
  9212  0C96  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  9213  0C97  3007               	movlw	7
  9214  0C98  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  9215  0C99  30C1               	movlw	193
  9216  0C9A  00F0               	movwf	??_USBCheckCDCRequest
  9217  0C9B  0870               	movf	??_USBCheckCDCRequest,w
  9218  0C9C  00B5               	movwf	(_inPipes^(0+384)+2)	;volatile
  9219                           
  9220                           ;usb_device_cdc.c: 196: break;
  9221  0C9D  0008               	return
  9222  0C9E                     i1l2836:	
  9223                           ;usb_device_cdc.c: 198: case 0x22:
  9224                           
  9225                           
  9226                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  9227  0C9E  0020               	movlb	0	; select bank0
  9228  0C9F  0852               	movf	82,w	;volatile
  9229  0CA0  00F0               	movwf	??_USBCheckCDCRequest
  9230  0CA1  0870               	movf	??_USBCheckCDCRequest,w
  9231  0CA2  0023               	movlb	3	; select bank3
  9232  0CA3  00DF               	movwf	_control_signal_bitmap^(0+384)
  9233                           
  9234                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  9235  0CA4  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  9236                           
  9237                           ;usb_device_cdc.c: 258: }
  9238                           
  9239                           ;usb_device_cdc.c: 257: break;
  9240                           
  9241                           ;usb_device_cdc.c: 256: default:
  9242                           
  9243                           ;usb_device_cdc.c: 232: break;
  9244  0CA5  0008               	return
  9245  0CA6                     i1l2842:	
  9246  0CA6  0020               	movlb	0	; select bank0
  9247  0CA7  0851               	movf	81,w	;volatile
  9248                           
  9249                           ; Switch size 1, requested type "space"
  9250                           ; Number of cases is 5, Range of values is 0 to 34
  9251                           ; switch strategies available:
  9252                           ; Name         Instructions Cycles
  9253                           ; simple_byte           16     9 (average)
  9254                           ; direct_byte           76     6 (fixed)
  9255                           ; jumptable            260     6 (fixed)
  9256                           ;	Chosen strategy is simple_byte
  9257  0CA8  3A00               	xorlw	0	; case 0
  9258  0CA9  1903               	skipnz
  9259  0CAA  2C6D               	goto	i1l2812
  9260  0CAB  3A01               	xorlw	1	; case 1
  9261  0CAC  1903               	skipnz
  9262  0CAD  2C79               	goto	i1l2820
  9263  0CAE  3A21               	xorlw	33	; case 32
  9264  0CAF  1903               	skipnz
  9265  0CB0  2C80               	goto	i1l2824
  9266  0CB1  3A01               	xorlw	1	; case 33
  9267  0CB2  1903               	skipnz
  9268  0CB3  2C90               	goto	i1l2830
  9269  0CB4  3A03               	xorlw	3	; case 34
  9270  0CB5  1903               	skipnz
  9271  0CB6  2C9E               	goto	i1l2836
  9272  0CB7  2CB8               	goto	i1l479
  9273  0CB8                     i1l479:	
  9274  0CB8  0008               	return
  9275  0CB9                     __end_of_USBCheckCDCRequest:	
  9276                           
  9277                           	psect	text41
  9278  0993                     __ptext41:	
  9279 ;; *************** function _USBCtrlTrfOutHandler *****************
  9280 ;; Defined at:
  9281 ;;		line 2538 in file "../lib/usb/src/usb_device.c"
  9282 ;; Parameters:    Size  Location     Type
  9283 ;;		None
  9284 ;; Auto vars:     Size  Location     Type
  9285 ;;		None
  9286 ;; Return value:  Size  Location     Type
  9287 ;;                  1    wreg      void 
  9288 ;; Registers used:
  9289 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9290 ;; Tracked objects:
  9291 ;;		On entry : 0/0
  9292 ;;		On exit  : 0/0
  9293 ;;		Unchanged: 0/0
  9294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9297 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9298 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9299 ;;Total ram usage:        2 bytes
  9300 ;; Hardware stack levels used:    1
  9301 ;; Hardware stack levels required when called:    2
  9302 ;; This function calls:
  9303 ;;		_USBCtrlTrfRxService
  9304 ;; This function is called by:
  9305 ;;		_USBCtrlEPService
  9306 ;; This function uses a non-reentrant model
  9307 ;;
  9308                           
  9309                           
  9310                           ;psect for function _USBCtrlTrfOutHandler
  9311  0993                     _USBCtrlTrfOutHandler:	
  9312                           
  9313                           ;usb_device.c: 2540: if(controlTransferState == 2)
  9314                           
  9315                           ;incstack = 0
  9316                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9317  0993  3002               	movlw	2
  9318  0994  0021               	movlb	1	; select bank1
  9319  0995  0663               	xorwf	_controlTransferState^(0+128),w	;volatile
  9320  0996  1D03               	btfss	3,2
  9321  0997  299B               	goto	i1l3382
  9322                           
  9323                           ;usb_device.c: 2541: {
  9324                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  9325  0998  3185  2548         	fcall	_USBCtrlTrfRxService
  9326                           
  9327                           ;usb_device.c: 2543: }
  9328  099A  0008               	return
  9329  099B                     i1l3382:	
  9330                           
  9331                           ;usb_device.c: 2544: else
  9332                           ;usb_device.c: 2545: {
  9333                           ;usb_device.c: 2548: controlTransferState = 0;
  9334  099B  0021               	movlb	1	; select bank1
  9335  099C  01E3               	clrf	_controlTransferState^(0+128)	;volatile
  9336                           
  9337                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  9338  099D  0023               	movlb	3	; select bank3
  9339  099E  084E               	movf	_BothEP0OutUOWNsSet^(0+384),w	;volatile
  9340  099F  1D03               	btfss	3,2
  9341  09A0  29C7               	goto	i1l3394
  9342                           
  9343                           ;usb_device.c: 2556: {
  9344                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
  9345  09A1  0021               	movlb	1	; select bank1
  9346  09A2  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9347  09A3  3E01               	addlw	1
  9348  09A4  00F6               	movwf	??_USBCtrlTrfOutHandler
  9349  09A5  3000               	movlw	0
  9350  09A6  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9351  09A7  00F7               	movwf	??_USBCtrlTrfOutHandler+1
  9352  09A8  0876               	movf	??_USBCtrlTrfOutHandler,w
  9353  09A9  0086               	movwf	6
  9354  09AA  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  9355  09AB  0087               	movwf	7
  9356  09AC  3008               	movlw	8
  9357  09AD  0081               	movwf	1
  9358                           
  9359                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9360  09AE  3050               	movlw	80
  9361  09AF  00F6               	movwf	??_USBCtrlTrfOutHandler
  9362  09B0  3000               	movlw	0
  9363  09B1  00F7               	movwf	??_USBCtrlTrfOutHandler+1
  9364  09B2  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9365  09B3  0086               	movwf	6
  9366  09B4  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9367  09B5  0087               	movwf	7
  9368  09B6  3142               	addfsr 1,2
  9369  09B7  0876               	movf	??_USBCtrlTrfOutHandler,w
  9370  09B8  3FC0               	movwi [0]fsr1
  9371  09B9  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  9372  09BA  3FC1               	movwi [1]fsr1
  9373                           
  9374                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9375  09BB  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9376  09BC  0086               	movwf	6
  9377  09BD  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9378  09BE  0087               	movwf	7
  9379  09BF  300C               	movlw	12
  9380  09C0  0081               	movwf	1
  9381                           
  9382                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9383  09C1  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9384  09C2  0086               	movwf	6
  9385  09C3  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9386  09C4  0087               	movwf	7
  9387  09C5  1781               	bsf	1,7
  9388                           
  9389                           ;usb_device.c: 2561: }
  9390  09C6  0008               	return
  9391  09C7                     i1l3394:	
  9392                           
  9393                           ;usb_device.c: 2562: else
  9394                           ;usb_device.c: 2563: {
  9395                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  9396  09C7  0023               	movlb	3	; select bank3
  9397  09C8  01CE               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  9398  09C9  0008               	return
  9399  09CA                     __end_of_USBCtrlTrfOutHandler:	
  9400                           
  9401                           	psect	text42
  9402  0548                     __ptext42:	
  9403 ;; *************** function _USBCtrlTrfRxService *****************
  9404 ;; Defined at:
  9405 ;;		line 1852 in file "../lib/usb/src/usb_device.c"
  9406 ;; Parameters:    Size  Location     Type
  9407 ;;		None
  9408 ;; Auto vars:     Size  Location     Type
  9409 ;;  byteToRead      1    5[COMMON] unsigned char 
  9410 ;;  i               1    4[COMMON] unsigned char 
  9411 ;; Return value:  Size  Location     Type
  9412 ;;                  1    wreg      void 
  9413 ;; Registers used:
  9414 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9415 ;; Tracked objects:
  9416 ;;		On entry : 0/0
  9417 ;;		On exit  : 0/0
  9418 ;;		Unchanged: 0/0
  9419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9421 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9422 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9423 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9424 ;;Total ram usage:        4 bytes
  9425 ;; Hardware stack levels used:    1
  9426 ;; Hardware stack levels required when called:    1
  9427 ;; This function calls:
  9428 ;;		_USBCtrlEPAllowStatusStage
  9429 ;; This function is called by:
  9430 ;;		_USBCtrlTrfOutHandler
  9431 ;; This function uses a non-reentrant model
  9432 ;;
  9433                           
  9434                           
  9435                           ;psect for function _USBCtrlTrfRxService
  9436  0548                     _USBCtrlTrfRxService:	
  9437                           
  9438                           ;usb_device.c: 1854: uint8_t byteToRead;
  9439                           ;usb_device.c: 1855: uint8_t i;
  9440                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  9441                           
  9442                           ;incstack = 0
  9443                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9444  0548  0021               	movlb	1	; select bank1
  9445  0549  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9446  054A  0086               	movwf	6
  9447  054B  0187               	clrf	7
  9448  054C  3F41               	moviw [1]fsr1
  9449  054D  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  9450                           
  9451                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  9452  054E  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  9453  054F  00F2               	movwf	??_USBCtrlTrfRxService
  9454  0550  01F3               	clrf	??_USBCtrlTrfRxService+1
  9455  0551  0873               	movf	??_USBCtrlTrfRxService+1,w
  9456  0552  0023               	movlb	3	; select bank3
  9457  0553  0224               	subwf	((_outPipes+1)^(0+384)+3),w	;volatile
  9458  0554  1D03               	skipz
  9459  0555  2D58               	goto	u249_25
  9460  0556  0872               	movf	??_USBCtrlTrfRxService,w
  9461  0557  0223               	subwf	(_outPipes^(0+384)+3),w	;volatile
  9462  0558                     u249_25:	
  9463  0558  1803               	skipnc
  9464  0559  2D5E               	goto	i1l286
  9465                           
  9466                           ;usb_device.c: 1866: {
  9467                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  9468  055A  0823               	movf	(_outPipes^(0+384)+3),w	;volatile
  9469  055B  00F2               	movwf	??_USBCtrlTrfRxService
  9470  055C  0872               	movf	??_USBCtrlTrfRxService,w
  9471  055D  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  9472  055E                     i1l286:	
  9473                           
  9474                           ;usb_device.c: 1868: }
  9475                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  9476  055E  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  9477  055F  00F2               	movwf	??_USBCtrlTrfRxService
  9478  0560  01F3               	clrf	??_USBCtrlTrfRxService+1
  9479  0561  0872               	movf	??_USBCtrlTrfRxService,w
  9480  0562  02A3               	subwf	(_outPipes^(0+384)+3),f	;volatile
  9481  0563  0873               	movf	??_USBCtrlTrfRxService+1,w
  9482  0564  3BA4               	subwfb	((_outPipes+1)^(0+384)+3),f	;volatile
  9483                           
  9484                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  9485  0565  01F4               	clrf	USBCtrlTrfRxService@i
  9486  0566                     i1l3266:	
  9487  0566  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  9488  0567  0274               	subwf	USBCtrlTrfRxService@i,w
  9489  0568  1803               	btfsc	3,0
  9490  0569  2D7F               	goto	i1l3268
  9491                           
  9492                           ;usb_device.c: 1875: {
  9493                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  9494  056A  0874               	movf	USBCtrlTrfRxService@i,w
  9495  056B  3E58               	addlw	88
  9496  056C  0086               	movwf	6
  9497  056D  0187               	clrf	7
  9498  056E  0801               	movf	1,w
  9499  056F  00F2               	movwf	??_USBCtrlTrfRxService
  9500  0570  0820               	movf	_outPipes^(0+384),w	;volatile
  9501  0571  0086               	movwf	6
  9502  0572  3001               	movlw	1	; select bank2/3
  9503  0573  0087               	movwf	7
  9504  0574  0872               	movf	??_USBCtrlTrfRxService,w
  9505  0575  0081               	movwf	1
  9506  0576  3001               	movlw	1
  9507  0577  00F2               	movwf	??_USBCtrlTrfRxService
  9508  0578  0872               	movf	??_USBCtrlTrfRxService,w
  9509  0579  07A0               	addwf	_outPipes^(0+384),f	;volatile
  9510  057A  3001               	movlw	1
  9511  057B  00F2               	movwf	??_USBCtrlTrfRxService
  9512  057C  0872               	movf	??_USBCtrlTrfRxService,w
  9513  057D  07F4               	addwf	USBCtrlTrfRxService@i,f
  9514  057E  2D66               	goto	i1l3266
  9515  057F                     i1l3268:	
  9516                           
  9517                           ;usb_device.c: 1877: }
  9518                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  9519  057F  0823               	movf	(_outPipes^(0+384)+3),w	;volatile
  9520  0580  0424               	iorwf	((_outPipes+1)^(0+384)+3),w	;volatile
  9521  0581  1903               	btfsc	3,2
  9522  0582  2DBA               	goto	i1l3280
  9523                           
  9524                           ;usb_device.c: 1882: {
  9525                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  9526  0583  0021               	movlb	1	; select bank1
  9527  0584  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9528  0585  3E01               	addlw	1
  9529  0586  00F2               	movwf	??_USBCtrlTrfRxService
  9530  0587  3000               	movlw	0
  9531  0588  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9532  0589  00F3               	movwf	??_USBCtrlTrfRxService+1
  9533  058A  0872               	movf	??_USBCtrlTrfRxService,w
  9534  058B  0086               	movwf	6
  9535  058C  0873               	movf	??_USBCtrlTrfRxService+1,w
  9536  058D  0087               	movwf	7
  9537  058E  3008               	movlw	8
  9538  058F  0081               	movwf	1
  9539                           
  9540                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  9541  0590  3058               	movlw	88
  9542  0591  00F2               	movwf	??_USBCtrlTrfRxService
  9543  0592  3000               	movlw	0
  9544  0593  00F3               	movwf	??_USBCtrlTrfRxService+1
  9545  0594  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9546  0595  0086               	movwf	6
  9547  0596  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9548  0597  0087               	movwf	7
  9549  0598  3142               	addfsr 1,2
  9550  0599  0872               	movf	??_USBCtrlTrfRxService,w
  9551  059A  3FC0               	movwi [0]fsr1
  9552  059B  0873               	movf	??_USBCtrlTrfRxService+1,w
  9553  059C  3FC1               	movwi [1]fsr1
  9554                           
  9555                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  9556  059D  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9557  059E  0086               	movwf	6
  9558  059F  0187               	clrf	7
  9559  05A0  1B01               	btfsc	1,6
  9560  05A1  2DAE               	goto	i1l3278
  9561                           
  9562                           ;usb_device.c: 1886: {
  9563                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9564  05A2  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9565  05A3  0086               	movwf	6
  9566  05A4  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9567  05A5  0087               	movwf	7
  9568  05A6  3048               	movlw	72
  9569  05A7  0081               	movwf	1
  9570                           
  9571                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9572  05A8  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9573  05A9  0086               	movwf	6
  9574  05AA  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9575  05AB  0087               	movwf	7
  9576  05AC  1781               	bsf	1,7
  9577                           
  9578                           ;usb_device.c: 1889: }
  9579  05AD  0008               	return
  9580  05AE                     i1l3278:	
  9581                           
  9582                           ;usb_device.c: 1890: else
  9583                           ;usb_device.c: 1891: {
  9584                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  9585  05AE  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9586  05AF  0086               	movwf	6
  9587  05B0  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9588  05B1  0087               	movwf	7
  9589  05B2  3008               	movlw	8
  9590  05B3  0081               	movwf	1
  9591                           
  9592                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9593  05B4  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9594  05B5  0086               	movwf	6
  9595  05B6  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9596  05B7  0087               	movwf	7
  9597  05B8  1781               	bsf	1,7
  9598                           
  9599                           ;usb_device.c: 1894: }
  9600                           ;usb_device.c: 1895: }
  9601  05B9  0008               	return
  9602  05BA                     i1l3280:	
  9603                           
  9604                           ;usb_device.c: 1896: else
  9605                           ;usb_device.c: 1897: {
  9606                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  9607  05BA  0021               	movlb	1	; select bank1
  9608  05BB  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9609  05BC  3E01               	addlw	1
  9610  05BD  00F2               	movwf	??_USBCtrlTrfRxService
  9611  05BE  3000               	movlw	0
  9612  05BF  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9613  05C0  00F3               	movwf	??_USBCtrlTrfRxService+1
  9614  05C1  0872               	movf	??_USBCtrlTrfRxService,w
  9615  05C2  0086               	movwf	6
  9616  05C3  0873               	movf	??_USBCtrlTrfRxService+1,w
  9617  05C4  0087               	movwf	7
  9618  05C5  3008               	movlw	8
  9619  05C6  0081               	movwf	1
  9620                           
  9621                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9622  05C7  3050               	movlw	80
  9623  05C8  00F2               	movwf	??_USBCtrlTrfRxService
  9624  05C9  3000               	movlw	0
  9625  05CA  00F3               	movwf	??_USBCtrlTrfRxService+1
  9626  05CB  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9627  05CC  0086               	movwf	6
  9628  05CD  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9629  05CE  0087               	movwf	7
  9630  05CF  3142               	addfsr 1,2
  9631  05D0  0872               	movf	??_USBCtrlTrfRxService,w
  9632  05D1  3FC0               	movwi [0]fsr1
  9633  05D2  0873               	movf	??_USBCtrlTrfRxService+1,w
  9634  05D3  3FC1               	movwi [1]fsr1
  9635                           
  9636                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9637  05D4  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9638  05D5  0086               	movwf	6
  9639  05D6  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9640  05D7  0087               	movwf	7
  9641  05D8  3004               	movlw	4
  9642  05D9  0081               	movwf	1
  9643                           
  9644                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9645  05DA  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9646  05DB  0086               	movwf	6
  9647  05DC  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9648  05DD  0087               	movwf	7
  9649  05DE  1781               	bsf	1,7
  9650                           
  9651                           ;usb_device.c: 1915: {
  9652                           ;usb_device.c: 1921: outPipes[0].pFunc();
  9653  05DF  0023               	movlb	3	; select bank3
  9654  05E0  0825               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
  9655  05E1  0826               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
  9656                           
  9657                           ;usb_device.c: 1926: }
  9658                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  9659  05E2  13A2               	bcf	(_outPipes^(0+384)+2),7	;volatile
  9660                           
  9661                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  9662  05E3  0856               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  9663  05E4  1D03               	btfss	3,2
  9664  05E5  0008               	return
  9665                           
  9666                           ;usb_device.c: 1942: {
  9667                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  9668  05E6  318D  2583         	fcall	_USBCtrlEPAllowStatusStage
  9669  05E8  0008               	return
  9670  05E9                     __end_of_USBCtrlTrfRxService:	
  9671                           
  9672                           	psect	text43
  9673  0D83                     __ptext43:	
  9674 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  9675 ;; Defined at:
  9676 ;;		line 1416 in file "../lib/usb/src/usb_device.c"
  9677 ;; Parameters:    Size  Location     Type
  9678 ;;		None
  9679 ;; Auto vars:     Size  Location     Type
  9680 ;;		None
  9681 ;; Return value:  Size  Location     Type
  9682 ;;                  1    wreg      void 
  9683 ;; Registers used:
  9684 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9685 ;; Tracked objects:
  9686 ;;		On entry : 0/0
  9687 ;;		On exit  : 0/0
  9688 ;;		Unchanged: 0/0
  9689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9692 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9693 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9694 ;;Total ram usage:        2 bytes
  9695 ;; Hardware stack levels used:    1
  9696 ;; This function calls:
  9697 ;;		Nothing
  9698 ;; This function is called by:
  9699 ;;		_USBDeviceTasks
  9700 ;;		_USBCtrlEPServiceComplete
  9701 ;;		_USBCtrlTrfRxService
  9702 ;; This function uses a non-reentrant model
  9703 ;;
  9704                           
  9705                           
  9706                           ;psect for function _USBCtrlEPAllowStatusStage
  9707  0D83                     _USBCtrlEPAllowStatusStage:	
  9708                           
  9709                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  9710                           
  9711                           ;incstack = 0
  9712                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  9713  0D83  0023               	movlb	3	; select bank3
  9714  0D84  0857               	movf	_USBStatusStageEnabledFlag1^(0+384),w	;volatile
  9715  0D85  1D03               	btfss	3,2
  9716  0D86  0008               	return
  9717                           
  9718                           ;usb_device.c: 1424: {
  9719                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  9720  0D87  3001               	movlw	1
  9721  0D88  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9722  0D89  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9723  0D8A  00D7               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  9724                           
  9725                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  9726  0D8B  0858               	movf	_USBStatusStageEnabledFlag2^(0+384),w	;volatile
  9727  0D8C  1D03               	btfss	3,2
  9728  0D8D  0008               	return
  9729                           
  9730                           ;usb_device.c: 1427: {
  9731                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  9732  0D8E  3001               	movlw	1
  9733  0D8F  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9734  0D90  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9735  0D91  00D8               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  9736                           
  9737                           ;usb_device.c: 1432: if(controlTransferState == 2)
  9738  0D92  3002               	movlw	2
  9739  0D93  0021               	movlb	1	; select bank1
  9740  0D94  0663               	xorwf	_controlTransferState^(0+128),w	;volatile
  9741  0D95  1D03               	btfss	3,2
  9742  0D96  2DAA               	goto	i1l2956
  9743                           
  9744                           ;usb_device.c: 1433: {
  9745                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  9746  0D97  0023               	movlb	3	; select bank3
  9747  0D98  0827               	movf	_pBDTEntryIn^(0+384),w
  9748  0D99  0086               	movwf	6
  9749  0D9A  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9750  0D9B  0087               	movwf	7
  9751  0D9C  3141               	addfsr 1,1
  9752  0D9D  0181               	clrf	1
  9753                           
  9754                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9755  0D9E  0827               	movf	_pBDTEntryIn^(0+384),w
  9756  0D9F  0086               	movwf	6
  9757  0DA0  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9758  0DA1  0087               	movwf	7
  9759  0DA2  3048               	movlw	72
  9760  0DA3  0081               	movwf	1
  9761                           
  9762                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9763  0DA4  0827               	movf	_pBDTEntryIn^(0+384),w
  9764  0DA5  0086               	movwf	6
  9765  0DA6  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9766  0DA7  0087               	movwf	7
  9767  0DA8  1781               	bsf	1,7
  9768                           
  9769                           ;usb_device.c: 1437: }
  9770  0DA9  0008               	return
  9771  0DAA                     i1l2956:	
  9772                           
  9773                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  9774  0DAA  0021               	movlb	1	; select bank1
  9775  0DAB  0363               	decf	_controlTransferState^(0+128),w	;volatile
  9776  0DAC  1D03               	btfss	3,2
  9777  0DAD  0008               	return
  9778                           
  9779                           ;usb_device.c: 1439: {
  9780                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  9781  0DAE  0023               	movlb	3	; select bank3
  9782  0DAF  01CE               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  9783                           
  9784                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
  9785  0DB0  3008               	movlw	8
  9786  0DB1  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9787  0DB2  0021               	movlb	1	; select bank1
  9788  0DB3  0A64               	incf	_pBDTEntryEP0OutCurrent^(0+128),w
  9789  0DB4  0086               	movwf	6
  9790  0DB5  0187               	clrf	7
  9791  0DB6  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9792  0DB7  0081               	movwf	1
  9793                           
  9794                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9795  0DB8  3050               	movlw	80
  9796  0DB9  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9797  0DBA  3000               	movlw	0
  9798  0DBB  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  9799  0DBC  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9800  0DBD  3E02               	addlw	2
  9801  0DBE  0086               	movwf	6
  9802  0DBF  0187               	clrf	7
  9803  0DC0  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9804  0DC1  3FC0               	movwi [0]fsr1
  9805  0DC2  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9806  0DC3  3FC1               	movwi [1]fsr1
  9807                           
  9808                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  9809  0DC4  3004               	movlw	4
  9810  0DC5  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9811  0DC6  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9812  0DC7  0086               	movwf	6
  9813  0DC8  0187               	clrf	7
  9814  0DC9  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9815  0DCA  0081               	movwf	1
  9816                           
  9817                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  9818  0DCB  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9819  0DCC  0086               	movwf	6
  9820  0DCD  0187               	clrf	7
  9821  0DCE  1781               	bsf	1,7
  9822                           
  9823                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  9824  0DCF  3001               	movlw	1
  9825  0DD0  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9826  0DD1  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9827  0DD2  0023               	movlb	3	; select bank3
  9828  0DD3  00CE               	movwf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  9829                           
  9830                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
  9831  0DD4  0021               	movlb	1	; select bank1
  9832  0DD5  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9833  0DD6  3E01               	addlw	1
  9834  0DD7  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9835  0DD8  3000               	movlw	0
  9836  0DD9  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9837  0DDA  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  9838  0DDB  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9839  0DDC  0086               	movwf	6
  9840  0DDD  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9841  0DDE  0087               	movwf	7
  9842  0DDF  3008               	movlw	8
  9843  0DE0  0081               	movwf	1
  9844                           
  9845                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9846  0DE1  3050               	movlw	80
  9847  0DE2  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9848  0DE3  3000               	movlw	0
  9849  0DE4  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  9850  0DE5  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9851  0DE6  0086               	movwf	6
  9852  0DE7  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9853  0DE8  0087               	movwf	7
  9854  0DE9  3142               	addfsr 1,2
  9855  0DEA  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9856  0DEB  3FC0               	movwi [0]fsr1
  9857  0DEC  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9858  0DED  3FC1               	movwi [1]fsr1
  9859                           
  9860                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  9861  0DEE  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9862  0DEF  0086               	movwf	6
  9863  0DF0  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9864  0DF1  0087               	movwf	7
  9865  0DF2  3080               	movlw	128
  9866  0DF3  0081               	movwf	1
  9867  0DF4  0008               	return
  9868  0DF5                     __end_of_USBCtrlEPAllowStatusStage:	
  9869                           
  9870                           	psect	text44
  9871  0793                     __ptext44:	
  9872 ;; *************** function _USBCtrlTrfInHandler *****************
  9873 ;; Defined at:
  9874 ;;		line 2592 in file "../lib/usb/src/usb_device.c"
  9875 ;; Parameters:    Size  Location     Type
  9876 ;;		None
  9877 ;; Auto vars:     Size  Location     Type
  9878 ;;  lastDTS         1    5[COMMON] unsigned char 
  9879 ;; Return value:  Size  Location     Type
  9880 ;;                  1    wreg      void 
  9881 ;; Registers used:
  9882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9883 ;; Tracked objects:
  9884 ;;		On entry : 0/0
  9885 ;;		On exit  : 0/0
  9886 ;;		Unchanged: 0/0
  9887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9889 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9890 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9891 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9892 ;;Total ram usage:        3 bytes
  9893 ;; Hardware stack levels used:    1
  9894 ;; Hardware stack levels required when called:    1
  9895 ;; This function calls:
  9896 ;;		_USBCtrlTrfTxService
  9897 ;; This function is called by:
  9898 ;;		_USBCtrlEPService
  9899 ;; This function uses a non-reentrant model
  9900 ;;
  9901                           
  9902                           
  9903                           ;psect for function _USBCtrlTrfInHandler
  9904  0793                     _USBCtrlTrfInHandler:	
  9905                           
  9906                           ;usb_device.c: 2594: uint8_t lastDTS;
  9907                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9908                           
  9909                           ;incstack = 0
  9910                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9911  0793  0023               	movlb	3	; select bank3
  9912  0794  0827               	movf	_pBDTEntryIn^(0+384),w
  9913  0795  0086               	movwf	6
  9914  0796  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9915  0797  0087               	movwf	7
  9916  0798  3000               	movlw	0
  9917  0799  1B01               	btfsc	1,6
  9918  079A  3001               	movlw	1
  9919  079B  00F5               	movwf	USBCtrlTrfInHandler@lastDTS
  9920                           
  9921                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  9922  079C  3004               	movlw	4
  9923  079D  0627               	xorwf	_pBDTEntryIn^(0+384),w
  9924  079E  00A7               	movwf	_pBDTEntryIn^(0+384)
  9925  079F  3000               	movlw	0
  9926  07A0  0628               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  9927  07A1  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  9928                           
  9929                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
  9930  07A2  3008               	movlw	8
  9931  07A3  0021               	movlb	1	; select bank1
  9932  07A4  0662               	xorwf	_USBDeviceState^(0+128),w	;volatile
  9933  07A5  1D03               	btfss	3,2
  9934  07A6  2FB6               	goto	i1l3410
  9935                           
  9936                           ;usb_device.c: 2605: {
  9937                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
  9938  07A7  0020               	movlb	0	; select bank0
  9939  07A8  0852               	movf	82,w	;volatile
  9940  07A9  397F               	andlw	127
  9941  07AA  003D               	movlb	29	; select bank29
  9942  07AB  0096               	movwf	22	;volatile
  9943                           
  9944                           ;usb_device.c: 2607: if(UADDR != 0u)
  9945  07AC  0816               	movf	22,w	;volatile
  9946  07AD  1903               	btfsc	3,2
  9947  07AE  2FB1               	goto	i1l3408
  9948                           
  9949                           ;usb_device.c: 2608: {
  9950                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
  9951  07AF  3010               	movlw	16
  9952  07B0  2FB2               	goto	L11
  9953  07B1                     i1l3408:	
  9954                           ;usb_device.c: 2610: }
  9955                           
  9956                           
  9957                           ;usb_device.c: 2611: else
  9958                           ;usb_device.c: 2612: {
  9959                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
  9960  07B1  3004               	movlw	4
  9961  07B2                     L11:	
  9962  07B2  00F3               	movwf	??_USBCtrlTrfInHandler
  9963  07B3  0873               	movf	??_USBCtrlTrfInHandler,w
  9964  07B4  0021               	movlb	1	; select bank1
  9965  07B5  00E2               	movwf	_USBDeviceState^(0+128)	;volatile
  9966  07B6                     i1l3410:	
  9967                           
  9968                           ;usb_device.c: 2614: }
  9969                           ;usb_device.c: 2615: }
  9970                           ;usb_device.c: 2618: if(controlTransferState == 1)
  9971  07B6  0363               	decf	_controlTransferState^(0+128),w	;volatile
  9972  07B7  1D03               	btfss	3,2
  9973  07B8  2FF6               	goto	i1l371
  9974                           
  9975                           ;usb_device.c: 2619: {
  9976                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  9977  07B9  3058               	movlw	88
  9978  07BA  00F3               	movwf	??_USBCtrlTrfInHandler
  9979  07BB  3000               	movlw	0
  9980  07BC  00F4               	movwf	??_USBCtrlTrfInHandler+1
  9981  07BD  0023               	movlb	3	; select bank3
  9982  07BE  0827               	movf	_pBDTEntryIn^(0+384),w
  9983  07BF  0086               	movwf	6
  9984  07C0  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9985  07C1  0087               	movwf	7
  9986  07C2  3142               	addfsr 1,2
  9987  07C3  0873               	movf	??_USBCtrlTrfInHandler,w
  9988  07C4  3FC0               	movwi [0]fsr1
  9989  07C5  0874               	movf	??_USBCtrlTrfInHandler+1,w
  9990  07C6  3FC1               	movwi [1]fsr1
  9991                           
  9992                           ;usb_device.c: 2621: USBCtrlTrfTxService();
  9993  07C7  318D  251B  3187   	fcall	_USBCtrlTrfTxService
  9994                           
  9995                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
  9996  07CA  3002               	movlw	2
  9997  07CB  0023               	movlb	3	; select bank3
  9998  07CC  0662               	xorwf	_shortPacketStatus^(0+384),w	;volatile
  9999  07CD  1D03               	btfss	3,2
 10000  07CE  2FDB               	goto	i1l3420
 10001                           
 10002                           ;usb_device.c: 2628: {
 10003                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 10004  07CF  0827               	movf	_pBDTEntryIn^(0+384),w
 10005  07D0  0086               	movwf	6
 10006  07D1  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
 10007  07D2  0087               	movwf	7
 10008  07D3  3004               	movlw	4
 10009  07D4  0081               	movwf	1
 10010                           
 10011                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10012  07D5  0827               	movf	_pBDTEntryIn^(0+384),w
 10013  07D6  0086               	movwf	6
 10014  07D7  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
 10015  07D8  0087               	movwf	7
 10016  07D9  1781               	bsf	1,7
 10017                           
 10018                           ;usb_device.c: 2633: }
 10019  07DA  0008               	return
 10020  07DB                     i1l3420:	
 10021                           
 10022                           ;usb_device.c: 2634: else
 10023                           ;usb_device.c: 2635: {
 10024                           ;usb_device.c: 2636: if(lastDTS == 0)
 10025  07DB  0875               	movf	USBCtrlTrfInHandler@lastDTS,w
 10026  07DC  1D03               	btfss	3,2
 10027  07DD  2FEA               	goto	i1l3424
 10028                           
 10029                           ;usb_device.c: 2637: {
 10030                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10031  07DE  0827               	movf	_pBDTEntryIn^(0+384),w
 10032  07DF  0086               	movwf	6
 10033  07E0  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
 10034  07E1  0087               	movwf	7
 10035  07E2  3048               	movlw	72
 10036  07E3  0081               	movwf	1
 10037                           
 10038                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10039  07E4  0827               	movf	_pBDTEntryIn^(0+384),w
 10040  07E5  0086               	movwf	6
 10041  07E6  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
 10042  07E7  0087               	movwf	7
 10043  07E8  1781               	bsf	1,7
 10044                           
 10045                           ;usb_device.c: 2640: }
 10046  07E9  0008               	return
 10047  07EA                     i1l3424:	
 10048                           
 10049                           ;usb_device.c: 2641: else
 10050                           ;usb_device.c: 2642: {
 10051                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 10052  07EA  0827               	movf	_pBDTEntryIn^(0+384),w
 10053  07EB  0086               	movwf	6
 10054  07EC  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
 10055  07ED  0087               	movwf	7
 10056  07EE  3008               	movlw	8
 10057  07EF  0081               	movwf	1
 10058                           
 10059                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10060  07F0  0827               	movf	_pBDTEntryIn^(0+384),w
 10061  07F1  0086               	movwf	6
 10062  07F2  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
 10063  07F3  0087               	movwf	7
 10064  07F4  1781               	bsf	1,7
 10065                           
 10066                           ;usb_device.c: 2645: }
 10067                           ;usb_device.c: 2646: }
 10068                           ;usb_device.c: 2647: }
 10069  07F5  0008               	return
 10070  07F6                     i1l371:	
 10071                           
 10072                           ;usb_device.c: 2648: else
 10073                           ;usb_device.c: 2649: {
 10074                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 10075  07F6  0023               	movlb	3	; select bank3
 10076  07F7  1FA2               	btfss	(_outPipes^(0+384)+2),7	;volatile
 10077  07F8  2FFC               	goto	i1l3428
 10078                           
 10079                           ;usb_device.c: 2656: {
 10080                           ;usb_device.c: 2657: outPipes[0].pFunc();
 10081  07F9  0825               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
 10082  07FA  0826               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
 10083                           
 10084                           ;usb_device.c: 2658: }
 10085                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 10086  07FB  13A2               	bcf	(_outPipes^(0+384)+2),7	;volatile
 10087  07FC                     i1l3428:	
 10088                           
 10089                           ;usb_device.c: 2660: }
 10090                           ;usb_device.c: 2662: controlTransferState = 0;
 10091  07FC  0021               	movlb	1	; select bank1
 10092  07FD  01E3               	clrf	_controlTransferState^(0+128)	;volatile
 10093  07FE  0008               	return
 10094  07FF                     __end_of_USBCtrlTrfInHandler:	
 10095                           
 10096                           	psect	text45
 10097  0D1B                     __ptext45:	
 10098 ;; *************** function _USBCtrlTrfTxService *****************
 10099 ;; Defined at:
 10100 ;;		line 1771 in file "../lib/usb/src/usb_device.c"
 10101 ;; Parameters:    Size  Location     Type
 10102 ;;		None
 10103 ;; Auto vars:     Size  Location     Type
 10104 ;;  byteToSend      1    2[COMMON] unsigned char 
 10105 ;; Return value:  Size  Location     Type
 10106 ;;                  1    wreg      void 
 10107 ;; Registers used:
 10108 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 10109 ;; Tracked objects:
 10110 ;;		On entry : 0/0
 10111 ;;		On exit  : 0/0
 10112 ;;		Unchanged: 0/0
 10113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10115 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10116 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10117 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10118 ;;Total ram usage:        3 bytes
 10119 ;; Hardware stack levels used:    1
 10120 ;; This function calls:
 10121 ;;		Nothing
 10122 ;; This function is called by:
 10123 ;;		_USBCtrlEPAllowDataStage
 10124 ;;		_USBCtrlTrfInHandler
 10125 ;; This function uses a non-reentrant model
 10126 ;;
 10127                           
 10128                           
 10129                           ;psect for function _USBCtrlTrfTxService
 10130  0D1B                     _USBCtrlTrfTxService:	
 10131                           
 10132                           ;usb_device.c: 1773: uint8_t byteToSend;
 10133                           ;usb_device.c: 1777: byteToSend = 8;
 10134                           
 10135                           ;incstack = 0
 10136                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
 10137  0D1B  3008               	movlw	8
 10138  0D1C  00F0               	movwf	??_USBCtrlTrfTxService
 10139  0D1D  0870               	movf	??_USBCtrlTrfTxService,w
 10140  0D1E  00F2               	movwf	USBCtrlTrfTxService@byteToSend
 10141                           
 10142                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 10143  0D1F  3000               	movlw	0
 10144  0D20  0023               	movlb	3	; select bank3
 10145  0D21  0237               	subwf	((_inPipes+1)^(0+384)+3),w	;volatile
 10146  0D22  3008               	movlw	8
 10147  0D23  1903               	skipnz
 10148  0D24  0236               	subwf	(_inPipes^(0+384)+3),w	;volatile
 10149  0D25  1803               	skipnc
 10150  0D26  2D37               	goto	i1l271
 10151                           
 10152                           ;usb_device.c: 1779: {
 10153                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 10154  0D27  0836               	movf	(_inPipes^(0+384)+3),w	;volatile
 10155  0D28  00F0               	movwf	??_USBCtrlTrfTxService
 10156  0D29  0870               	movf	??_USBCtrlTrfTxService,w
 10157  0D2A  00F2               	movwf	USBCtrlTrfTxService@byteToSend
 10158                           
 10159                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 10160  0D2B  0862               	movf	_shortPacketStatus^(0+384),w	;volatile
 10161  0D2C  1D03               	btfss	3,2
 10162  0D2D  2D30               	goto	i1l2900
 10163                           
 10164                           ;usb_device.c: 1788: {
 10165                           ;usb_device.c: 1789: shortPacketStatus = 1;
 10166  0D2E  3001               	movlw	1
 10167  0D2F  2D34               	goto	L12
 10168  0D30                     i1l2900:	
 10169                           ;usb_device.c: 1790: }
 10170                           
 10171                           
 10172                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 10173  0D30  0362               	decf	_shortPacketStatus^(0+384),w	;volatile
 10174  0D31  1D03               	btfss	3,2
 10175  0D32  2D37               	goto	i1l271
 10176                           
 10177                           ;usb_device.c: 1792: {
 10178                           ;usb_device.c: 1793: shortPacketStatus = 2;
 10179  0D33  3002               	movlw	2
 10180  0D34                     L12:	
 10181  0D34  00F0               	movwf	??_USBCtrlTrfTxService
 10182  0D35  0870               	movf	??_USBCtrlTrfTxService,w
 10183  0D36  00E2               	movwf	_shortPacketStatus^(0+384)	;volatile
 10184  0D37                     i1l271:	
 10185                           
 10186                           ;usb_device.c: 1794: }
 10187                           ;usb_device.c: 1795: }
 10188                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 10189  0D37  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10190  0D38  00F0               	movwf	??_USBCtrlTrfTxService
 10191  0D39  01F1               	clrf	??_USBCtrlTrfTxService+1
 10192  0D3A  0870               	movf	??_USBCtrlTrfTxService,w
 10193  0D3B  02B6               	subwf	(_inPipes^(0+384)+3),f	;volatile
 10194  0D3C  0871               	movf	??_USBCtrlTrfTxService+1,w
 10195  0D3D  3BB7               	subwfb	((_inPipes+1)^(0+384)+3),f	;volatile
 10196                           
 10197                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 10198  0D3E  0827               	movf	_pBDTEntryIn^(0+384),w
 10199  0D3F  3E01               	addlw	1
 10200  0D40  00F0               	movwf	??_USBCtrlTrfTxService
 10201  0D41  3000               	movlw	0
 10202  0D42  3D28               	addwfc	(_pBDTEntryIn+1)^(0+384),w
 10203  0D43  00F1               	movwf	??_USBCtrlTrfTxService+1
 10204  0D44  0870               	movf	??_USBCtrlTrfTxService,w
 10205  0D45  0086               	movwf	6
 10206  0D46  0871               	movf	??_USBCtrlTrfTxService+1,w
 10207  0D47  0087               	movwf	7
 10208  0D48  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10209  0D49  0081               	movwf	1
 10210                           
 10211                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 10212  0D4A  3058               	movlw	88
 10213  0D4B  00F0               	movwf	??_USBCtrlTrfTxService
 10214  0D4C  0870               	movf	??_USBCtrlTrfTxService,w
 10215  0D4D  00E1               	movwf	_pDst^(0+384)
 10216                           
 10217                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 10218  0D4E  1C35               	btfss	(_inPipes^(0+384)+2),0	;volatile
 10219  0D4F  2D66               	goto	i1l2920
 10220  0D50  2D7F               	goto	i1l2930
 10221  0D51                     i1l2912:	
 10222                           ;usb_device.c: 1810: {
 10223                           ;usb_device.c: 1811: while(byteToSend)
 10224                           
 10225                           
 10226                           ;usb_device.c: 1812: {
 10227                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 10228  0D51  0833               	movf	_inPipes^(0+384),w	;volatile
 10229  0D52  0084               	movwf	4
 10230  0D53  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
 10231  0D54  0085               	movwf	5
 10232  0D55  0800               	movf	0,w	;code access
 10233  0D56  00F0               	movwf	??_USBCtrlTrfTxService
 10234  0D57  0861               	movf	_pDst^(0+384),w
 10235  0D58  0086               	movwf	6
 10236  0D59  0187               	clrf	7
 10237  0D5A  0870               	movf	??_USBCtrlTrfTxService,w
 10238  0D5B  0081               	movwf	1
 10239  0D5C  3001               	movlw	1
 10240  0D5D  07B3               	addwf	_inPipes^(0+384),f	;volatile
 10241  0D5E  3000               	movlw	0
 10242  0D5F  3DB4               	addwfc	(_inPipes+1)^(0+384),f	;volatile
 10243  0D60  3001               	movlw	1
 10244  0D61  00F0               	movwf	??_USBCtrlTrfTxService
 10245  0D62  0870               	movf	??_USBCtrlTrfTxService,w
 10246  0D63  07E1               	addwf	_pDst^(0+384),f
 10247                           
 10248                           ;usb_device.c: 1814: byteToSend--;
 10249  0D64  3001               	movlw	1
 10250  0D65  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
 10251  0D66                     i1l2920:	
 10252  0D66  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10253  0D67  1903               	btfsc	3,2
 10254  0D68  0008               	return
 10255  0D69  2D51               	goto	i1l2912
 10256  0D6A                     i1l2922:	
 10257                           ;usb_device.c: 1817: else
 10258                           ;usb_device.c: 1818: {
 10259                           ;usb_device.c: 1819: while(byteToSend)
 10260                           
 10261                           ;usb_device.c: 1815: }
 10262                           ;usb_device.c: 1816: }
 10263                           
 10264                           
 10265                           ;usb_device.c: 1820: {
 10266                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 10267  0D6A  0833               	movf	_inPipes^(0+384),w	;volatile
 10268  0D6B  0084               	movwf	4
 10269  0D6C  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
 10270  0D6D  0085               	movwf	5
 10271  0D6E  0800               	movf	0,w	;code access
 10272  0D6F  00F0               	movwf	??_USBCtrlTrfTxService
 10273  0D70  0861               	movf	_pDst^(0+384),w
 10274  0D71  0086               	movwf	6
 10275  0D72  0187               	clrf	7
 10276  0D73  0870               	movf	??_USBCtrlTrfTxService,w
 10277  0D74  0081               	movwf	1
 10278  0D75  3001               	movlw	1
 10279  0D76  07B3               	addwf	_inPipes^(0+384),f	;volatile
 10280  0D77  3000               	movlw	0
 10281  0D78  3DB4               	addwfc	(_inPipes+1)^(0+384),f	;volatile
 10282  0D79  3001               	movlw	1
 10283  0D7A  00F0               	movwf	??_USBCtrlTrfTxService
 10284  0D7B  0870               	movf	??_USBCtrlTrfTxService,w
 10285  0D7C  07E1               	addwf	_pDst^(0+384),f
 10286                           
 10287                           ;usb_device.c: 1822: byteToSend--;
 10288  0D7D  3001               	movlw	1
 10289  0D7E  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
 10290  0D7F                     i1l2930:	
 10291  0D7F  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10292  0D80  1903               	btfsc	3,2
 10293  0D81  0008               	return
 10294  0D82  2D6A               	goto	i1l2922
 10295  0D83                     __end_of_USBCtrlTrfTxService:	
 10296  007E                     btemp	set	126	;btemp
 10297  007E                     int$flags	set	126
 10298  007E                     wtemp	set	126
 10299  007E                     wtemp0	set	126
 10300  0080                     wtemp1	set	128
 10301  0082                     wtemp2	set	130
 10302  0084                     wtemp3	set	132
 10303  0086                     wtemp4	set	134
 10304  0088                     wtemp5	set	136
 10305  007F                     wtemp6	set	127
 10306  007E                     ttemp	set	126
 10307  007E                     ttemp0	set	126
 10308  0081                     ttemp1	set	129
 10309  0084                     ttemp2	set	132
 10310  0087                     ttemp3	set	135
 10311  007F                     ttemp4	set	127
 10312  007E                     ltemp	set	126
 10313  007E                     ltemp0	set	126
 10314  0082                     ltemp1	set	130
 10315  0086                     ltemp2	set	134
 10316  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    201
    Data        0
    BSS         229
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            16     16      16
    BANK1            16      6      12
    BANK2            16     16      16
    BANK3            80      3      80
    BANK4            80      3      21
    BANK5            80      0      64
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 4096
		 -> cdc_data_tx(BANK1[64]), cdc_data_rx(BANK2[64]), CtrlTrfData(BANK0[8]), RAM(DATA[4096]), 
		 -> SetupPkt(BANK0[8]), NULL(NULL[0]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 8
		 -> SetupPkt(BANK0[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK3[1]), NULL(NULL[0]), 
		 -> BDT(BANK0[48]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    ReadPayload@data	PTR unsigned char  size(1) Largest target is 2
		 -> main@data(BANK4[2]), 

    WriteAddress@addr	PTR unsigned char  size(1) Largest target is 5
		 -> nRF_Setup@RXTX_ADDR(BANK2[5]), 

    putUSBUSART@data	PTR unsigned char  size(1) Largest target is 2
		 -> main@data(BANK4[2]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S1367_POINTER$wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S1367_POINTER$bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S1367_POINTER$wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S1367_POINTER$bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(BANK0[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK1[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    S249$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S239$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S239$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S215$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S215$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S215$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S215$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _SYS_InterruptHigh in COMMON

    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USER_USB_CALLBACK_EVENT_HANDLER->i1_CDCInitEP
    i1_CDCInitEP->i1_USBEnableEndpoint
    i1_USBEnableEndpoint->i1_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    None.

Critical Paths under _SYS_InterruptHigh in BANK0

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService

Critical Paths under _main in BANK2

    _main->_nRF_Setup
    _nRF_Setup->_WriteAddress
    _WriteRegister->_SPI_transfer
    _WriteAddress->_SPI_transfer
    _ReadRegister->_SPI_transfer
    _ReadPayload->_SPI_transfer
    _CDCTxService->_USBTransferOnePacket
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    8576
                                              0 BANK3      3     3      0
                                              0 BANK4      3     3      0
                          _CDCInitEP
                       _CDCTxService
                        _ReadPayload
                       _ReadRegister
                           _SPI_init
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                          _nRF_Setup
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (1) _putUSBUSART                                          3     2      1     205
                                              0 BANK2      3     2      1
 ---------------------------------------------------------------------------------
 (1) _nRF_Setup                                            8     8      0    2093
                                              8 BANK2      8     8      0
                       _ReadRegister
                       _WriteAddress
                      _WriteRegister
 ---------------------------------------------------------------------------------
 (2) _WriteRegister                                        4     3      1    1133
                                              1 BANK2      4     3      1
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (2) _WriteAddress                                         7     5      2     608
                                              1 BANK2      7     5      2
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (2) _ReadRegister                                         5     5      0     130
                                              1 BANK2      5     5      0
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        5     5      0     396
                                              0 BANK2      5     5      0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      1     1      0       0
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      31
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadPayload                                          5     4      1     265
                                              1 BANK2      5     4      1
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _SPI_transfer                                         1     1      0      31
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CDCTxService                                         3     3      0    2294
                                             11 BANK2      3     3      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _CDCInitEP                                            1     1      0    3045
                                             13 BANK2      1     1      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _USBTransferOnePacket                                11     7      4    2093
                                              0 BANK2     11     7      4
 ---------------------------------------------------------------------------------
 (2) _USBEnableEndpoint                                    6     5      1     952
                                              7 BANK2      6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBConfigureEndpoint                                 7     6      1     524
                                              0 BANK2      7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _SYS_InterruptHigh                                    1     1      0   27385
                                              5 BANK1      1     1      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (5) _USBDeviceTasks                                       3     3      0   27385
                                             15 BANK0      1     1      0
                                              3 BANK1      2     2      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i1_USBDeviceInit
 ---------------------------------------------------------------------------------
 (6) i1_USBDeviceInit                                      5     5      0     272
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (6) _USBWakeFromSuspend                                   1     1      0    3649
                                              6 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBSuspend                                           1     1      0    3649
                                              6 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBStallHandler                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _USBIncrement1msInternalTimers                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPService                                     3     3      0   16120
                                              0 BANK1      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfSetupHandler                               1     1      0   15891
                                             14 BANK0      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPServiceComplete                             2     2      0      92
                                              5 COMMON     2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              3 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (8) _USBCheckStdRequest                                   1     1      0   12150
                                             13 BANK0      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBStdSetCfgHandler                                  5     5      0    4335
                                              6 BANK0      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (10) _memset                                              8     2      6     526
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (9) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (9) _USBStdGetDscHandler                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (9) _USBStdFeatureReqHandler                              7     7      0    4120
                                              6 BANK0      7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    3649
                                              0 BANK0      6     0      6
                 _USBCheckCDCRequest
                        i1_CDCInitEP
                i1_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (7) i1_SYSTEM_Initialize                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_CDCInitEP                                          1     1      0     935
                                             13 COMMON     1     1      0
                i1_USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (8) i1_USBTransferOnePacket                              11     7      4     454
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (8) i1_USBEnableEndpoint                                  6     5      1     481
                                              7 COMMON     6     5      1
             i1_USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (9) i1_USBConfigureEndpoint                               7     6      1     274
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (7) _USBCheckCDCRequest                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfOutHandler                                 2     2      0     114
                                              6 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfRxService                                  4     4      0     114
                                              2 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfInHandler                                  3     3      0     115
                                              3 COMMON     3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfTxService                                 3     3      0      92
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDCInitEP
     _USBEnableEndpoint
       _USBConfigureEndpoint
     _USBTransferOnePacket
   _CDCTxService
     _USBTransferOnePacket
   _ReadPayload
     _SPI_transfer
   _ReadRegister
     _SPI_transfer
   _SPI_init
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
   _nRF_Setup
     _ReadRegister
       _SPI_transfer
     _WriteAddress
       _SPI_transfer
     _WriteRegister
       _SPI_transfer
   _putUSBUSART

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_SYSTEM_Initialize
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             i1_CDCInitEP
               i1_USBEnableEndpoint
                 i1_USBConfigureEndpoint
               i1_USBTransferOnePacket
             i1_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           i1_CDCInitEP
             i1_USBEnableEndpoint
               i1_USBConfigureEndpoint
             i1_USBTransferOnePacket
           i1_SYSTEM_Initialize
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       i1_CDCInitEP
         i1_USBEnableEndpoint
           i1_USBConfigureEndpoint
         i1_USBTransferOnePacket
       i1_SYSTEM_Initialize
     i1_USBDeviceInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               10     10      10       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10      6       C       7       75.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               10     10      10       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      3      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      3      15      13       26.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     11F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     11F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Jun 06 16:46:41 2017

                              _USB_SD_Ptr 031B                                         pc 0002  
                             __CFG_CP$OFF 0000                               _SSPSTATbits 0214  
                                      _SW 01D1                             _USBDeviceInit 03E4  
                      __size_of_CDCInitEP 003D      USER_USB_CALLBACK_EVENT_HANDLER@event 0060  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 0062                                       l233 082F  
                                     l173 042B               __end_of_USBStdGetDscHandler 0E74  
                                     l727 178D                                       l567 17CF  
                                     l680 0A71                                       _BDT 0020  
                                     l698 0952                                       _UIE 0E92  
                                     _UIR 0E90                                _USBSuspend 083B  
                   __size_of_WriteAddress 003E                      USBStdSetCfgHandler@i 006A  
                    USBStdSetCfgHandler@p 0067               __end_ofi1_SYSTEM_Initialize 17B9  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                          _USBDeviceTasks 0167                            _USBDeviceState 00E2  
                   ??_USBCtrlTrfRxService 0072                  USBEnableEndpoint@options 0167  
                            __CFG_LVP$OFF 0000                     __size_of_SPI_transfer 0009  
              USBConfigureEndpoint@handle 0166                                      l4330 0AF8  
                                    l4328 0AEF                                      l4344 08A3  
                                    l4424 17BC                                      l4408 0A54  
                                    l4514 0477                                      l4348 08AB  
                                    l4364 0F15                                      l4356 0F05  
                                    l4604 02AE                                      l4612 02CB  
                                    l4428 17C3                                      l4508 0453  
                                    l4374 0F5E                                      l4630 02FC  
                                    l4614 02D0                                      l4622 02ED  
                                    l4702 093A                                      l4550 0834  
                                    l4376 0F76                                      l4632 0302  
                                    l4624 02F1                                      l4634 0318  
                                    l4474 0412                                      l4466 0405  
                                    l4458 03F4                                      l4562 081B  
                                    l4580 0266                                      l4572 025B  
                                    l4486 0430                                      l4592 028F  
                                    l4586 0286                                      l4782 0FD3  
                                    l4792 0FFC                                      u4107 0FF5  
                                    u4117 08C4                                      u4127 08DA  
                                    u4137 0A46                                      u4147 0A77  
                                    u4157 090E                                      u4167 0929  
                                    u4177 0958                                      u4097 0FA5  
                                    u3655 0AC8                                      u3665 0ACE  
                                    i1l35 0A01                                      u3675 0AD6  
                                    u3755 0A5D                                      u3795 0415  
                   ??_USBCtrlTrfTxService 0070                                      _UCFG 0E91  
                                    _UEP0 0E98                                      _UEP1 0E99  
                                    _UEIE 0E97                                      _UEIR 0E93  
                                    _UCON 0E8E                              ?i1_CDCInitEP 0070  
                            __CFG_WRT$OFF 0000                           _CDCDataInHandle 01C6  
  USBStdFeatureReqHandler@current_ep_data 006A                                      _pDst 01E1  
                                    _main 0F7B                                      fsr0h 0005  
                                    fsr1h 0007                                      fsr0l 0004  
                                    indf0 0000                                      indf1 0001  
                             _BaudRateGen 01B8                                      fsr1l 0006  
                         _USBDeviceAttach 081E                                      btemp 007E  
                                    ltemp 007E                                      start 0012  
                                    ttemp 007E                                      wtemp 007E  
                           __CFG_IESO$OFF 0000                __end_of_USBCheckStdRequest 0D1B  
                  ??_USBCtrlTrfOutHandler 0076                       __CFG_PLLEN$DISABLED 0000  
               ??_USBStdFeatureReqHandler 0066                             ??_ReadPayload 0162  
                ??_USBStdGetStatusHandler 0070                            ?_USBDeviceInit 0070  
                            _WriteAddress 0A3F                               _writeBuffer 0320  
                                   ?_main 0070                             ?_ReadRegister 0070  
              i1USBEnableEndpoint@options 0077                             __CFG_WDTE$OFF 0000  
       __size_of_USBCtrlEPServiceComplete 0092                    __end_of_USBDeviceTasks 024B  
               ?_USBCtrlEPServiceComplete 0070                                     i1l323 0BAD  
                                   i1l173 04E0                                     i1l326 0BF1  
                                   i1l190 01C4                                     i1l271 0D37  
                                   i1l327 0BB6                                     i1l328 0BB9  
                                   i1l184 0189                                     i1l258 0631  
                                   i1l194 01EF                                     i1l371 07F6  
                                   i1l419 0124                                     i1l195 0248  
                                   i1l196 01F8                          SPI_transfer@data 0160  
                                   i1l286 055E                                     i1l383 0D1A  
                                   i1l385 0CC1                                     i1l394 0CF4  
                                   i1l479 0CB8                                     i1l567 17B8  
                                   _UADDR 0E96                              _SPI_transfer 1788  
                                   _USTAT 0E8F                    __size_of_WriteRegister 0023  
      __size_of_USBCtrlEPAllowStatusStage 0072                            __CFG_FCMEN$OFF 0000  
         __end_of_USBCtrlEPAllowDataStage 0C5A                                     _sd000 03E0  
                                   _sd001 0366                                     _sd002 039A  
          ?_USBIncrement1msInternalTimers 0070                            __CFG_BOREN$OFF 0000  
                                   ltemp0 007E                          __end_of_SPI_init 17A4  
                                   ltemp1 0082                                     ltemp2 0086  
                                   ltemp3 0080                         __end_of_CDCInitEP 0A3F  
                                   ttemp0 007E                                     ttemp1 0081  
                                   ttemp2 0084                                     ttemp3 0087  
                                   ttemp4 007F                                     status 0003  
                                   wtemp0 007E                                     wtemp1 0080  
                                   wtemp2 0082                                     wtemp3 0084  
                                   wtemp4 0086                                     wtemp5 0088  
                                   wtemp6 007F                           nRF_Setup@status 016A  
                         putUSBUSART@data 0162              __size_of_USBStdSetCfgHandler 008E  
                          __CFG_MCLRE$OFF 0000                           __initialization 0014  
                            __end_of_main 1000                     _control_signal_bitmap 01DF  
                          __CFG_LPBOR$OFF 0000                            ??_ReadRegister 0161  
               __size_of_USBCtrlEPService 0054                                    ??_main 01ED  
                         ?_USBDeviceTasks 0070                       __end_of_ReadPayload 095E  
                             ?_USBSuspend 0070                       __CFG_USBLSCLK$48MHz 0000  
                         i1_USBDeviceInit 049B                              _cdc_mem_type 01DB  
                 __end_of_USBDeviceAttach 083B                          _CDCDataOutHandle 01C8  
                                  _ACTCON 039B                                    i1S4878 1000  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                    SYSTEM_Initialize@state 0160  
                   __size_of_CDCTxService 00D0                                    i1l3104 0BE5  
                                  i1l3032 06C2                                    i1l3016 0698  
                                  i1l3008 0687                                    i1l3122 0054  
                                  i1l3026 06AE                                    i1l3210 05FF  
                                  i1l3124 0056                                    i1l3060 0E0A  
                                  i1l3300 0CCA                                    i1l3150 00B9  
                                  i1l3070 0E40                                    i1l3302 0CCD  
                                  i1l3206 05FB                                    i1l3160 00D4  
                                  i1l3152 00C4                                    i1l3144 00A5  
                                  i1l3056 0E00                                    i1l3048 06F3  
                                  i1l3312 0CDE                                    i1l3304 0CD0  
                                  i1l3410 07B6                                    i1l3162 00DB  
                                  i1l3138 0084                                    i1l3082 0E67  
                                  i1l3314 0CE1                                    i1l3330 0D0F  
                                  i1l3420 07DB                                    i1l3076 0E61  
                                  i1l3068 0E3D                                    i1l3316 0CE4  
                                  i1l3228 0640                                    i1l3236 0649  
                                  i1l3500 0B9E                                    i1l3190 0149  
                                  i1l3166 00E6                                    i1l3078 0E64  
                                  i1l3094 0BC9                                    i1l3326 0D01  
                                  i1l3424 07EA                                    i1l3408 07B1  
                                  i1l3280 05BA                                    i1l3192 0152  
                                  i1l3176 010F                                    i1l3266 0566  
                                  i1l3186 012A                                    i1l3178 0115  
                                  i1l2900 0D30                                    i1l3428 07FC  
                                  i1l3268 057F                                    i1l2820 0C79  
                                  i1l2812 0C6D                                    i1l3612 04C7  
                                  i1l3604 04BB                                    u210_25 0C35  
                                  i1l3278 05AE                                    i1l3382 099B  
                                  i1l2830 0C90                                    i1l3446 088E  
                                  i1l2912 0D51                                    i1l2920 0D66  
                                  i1l2824 0C80                                    i1l2752 0AAC  
                                  i1l3480 0902                                    i1l3448 0897  
                                  i1l3624 04E5                                    i1l2922 0D6A  
                                  i1l2930 0D7F                                    i1l3394 09C7  
                                  i1l2842 0CA6                                    i1l2754 0AB5  
                                  i1l2762 0862                                    i1l2836 0C9E  
                                  i1l3652 0526                                    i1l3804 0183  
                                  i1l2766 0869                                    i1l2782 0E91  
                                  i1l2774 0E81                                    i1l3478 0900  
                                  i1l3646 0502                                    i1l3830 01B5  
                                  i1l2792 0EDA                                    i1l2864 17A6  
                                  i1l2872 09CB                                    i1l3840 01CA  
                                  i1l3824 01A0                                    i1l2794 0EF2  
                                  i1l2874 09CF                                    i1l2882 09D9  
                                  i1l2938 17D4                                    i1l3498 0B9B  
                                  i1l3818 019A                                    i1l2956 0DAA  
                                  i1l2868 17AD                                    i1l2876 09D3  
                                  i1l3596 04AA                                    i1l2878 09D6  
                                  i1l3854 01E7                                    i1l3846 01D1  
                                  i1l2992 0C3E                                    i1l3880 022F  
                                  i1l3882 023E                                    i1l3874 0216  
                                  i1l2988 0C2B                                    i1l3796 0176  
                                  i1l4880 09E2                                    i1l4882 09FC  
                                  u249_25 0558                                    u185_25 0A85  
                                  u186_25 0A8B                                    u187_25 0A93  
                                  u275_25 0B64                                    u288_25 04CA  
                                  _OSCCON 0099                             CDCTxService@i 016C  
                                  _SSPBUF 0211              i1USBTransferOnePacket@handle 0079  
                           _WriteRegister 08BD                            __CFG_PWRTE$OFF 0000  
                       _shortPacketStatus 01E2                           USBDeviceTasks@i 006F  
             USBStdFeatureReqHandler@pUEP 0068                  USBTransferOnePacket@data 0161  
              USBCtrlTrfInHandler@lastDTS 0075                           ??_USBDeviceInit 0160  
                            ?_putUSBUSART 0160                         _USBEnableEndpoint 089A  
         __size_of_USBStdGetStatusHandler 0055                                    _memset 17D0  
                    i1USBEnableEndpoint@p 007A                        ?_USBEnableEndpoint 0167  
           __size_of_USBTransferOnePacket 0084                              _CDCTxService 024B  
                     ??_USBEnableEndpoint 0168                        __size_of_nRF_Setup 008A  
            i1USBConfigureEndpoint@handle 0076                               _CtrlTrfData 0058  
                            ReadPayload@i 0165                      _controlTransferState 00E3  
                       _SYSTEM_Initialize 17B9                   __end_of__initialization 003A  
              i1USBTransferOnePacket@data 0071                      __size_ofi1_CDCInitEP 0035  
                      ?_SYSTEM_Initialize 0070                            ?_WriteRegister 0161  
                __size_of_USBStallHandler 0027                       __size_of_USBSuspend 001F  
                        WriteRegister@reg 0164                          WriteRegister@val 0161  
                    i1USBDeviceInit@i_821 0073                            __pcstackCOMMON 0070  
               __end_of_USBEnableEndpoint 08BD                             __end_of_sd000 03E4  
                           __end_of_sd001 039A                             __end_of_sd002 03CE  
                     ??_SYSTEM_Initialize 0160          __size_of_USBCtrlEPAllowDataStage 005C  
                             _ReadPayload 0931             __size_of_USBConfigureEndpoint 0043  
                 __end_ofi1_USBDeviceInit 0548               __end_of_USBCtrlTrfInHandler 07FF  
                               ?_SPI_init 0070                                _cdc_notice 0220  
                              _cdc_rx_len 01DC                                _cdc_tx_len 01DE  
                ??_USBCtrlTrfSetupHandler 006E                   _USBTicksSinceSuspendEnd 01DA  
                        ?_USBDeviceAttach 0070                 __end_of_SYSTEM_Initialize 17D0  
                  _USBStdGetStatusHandler 0BA9                                __pbssBANK1 00E0  
                              __pbssBANK3 01A0                                __pbssBANK4 0220  
                              __pbssBANK5 02A0                                __pbssBANK6 0320  
                    __end_of_ReadRegister 0931               __size_of_USBWakeFromSuspend 0020  
                             _pBDTEntryIn 01A7                           WriteAddress@reg 0165  
                         WriteAddress@num 0161          __end_of_USBCtrlEPServiceComplete 067B  
             __size_of_USBCheckCDCRequest 005F                                __pmaintext 0F7B  
                    USBCtrlTrfRxService@i 0074                         __end_of_nRF_Setup 0793  
                         __CFG_PLLMULT$3x 0000                                __pintentry 0004  
            __size_ofi1_USBEnableEndpoint 0020                                   ?_memset 0070  
                              _device_dsc 03CE                          _USBCtrlEPService 0B55  
                              _ep_data_in 01C0                                ??_SPI_init 0160  
             __end_of_USBCtrlTrfRxService 05E9                        _USBCheckStdRequest 0CB9  
                       _configDescriptor1 0323               __end_of_USBCtrlTrfTxService 0D83  
                     _USBStdSetCfgHandler 067B                                   u277_2m0 0B94  
                     ?_USBCheckStdRequest 0070              __size_of_USBStdGetDscHandler 007F  
                                 _TMR_CNT 01D2                                   _UIEbits 0E92  
                                 _UIRbits 0E90              __size_ofi1_SYSTEM_Initialize 0015  
                         ??_WriteRegister 0162                             _cdc_trf_state 01DD  
                ??i1_USBTransferOnePacket 0074                                   _pCDCDst 01CA  
                                 _pCDCSrc 01CC           ??_USBIncrement1msInternalTimers 0070  
                    ?_USBStdSetCfgHandler 0070                                 _CDCInitEP 0A02  
              __size_of_USBEnableEndpoint 0023                                _readBuffer 02A0  
                    ??_USBCheckStdRequest 006D             __size_of_USBCtrlTrfOutHandler 0037  
                        ??_USBDeviceTasks 00E9                         ??_USBStallHandler 0070  
                         __CFG_STVREN$OFF 0000                          ?i1_USBDeviceInit 0070  
                    __size_of_putUSBUSART 001B                           __size_of_memset 0018  
               __end_of_configDescriptor1 0366                                   __ptext1 0803  
                                 __ptext2 0709                                   __ptext3 08BD  
                                 __ptext4 0A3F                                   __ptext5 0907  
                                 __ptext6 03E4                                   __ptext7 081E  
                                 __ptext8 17B9                                   __ptext9 1791  
                                 _inPipes 01B3               _USBDeferOUTDataStagePackets 01D5  
                            ??_USBSuspend 0066                     i1USBEnableEndpoint@ep 007C  
                               _IOCBPbits 0394                        __end_of_USB_CD_Ptr 0323  
              __size_of_SYSTEM_Initialize 0017           __size_of_USBCtrlTrfSetupHandler 0053  
                                 clrloop0 1783                  ??i1_USBConfigureEndpoint 0071  
                    end_of_initialization 003A                        __end_of_USB_SD_Ptr 0321  
                     _pBDTEntryEP0OutNext 00E0                                   memset@c 0072  
                                 memset@n 0074                                   memset@p 0076  
                         _USB1msTickCount 01BC           _dummy_encapsulated_cmd_response 022A  
                ?_USBStdFeatureReqHandler 0070                     ??_USBStdSetCfgHandler 0066  
                        __CFG_CLKOUTEN$ON 0000                                ?_CDCInitEP 0070  
                      __end_of_USBSuspend 085A                   _USBCtrlEPAllowDataStage 0BFE  
                            __pstringtext 031B                  _USBCtrlEPServiceComplete 05E9  
              _USBStatusStageEnabledFlag1 01D7                _USBStatusStageEnabledFlag2 01D8  
                      USBEnableEndpoint@p 016A                          __CFG_FOSC$INTOSC 0000  
                               _TRISAbits 008C                                 _TRISBbits 008D  
                               _TRISCbits 008E                        _BothEP0OutUOWNsSet 01CE  
               USBStdSetCfgHandler@i_1174 0069                     __size_of_ReadRegister 002A  
               USBConfigureEndpoint@EPNum 0165                ?_USBCtrlEPAllowStatusStage 0070  
     USER_USB_CALLBACK_EVENT_HANDLER@size 0064                                 _USTATcopy 00E5  
                i1USBTransferOnePacket@ep 0078              __end_of_USBTransferOnePacket 0F7B  
         __size_ofi1_USBTransferOnePacket 0083                                main@status 0234  
                       putUSBUSART@length 0160                        USBDeviceInit@i_821 0163  
                  _USBCtrlTrfSetupHandler 0B02                              ?_ReadPayload 0161  
                   __end_of_USBDeviceInit 049B     __end_of_USBIncrement1msInternalTimers 1800  
  __size_of_USBIncrement1msInternalTimers 0018             _USBIncrement1msInternalTimers 17E8  
                          __end_of_memset 17E8                              _ReadRegister 0907  
                       _USBBusIsSuspended 01D3                       start_initialization 0014  
                       __size_of_SPI_init 0013                   ?_USBStdGetStatusHandler 0070  
           USBCtrlTrfRxService@byteToRead 0075                               _cdc_data_rx 0120  
                             _cdc_data_tx 00A0              __end_of_USBConfigureEndpoint 0B02  
         __end_of_USBStdFeatureReqHandler 0167                       i1_USBEnableEndpoint 085A  
         __size_ofi1_USBConfigureEndpoint 0042                             ??i1_CDCInitEP 007D  
       __end_of_USBCtrlEPAllowStatusStage 0DF5                             WriteAddress@i 0166  
                __end_of_USBCtrlEPService 0BA9                 ??_USBCtrlEPAllowDataStage 0073  
                             ??_CDCInitEP 016D                            USBDeviceInit@i 0164  
                          USBDeviceInit@p 0161                    _pBDTEntryEP0OutCurrent 00E4  
                 USBTransferOnePacket@dir 0160                   USBTransferOnePacket@len 0163  
             i1USBConfigureEndpoint@EPNum 0075                       _USBStdGetDscHandler 0DF5  
                    ?i1_USBEnableEndpoint 0077                             ?_WriteAddress 0161  
                                ??_memset 0076                       i1_SYSTEM_Initialize 17A4  
                               _nRF_Setup 0709                    i1_USBTransferOnePacket 0E74  
                           ?_SPI_transfer 0070                    _USBActiveConfiguration 01EC  
          __end_of_USBStdGetStatusHandler 0BFE                 i1USBTransferOnePacket@dir 0070  
               i1USBTransferOnePacket@len 0073                                 ___latbits 0002  
                           __pcstackBANK0 0060                             __pcstackBANK1 00E6  
                           __pcstackBANK2 0160                             __pcstackBANK3 01ED  
            __size_of_USBCtrlTrfInHandler 006C                             __pcstackBANK4 0232  
                    ?_USBStdGetDscHandler 0070                      ?i1_SYSTEM_Initialize 0070  
              __end_of_USBWakeFromSuspend 089A                          WriteAddress@addr 0162  
                         _USBStallHandler 08E0                              _pBDTEntryOut 01AD  
              __end_of_USBCheckCDCRequest 0CB9                  __size_of_USBDeviceAttach 001D  
                     __end_ofi1_CDCInitEP 0993                            ??_WriteAddress 0163  
                   ??i1_USBEnableEndpoint 0078                    i1_USBConfigureEndpoint 0A7D  
                              ?_nRF_Setup 0070                                 __pswtext1 1000  
                          ??_SPI_transfer 0160                      _USBTransferOnePacket 0EF7  
            __end_of_USBCtrlTrfOutHandler 09CA                     ??_USBStdGetDscHandler 0070  
                             _ep_data_out 01C3              __size_of_USBCtrlTrfRxService 00A1  
           USBConfigureEndpoint@direction 0160                     ??i1_SYSTEM_Initialize 0070  
            __size_of_USBCtrlTrfTxService 0068                                  _LATAbits 010C  
                                _LATCbits 010E                     __end_of_WriteRegister 08E0  
              ??_USBCtrlEPServiceComplete 0075                                 clear_ram0 1782  
                                _PIE2bits 0092                                  _PIR2bits 0012  
                           ??_putUSBUSART 0161                                  _UEP0bits 0E98  
              _USBDeferINDataStagePackets 01D4               __size_of_USBCheckStdRequest 0062  
                                _UCONbits 0E8E                      _USBConfigureEndpoint 0ABF  
        __size_of_USBStdFeatureReqHandler 0129                      __size_of_ReadPayload 002D  
                   ?_USBTransferOnePacket 0160                                  _SPI_init 1791  
                       _SYS_InterruptHigh 0004                             ?_CDCTxService 0070  
                            _RemoteWakeup 01D0                        ?_SYS_InterruptHigh 0070  
                __size_ofi1_USBDeviceInit 00AD                        nRF_Setup@RXTX_ADDR 016B  
                 __end_of_USBStallHandler 0907               ??_USBCtrlEPAllowStatusStage 0070  
             __end_of_USBStdSetCfgHandler 0709                               i1_CDCInitEP 095E  
                     ??_SYS_InterruptHigh 00EB                        __end_of_device_dsc 03E0  
                 ?_USBCtrlTrfSetupHandler 0070                   USBStdGetStatusHandler@p 0071  
                  USBTransferOnePacket@ep 0168                                  _SetupPkt 0050  
                   ?_USBConfigureEndpoint 0160                         ??_USBDeviceAttach 0160  
                       ReadRegister@temp1 0165                               ??_nRF_Setup 0168  
               __end_of_SYS_InterruptHigh 0012                       __end_of_putUSBUSART 081E  
                             _line_coding 01E3                            ??_CDCTxService 016B  
                 __size_of_USBDeviceTasks 00E4                                  __ptext10 0931  
                                __ptext11 1788                                  __ptext20 087A  
                                __ptext12 024B                                  __ptext21 083B  
                                __ptext13 0A02                                  __ptext30 17D0  
                                __ptext22 08E0                                  __ptext14 0EF7  
                                __ptext31 0BA9                                  __ptext23 17E8  
                                __ptext15 089A                                  __ptext40 0C5A  
                                __ptext32 0DF5                                  __ptext24 0B55  
                                __ptext16 0ABF                                  __ptext41 0993  
                                __ptext33 003E                                  __ptext25 0B02  
                                __ptext42 0548                                  __ptext34 09CA  
                                __ptext26 05E9                                  __ptext18 0167  
                                __ptext43 0D83                                  __ptext35 17A4  
                                __ptext27 0BFE                                  __ptext19 049B  
                                __ptext44 0793                                  __ptext36 095E  
                                __ptext28 0CB9                                  __ptext45 0D1B  
                                __ptext37 0E74                                  __ptext29 067B  
                                __ptext38 085A                                  __ptext39 0A7D  
                    __end_of_WriteAddress 0A7D            __end_of_USBCtrlTrfSetupHandler 0B55  
                           __size_of_main 0085                         ?_USBCtrlEPService 0070  
         i1USBConfigureEndpoint@direction 0070                      __end_of_SPI_transfer 1791  
                      ??_USBCtrlEPService 00E6                       _USBCtrlTrfInHandler 0793  
                                _outPipes 01A0                      _USBCtrlTrfOutHandler 0993  
                                int$flags 007E                   ?i1_USBTransferOnePacket 0070  
               _USBCtrlEPAllowStatusStage 0D83                                  main@data 0232  
                  ??_USBTransferOnePacket 0164                 _USBDeferStatusStagePacket 01D6  
                CDCTxService@byte_to_send 016D                          i1USBDeviceInit@i 0074  
                        i1USBDeviceInit@p 0071                                _INTCONbits 000B  
                i1SYSTEM_Initialize@state 0070                      ?_USBCtrlTrfInHandler 0070  
           USBCtrlTrfTxService@byteToSend 0072                                  memset@p1 0070  
                        ?_USBStallHandler 0070                  USBStdFeatureReqHandler@p 006B  
                        ReadRegister@temp 0164                                  intlevel1 0000  
                             _MUSHROOM_ON 01CF                    __size_of_USBDeviceInit 00B7  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0A02  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0038  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0060         ??_USER_USB_CALLBACK_EVENT_HANDLER 007E  
         _USER_USB_CALLBACK_EVENT_HANDLER 09CA                         ??i1_USBDeviceInit 0070  
                 ?i1_USBConfigureEndpoint 0070                                _OSCCONbits 0099  
          __end_ofi1_USBTransferOnePacket 0EF7                    ??_USBConfigureEndpoint 0161  
                   ?_USBCtrlTrfOutHandler 0070                               _putUSBUSART 0803  
                    __CFG_CPUDIV$NOCLKDIV 0000                       _USBCtrlTrfRxService 0548  
                      _USBWakeFromSuspend 087A                           ReadPayload@data 0161  
                 _USBStdFeatureReqHandler 003E                        _USBCheckCDCRequest 0C5A  
                     _USBCtrlTrfTxService 0D1B                __size_of_SYS_InterruptHigh 000E  
                         ReadRegister@reg 0163                       ?_USBWakeFromSuspend 0070  
                   ??_USBCtrlTrfInHandler 0073                     _USBAlternateInterface 01EA  
                     ?_USBCheckCDCRequest 0070                               _SSPCON1bits 0215  
                     USBEnableEndpoint@ep 016C                           _endpoint_number 01E0  
                    ?_USBCtrlTrfRxService 0070                            ReadPayload@num 0164  
                ?_USBCtrlEPAllowDataStage 0070                      ?_USBCtrlTrfTxService 0070  
            _USBStatusStageTimeoutCounter 01D9            __end_ofi1_USBConfigureEndpoint 0ABF  
                    ??_USBWakeFromSuspend 0066               __end_ofi1_USBEnableEndpoint 087A  
              USBTransferOnePacket@handle 0169                      __end_of_CDCTxService 031B  
                    ??_USBCheckCDCRequest 0070                                _USB_CD_Ptr 0321  
