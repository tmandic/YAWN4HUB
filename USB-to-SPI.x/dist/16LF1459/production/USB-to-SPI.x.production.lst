

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Jun 30 12:33:14 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16LF1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    10                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    11                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	swtext1,local,class=CONST,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,delta=2
    67                           	dabs	1,0x20,48,_BDT
    68                           	dabs	1,0x58,8,_CtrlTrfData
    69                           	dabs	1,0x50,8,_SetupPkt
    70                           	dabs	1,0xA0,64,_cdc_data_tx
    71                           	dabs	1,0x120,64,_cdc_data_rx
    72                           	dabs	1,0x7E,2
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  0111                     	;# 
   120  0112                     	;# 
   121  0113                     	;# 
   122  0114                     	;# 
   123  0115                     	;# 
   124  0116                     	;# 
   125  0117                     	;# 
   126  0118                     	;# 
   127  0119                     	;# 
   128  011D                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  018E                     	;# 
   132  0191                     	;# 
   133  0191                     	;# 
   134  0192                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0194                     	;# 
   138  0195                     	;# 
   139  0196                     	;# 
   140  0199                     	;# 
   141  019A                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019C                     	;# 
   145  019D                     	;# 
   146  019E                     	;# 
   147  019F                     	;# 
   148  020C                     	;# 
   149  020D                     	;# 
   150  0211                     	;# 
   151  0211                     	;# 
   152  0212                     	;# 
   153  0212                     	;# 
   154  0213                     	;# 
   155  0213                     	;# 
   156  0214                     	;# 
   157  0214                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0216                     	;# 
   162  0216                     	;# 
   163  0217                     	;# 
   164  0217                     	;# 
   165  0391                     	;# 
   166  0392                     	;# 
   167  0393                     	;# 
   168  0394                     	;# 
   169  0395                     	;# 
   170  0396                     	;# 
   171  039A                     	;# 
   172  039B                     	;# 
   173  0611                     	;# 
   174  0612                     	;# 
   175  0613                     	;# 
   176  0613                     	;# 
   177  0614                     	;# 
   178  0615                     	;# 
   179  0616                     	;# 
   180  0616                     	;# 
   181  0691                     	;# 
   182  0692                     	;# 
   183  0693                     	;# 
   184  0694                     	;# 
   185  0695                     	;# 
   186  0E8E                     	;# 
   187  0E8F                     	;# 
   188  0E90                     	;# 
   189  0E91                     	;# 
   190  0E92                     	;# 
   191  0E93                     	;# 
   192  0E94                     	;# 
   193  0E94                     	;# 
   194  0E95                     	;# 
   195  0E96                     	;# 
   196  0E97                     	;# 
   197  0E98                     	;# 
   198  0E99                     	;# 
   199  0E9A                     	;# 
   200  0E9B                     	;# 
   201  0E9C                     	;# 
   202  0E9D                     	;# 
   203  0E9E                     	;# 
   204  0E9F                     	;# 
   205  0FE4                     	;# 
   206  0FE5                     	;# 
   207  0FE6                     	;# 
   208  0FE7                     	;# 
   209  0FE8                     	;# 
   210  0FE9                     	;# 
   211  0FEA                     	;# 
   212  0FEB                     	;# 
   213  0FED                     	;# 
   214  0FEE                     	;# 
   215  0FEF                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  008C                     	;# 
   243  008D                     	;# 
   244  008E                     	;# 
   245  0091                     	;# 
   246  0092                     	;# 
   247  0095                     	;# 
   248  0096                     	;# 
   249  0097                     	;# 
   250  0098                     	;# 
   251  0099                     	;# 
   252  009A                     	;# 
   253  009B                     	;# 
   254  009B                     	;# 
   255  009C                     	;# 
   256  009D                     	;# 
   257  009E                     	;# 
   258  009F                     	;# 
   259  010C                     	;# 
   260  010D                     	;# 
   261  010E                     	;# 
   262  0111                     	;# 
   263  0112                     	;# 
   264  0113                     	;# 
   265  0114                     	;# 
   266  0115                     	;# 
   267  0116                     	;# 
   268  0117                     	;# 
   269  0118                     	;# 
   270  0119                     	;# 
   271  011D                     	;# 
   272  018C                     	;# 
   273  018D                     	;# 
   274  018E                     	;# 
   275  0191                     	;# 
   276  0191                     	;# 
   277  0192                     	;# 
   278  0193                     	;# 
   279  0193                     	;# 
   280  0194                     	;# 
   281  0195                     	;# 
   282  0196                     	;# 
   283  0199                     	;# 
   284  019A                     	;# 
   285  019B                     	;# 
   286  019B                     	;# 
   287  019C                     	;# 
   288  019D                     	;# 
   289  019E                     	;# 
   290  019F                     	;# 
   291  020C                     	;# 
   292  020D                     	;# 
   293  0211                     	;# 
   294  0211                     	;# 
   295  0212                     	;# 
   296  0212                     	;# 
   297  0213                     	;# 
   298  0213                     	;# 
   299  0214                     	;# 
   300  0214                     	;# 
   301  0215                     	;# 
   302  0215                     	;# 
   303  0215                     	;# 
   304  0216                     	;# 
   305  0216                     	;# 
   306  0217                     	;# 
   307  0217                     	;# 
   308  0391                     	;# 
   309  0392                     	;# 
   310  0393                     	;# 
   311  0394                     	;# 
   312  0395                     	;# 
   313  0396                     	;# 
   314  039A                     	;# 
   315  039B                     	;# 
   316  0611                     	;# 
   317  0612                     	;# 
   318  0613                     	;# 
   319  0613                     	;# 
   320  0614                     	;# 
   321  0615                     	;# 
   322  0616                     	;# 
   323  0616                     	;# 
   324  0691                     	;# 
   325  0692                     	;# 
   326  0693                     	;# 
   327  0694                     	;# 
   328  0695                     	;# 
   329  0E8E                     	;# 
   330  0E8F                     	;# 
   331  0E90                     	;# 
   332  0E91                     	;# 
   333  0E92                     	;# 
   334  0E93                     	;# 
   335  0E94                     	;# 
   336  0E94                     	;# 
   337  0E95                     	;# 
   338  0E96                     	;# 
   339  0E97                     	;# 
   340  0E98                     	;# 
   341  0E99                     	;# 
   342  0E9A                     	;# 
   343  0E9B                     	;# 
   344  0E9C                     	;# 
   345  0E9D                     	;# 
   346  0E9E                     	;# 
   347  0E9F                     	;# 
   348  0FE4                     	;# 
   349  0FE5                     	;# 
   350  0FE6                     	;# 
   351  0FE7                     	;# 
   352  0FE8                     	;# 
   353  0FE9                     	;# 
   354  0FEA                     	;# 
   355  0FEB                     	;# 
   356  0FED                     	;# 
   357  0FEE                     	;# 
   358  0FEF                     	;# 
   359  0000                     	;# 
   360  0001                     	;# 
   361  0002                     	;# 
   362  0003                     	;# 
   363  0004                     	;# 
   364  0005                     	;# 
   365  0006                     	;# 
   366  0007                     	;# 
   367  0008                     	;# 
   368  0009                     	;# 
   369  000A                     	;# 
   370  000B                     	;# 
   371  000C                     	;# 
   372  000D                     	;# 
   373  000E                     	;# 
   374  0011                     	;# 
   375  0012                     	;# 
   376  0015                     	;# 
   377  0016                     	;# 
   378  0016                     	;# 
   379  0017                     	;# 
   380  0018                     	;# 
   381  0019                     	;# 
   382  001A                     	;# 
   383  001B                     	;# 
   384  001C                     	;# 
   385  008C                     	;# 
   386  008D                     	;# 
   387  008E                     	;# 
   388  0091                     	;# 
   389  0092                     	;# 
   390  0095                     	;# 
   391  0096                     	;# 
   392  0097                     	;# 
   393  0098                     	;# 
   394  0099                     	;# 
   395  009A                     	;# 
   396  009B                     	;# 
   397  009B                     	;# 
   398  009C                     	;# 
   399  009D                     	;# 
   400  009E                     	;# 
   401  009F                     	;# 
   402  010C                     	;# 
   403  010D                     	;# 
   404  010E                     	;# 
   405  0111                     	;# 
   406  0112                     	;# 
   407  0113                     	;# 
   408  0114                     	;# 
   409  0115                     	;# 
   410  0116                     	;# 
   411  0117                     	;# 
   412  0118                     	;# 
   413  0119                     	;# 
   414  011D                     	;# 
   415  018C                     	;# 
   416  018D                     	;# 
   417  018E                     	;# 
   418  0191                     	;# 
   419  0191                     	;# 
   420  0192                     	;# 
   421  0193                     	;# 
   422  0193                     	;# 
   423  0194                     	;# 
   424  0195                     	;# 
   425  0196                     	;# 
   426  0199                     	;# 
   427  019A                     	;# 
   428  019B                     	;# 
   429  019B                     	;# 
   430  019C                     	;# 
   431  019D                     	;# 
   432  019E                     	;# 
   433  019F                     	;# 
   434  020C                     	;# 
   435  020D                     	;# 
   436  0211                     	;# 
   437  0211                     	;# 
   438  0212                     	;# 
   439  0212                     	;# 
   440  0213                     	;# 
   441  0213                     	;# 
   442  0214                     	;# 
   443  0214                     	;# 
   444  0215                     	;# 
   445  0215                     	;# 
   446  0215                     	;# 
   447  0216                     	;# 
   448  0216                     	;# 
   449  0217                     	;# 
   450  0217                     	;# 
   451  0391                     	;# 
   452  0392                     	;# 
   453  0393                     	;# 
   454  0394                     	;# 
   455  0395                     	;# 
   456  0396                     	;# 
   457  039A                     	;# 
   458  039B                     	;# 
   459  0611                     	;# 
   460  0612                     	;# 
   461  0613                     	;# 
   462  0613                     	;# 
   463  0614                     	;# 
   464  0615                     	;# 
   465  0616                     	;# 
   466  0616                     	;# 
   467  0691                     	;# 
   468  0692                     	;# 
   469  0693                     	;# 
   470  0694                     	;# 
   471  0695                     	;# 
   472  0E8E                     	;# 
   473  0E8F                     	;# 
   474  0E90                     	;# 
   475  0E91                     	;# 
   476  0E92                     	;# 
   477  0E93                     	;# 
   478  0E94                     	;# 
   479  0E94                     	;# 
   480  0E95                     	;# 
   481  0E96                     	;# 
   482  0E97                     	;# 
   483  0E98                     	;# 
   484  0E99                     	;# 
   485  0E9A                     	;# 
   486  0E9B                     	;# 
   487  0E9C                     	;# 
   488  0E9D                     	;# 
   489  0E9E                     	;# 
   490  0E9F                     	;# 
   491  0FE4                     	;# 
   492  0FE5                     	;# 
   493  0FE6                     	;# 
   494  0FE7                     	;# 
   495  0FE8                     	;# 
   496  0FE9                     	;# 
   497  0FEA                     	;# 
   498  0FEB                     	;# 
   499  0FED                     	;# 
   500  0FEE                     	;# 
   501  0FEF                     	;# 
   502  0000                     	;# 
   503  0001                     	;# 
   504  0002                     	;# 
   505  0003                     	;# 
   506  0004                     	;# 
   507  0005                     	;# 
   508  0006                     	;# 
   509  0007                     	;# 
   510  0008                     	;# 
   511  0009                     	;# 
   512  000A                     	;# 
   513  000B                     	;# 
   514  000C                     	;# 
   515  000D                     	;# 
   516  000E                     	;# 
   517  0011                     	;# 
   518  0012                     	;# 
   519  0015                     	;# 
   520  0016                     	;# 
   521  0016                     	;# 
   522  0017                     	;# 
   523  0018                     	;# 
   524  0019                     	;# 
   525  001A                     	;# 
   526  001B                     	;# 
   527  001C                     	;# 
   528  008C                     	;# 
   529  008D                     	;# 
   530  008E                     	;# 
   531  0091                     	;# 
   532  0092                     	;# 
   533  0095                     	;# 
   534  0096                     	;# 
   535  0097                     	;# 
   536  0098                     	;# 
   537  0099                     	;# 
   538  009A                     	;# 
   539  009B                     	;# 
   540  009B                     	;# 
   541  009C                     	;# 
   542  009D                     	;# 
   543  009E                     	;# 
   544  009F                     	;# 
   545  010C                     	;# 
   546  010D                     	;# 
   547  010E                     	;# 
   548  0111                     	;# 
   549  0112                     	;# 
   550  0113                     	;# 
   551  0114                     	;# 
   552  0115                     	;# 
   553  0116                     	;# 
   554  0117                     	;# 
   555  0118                     	;# 
   556  0119                     	;# 
   557  011D                     	;# 
   558  018C                     	;# 
   559  018D                     	;# 
   560  018E                     	;# 
   561  0191                     	;# 
   562  0191                     	;# 
   563  0192                     	;# 
   564  0193                     	;# 
   565  0193                     	;# 
   566  0194                     	;# 
   567  0195                     	;# 
   568  0196                     	;# 
   569  0199                     	;# 
   570  019A                     	;# 
   571  019B                     	;# 
   572  019B                     	;# 
   573  019C                     	;# 
   574  019D                     	;# 
   575  019E                     	;# 
   576  019F                     	;# 
   577  020C                     	;# 
   578  020D                     	;# 
   579  0211                     	;# 
   580  0211                     	;# 
   581  0212                     	;# 
   582  0212                     	;# 
   583  0213                     	;# 
   584  0213                     	;# 
   585  0214                     	;# 
   586  0214                     	;# 
   587  0215                     	;# 
   588  0215                     	;# 
   589  0215                     	;# 
   590  0216                     	;# 
   591  0216                     	;# 
   592  0217                     	;# 
   593  0217                     	;# 
   594  0391                     	;# 
   595  0392                     	;# 
   596  0393                     	;# 
   597  0394                     	;# 
   598  0395                     	;# 
   599  0396                     	;# 
   600  039A                     	;# 
   601  039B                     	;# 
   602  0611                     	;# 
   603  0612                     	;# 
   604  0613                     	;# 
   605  0613                     	;# 
   606  0614                     	;# 
   607  0615                     	;# 
   608  0616                     	;# 
   609  0616                     	;# 
   610  0691                     	;# 
   611  0692                     	;# 
   612  0693                     	;# 
   613  0694                     	;# 
   614  0695                     	;# 
   615  0E8E                     	;# 
   616  0E8F                     	;# 
   617  0E90                     	;# 
   618  0E91                     	;# 
   619  0E92                     	;# 
   620  0E93                     	;# 
   621  0E94                     	;# 
   622  0E94                     	;# 
   623  0E95                     	;# 
   624  0E96                     	;# 
   625  0E97                     	;# 
   626  0E98                     	;# 
   627  0E99                     	;# 
   628  0E9A                     	;# 
   629  0E9B                     	;# 
   630  0E9C                     	;# 
   631  0E9D                     	;# 
   632  0E9E                     	;# 
   633  0E9F                     	;# 
   634  0FE4                     	;# 
   635  0FE5                     	;# 
   636  0FE6                     	;# 
   637  0FE7                     	;# 
   638  0FE8                     	;# 
   639  0FE9                     	;# 
   640  0FEA                     	;# 
   641  0FEB                     	;# 
   642  0FED                     	;# 
   643  0FEE                     	;# 
   644  0FEF                     	;# 
   645  0000                     	;# 
   646  0001                     	;# 
   647  0002                     	;# 
   648  0003                     	;# 
   649  0004                     	;# 
   650  0005                     	;# 
   651  0006                     	;# 
   652  0007                     	;# 
   653  0008                     	;# 
   654  0009                     	;# 
   655  000A                     	;# 
   656  000B                     	;# 
   657  000C                     	;# 
   658  000D                     	;# 
   659  000E                     	;# 
   660  0011                     	;# 
   661  0012                     	;# 
   662  0015                     	;# 
   663  0016                     	;# 
   664  0016                     	;# 
   665  0017                     	;# 
   666  0018                     	;# 
   667  0019                     	;# 
   668  001A                     	;# 
   669  001B                     	;# 
   670  001C                     	;# 
   671  008C                     	;# 
   672  008D                     	;# 
   673  008E                     	;# 
   674  0091                     	;# 
   675  0092                     	;# 
   676  0095                     	;# 
   677  0096                     	;# 
   678  0097                     	;# 
   679  0098                     	;# 
   680  0099                     	;# 
   681  009A                     	;# 
   682  009B                     	;# 
   683  009B                     	;# 
   684  009C                     	;# 
   685  009D                     	;# 
   686  009E                     	;# 
   687  009F                     	;# 
   688  010C                     	;# 
   689  010D                     	;# 
   690  010E                     	;# 
   691  0111                     	;# 
   692  0112                     	;# 
   693  0113                     	;# 
   694  0114                     	;# 
   695  0115                     	;# 
   696  0116                     	;# 
   697  0117                     	;# 
   698  0118                     	;# 
   699  0119                     	;# 
   700  011D                     	;# 
   701  018C                     	;# 
   702  018D                     	;# 
   703  018E                     	;# 
   704  0191                     	;# 
   705  0191                     	;# 
   706  0192                     	;# 
   707  0193                     	;# 
   708  0193                     	;# 
   709  0194                     	;# 
   710  0195                     	;# 
   711  0196                     	;# 
   712  0199                     	;# 
   713  019A                     	;# 
   714  019B                     	;# 
   715  019B                     	;# 
   716  019C                     	;# 
   717  019D                     	;# 
   718  019E                     	;# 
   719  019F                     	;# 
   720  020C                     	;# 
   721  020D                     	;# 
   722  0211                     	;# 
   723  0211                     	;# 
   724  0212                     	;# 
   725  0212                     	;# 
   726  0213                     	;# 
   727  0213                     	;# 
   728  0214                     	;# 
   729  0214                     	;# 
   730  0215                     	;# 
   731  0215                     	;# 
   732  0215                     	;# 
   733  0216                     	;# 
   734  0216                     	;# 
   735  0217                     	;# 
   736  0217                     	;# 
   737  0391                     	;# 
   738  0392                     	;# 
   739  0393                     	;# 
   740  0394                     	;# 
   741  0395                     	;# 
   742  0396                     	;# 
   743  039A                     	;# 
   744  039B                     	;# 
   745  0611                     	;# 
   746  0612                     	;# 
   747  0613                     	;# 
   748  0613                     	;# 
   749  0614                     	;# 
   750  0615                     	;# 
   751  0616                     	;# 
   752  0616                     	;# 
   753  0691                     	;# 
   754  0692                     	;# 
   755  0693                     	;# 
   756  0694                     	;# 
   757  0695                     	;# 
   758  0E8E                     	;# 
   759  0E8F                     	;# 
   760  0E90                     	;# 
   761  0E91                     	;# 
   762  0E92                     	;# 
   763  0E93                     	;# 
   764  0E94                     	;# 
   765  0E94                     	;# 
   766  0E95                     	;# 
   767  0E96                     	;# 
   768  0E97                     	;# 
   769  0E98                     	;# 
   770  0E99                     	;# 
   771  0E9A                     	;# 
   772  0E9B                     	;# 
   773  0E9C                     	;# 
   774  0E9D                     	;# 
   775  0E9E                     	;# 
   776  0E9F                     	;# 
   777  0FE4                     	;# 
   778  0FE5                     	;# 
   779  0FE6                     	;# 
   780  0FE7                     	;# 
   781  0FE8                     	;# 
   782  0FE9                     	;# 
   783  0FEA                     	;# 
   784  0FEB                     	;# 
   785  0FED                     	;# 
   786  0FEE                     	;# 
   787  0FEF                     	;# 
   788  0000                     	;# 
   789  0001                     	;# 
   790  0002                     	;# 
   791  0003                     	;# 
   792  0004                     	;# 
   793  0005                     	;# 
   794  0006                     	;# 
   795  0007                     	;# 
   796  0008                     	;# 
   797  0009                     	;# 
   798  000A                     	;# 
   799  000B                     	;# 
   800  000C                     	;# 
   801  000D                     	;# 
   802  000E                     	;# 
   803  0011                     	;# 
   804  0012                     	;# 
   805  0015                     	;# 
   806  0016                     	;# 
   807  0016                     	;# 
   808  0017                     	;# 
   809  0018                     	;# 
   810  0019                     	;# 
   811  001A                     	;# 
   812  001B                     	;# 
   813  001C                     	;# 
   814  008C                     	;# 
   815  008D                     	;# 
   816  008E                     	;# 
   817  0091                     	;# 
   818  0092                     	;# 
   819  0095                     	;# 
   820  0096                     	;# 
   821  0097                     	;# 
   822  0098                     	;# 
   823  0099                     	;# 
   824  009A                     	;# 
   825  009B                     	;# 
   826  009B                     	;# 
   827  009C                     	;# 
   828  009D                     	;# 
   829  009E                     	;# 
   830  009F                     	;# 
   831  010C                     	;# 
   832  010D                     	;# 
   833  010E                     	;# 
   834  0111                     	;# 
   835  0112                     	;# 
   836  0113                     	;# 
   837  0114                     	;# 
   838  0115                     	;# 
   839  0116                     	;# 
   840  0117                     	;# 
   841  0118                     	;# 
   842  0119                     	;# 
   843  011D                     	;# 
   844  018C                     	;# 
   845  018D                     	;# 
   846  018E                     	;# 
   847  0191                     	;# 
   848  0191                     	;# 
   849  0192                     	;# 
   850  0193                     	;# 
   851  0193                     	;# 
   852  0194                     	;# 
   853  0195                     	;# 
   854  0196                     	;# 
   855  0199                     	;# 
   856  019A                     	;# 
   857  019B                     	;# 
   858  019B                     	;# 
   859  019C                     	;# 
   860  019D                     	;# 
   861  019E                     	;# 
   862  019F                     	;# 
   863  020C                     	;# 
   864  020D                     	;# 
   865  0211                     	;# 
   866  0211                     	;# 
   867  0212                     	;# 
   868  0212                     	;# 
   869  0213                     	;# 
   870  0213                     	;# 
   871  0214                     	;# 
   872  0214                     	;# 
   873  0215                     	;# 
   874  0215                     	;# 
   875  0215                     	;# 
   876  0216                     	;# 
   877  0216                     	;# 
   878  0217                     	;# 
   879  0217                     	;# 
   880  0391                     	;# 
   881  0392                     	;# 
   882  0393                     	;# 
   883  0394                     	;# 
   884  0395                     	;# 
   885  0396                     	;# 
   886  039A                     	;# 
   887  039B                     	;# 
   888  0611                     	;# 
   889  0612                     	;# 
   890  0613                     	;# 
   891  0613                     	;# 
   892  0614                     	;# 
   893  0615                     	;# 
   894  0616                     	;# 
   895  0616                     	;# 
   896  0691                     	;# 
   897  0692                     	;# 
   898  0693                     	;# 
   899  0694                     	;# 
   900  0695                     	;# 
   901  0E8E                     	;# 
   902  0E8F                     	;# 
   903  0E90                     	;# 
   904  0E91                     	;# 
   905  0E92                     	;# 
   906  0E93                     	;# 
   907  0E94                     	;# 
   908  0E94                     	;# 
   909  0E95                     	;# 
   910  0E96                     	;# 
   911  0E97                     	;# 
   912  0E98                     	;# 
   913  0E99                     	;# 
   914  0E9A                     	;# 
   915  0E9B                     	;# 
   916  0E9C                     	;# 
   917  0E9D                     	;# 
   918  0E9E                     	;# 
   919  0E9F                     	;# 
   920  0FE4                     	;# 
   921  0FE5                     	;# 
   922  0FE6                     	;# 
   923  0FE7                     	;# 
   924  0FE8                     	;# 
   925  0FE9                     	;# 
   926  0FEA                     	;# 
   927  0FEB                     	;# 
   928  0FED                     	;# 
   929  0FEE                     	;# 
   930  0FEF                     	;# 
   931  0000                     	;# 
   932  0001                     	;# 
   933  0002                     	;# 
   934  0003                     	;# 
   935  0004                     	;# 
   936  0005                     	;# 
   937  0006                     	;# 
   938  0007                     	;# 
   939  0008                     	;# 
   940  0009                     	;# 
   941  000A                     	;# 
   942  000B                     	;# 
   943  000C                     	;# 
   944  000D                     	;# 
   945  000E                     	;# 
   946  0011                     	;# 
   947  0012                     	;# 
   948  0015                     	;# 
   949  0016                     	;# 
   950  0016                     	;# 
   951  0017                     	;# 
   952  0018                     	;# 
   953  0019                     	;# 
   954  001A                     	;# 
   955  001B                     	;# 
   956  001C                     	;# 
   957  008C                     	;# 
   958  008D                     	;# 
   959  008E                     	;# 
   960  0091                     	;# 
   961  0092                     	;# 
   962  0095                     	;# 
   963  0096                     	;# 
   964  0097                     	;# 
   965  0098                     	;# 
   966  0099                     	;# 
   967  009A                     	;# 
   968  009B                     	;# 
   969  009B                     	;# 
   970  009C                     	;# 
   971  009D                     	;# 
   972  009E                     	;# 
   973  009F                     	;# 
   974  010C                     	;# 
   975  010D                     	;# 
   976  010E                     	;# 
   977  0111                     	;# 
   978  0112                     	;# 
   979  0113                     	;# 
   980  0114                     	;# 
   981  0115                     	;# 
   982  0116                     	;# 
   983  0117                     	;# 
   984  0118                     	;# 
   985  0119                     	;# 
   986  011D                     	;# 
   987  018C                     	;# 
   988  018D                     	;# 
   989  018E                     	;# 
   990  0191                     	;# 
   991  0191                     	;# 
   992  0192                     	;# 
   993  0193                     	;# 
   994  0193                     	;# 
   995  0194                     	;# 
   996  0195                     	;# 
   997  0196                     	;# 
   998  0199                     	;# 
   999  019A                     	;# 
  1000  019B                     	;# 
  1001  019B                     	;# 
  1002  019C                     	;# 
  1003  019D                     	;# 
  1004  019E                     	;# 
  1005  019F                     	;# 
  1006  020C                     	;# 
  1007  020D                     	;# 
  1008  0211                     	;# 
  1009  0211                     	;# 
  1010  0212                     	;# 
  1011  0212                     	;# 
  1012  0213                     	;# 
  1013  0213                     	;# 
  1014  0214                     	;# 
  1015  0214                     	;# 
  1016  0215                     	;# 
  1017  0215                     	;# 
  1018  0215                     	;# 
  1019  0216                     	;# 
  1020  0216                     	;# 
  1021  0217                     	;# 
  1022  0217                     	;# 
  1023  0391                     	;# 
  1024  0392                     	;# 
  1025  0393                     	;# 
  1026  0394                     	;# 
  1027  0395                     	;# 
  1028  0396                     	;# 
  1029  039A                     	;# 
  1030  039B                     	;# 
  1031  0611                     	;# 
  1032  0612                     	;# 
  1033  0613                     	;# 
  1034  0613                     	;# 
  1035  0614                     	;# 
  1036  0615                     	;# 
  1037  0616                     	;# 
  1038  0616                     	;# 
  1039  0691                     	;# 
  1040  0692                     	;# 
  1041  0693                     	;# 
  1042  0694                     	;# 
  1043  0695                     	;# 
  1044  0E8E                     	;# 
  1045  0E8F                     	;# 
  1046  0E90                     	;# 
  1047  0E91                     	;# 
  1048  0E92                     	;# 
  1049  0E93                     	;# 
  1050  0E94                     	;# 
  1051  0E94                     	;# 
  1052  0E95                     	;# 
  1053  0E96                     	;# 
  1054  0E97                     	;# 
  1055  0E98                     	;# 
  1056  0E99                     	;# 
  1057  0E9A                     	;# 
  1058  0E9B                     	;# 
  1059  0E9C                     	;# 
  1060  0E9D                     	;# 
  1061  0E9E                     	;# 
  1062  0E9F                     	;# 
  1063  0FE4                     	;# 
  1064  0FE5                     	;# 
  1065  0FE6                     	;# 
  1066  0FE7                     	;# 
  1067  0FE8                     	;# 
  1068  0FE9                     	;# 
  1069  0FEA                     	;# 
  1070  0FEB                     	;# 
  1071  0FED                     	;# 
  1072  0FEE                     	;# 
  1073  0FEF                     	;# 
  1074  0000                     	;# 
  1075  0001                     	;# 
  1076  0002                     	;# 
  1077  0003                     	;# 
  1078  0004                     	;# 
  1079  0005                     	;# 
  1080  0006                     	;# 
  1081  0007                     	;# 
  1082  0008                     	;# 
  1083  0009                     	;# 
  1084  000A                     	;# 
  1085  000B                     	;# 
  1086  000C                     	;# 
  1087  000D                     	;# 
  1088  000E                     	;# 
  1089  0011                     	;# 
  1090  0012                     	;# 
  1091  0015                     	;# 
  1092  0016                     	;# 
  1093  0016                     	;# 
  1094  0017                     	;# 
  1095  0018                     	;# 
  1096  0019                     	;# 
  1097  001A                     	;# 
  1098  001B                     	;# 
  1099  001C                     	;# 
  1100  008C                     	;# 
  1101  008D                     	;# 
  1102  008E                     	;# 
  1103  0091                     	;# 
  1104  0092                     	;# 
  1105  0095                     	;# 
  1106  0096                     	;# 
  1107  0097                     	;# 
  1108  0098                     	;# 
  1109  0099                     	;# 
  1110  009A                     	;# 
  1111  009B                     	;# 
  1112  009B                     	;# 
  1113  009C                     	;# 
  1114  009D                     	;# 
  1115  009E                     	;# 
  1116  009F                     	;# 
  1117  010C                     	;# 
  1118  010D                     	;# 
  1119  010E                     	;# 
  1120  0111                     	;# 
  1121  0112                     	;# 
  1122  0113                     	;# 
  1123  0114                     	;# 
  1124  0115                     	;# 
  1125  0116                     	;# 
  1126  0117                     	;# 
  1127  0118                     	;# 
  1128  0119                     	;# 
  1129  011D                     	;# 
  1130  018C                     	;# 
  1131  018D                     	;# 
  1132  018E                     	;# 
  1133  0191                     	;# 
  1134  0191                     	;# 
  1135  0192                     	;# 
  1136  0193                     	;# 
  1137  0193                     	;# 
  1138  0194                     	;# 
  1139  0195                     	;# 
  1140  0196                     	;# 
  1141  0199                     	;# 
  1142  019A                     	;# 
  1143  019B                     	;# 
  1144  019B                     	;# 
  1145  019C                     	;# 
  1146  019D                     	;# 
  1147  019E                     	;# 
  1148  019F                     	;# 
  1149  020C                     	;# 
  1150  020D                     	;# 
  1151  0211                     	;# 
  1152  0211                     	;# 
  1153  0212                     	;# 
  1154  0212                     	;# 
  1155  0213                     	;# 
  1156  0213                     	;# 
  1157  0214                     	;# 
  1158  0214                     	;# 
  1159  0215                     	;# 
  1160  0215                     	;# 
  1161  0215                     	;# 
  1162  0216                     	;# 
  1163  0216                     	;# 
  1164  0217                     	;# 
  1165  0217                     	;# 
  1166  0391                     	;# 
  1167  0392                     	;# 
  1168  0393                     	;# 
  1169  0394                     	;# 
  1170  0395                     	;# 
  1171  0396                     	;# 
  1172  039A                     	;# 
  1173  039B                     	;# 
  1174  0611                     	;# 
  1175  0612                     	;# 
  1176  0613                     	;# 
  1177  0613                     	;# 
  1178  0614                     	;# 
  1179  0615                     	;# 
  1180  0616                     	;# 
  1181  0616                     	;# 
  1182  0691                     	;# 
  1183  0692                     	;# 
  1184  0693                     	;# 
  1185  0694                     	;# 
  1186  0695                     	;# 
  1187  0E8E                     	;# 
  1188  0E8F                     	;# 
  1189  0E90                     	;# 
  1190  0E91                     	;# 
  1191  0E92                     	;# 
  1192  0E93                     	;# 
  1193  0E94                     	;# 
  1194  0E94                     	;# 
  1195  0E95                     	;# 
  1196  0E96                     	;# 
  1197  0E97                     	;# 
  1198  0E98                     	;# 
  1199  0E99                     	;# 
  1200  0E9A                     	;# 
  1201  0E9B                     	;# 
  1202  0E9C                     	;# 
  1203  0E9D                     	;# 
  1204  0E9E                     	;# 
  1205  0E9F                     	;# 
  1206  0FE4                     	;# 
  1207  0FE5                     	;# 
  1208  0FE6                     	;# 
  1209  0FE7                     	;# 
  1210  0FE8                     	;# 
  1211  0FE9                     	;# 
  1212  0FEA                     	;# 
  1213  0FEB                     	;# 
  1214  0FED                     	;# 
  1215  0FEE                     	;# 
  1216  0FEF                     	;# 
  1217                           
  1218                           	psect	stringtext
  1219  0252                     __pstringtext:	
  1220  0252                     _USB_SD_Ptr:	
  1221  0252  3417               	retlw	low (_sd000| (0+32768))
  1222  0253  3483               	retlw	high (_sd000| (0+32768))
  1223  0254  349D               	retlw	low (_sd001| (0+32768))
  1224  0255  3482               	retlw	high (_sd001| (0+32768))
  1225  0256  34D1               	retlw	low (_sd002| (0+32768))
  1226  0257  3482               	retlw	high (_sd002| (0+32768))
  1227  0258                     __end_of_USB_SD_Ptr:	
  1228  0258                     _USB_CD_Ptr:	
  1229  0258  345A               	retlw	low (_configDescriptor1| (0+32768))
  1230  0259  3482               	retlw	high (_configDescriptor1| (0+32768))
  1231  025A                     __end_of_USB_CD_Ptr:	
  1232  025A                     _configDescriptor1:	
  1233  025A  3409               	retlw	9
  1234  025B  3402               	retlw	2
  1235  025C  3443               	retlw	67
  1236  025D  3400               	retlw	0
  1237  025E  3402               	retlw	2
  1238  025F  3401               	retlw	1
  1239  0260  3400               	retlw	0
  1240  0261  34C0               	retlw	192
  1241  0262  3432               	retlw	50
  1242  0263  3409               	retlw	9
  1243  0264  3404               	retlw	4
  1244  0265  3400               	retlw	0
  1245  0266  3400               	retlw	0
  1246  0267  3401               	retlw	1
  1247  0268  3402               	retlw	2
  1248  0269  3402               	retlw	2
  1249  026A  3401               	retlw	1
  1250  026B  3400               	retlw	0
  1251  026C  3405               	retlw	5
  1252  026D  3424               	retlw	36
  1253  026E  3400               	retlw	0
  1254  026F  3410               	retlw	16
  1255  0270  3401               	retlw	1
  1256  0271  3404               	retlw	4
  1257  0272  3424               	retlw	36
  1258  0273  3402               	retlw	2
  1259  0274  3402               	retlw	2
  1260  0275  3405               	retlw	5
  1261  0276  3424               	retlw	36
  1262  0277  3406               	retlw	6
  1263  0278  3400               	retlw	0
  1264  0279  3401               	retlw	1
  1265  027A  3405               	retlw	5
  1266  027B  3424               	retlw	36
  1267  027C  3401               	retlw	1
  1268  027D  3400               	retlw	0
  1269  027E  3401               	retlw	1
  1270  027F  3407               	retlw	7
  1271  0280  3405               	retlw	5
  1272  0281  3481               	retlw	129
  1273  0282  3403               	retlw	3
  1274  0283  3408               	retlw	8
  1275  0284  3400               	retlw	0
  1276  0285  3402               	retlw	2
  1277  0286  3409               	retlw	9
  1278  0287  3404               	retlw	4
  1279  0288  3401               	retlw	1
  1280  0289  3400               	retlw	0
  1281  028A  3402               	retlw	2
  1282  028B  340A               	retlw	10
  1283  028C  3400               	retlw	0
  1284  028D  3400               	retlw	0
  1285  028E  3400               	retlw	0
  1286  028F  3407               	retlw	7
  1287  0290  3405               	retlw	5
  1288  0291  3402               	retlw	2
  1289  0292  3402               	retlw	2
  1290  0293  3440               	retlw	64
  1291  0294  3400               	retlw	0
  1292  0295  3400               	retlw	0
  1293  0296  3407               	retlw	7
  1294  0297  3405               	retlw	5
  1295  0298  3482               	retlw	130
  1296  0299  3402               	retlw	2
  1297  029A  3440               	retlw	64
  1298  029B  3400               	retlw	0
  1299  029C  3400               	retlw	0
  1300  029D                     __end_of_configDescriptor1:	
  1301  029D                     _sd001:	
  1302  029D  3434               	retlw	52
  1303  029E  3403               	retlw	3
  1304  029F  344D               	retlw	77
  1305  02A0  3400               	retlw	0
  1306  02A1  3469               	retlw	105
  1307  02A2  3400               	retlw	0
  1308  02A3  3463               	retlw	99
  1309  02A4  3400               	retlw	0
  1310  02A5  3472               	retlw	114
  1311  02A6  3400               	retlw	0
  1312  02A7  346F               	retlw	111
  1313  02A8  3400               	retlw	0
  1314  02A9  3463               	retlw	99
  1315  02AA  3400               	retlw	0
  1316  02AB  3468               	retlw	104
  1317  02AC  3400               	retlw	0
  1318  02AD  3469               	retlw	105
  1319  02AE  3400               	retlw	0
  1320  02AF  3470               	retlw	112
  1321  02B0  3400               	retlw	0
  1322  02B1  3420               	retlw	32
  1323  02B2  3400               	retlw	0
  1324  02B3  3454               	retlw	84
  1325  02B4  3400               	retlw	0
  1326  02B5  3465               	retlw	101
  1327  02B6  3400               	retlw	0
  1328  02B7  3463               	retlw	99
  1329  02B8  3400               	retlw	0
  1330  02B9  3468               	retlw	104
  1331  02BA  3400               	retlw	0
  1332  02BB  346E               	retlw	110
  1333  02BC  3400               	retlw	0
  1334  02BD  346F               	retlw	111
  1335  02BE  3400               	retlw	0
  1336  02BF  346C               	retlw	108
  1337  02C0  3400               	retlw	0
  1338  02C1  346F               	retlw	111
  1339  02C2  3400               	retlw	0
  1340  02C3  3467               	retlw	103
  1341  02C4  3400               	retlw	0
  1342  02C5  3479               	retlw	121
  1343  02C6  3400               	retlw	0
  1344  02C7  3420               	retlw	32
  1345  02C8  3400               	retlw	0
  1346  02C9  3449               	retlw	73
  1347  02CA  3400               	retlw	0
  1348  02CB  346E               	retlw	110
  1349  02CC  3400               	retlw	0
  1350  02CD  3463               	retlw	99
  1351  02CE  3400               	retlw	0
  1352  02CF  342E               	retlw	46
  1353  02D0  3400               	retlw	0
  1354  02D1                     __end_of_sd001:	
  1355  02D1                     _sd002:	
  1356  02D1  3434               	retlw	52
  1357  02D2  3403               	retlw	3
  1358  02D3  3443               	retlw	67
  1359  02D4  3400               	retlw	0
  1360  02D5  3444               	retlw	68
  1361  02D6  3400               	retlw	0
  1362  02D7  3443               	retlw	67
  1363  02D8  3400               	retlw	0
  1364  02D9  3420               	retlw	32
  1365  02DA  3400               	retlw	0
  1366  02DB  3452               	retlw	82
  1367  02DC  3400               	retlw	0
  1368  02DD  3453               	retlw	83
  1369  02DE  3400               	retlw	0
  1370  02DF  342D               	retlw	45
  1371  02E0  3400               	retlw	0
  1372  02E1  3432               	retlw	50
  1373  02E2  3400               	retlw	0
  1374  02E3  3433               	retlw	51
  1375  02E4  3400               	retlw	0
  1376  02E5  3432               	retlw	50
  1377  02E6  3400               	retlw	0
  1378  02E7  3420               	retlw	32
  1379  02E8  3400               	retlw	0
  1380  02E9  3445               	retlw	69
  1381  02EA  3400               	retlw	0
  1382  02EB  346D               	retlw	109
  1383  02EC  3400               	retlw	0
  1384  02ED  3475               	retlw	117
  1385  02EE  3400               	retlw	0
  1386  02EF  346C               	retlw	108
  1387  02F0  3400               	retlw	0
  1388  02F1  3461               	retlw	97
  1389  02F2  3400               	retlw	0
  1390  02F3  3474               	retlw	116
  1391  02F4  3400               	retlw	0
  1392  02F5  3469               	retlw	105
  1393  02F6  3400               	retlw	0
  1394  02F7  346F               	retlw	111
  1395  02F8  3400               	retlw	0
  1396  02F9  346E               	retlw	110
  1397  02FA  3400               	retlw	0
  1398  02FB  3420               	retlw	32
  1399  02FC  3400               	retlw	0
  1400  02FD  3444               	retlw	68
  1401  02FE  3400               	retlw	0
  1402  02FF  3465               	retlw	101
  1403  0300  3400               	retlw	0
  1404  0301  346D               	retlw	109
  1405  0302  3400               	retlw	0
  1406  0303  346F               	retlw	111
  1407  0304  3400               	retlw	0
  1408  0305                     __end_of_sd002:	
  1409  0305                     _device_dsc:	
  1410  0305  3412               	retlw	18
  1411  0306  3401               	retlw	1
  1412  0307  3400               	retlw	0
  1413  0308  3402               	retlw	2
  1414  0309  3402               	retlw	2
  1415  030A  3400               	retlw	0
  1416  030B  3400               	retlw	0
  1417  030C  3408               	retlw	8
  1418  030D  34D8               	retlw	216
  1419  030E  3404               	retlw	4
  1420  030F  340A               	retlw	10
  1421  0310  3400               	retlw	0
  1422  0311  3400               	retlw	0
  1423  0312  3401               	retlw	1
  1424  0313  3401               	retlw	1
  1425  0314  3402               	retlw	2
  1426  0315  3400               	retlw	0
  1427  0316  3401               	retlw	1
  1428  0317                     __end_of_device_dsc:	
  1429  0317                     _sd000:	
  1430  0317  3404               	retlw	4
  1431  0318  3403               	retlw	3
  1432  0319  3409               	retlw	9
  1433  031A  3404               	retlw	4
  1434  031B                     __end_of_sd000:	
  1435  000B                     _INTCONbits	set	11
  1436  0012                     _PIR2bits	set	18
  1437  0099                     _OSCCON	set	153
  1438  0092                     _PIE2bits	set	146
  1439  008C                     _TRISAbits	set	140
  1440  008D                     _TRISBbits	set	141
  1441  008E                     _TRISCbits	set	142
  1442  010C                     _LATAbits	set	268
  1443  010E                     _LATCbits	set	270
  1444  018C                     _ANSELA	set	396
  1445  018D                     _ANSELB	set	397
  1446  018E                     _ANSELC	set	398
  1447  0211                     _SSPBUF	set	529
  1448  0215                     _SSPCON1bits	set	533
  1449  0214                     _SSPSTATbits	set	532
  1450  039B                     _ACTCON	set	923
  1451  0E96                     _UADDR	set	3734
  1452  0E91                     _UCFG	set	3729
  1453  0E8E                     _UCON	set	3726
  1454  0E8E                     _UCONbits	set	3726
  1455  0E97                     _UEIE	set	3735
  1456  0E93                     _UEIR	set	3731
  1457  0E98                     _UEP0bits	set	3736
  1458  0E92                     _UIE	set	3730
  1459  0E92                     _UIEbits	set	3730
  1460  0E90                     _UIR	set	3728
  1461  0E90                     _UIRbits	set	3728
  1462  0E8F                     _USTAT	set	3727
  1463  0E98                     _UEP0	set	3736
  1464  0E99                     _UEP1	set	3737
  1465                           
  1466                           ; #config settings
  1467  0000                     
  1468                           	psect	cinit
  1469  0014                     start_initialization:	
  1470  0014                     __initialization:	
  1471                           
  1472                           ; Clear objects allocated to BANK1
  1473  0014  0021               	movlb	1	; select bank1
  1474  0015  01E0               	clrf	__pbssBANK1& (0+127)
  1475  0016  01E1               	clrf	(__pbssBANK1+1)& (0+127)
  1476  0017  01E2               	clrf	(__pbssBANK1+2)& (0+127)
  1477  0018  01E3               	clrf	(__pbssBANK1+3)& (0+127)
  1478  0019  01E4               	clrf	(__pbssBANK1+4)& (0+127)
  1479  001A  01E5               	clrf	(__pbssBANK1+5)& (0+127)
  1480                           
  1481                           ; Clear objects allocated to BANK2
  1482  001B  0022               	movlb	2	; select bank2
  1483  001C  01ED               	clrf	__pbssBANK2& (0+127)
  1484  001D  01EE               	clrf	(__pbssBANK2+1)& (0+127)
  1485  001E  01EF               	clrf	(__pbssBANK2+2)& (0+127)
  1486                           
  1487                           ; Clear objects allocated to BANK3
  1488  001F  30A0               	movlw	low __pbssBANK3
  1489  0020  0084               	movwf	4
  1490  0021  3001               	movlw	high __pbssBANK3
  1491  0022  0085               	movwf	5
  1492  0023  3047               	movlw	71
  1493  0024  3197  276B  3180   	fcall	clear_ram0
  1494                           
  1495                           ; Clear objects allocated to BANK4
  1496  0027  3020               	movlw	low __pbssBANK4
  1497  0028  0084               	movwf	4
  1498  0029  3002               	movlw	high __pbssBANK4
  1499  002A  0085               	movwf	5
  1500  002B  3012               	movlw	18
  1501  002C  3197  276B  3180   	fcall	clear_ram0
  1502                           
  1503                           ; Clear objects allocated to BANK5
  1504  002F  30A0               	movlw	low __pbssBANK5
  1505  0030  0084               	movwf	4
  1506  0031  3002               	movlw	high __pbssBANK5
  1507  0032  0085               	movwf	5
  1508  0033  3040               	movlw	64
  1509  0034  3197  276B  3180   	fcall	clear_ram0
  1510                           
  1511                           ; Clear objects allocated to BANK6
  1512  0037  3020               	movlw	low __pbssBANK6
  1513  0038  0084               	movwf	4
  1514  0039  3003               	movlw	high __pbssBANK6
  1515  003A  0085               	movwf	5
  1516  003B  3040               	movlw	64
  1517  003C  3197  276B         	fcall	clear_ram0
  1518  003E                     end_of_initialization:	
  1519                           ;End of C runtime variable initialization code
  1520                           
  1521  003E                     __end_of__initialization:	
  1522  003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1523  003F  0020               	movlb	0
  1524  0040  3185  2D49         	ljmp	_main	;jump to C main() function
  1525                           
  1526                           	psect	bssBANK1
  1527  00E0                     __pbssBANK1:	
  1528  00E0                     _pBDTEntryEP0OutNext:	
  1529  00E0                     	ds	2
  1530  00E2                     _cdc_trf_state:	
  1531  00E2                     	ds	1
  1532  00E3                     _controlTransferState:	
  1533  00E3                     	ds	1
  1534  00E4                     _pBDTEntryEP0OutCurrent:	
  1535  00E4                     	ds	1
  1536  00E5                     _USTATcopy:	
  1537  00E5                     	ds	1
  1538                           
  1539                           	psect	bssBANK2
  1540  016D                     __pbssBANK2:	
  1541  016D                     _USBDeviceState:	
  1542  016D                     	ds	1
  1543  016E                     _shortPacketStatus:	
  1544  016E                     	ds	1
  1545  016F                     _USBActiveConfiguration:	
  1546  016F                     	ds	1
  1547                           
  1548                           	psect	bssBANK3
  1549  01A0                     __pbssBANK3:	
  1550  01A0                     _outPipes:	
  1551  01A0                     	ds	7
  1552  01A7                     _pBDTEntryIn:	
  1553  01A7                     	ds	6
  1554  01AD                     _pBDTEntryOut:	
  1555  01AD                     	ds	6
  1556  01B3                     _inPipes:	
  1557  01B3                     	ds	5
  1558  01B8                     _BaudRateGen:	
  1559  01B8                     	ds	4
  1560  01BC                     _USB1msTickCount:	
  1561  01BC                     	ds	4
  1562  01C0                     _ep_data_in:	
  1563  01C0                     	ds	3
  1564  01C3                     _ep_data_out:	
  1565  01C3                     	ds	3
  1566  01C6                     _CDCDataInHandle:	
  1567  01C6                     	ds	2
  1568  01C8                     _CDCDataOutHandle:	
  1569  01C8                     	ds	2
  1570  01CA                     _pCDCDst:	
  1571  01CA                     	ds	2
  1572  01CC                     _pCDCSrc:	
  1573  01CC                     	ds	2
  1574  01CE                     _BothEP0OutUOWNsSet:	
  1575  01CE                     	ds	1
  1576  01CF                     _RemoteWakeup:	
  1577  01CF                     	ds	1
  1578  01D0                     _USBBusIsSuspended:	
  1579  01D0                     	ds	1
  1580  01D1                     _USBDeferINDataStagePackets:	
  1581  01D1                     	ds	1
  1582  01D2                     _USBDeferOUTDataStagePackets:	
  1583  01D2                     	ds	1
  1584  01D3                     _USBDeferStatusStagePacket:	
  1585  01D3                     	ds	1
  1586  01D4                     _USBStatusStageEnabledFlag1:	
  1587  01D4                     	ds	1
  1588  01D5                     _USBStatusStageEnabledFlag2:	
  1589  01D5                     	ds	1
  1590  01D6                     _USBStatusStageTimeoutCounter:	
  1591  01D6                     	ds	1
  1592  01D7                     _USBTicksSinceSuspendEnd:	
  1593  01D7                     	ds	1
  1594  01D8                     _cdc_mem_type:	
  1595  01D8                     	ds	1
  1596  01D9                     _cdc_rx_len:	
  1597  01D9                     	ds	1
  1598  01DA                     _cdc_tx_len:	
  1599  01DA                     	ds	1
  1600  01DB                     _control_signal_bitmap:	
  1601  01DB                     	ds	1
  1602  01DC                     _endpoint_number:	
  1603  01DC                     	ds	1
  1604  01DD                     _pDst:	
  1605  01DD                     	ds	1
  1606  01DE                     _line_coding:	
  1607  01DE                     	ds	7
  1608  01E5                     _USBAlternateInterface:	
  1609  01E5                     	ds	2
  1610                           
  1611                           	psect	bssBANK4
  1612  0220                     __pbssBANK4:	
  1613  0220                     _cdc_notice:	
  1614  0220                     	ds	10
  1615  022A                     _dummy_encapsulated_cmd_response:	
  1616  022A                     	ds	8
  1617                           
  1618                           	psect	bssBANK5
  1619  02A0                     __pbssBANK5:	
  1620  02A0                     _readBuffer:	
  1621  02A0                     	ds	64
  1622                           
  1623                           	psect	bssBANK6
  1624  0320                     __pbssBANK6:	
  1625  0320                     _writeBuffer:	
  1626  0320                     	ds	64
  1627                           
  1628                           	psect	clrtext
  1629  176B                     clear_ram0:	
  1630                           ;	Called with FSR0 containing the base address, and
  1631                           ;	WREG with the size to clear
  1632                           
  1633  176B  0064               	clrwdt	;clear the watchdog before getting into this loop
  1634  176C                     clrloop0:	
  1635  176C  0180               	clrf	0	;clear RAM location pointed to by FSR
  1636  176D  3101               	addfsr 0,1
  1637  176E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1638  176F  2F6C               	goto	clrloop0	;have we reached the end yet?
  1639  1770  3400               	retlw	0	;all done for this memory range, return
  1640                           
  1641                           	psect	cstackBANK4
  1642  0232                     __pcstackBANK4:	
  1643  0232                     main@status2:	
  1644                           
  1645                           ; 1 bytes @ 0x0
  1646  0232                     	ds	1
  1647  0233                     main@pom2:	
  1648                           
  1649                           ; 1 bytes @ 0x1
  1650  0233                     	ds	1
  1651  0234                     main@podatak:	
  1652                           
  1653                           ; 3 bytes @ 0x2
  1654  0234                     	ds	3
  1655  0237                     main@status1:	
  1656                           
  1657                           ; 1 bytes @ 0x5
  1658  0237                     	ds	1
  1659                           
  1660                           	psect	cstackBANK3
  1661  01E7                     __pcstackBANK3:	
  1662  01E7                     ??_CDCInitEP:	
  1663  01E7                     CDCTxService@i:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666  01E7                     nRF_Setup@RXTX_ADDR:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669                           
  1670                           ; 5 bytes @ 0x0
  1671  01E7                     	ds	1
  1672  01E8                     CDCTxService@byte_to_send:	
  1673                           
  1674                           ; 1 bytes @ 0x1
  1675  01E8                     	ds	4
  1676  01EC                     ??_main:	
  1677                           
  1678                           ; 1 bytes @ 0x5
  1679  01EC                     	ds	3
  1680                           
  1681                           	psect	cstackBANK2
  1682  0160                     __pcstackBANK2:	
  1683  0160                     ??_SYSTEM_Initialize:	
  1684  0160                     ?_USBConfigureEndpoint:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687  0160                     ??_SPI_init:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690  0160                     ??_SPI_transfer:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693  0160                     ??_USBDeviceInit:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696  0160                     ??_USBDeviceAttach:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699  0160                     ?_putUSBUSART:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702  0160                     ?_USBTransferOnePacket:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705  0160                     USBTransferOnePacket@dir:	
  1706                           ; 2 bytes @ 0x0
  1707                           
  1708  0160                     USBConfigureEndpoint@direction:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711  0160                     putUSBUSART@length:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714  0160                     SYSTEM_Initialize@state:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717  0160                     SPI_transfer@data:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720                           
  1721                           ; 1 bytes @ 0x0
  1722  0160                     	ds	1
  1723  0161                     ??_USBConfigureEndpoint:	
  1724  0161                     ??_ReadRegister:	
  1725                           ; 1 bytes @ 0x1
  1726                           
  1727  0161                     ?_WriteRegister:	
  1728                           ; 1 bytes @ 0x1
  1729                           
  1730  0161                     ?_ReadPayload:	
  1731                           ; 1 bytes @ 0x1
  1732                           
  1733  0161                     ?_WriteAddress:	
  1734                           ; 1 bytes @ 0x1
  1735                           
  1736  0161                     ??_WriteCommand:	
  1737                           ; 1 bytes @ 0x1
  1738                           
  1739  0161                     ??_putUSBUSART:	
  1740                           ; 1 bytes @ 0x1
  1741                           
  1742  0161                     WriteRegister@val:	
  1743                           ; 1 bytes @ 0x1
  1744                           
  1745  0161                     WriteAddress@num:	
  1746                           ; 1 bytes @ 0x1
  1747                           
  1748  0161                     WriteCommand@command:	
  1749                           ; 1 bytes @ 0x1
  1750                           
  1751  0161                     ReadPayload@data:	
  1752                           ; 1 bytes @ 0x1
  1753                           
  1754  0161                     USBDeviceInit@p:	
  1755                           ; 1 bytes @ 0x1
  1756                           
  1757  0161                     USBTransferOnePacket@data:	
  1758                           ; 2 bytes @ 0x1
  1759                           
  1760                           
  1761                           ; 2 bytes @ 0x1
  1762  0161                     	ds	1
  1763  0162                     ??_WriteRegister:	
  1764  0162                     ??_ReadPayload:	
  1765                           ; 1 bytes @ 0x2
  1766                           
  1767  0162                     putUSBUSART@data:	
  1768                           ; 1 bytes @ 0x2
  1769                           
  1770  0162                     WriteRegister@reg:	
  1771                           ; 1 bytes @ 0x2
  1772                           
  1773  0162                     WriteAddress@addr:	
  1774                           ; 1 bytes @ 0x2
  1775                           
  1776  0162                     ReadRegister@reg:	
  1777                           ; 1 bytes @ 0x2
  1778                           
  1779                           
  1780                           ; 1 bytes @ 0x2
  1781  0162                     	ds	1
  1782  0163                     ??_WriteAddress:	
  1783  0163                     USBDeviceInit@i_821:	
  1784                           ; 1 bytes @ 0x3
  1785                           
  1786  0163                     USBTransferOnePacket@len:	
  1787                           ; 1 bytes @ 0x3
  1788                           
  1789  0163                     ReadRegister@temp:	
  1790                           ; 1 bytes @ 0x3
  1791                           
  1792                           
  1793                           ; 1 bytes @ 0x3
  1794  0163                     	ds	1
  1795  0164                     ??_USBTransferOnePacket:	
  1796  0164                     USBDeviceInit@i:	
  1797                           ; 1 bytes @ 0x4
  1798                           
  1799  0164                     WriteAddress@reg:	
  1800                           ; 1 bytes @ 0x4
  1801                           
  1802  0164                     ReadRegister@temp1:	
  1803                           ; 1 bytes @ 0x4
  1804                           
  1805  0164                     ReadPayload@num:	
  1806                           ; 1 bytes @ 0x4
  1807                           
  1808                           
  1809                           ; 1 bytes @ 0x4
  1810  0164                     	ds	1
  1811  0165                     USBConfigureEndpoint@EPNum:	
  1812  0165                     ReadPayload@i:	
  1813                           ; 1 bytes @ 0x5
  1814                           
  1815  0165                     WriteAddress@i:	
  1816                           ; 1 bytes @ 0x5
  1817                           
  1818                           
  1819                           ; 2 bytes @ 0x5
  1820  0165                     	ds	1
  1821  0166                     USBConfigureEndpoint@handle:	
  1822                           
  1823                           ; 1 bytes @ 0x6
  1824  0166                     	ds	1
  1825  0167                     ??_nRF_Setup:	
  1826  0167                     ?_USBEnableEndpoint:	
  1827                           ; 1 bytes @ 0x7
  1828                           
  1829  0167                     USBEnableEndpoint@options:	
  1830                           ; 1 bytes @ 0x7
  1831                           
  1832                           
  1833                           ; 1 bytes @ 0x7
  1834  0167                     	ds	1
  1835  0168                     ??_USBEnableEndpoint:	
  1836  0168                     USBTransferOnePacket@ep:	
  1837                           ; 1 bytes @ 0x8
  1838                           
  1839                           
  1840                           ; 1 bytes @ 0x8
  1841  0168                     	ds	1
  1842  0169                     USBTransferOnePacket@handle:	
  1843                           
  1844                           ; 2 bytes @ 0x9
  1845  0169                     	ds	1
  1846  016A                     USBEnableEndpoint@p:	
  1847                           
  1848                           ; 2 bytes @ 0xA
  1849  016A                     	ds	1
  1850  016B                     ??_CDCTxService:	
  1851                           
  1852                           ; 1 bytes @ 0xB
  1853  016B                     	ds	1
  1854  016C                     USBEnableEndpoint@ep:	
  1855                           
  1856                           ; 1 bytes @ 0xC
  1857  016C                     	ds	1
  1858                           
  1859                           	psect	cstackBANK1
  1860  00E6                     __pcstackBANK1:	
  1861  00E6                     ??_USBCtrlEPService:	
  1862                           
  1863                           ; 1 bytes @ 0x0
  1864  00E6                     	ds	3
  1865  00E9                     ??_USBDeviceTasks:	
  1866                           
  1867                           ; 1 bytes @ 0x3
  1868  00E9                     	ds	2
  1869  00EB                     ??_SYS_InterruptHigh:	
  1870                           
  1871                           ; 1 bytes @ 0x5
  1872  00EB                     	ds	1
  1873                           
  1874                           	psect	cstackCOMMON
  1875  0070                     __pcstackCOMMON:	
  1876  0070                     ?_SYSTEM_Initialize:	
  1877  0070                     ?_CDCInitEP:	
  1878                           ; 1 bytes @ 0x0
  1879                           
  1880  0070                     ?_USBCheckCDCRequest:	
  1881                           ; 1 bytes @ 0x0
  1882                           
  1883  0070                     ??_USBCheckCDCRequest:	
  1884                           ; 1 bytes @ 0x0
  1885                           
  1886  0070                     ?_USBWakeFromSuspend:	
  1887                           ; 1 bytes @ 0x0
  1888                           
  1889  0070                     ?_USBSuspend:	
  1890                           ; 1 bytes @ 0x0
  1891                           
  1892  0070                     ?_USBIncrement1msInternalTimers:	
  1893                           ; 1 bytes @ 0x0
  1894                           
  1895  0070                     ??_USBIncrement1msInternalTimers:	
  1896                           ; 1 bytes @ 0x0
  1897                           
  1898  0070                     ?_USBCtrlEPAllowStatusStage:	
  1899                           ; 1 bytes @ 0x0
  1900                           
  1901  0070                     ??_USBCtrlEPAllowStatusStage:	
  1902                           ; 1 bytes @ 0x0
  1903                           
  1904  0070                     ?_USBStallHandler:	
  1905                           ; 1 bytes @ 0x0
  1906                           
  1907  0070                     ??_USBStallHandler:	
  1908                           ; 1 bytes @ 0x0
  1909                           
  1910  0070                     ?_USBCtrlEPService:	
  1911                           ; 1 bytes @ 0x0
  1912                           
  1913  0070                     ?_USBCtrlTrfTxService:	
  1914                           ; 1 bytes @ 0x0
  1915                           
  1916  0070                     ??_USBCtrlTrfTxService:	
  1917                           ; 1 bytes @ 0x0
  1918                           
  1919  0070                     ?_USBCtrlTrfSetupHandler:	
  1920                           ; 1 bytes @ 0x0
  1921                           
  1922  0070                     ?_USBCtrlTrfOutHandler:	
  1923                           ; 1 bytes @ 0x0
  1924                           
  1925  0070                     ?_USBCtrlTrfInHandler:	
  1926                           ; 1 bytes @ 0x0
  1927                           
  1928  0070                     ?_USBCheckStdRequest:	
  1929                           ; 1 bytes @ 0x0
  1930                           
  1931  0070                     ?_USBStdFeatureReqHandler:	
  1932                           ; 1 bytes @ 0x0
  1933                           
  1934  0070                     ?_SPI_init:	
  1935                           ; 1 bytes @ 0x0
  1936                           
  1937  0070                     ?_ReadRegister:	
  1938                           ; 1 bytes @ 0x0
  1939                           
  1940  0070                     ?_WriteCommand:	
  1941                           ; 1 bytes @ 0x0
  1942                           
  1943  0070                     ?_SPI_transfer:	
  1944                           ; 1 bytes @ 0x0
  1945                           
  1946  0070                     ?_USBDeviceInit:	
  1947                           ; 1 bytes @ 0x0
  1948                           
  1949  0070                     ?_USBDeviceTasks:	
  1950                           ; 1 bytes @ 0x0
  1951                           
  1952  0070                     ?_USBDeviceAttach:	
  1953                           ; 1 bytes @ 0x0
  1954                           
  1955  0070                     ?_USBCtrlEPAllowDataStage:	
  1956                           ; 1 bytes @ 0x0
  1957                           
  1958  0070                     ?_USBCtrlEPServiceComplete:	
  1959                           ; 1 bytes @ 0x0
  1960                           
  1961  0070                     ?_USBCtrlTrfRxService:	
  1962                           ; 1 bytes @ 0x0
  1963                           
  1964  0070                     ?_USBStdSetCfgHandler:	
  1965                           ; 1 bytes @ 0x0
  1966                           
  1967  0070                     ?_USBStdGetDscHandler:	
  1968                           ; 1 bytes @ 0x0
  1969                           
  1970  0070                     ??_USBStdGetDscHandler:	
  1971                           ; 1 bytes @ 0x0
  1972                           
  1973  0070                     ?_USBStdGetStatusHandler:	
  1974                           ; 1 bytes @ 0x0
  1975                           
  1976  0070                     ??_USBStdGetStatusHandler:	
  1977                           ; 1 bytes @ 0x0
  1978                           
  1979  0070                     ?_CDCTxService:	
  1980                           ; 1 bytes @ 0x0
  1981                           
  1982  0070                     ?_SYS_InterruptHigh:	
  1983                           ; 1 bytes @ 0x0
  1984                           
  1985  0070                     ?_main:	
  1986                           ; 1 bytes @ 0x0
  1987                           
  1988  0070                     ?i1_USBDeviceInit:	
  1989                           ; 1 bytes @ 0x0
  1990                           
  1991  0070                     ??i1_USBDeviceInit:	
  1992                           ; 1 bytes @ 0x0
  1993                           
  1994  0070                     ?i1_USBConfigureEndpoint:	
  1995                           ; 1 bytes @ 0x0
  1996                           
  1997  0070                     ?i1_CDCInitEP:	
  1998                           ; 1 bytes @ 0x0
  1999                           
  2000  0070                     ?i1_SYSTEM_Initialize:	
  2001                           ; 1 bytes @ 0x0
  2002                           
  2003  0070                     ??i1_SYSTEM_Initialize:	
  2004                           ; 1 bytes @ 0x0
  2005                           
  2006  0070                     ?_memset:	
  2007                           ; 1 bytes @ 0x0
  2008                           
  2009  0070                     ?_nRF_Setup:	
  2010                           ; 2 bytes @ 0x0
  2011                           
  2012  0070                     ?i1_USBTransferOnePacket:	
  2013                           ; 2 bytes @ 0x0
  2014                           
  2015  0070                     i1USBTransferOnePacket@dir:	
  2016                           ; 2 bytes @ 0x0
  2017                           
  2018  0070                     i1USBConfigureEndpoint@direction:	
  2019                           ; 1 bytes @ 0x0
  2020                           
  2021  0070                     i1SYSTEM_Initialize@state:	
  2022                           ; 1 bytes @ 0x0
  2023                           
  2024  0070                     memset@p1:	
  2025                           ; 1 bytes @ 0x0
  2026                           
  2027                           
  2028                           ; 2 bytes @ 0x0
  2029  0070                     	ds	1
  2030  0071                     ??i1_USBConfigureEndpoint:	
  2031  0071                     USBStdGetStatusHandler@p:	
  2032                           ; 1 bytes @ 0x1
  2033                           
  2034  0071                     i1USBDeviceInit@p:	
  2035                           ; 2 bytes @ 0x1
  2036                           
  2037  0071                     i1USBTransferOnePacket@data:	
  2038                           ; 2 bytes @ 0x1
  2039                           
  2040                           
  2041                           ; 2 bytes @ 0x1
  2042  0071                     	ds	1
  2043  0072                     ??_USBCtrlTrfRxService:	
  2044  0072                     USBCtrlTrfTxService@byteToSend:	
  2045                           ; 1 bytes @ 0x2
  2046                           
  2047  0072                     memset@c:	
  2048                           ; 1 bytes @ 0x2
  2049                           
  2050                           
  2051                           ; 2 bytes @ 0x2
  2052  0072                     	ds	1
  2053  0073                     ??_USBCtrlTrfInHandler:	
  2054  0073                     ??_USBCtrlEPAllowDataStage:	
  2055                           ; 1 bytes @ 0x3
  2056                           
  2057  0073                     i1USBDeviceInit@i_821:	
  2058                           ; 1 bytes @ 0x3
  2059                           
  2060  0073                     i1USBTransferOnePacket@len:	
  2061                           ; 1 bytes @ 0x3
  2062                           
  2063                           
  2064                           ; 1 bytes @ 0x3
  2065  0073                     	ds	1
  2066  0074                     ??i1_USBTransferOnePacket:	
  2067  0074                     USBCtrlTrfRxService@i:	
  2068                           ; 1 bytes @ 0x4
  2069                           
  2070  0074                     i1USBDeviceInit@i:	
  2071                           ; 1 bytes @ 0x4
  2072                           
  2073  0074                     memset@n:	
  2074                           ; 1 bytes @ 0x4
  2075                           
  2076                           
  2077                           ; 2 bytes @ 0x4
  2078  0074                     	ds	1
  2079  0075                     ??_USBCtrlEPServiceComplete:	
  2080  0075                     USBCtrlTrfRxService@byteToRead:	
  2081                           ; 1 bytes @ 0x5
  2082                           
  2083  0075                     USBCtrlTrfInHandler@lastDTS:	
  2084                           ; 1 bytes @ 0x5
  2085                           
  2086  0075                     i1USBConfigureEndpoint@EPNum:	
  2087                           ; 1 bytes @ 0x5
  2088                           
  2089                           
  2090                           ; 1 bytes @ 0x5
  2091  0075                     	ds	1
  2092  0076                     ??_memset:	
  2093  0076                     ??_USBCtrlTrfOutHandler:	
  2094                           ; 1 bytes @ 0x6
  2095                           
  2096  0076                     i1USBConfigureEndpoint@handle:	
  2097                           ; 1 bytes @ 0x6
  2098                           
  2099  0076                     memset@p:	
  2100                           ; 1 bytes @ 0x6
  2101                           
  2102                           
  2103                           ; 2 bytes @ 0x6
  2104  0076                     	ds	1
  2105  0077                     ?i1_USBEnableEndpoint:	
  2106  0077                     i1USBEnableEndpoint@options:	
  2107                           ; 1 bytes @ 0x7
  2108                           
  2109                           
  2110                           ; 1 bytes @ 0x7
  2111  0077                     	ds	1
  2112  0078                     ??i1_USBEnableEndpoint:	
  2113  0078                     i1USBTransferOnePacket@ep:	
  2114                           ; 1 bytes @ 0x8
  2115                           
  2116                           
  2117                           ; 1 bytes @ 0x8
  2118  0078                     	ds	1
  2119  0079                     i1USBTransferOnePacket@handle:	
  2120                           
  2121                           ; 2 bytes @ 0x9
  2122  0079                     	ds	1
  2123  007A                     i1USBEnableEndpoint@p:	
  2124                           
  2125                           ; 2 bytes @ 0xA
  2126  007A                     	ds	2
  2127  007C                     i1USBEnableEndpoint@ep:	
  2128                           
  2129                           ; 1 bytes @ 0xC
  2130  007C                     	ds	1
  2131  007D                     ??i1_CDCInitEP:	
  2132                           
  2133                           ; 1 bytes @ 0xD
  2134  007D                     	ds	1
  2135  007E                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2136                           
  2137                           	psect	cstackBANK0
  2138  0060                     __pcstackBANK0:	
  2139                           ; 1 bytes @ 0xE
  2140                           
  2141  0060                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  2142  0060                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2143                           ; 1 bytes @ 0x0
  2144                           
  2145                           
  2146                           ; 2 bytes @ 0x0
  2147  0060                     	ds	2
  2148  0062                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2149                           
  2150                           ; 2 bytes @ 0x2
  2151  0062                     	ds	2
  2152  0064                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2153                           
  2154                           ; 2 bytes @ 0x4
  2155  0064                     	ds	2
  2156  0066                     ??_USBWakeFromSuspend:	
  2157  0066                     ??_USBSuspend:	
  2158                           ; 1 bytes @ 0x6
  2159                           
  2160  0066                     ??_USBStdFeatureReqHandler:	
  2161                           ; 1 bytes @ 0x6
  2162                           
  2163  0066                     ??_USBStdSetCfgHandler:	
  2164                           ; 1 bytes @ 0x6
  2165                           
  2166                           
  2167                           ; 1 bytes @ 0x6
  2168  0066                     	ds	1
  2169  0067                     USBStdSetCfgHandler@p:	
  2170                           
  2171                           ; 2 bytes @ 0x7
  2172  0067                     	ds	1
  2173  0068                     USBStdFeatureReqHandler@pUEP:	
  2174                           
  2175                           ; 2 bytes @ 0x8
  2176  0068                     	ds	1
  2177  0069                     USBStdSetCfgHandler@i_1174:	
  2178                           
  2179                           ; 1 bytes @ 0x9
  2180  0069                     	ds	1
  2181  006A                     USBStdSetCfgHandler@i:	
  2182  006A                     USBStdFeatureReqHandler@current_ep_data:	
  2183                           ; 1 bytes @ 0xA
  2184                           
  2185                           
  2186                           ; 1 bytes @ 0xA
  2187  006A                     	ds	1
  2188  006B                     USBStdFeatureReqHandler@p:	
  2189                           
  2190                           ; 2 bytes @ 0xB
  2191  006B                     	ds	2
  2192  006D                     ??_USBCheckStdRequest:	
  2193                           
  2194                           ; 1 bytes @ 0xD
  2195  006D                     	ds	1
  2196  006E                     ??_USBCtrlTrfSetupHandler:	
  2197                           
  2198                           ; 1 bytes @ 0xE
  2199  006E                     	ds	1
  2200  006F                     USBDeviceTasks@i:	
  2201                           
  2202                           ; 1 bytes @ 0xF
  2203  006F                     	ds	1
  2204                           
  2205                           	psect	maintext
  2206  0549                     __pmaintext:	
  2207 ;;
  2208 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  2209 ;;
  2210 ;; *************** function _main *****************
  2211 ;; Defined at:
  2212 ;;		line 21 in file "../src/main.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;  podatak         3    2[BANK4 ] unsigned char [3]
  2217 ;;  status1         1    5[BANK4 ] unsigned char 
  2218 ;;  pom2            1    1[BANK4 ] unsigned char 
  2219 ;;  status2         1    0[BANK4 ] unsigned char 
  2220 ;;  pom             1    0        unsigned char 
  2221 ;;  fifostatus      1    0        unsigned char 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : B1F/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2232 ;;      Locals:         0       0       0       0       0       6       0       0       0       0       0       0       
      +0       0
  2233 ;;      Temps:          0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0
  2234 ;;      Totals:         0       0       0       0       3       6       0       0       0       0       0       0       
      +0       0
  2235 ;;Total ram usage:        9 bytes
  2236 ;; Hardware stack levels required when called:   13
  2237 ;; This function calls:
  2238 ;;		_CDCInitEP
  2239 ;;		_CDCTxService
  2240 ;;		_ReadPayload
  2241 ;;		_ReadRegister
  2242 ;;		_SPI_init
  2243 ;;		_SYSTEM_Initialize
  2244 ;;		_USBDeviceAttach
  2245 ;;		_USBDeviceInit
  2246 ;;		_WriteRegister
  2247 ;;		_nRF_Setup
  2248 ;;		_putUSBUSART
  2249 ;; This function is called by:
  2250 ;;		Startup code after reset
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           
  2255                           ;psect for function _main
  2256  0549                     _main:	
  2257                           
  2258                           ;main.c: 24: uint8_t status1;
  2259                           ;main.c: 25: uint8_t status2;
  2260                           ;main.c: 26: uint8_t fifostatus;
  2261                           ;main.c: 27: uint8_t podatak[3];
  2262                           ;main.c: 28: uint8_t pom;
  2263                           ;main.c: 29: uint8_t pom2=0x40;
  2264                           
  2265                           ;incstack = 0
  2266                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2267  0549  3040               	movlw	64
  2268  054A  0023               	movlb	3	; select bank3
  2269  054B  00EC               	movwf	??_main^(0+384)
  2270  054C  086C               	movf	??_main^(0+384),w
  2271  054D  0024               	movlb	4	; select bank4
  2272  054E  00B3               	movwf	main@pom2^(0+512)
  2273                           
  2274                           ;main.c: 31: TRISCbits.TRISC4 = 0;
  2275  054F  0021               	movlb	1	; select bank1
  2276  0550  120E               	bcf	14,4	;volatile
  2277                           
  2278                           ;main.c: 32: TRISCbits.TRISC5 = 0;
  2279  0551  128E               	bcf	14,5	;volatile
  2280                           
  2281                           ;main.c: 33: LATCbits.LATC4 = 1;
  2282  0552  0022               	movlb	2	; select bank2
  2283  0553  160E               	bsf	14,4	;volatile
  2284                           
  2285                           ;main.c: 36: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  2286  0554  3000               	movlw	0
  2287  0555  3197  27B9  3185   	fcall	_SYSTEM_Initialize
  2288                           
  2289                           ;main.c: 37: ANSELA=0;
  2290  0558  0023               	movlb	3	; select bank3
  2291  0559  018C               	clrf	12	;volatile
  2292                           
  2293                           ;main.c: 38: ANSELB=0;
  2294  055A  018D               	clrf	13	;volatile
  2295                           
  2296                           ;main.c: 39: ANSELC=0;
  2297  055B  018E               	clrf	14	;volatile
  2298                           
  2299                           ;main.c: 40: USBDeviceInit();
  2300  055C  3183  23E3  3185   	fcall	_USBDeviceInit
  2301                           
  2302                           ;main.c: 41: USBDeviceAttach();
  2303  055F  3188  2045  3185   	fcall	_USBDeviceAttach
  2304                           
  2305                           ;main.c: 42: CDCInitEP();
  2306  0562  318A  2206  3185   	fcall	_CDCInitEP
  2307                           
  2308                           ;main.c: 43: {line_coding.dwDTERate=1200;};
  2309  0565  3000               	movlw	0
  2310  0566  0023               	movlb	3	; select bank3
  2311  0567  00E1               	movwf	(_line_coding+3)^(0+384)
  2312  0568  3000               	movlw	0
  2313  0569  00E0               	movwf	(_line_coding+2)^(0+384)
  2314  056A  3004               	movlw	4
  2315  056B  00DF               	movwf	(_line_coding+1)^(0+384)
  2316  056C  30B0               	movlw	176
  2317  056D  00DE               	movwf	_line_coding^(0+384)
  2318                           
  2319                           ;main.c: 46: SPI_init();
  2320  056E  3197  27A4  3185   	fcall	_SPI_init
  2321                           
  2322                           ;main.c: 47: nRF_Setup();
  2323  0571  318F  2773  3185   	fcall	_nRF_Setup
  2324                           
  2325                           ;main.c: 56: status1 = ReadRegister(0x00);
  2326  0574  3000               	movlw	0
  2327  0575  3197  278F  3185   	fcall	_ReadRegister
  2328  0578  0023               	movlb	3	; select bank3
  2329  0579  00EC               	movwf	??_main^(0+384)
  2330  057A  086C               	movf	??_main^(0+384),w
  2331  057B  0024               	movlb	4	; select bank4
  2332  057C  00B7               	movwf	main@status1^(0+512)
  2333                           
  2334                           ;main.c: 57: podatak[0]=0;
  2335  057D  01B4               	clrf	main@podatak^(0+512)
  2336  057E                     l4713:	
  2337                           ;main.c: 58: while(1){
  2338                           
  2339                           
  2340                           ;main.c: 63: status1 = ReadRegister(0x07);
  2341  057E  3007               	movlw	7
  2342  057F  3197  278F  3185   	fcall	_ReadRegister
  2343  0582  0023               	movlb	3	; select bank3
  2344  0583  00EC               	movwf	??_main^(0+384)
  2345  0584  086C               	movf	??_main^(0+384),w
  2346  0585  0024               	movlb	4	; select bank4
  2347  0586  00B7               	movwf	main@status1^(0+512)
  2348                           
  2349                           ;main.c: 64: status2 = ReadRegister(0x00);
  2350  0587  3000               	movlw	0
  2351  0588  3197  278F  3185   	fcall	_ReadRegister
  2352  058B  0023               	movlb	3	; select bank3
  2353  058C  00EC               	movwf	??_main^(0+384)
  2354  058D  086C               	movf	??_main^(0+384),w
  2355  058E  0024               	movlb	4	; select bank4
  2356  058F  00B2               	movwf	main@status2^(0+512)
  2357                           
  2358                           ;main.c: 65: podatak[0]=0;
  2359  0590  01B4               	clrf	main@podatak^(0+512)
  2360                           
  2361                           ;main.c: 66: podatak[1]=0;
  2362  0591  01B5               	clrf	(main@podatak^(0+512)+1)
  2363                           
  2364                           ;main.c: 67: if (status1 & (1<<6)) {
  2365  0592  1F37               	btfss	main@status1^(0+512),6
  2366  0593  2DD7               	goto	l4739
  2367                           
  2368                           ;main.c: 73: WriteRegister(0x07,(status1 | 0x40));
  2369  0594  0837               	movf	main@status1^(0+512),w
  2370  0595  3840               	iorlw	64
  2371  0596  0023               	movlb	3	; select bank3
  2372  0597  00EC               	movwf	??_main^(0+384)
  2373  0598  086C               	movf	??_main^(0+384),w
  2374  0599  0022               	movlb	2	; select bank2
  2375  059A  00E1               	movwf	WriteRegister@val^(0+256)
  2376  059B  3007               	movlw	7
  2377  059C  3188  201C  3185   	fcall	_WriteRegister
  2378                           
  2379                           ;main.c: 75: if (status1 & (1<<5)) {
  2380  059F  0024               	movlb	4	; select bank4
  2381  05A0  1EB7               	btfss	main@status1^(0+512),5
  2382  05A1  2DAD               	goto	l4729
  2383                           
  2384                           ;main.c: 76: WriteRegister(0x07,(status1 | 0x20));
  2385  05A2  0837               	movf	main@status1^(0+512),w
  2386  05A3  3820               	iorlw	32
  2387  05A4  0023               	movlb	3	; select bank3
  2388  05A5  00EC               	movwf	??_main^(0+384)
  2389  05A6  086C               	movf	??_main^(0+384),w
  2390  05A7  0022               	movlb	2	; select bank2
  2391  05A8  00E1               	movwf	WriteRegister@val^(0+256)
  2392  05A9  3007               	movlw	7
  2393  05AA  3188  201C  3185   	fcall	_WriteRegister
  2394  05AD                     l4729:	
  2395                           
  2396                           ;main.c: 77: }
  2397                           ;main.c: 79: ReadPayload(4, podatak);
  2398  05AD  3034               	movlw	(low (main@podatak| (0+512)))& (0+255)
  2399  05AE  0023               	movlb	3	; select bank3
  2400  05AF  00EC               	movwf	??_main^(0+384)
  2401  05B0  086C               	movf	??_main^(0+384),w
  2402  05B1  0022               	movlb	2	; select bank2
  2403  05B2  00E1               	movwf	ReadPayload@data^(0+256)
  2404  05B3  3004               	movlw	4
  2405  05B4  3189  2135  3185   	fcall	_ReadPayload
  2406                           
  2407                           ;main.c: 80: LATCbits.LATC5 = 1;
  2408  05B7  0022               	movlb	2	; select bank2
  2409  05B8  168E               	bsf	14,5	;volatile
  2410                           
  2411                           ;main.c: 81: _delay((unsigned long)((100)*(48000000L/4000.0)));
  2412  05B9  3007               	movlw	7
  2413  05BA  0023               	movlb	3	; select bank3
  2414  05BB  00EE               	movwf	(??_main^(0+384)+2)
  2415  05BC  3017               	movlw	23
  2416  05BD  00ED               	movwf	(??_main^(0+384)+1)
  2417  05BE  306F               	movlw	111
  2418  05BF  00EC               	movwf	??_main^(0+384)
  2419  05C0                     u4187:	
  2420  05C0  0BEC               	decfsz	??_main^(0+384),f
  2421  05C1  2DC0               	goto	u4187
  2422  05C2  0BED               	decfsz	(??_main^(0+384)+1),f
  2423  05C3  2DC0               	goto	u4187
  2424  05C4  0BEE               	decfsz	(??_main^(0+384)+2),f
  2425  05C5  2DC0               	goto	u4187
  2426  05C6  0000               	nop
  2427                           
  2428                           ;main.c: 82: LATCbits.LATC5 = 0;
  2429  05C7  0022               	movlb	2	; select bank2
  2430  05C8  128E               	bcf	14,5	;volatile
  2431                           
  2432                           ;main.c: 83: _delay((unsigned long)((50)*(48000000L/4000.0)));
  2433  05C9  3004               	movlw	4
  2434  05CA  0023               	movlb	3	; select bank3
  2435  05CB  00EE               	movwf	(??_main^(0+384)+2)
  2436  05CC  300C               	movlw	12
  2437  05CD  00ED               	movwf	(??_main^(0+384)+1)
  2438  05CE  3035               	movlw	53
  2439  05CF  00EC               	movwf	??_main^(0+384)
  2440  05D0                     u4197:	
  2441  05D0  0BEC               	decfsz	??_main^(0+384),f
  2442  05D1  2DD0               	goto	u4197
  2443  05D2  0BED               	decfsz	(??_main^(0+384)+1),f
  2444  05D3  2DD0               	goto	u4197
  2445  05D4  0BEE               	decfsz	(??_main^(0+384)+2),f
  2446  05D5  2DD0               	goto	u4197
  2447  05D6  3200               	nop2
  2448  05D7                     l4739:	
  2449                           
  2450                           ;main.c: 88: }
  2451                           ;main.c: 90: if( (cdc_trf_state == 0) == 1){
  2452  05D7  0021               	movlb	1	; select bank1
  2453  05D8  0862               	movf	_cdc_trf_state^(0+128),w
  2454  05D9  1D03               	btfss	3,2
  2455  05DA  2DEB               	goto	l4747
  2456                           
  2457                           ;main.c: 91: if(podatak[0]!=0 | podatak[1]!=0)
  2458  05DB  0024               	movlb	4	; select bank4
  2459  05DC  0834               	movf	main@podatak^(0+512),w
  2460  05DD  1903               	btfsc	3,2
  2461  05DE  0835               	movf	(main@podatak^(0+512)+1),w
  2462  05DF  1903               	btfsc	3,2
  2463  05E0  2DEB               	goto	l4747
  2464                           
  2465                           ;main.c: 92: putUSBUSART(podatak,4);
  2466  05E1  3004               	movlw	4
  2467  05E2  0023               	movlb	3	; select bank3
  2468  05E3  00EC               	movwf	??_main^(0+384)
  2469  05E4  086C               	movf	??_main^(0+384),w
  2470  05E5  0022               	movlb	2	; select bank2
  2471  05E6  00E0               	movwf	putUSBUSART@length^(0+256)
  2472  05E7  3034               	movlw	(low (main@podatak| (0+512)))& (0+255)
  2473  05E8  3188  202B  3185   	fcall	_putUSBUSART
  2474  05EB                     l4747:	
  2475                           
  2476                           ;main.c: 94: }
  2477                           ;main.c: 95: CDCTxService();
  2478  05EB  3183  231B  3185   	fcall	_CDCTxService
  2479  05EE  2D7E               	goto	l4713
  2480  05EF                     __end_of_main:	
  2481                           
  2482                           	psect	text1
  2483  082B                     __ptext1:	
  2484 ;; *************** function _putUSBUSART *****************
  2485 ;; Defined at:
  2486 ;;		line 556 in file "../lib/usb/src/usb_device_cdc.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;  data            1    wreg     PTR unsigned char 
  2489 ;;		 -> main@podatak(3), 
  2490 ;;  length          1    0[BANK2 ] unsigned char 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  data            1    2[BANK2 ] PTR unsigned char 
  2493 ;;		 -> main@podatak(3), 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      void 
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2503 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2504 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2505 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2506 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  2507 ;;Total ram usage:        3 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; Hardware stack levels required when called:   10
  2510 ;; This function calls:
  2511 ;;		Nothing
  2512 ;; This function is called by:
  2513 ;;		_main
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           
  2518                           ;psect for function _putUSBUSART
  2519  082B                     _putUSBUSART:	
  2520                           
  2521                           ;incstack = 0
  2522                           ; Regs used in _putUSBUSART: [wreg+status,2+status,0]
  2523                           ;putUSBUSART@data stored from wreg
  2524  082B  0022               	movlb	2	; select bank2
  2525  082C  00E2               	movwf	putUSBUSART@data^(0+256)
  2526                           
  2527                           ;usb_device_cdc.c: 581: {PIE2bits.USBIE = 0;};
  2528  082D  0021               	movlb	1	; select bank1
  2529  082E  1112               	bcf	18,2	;volatile
  2530                           
  2531                           ;usb_device_cdc.c: 582: if(cdc_trf_state == 0)
  2532  082F  0862               	movf	_cdc_trf_state^(0+128),w
  2533  0830  1D03               	btfss	3,2
  2534  0831  2843               	goto	l4501
  2535                           
  2536                           ;usb_device_cdc.c: 583: {
  2537                           ;usb_device_cdc.c: 584: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  2538  0832  0022               	movlb	2	; select bank2
  2539  0833  0862               	movf	putUSBUSART@data^(0+256),w
  2540  0834  00E1               	movwf	??_putUSBUSART^(0+256)
  2541  0835  0861               	movf	??_putUSBUSART^(0+256),w
  2542  0836  0023               	movlb	3	; select bank3
  2543  0837  00CC               	movwf	_pCDCSrc^(0+384)
  2544  0838  0022               	movlb	2	; select bank2
  2545  0839  0860               	movf	putUSBUSART@length^(0+256),w
  2546  083A  00E1               	movwf	??_putUSBUSART^(0+256)
  2547  083B  0861               	movf	??_putUSBUSART^(0+256),w
  2548  083C  0023               	movlb	3	; select bank3
  2549  083D  00DA               	movwf	_cdc_tx_len^(0+384)
  2550  083E  01D8               	clrf	_cdc_mem_type^(0+384)
  2551  083F  0AD8               	incf	_cdc_mem_type^(0+384),f
  2552  0840  0021               	movlb	1	; select bank1
  2553  0841  01E2               	clrf	_cdc_trf_state^(0+128)
  2554  0842  0AE2               	incf	_cdc_trf_state^(0+128),f
  2555  0843                     l4501:	
  2556                           
  2557                           ;usb_device_cdc.c: 585: }
  2558                           ;usb_device_cdc.c: 586: {PIE2bits.USBIE = 1;};
  2559  0843  1512               	bsf	18,2	;volatile
  2560  0844  0008               	return
  2561  0845                     __end_of_putUSBUSART:	
  2562                           
  2563                           	psect	text2
  2564  0F73                     __ptext2:	
  2565 ;; *************** function _nRF_Setup *****************
  2566 ;; Defined at:
  2567 ;;		line 15 in file "nRF24L01P.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;		None
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;  RXTX_ADDR       5    0[BANK3 ] unsigned char [5]
  2572 ;;  status          1    0        unsigned char 
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  2  592[None  ] int 
  2575 ;; Registers used:
  2576 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2583 ;;      Locals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0
  2584 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2585 ;;      Totals:         0       0       0       2       5       0       0       0       0       0       0       0       
      +0       0
  2586 ;;Total ram usage:        7 bytes
  2587 ;; Hardware stack levels used:    1
  2588 ;; Hardware stack levels required when called:   12
  2589 ;; This function calls:
  2590 ;;		_WriteAddress
  2591 ;;		_WriteCommand
  2592 ;;		_WriteRegister
  2593 ;; This function is called by:
  2594 ;;		_main
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           
  2599                           ;psect for function _nRF_Setup
  2600  0F73                     _nRF_Setup:	
  2601                           
  2602                           ;nRF24L01P.c: 18: uint8_t RXTX_ADDR[5];
  2603                           ;nRF24L01P.c: 19: RXTX_ADDR[4] = 0xAB;
  2604                           
  2605                           ;incstack = 0
  2606                           ; Regs used in _nRF_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2607  0F73  30AB               	movlw	171
  2608  0F74  0022               	movlb	2	; select bank2
  2609  0F75  00E7               	movwf	??_nRF_Setup^(0+256)
  2610  0F76  0867               	movf	??_nRF_Setup^(0+256),w
  2611  0F77  0023               	movlb	3	; select bank3
  2612  0F78  00EB               	movwf	(nRF_Setup@RXTX_ADDR^(0+384)+4)
  2613                           
  2614                           ;nRF24L01P.c: 20: RXTX_ADDR[3] = 0xAC;
  2615  0F79  30AC               	movlw	172
  2616  0F7A  0022               	movlb	2	; select bank2
  2617  0F7B  00E7               	movwf	??_nRF_Setup^(0+256)
  2618  0F7C  0867               	movf	??_nRF_Setup^(0+256),w
  2619  0F7D  0023               	movlb	3	; select bank3
  2620  0F7E  00EA               	movwf	(nRF_Setup@RXTX_ADDR^(0+384)+3)
  2621                           
  2622                           ;nRF24L01P.c: 21: RXTX_ADDR[2] = 0xAD;
  2623  0F7F  30AD               	movlw	173
  2624  0F80  0022               	movlb	2	; select bank2
  2625  0F81  00E7               	movwf	??_nRF_Setup^(0+256)
  2626  0F82  0867               	movf	??_nRF_Setup^(0+256),w
  2627  0F83  0023               	movlb	3	; select bank3
  2628  0F84  00E9               	movwf	(nRF_Setup@RXTX_ADDR^(0+384)+2)
  2629                           
  2630                           ;nRF24L01P.c: 22: RXTX_ADDR[1] = 0xAE;
  2631  0F85  30AE               	movlw	174
  2632  0F86  0022               	movlb	2	; select bank2
  2633  0F87  00E7               	movwf	??_nRF_Setup^(0+256)
  2634  0F88  0867               	movf	??_nRF_Setup^(0+256),w
  2635  0F89  0023               	movlb	3	; select bank3
  2636  0F8A  00E8               	movwf	(nRF_Setup@RXTX_ADDR^(0+384)+1)
  2637                           
  2638                           ;nRF24L01P.c: 23: RXTX_ADDR[0] = 0xAF;
  2639  0F8B  30AF               	movlw	175
  2640  0F8C  0022               	movlb	2	; select bank2
  2641  0F8D  00E7               	movwf	??_nRF_Setup^(0+256)
  2642  0F8E  0867               	movf	??_nRF_Setup^(0+256),w
  2643  0F8F  0023               	movlb	3	; select bank3
  2644  0F90  00E7               	movwf	nRF_Setup@RXTX_ADDR^(0+384)
  2645                           
  2646                           ;nRF24L01P.c: 25: LATAbits.LATA4 = 1;
  2647  0F91  0022               	movlb	2	; select bank2
  2648  0F92  160C               	bsf	12,4	;volatile
  2649                           
  2650                           ;nRF24L01P.c: 26: uint8_t status;
  2651                           ;nRF24L01P.c: 32: WriteRegister(0x01, 0x01);
  2652  0F93  01E1               	clrf	WriteRegister@val^(0+256)
  2653  0F94  0AE1               	incf	WriteRegister@val^(0+256),f
  2654  0F95  3001               	movlw	1
  2655  0F96  3188  201C  318F   	fcall	_WriteRegister
  2656                           
  2657                           ;nRF24L01P.c: 35: WriteRegister(0x02, 0x01);
  2658  0F99  0022               	movlb	2	; select bank2
  2659  0F9A  01E1               	clrf	WriteRegister@val^(0+256)
  2660  0F9B  0AE1               	incf	WriteRegister@val^(0+256),f
  2661  0F9C  3002               	movlw	2
  2662  0F9D  3188  201C  318F   	fcall	_WriteRegister
  2663                           
  2664                           ;nRF24L01P.c: 37: WriteRegister(0x03, 0x03);
  2665  0FA0  3003               	movlw	3
  2666  0FA1  0022               	movlb	2	; select bank2
  2667  0FA2  00E7               	movwf	??_nRF_Setup^(0+256)
  2668  0FA3  0867               	movf	??_nRF_Setup^(0+256),w
  2669  0FA4  00E1               	movwf	WriteRegister@val^(0+256)
  2670  0FA5  3003               	movlw	3
  2671  0FA6  3188  201C  318F   	fcall	_WriteRegister
  2672                           
  2673                           ;nRF24L01P.c: 43: WriteRegister(0x04, 0x2F);
  2674  0FA9  302F               	movlw	47
  2675  0FAA  0022               	movlb	2	; select bank2
  2676  0FAB  00E7               	movwf	??_nRF_Setup^(0+256)
  2677  0FAC  0867               	movf	??_nRF_Setup^(0+256),w
  2678  0FAD  00E1               	movwf	WriteRegister@val^(0+256)
  2679  0FAE  3004               	movlw	4
  2680  0FAF  3188  201C  318F   	fcall	_WriteRegister
  2681                           
  2682                           ;nRF24L01P.c: 46: WriteRegister(0x05, 0x14);
  2683  0FB2  3014               	movlw	20
  2684  0FB3  0022               	movlb	2	; select bank2
  2685  0FB4  00E7               	movwf	??_nRF_Setup^(0+256)
  2686  0FB5  0867               	movf	??_nRF_Setup^(0+256),w
  2687  0FB6  00E1               	movwf	WriteRegister@val^(0+256)
  2688  0FB7  3005               	movlw	5
  2689  0FB8  3188  201C  318F   	fcall	_WriteRegister
  2690                           
  2691                           ;nRF24L01P.c: 48: WriteRegister(0x06, 0x06);
  2692  0FBB  3006               	movlw	6
  2693  0FBC  0022               	movlb	2	; select bank2
  2694  0FBD  00E7               	movwf	??_nRF_Setup^(0+256)
  2695  0FBE  0867               	movf	??_nRF_Setup^(0+256),w
  2696  0FBF  00E1               	movwf	WriteRegister@val^(0+256)
  2697  0FC0  3006               	movlw	6
  2698  0FC1  3188  201C  318F   	fcall	_WriteRegister
  2699                           
  2700                           ;nRF24L01P.c: 53: WriteRegister(0x11, 0x04);
  2701  0FC4  3004               	movlw	4
  2702  0FC5  0022               	movlb	2	; select bank2
  2703  0FC6  00E7               	movwf	??_nRF_Setup^(0+256)
  2704  0FC7  0867               	movf	??_nRF_Setup^(0+256),w
  2705  0FC8  00E1               	movwf	WriteRegister@val^(0+256)
  2706  0FC9  3011               	movlw	17
  2707  0FCA  3188  201C  318F   	fcall	_WriteRegister
  2708                           
  2709                           ;nRF24L01P.c: 54: WriteRegister(0x00,0x7B);
  2710  0FCD  307B               	movlw	123
  2711  0FCE  0022               	movlb	2	; select bank2
  2712  0FCF  00E7               	movwf	??_nRF_Setup^(0+256)
  2713  0FD0  0867               	movf	??_nRF_Setup^(0+256),w
  2714  0FD1  00E1               	movwf	WriteRegister@val^(0+256)
  2715  0FD2  3000               	movlw	0
  2716  0FD3  3188  201C  318F   	fcall	_WriteRegister
  2717                           
  2718                           ;nRF24L01P.c: 55: WriteRegister(0x07,0x70);
  2719  0FD6  3070               	movlw	112
  2720  0FD7  0022               	movlb	2	; select bank2
  2721  0FD8  00E7               	movwf	??_nRF_Setup^(0+256)
  2722  0FD9  0867               	movf	??_nRF_Setup^(0+256),w
  2723  0FDA  00E1               	movwf	WriteRegister@val^(0+256)
  2724  0FDB  3007               	movlw	7
  2725  0FDC  3188  201C  318F   	fcall	_WriteRegister
  2726                           
  2727                           ;nRF24L01P.c: 56: WriteAddress(0x0A, 5, RXTX_ADDR);
  2728  0FDF  3005               	movlw	5
  2729  0FE0  0022               	movlb	2	; select bank2
  2730  0FE1  00E7               	movwf	??_nRF_Setup^(0+256)
  2731  0FE2  0867               	movf	??_nRF_Setup^(0+256),w
  2732  0FE3  00E1               	movwf	WriteAddress@num^(0+256)
  2733  0FE4  30E7               	movlw	(low (nRF_Setup@RXTX_ADDR| (0+256)))& (0+255)
  2734  0FE5  00E8               	movwf	(??_nRF_Setup+1)^(0+256)
  2735  0FE6  0868               	movf	(??_nRF_Setup+1)^(0+256),w
  2736  0FE7  00E2               	movwf	WriteAddress@addr^(0+256)
  2737  0FE8  300A               	movlw	10
  2738  0FE9  3189  210A  318F   	fcall	_WriteAddress
  2739                           
  2740                           ;nRF24L01P.c: 71: WriteCommand(0xE2);
  2741  0FEC  30E2               	movlw	226
  2742  0FED  3187  27F3  318F   	fcall	_WriteCommand
  2743                           
  2744                           ;nRF24L01P.c: 72: WriteCommand(0xE1);
  2745  0FF0  30E1               	movlw	225
  2746  0FF1  3187  27F3  318F   	fcall	_WriteCommand
  2747                           
  2748                           ;nRF24L01P.c: 73: LATAbits.LATA4 = 1;
  2749  0FF4  0022               	movlb	2	; select bank2
  2750  0FF5  160C               	bsf	12,4	;volatile
  2751                           
  2752                           ;nRF24L01P.c: 74: _delay((unsigned long)((230)*(48000000L/4000000.0)));
  2753  0FF6  3004               	movlw	4
  2754  0FF7  00E8               	movwf	(??_nRF_Setup^(0+256)+1)
  2755  0FF8  3094               	movlw	148
  2756  0FF9  00E7               	movwf	??_nRF_Setup^(0+256)
  2757  0FFA                     u4207:	
  2758  0FFA  0BE7               	decfsz	??_nRF_Setup^(0+256),f
  2759  0FFB  2FFA               	goto	u4207
  2760  0FFC  0BE8               	decfsz	(??_nRF_Setup^(0+256)+1),f
  2761  0FFD  2FFA               	goto	u4207
  2762  0FFE  0000               	nop
  2763  0FFF  0008               	return
  2764  1000                     __end_of_nRF_Setup:	
  2765                           
  2766                           	psect	text3
  2767  081C                     __ptext3:	
  2768 ;; *************** function _WriteRegister *****************
  2769 ;; Defined at:
  2770 ;;		line 84 in file "nRF24L01P.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  reg             1    wreg     unsigned char 
  2773 ;;  val             1    1[BANK2 ] unsigned char 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  reg             1    2[BANK2 ] unsigned char 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0, pclath, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2785 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2786 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2788 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2789 ;;Total ram usage:        2 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; Hardware stack levels required when called:   11
  2792 ;; This function calls:
  2793 ;;		_SPI_transfer
  2794 ;; This function is called by:
  2795 ;;		_main
  2796 ;;		_nRF_Setup
  2797 ;;		_FlushTXRX
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           
  2802                           ;psect for function _WriteRegister
  2803  081C                     _WriteRegister:	
  2804                           
  2805                           ;incstack = 0
  2806                           ; Regs used in _WriteRegister: [wreg+status,2+status,0+pclath+cstack]
  2807                           ;WriteRegister@reg stored from wreg
  2808  081C  0022               	movlb	2	; select bank2
  2809  081D  00E2               	movwf	WriteRegister@reg^(0+256)
  2810                           
  2811                           ;nRF24L01P.c: 86: LATCbits.LATC6 = 0;
  2812  081E  130E               	bcf	14,6	;volatile
  2813                           
  2814                           ;nRF24L01P.c: 88: SPI_transfer(0x20 | reg);
  2815  081F  0862               	movf	WriteRegister@reg^(0+256),w
  2816  0820  3820               	iorlw	32
  2817  0821  3197  2771  3188   	fcall	_SPI_transfer
  2818                           
  2819                           ;nRF24L01P.c: 89: SPI_transfer(val);
  2820  0824  0022               	movlb	2	; select bank2
  2821  0825  0861               	movf	WriteRegister@val^(0+256),w
  2822  0826  3197  2771         	fcall	_SPI_transfer
  2823                           
  2824                           ;nRF24L01P.c: 90: LATCbits.LATC6 = 1;
  2825  0828  0022               	movlb	2	; select bank2
  2826  0829  170E               	bsf	14,6	;volatile
  2827  082A  0008               	return
  2828  082B                     __end_of_WriteRegister:	
  2829                           
  2830                           	psect	text4
  2831  07F3                     __ptext4:	
  2832 ;; *************** function _WriteCommand *****************
  2833 ;; Defined at:
  2834 ;;		line 130 in file "nRF24L01P.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  command         1    wreg     unsigned char 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  command         1    1[BANK2 ] unsigned char 
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      void 
  2841 ;; Registers used:
  2842 ;;		wreg, status,2, status,0, pclath, cstack
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2849 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2851 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2852 ;;Total ram usage:        1 bytes
  2853 ;; Hardware stack levels used:    1
  2854 ;; Hardware stack levels required when called:   11
  2855 ;; This function calls:
  2856 ;;		_SPI_transfer
  2857 ;; This function is called by:
  2858 ;;		_nRF_Setup
  2859 ;;		_FlushTXRX
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           
  2864                           ;psect for function _WriteCommand
  2865  07F3                     _WriteCommand:	
  2866                           
  2867                           ;incstack = 0
  2868                           ; Regs used in _WriteCommand: [wreg+status,2+status,0+pclath+cstack]
  2869                           ;WriteCommand@command stored from wreg
  2870  07F3  0022               	movlb	2	; select bank2
  2871  07F4  00E1               	movwf	WriteCommand@command^(0+256)
  2872                           
  2873                           ;nRF24L01P.c: 132: LATCbits.LATC6 = 0;
  2874  07F5  130E               	bcf	14,6	;volatile
  2875                           
  2876                           ;nRF24L01P.c: 133: SPI_transfer(command);
  2877  07F6  0861               	movf	WriteCommand@command^(0+256),w
  2878  07F7  3197  2771         	fcall	_SPI_transfer
  2879                           
  2880                           ;nRF24L01P.c: 134: LATCbits.LATC6 = 1;
  2881  07F9  0022               	movlb	2	; select bank2
  2882  07FA  170E               	bsf	14,6	;volatile
  2883  07FB  0008               	return
  2884  07FC                     __end_of_WriteCommand:	
  2885                           
  2886                           	psect	text5
  2887  090A                     __ptext5:	
  2888 ;; *************** function _WriteAddress *****************
  2889 ;; Defined at:
  2890 ;;		line 106 in file "nRF24L01P.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  reg             1    wreg     unsigned char 
  2893 ;;  num             1    1[BANK2 ] unsigned char 
  2894 ;;  addr            1    2[BANK2 ] PTR unsigned char 
  2895 ;;		 -> nRF_Setup@RXTX_ADDR(5), 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  reg             1    4[BANK2 ] unsigned char 
  2898 ;;  i               2    5[BANK2 ] int 
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  1    wreg      void 
  2901 ;; Registers used:
  2902 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2908 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2909 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  2910 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2911 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  2912 ;;Total ram usage:        6 bytes
  2913 ;; Hardware stack levels used:    1
  2914 ;; Hardware stack levels required when called:   11
  2915 ;; This function calls:
  2916 ;;		_SPI_transfer
  2917 ;; This function is called by:
  2918 ;;		_nRF_Setup
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           
  2923                           ;psect for function _WriteAddress
  2924  090A                     _WriteAddress:	
  2925                           
  2926                           ;incstack = 0
  2927                           ; Regs used in _WriteAddress: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2928                           ;WriteAddress@reg stored from wreg
  2929  090A  0022               	movlb	2	; select bank2
  2930  090B  00E4               	movwf	WriteAddress@reg^(0+256)
  2931                           
  2932                           ;nRF24L01P.c: 108: LATCbits.LATC6 = 0;
  2933  090C  130E               	bcf	14,6	;volatile
  2934                           
  2935                           ;nRF24L01P.c: 109: SPI_transfer(0x20 | reg);
  2936  090D  0864               	movf	WriteAddress@reg^(0+256),w
  2937  090E  3820               	iorlw	32
  2938  090F  3197  2771  3189   	fcall	_SPI_transfer
  2939                           
  2940                           ;nRF24L01P.c: 110: for (int i=0; i<num; i++)
  2941  0912  0022               	movlb	2	; select bank2
  2942  0913  01E5               	clrf	WriteAddress@i^(0+256)
  2943  0914  01E6               	clrf	(WriteAddress@i+1)^(0+256)
  2944  0915                     l4353:	
  2945  0915  0866               	movf	(WriteAddress@i+1)^(0+256),w
  2946  0916  3A80               	xorlw	128
  2947  0917  00E3               	movwf	??_WriteAddress^(0+256)
  2948  0918  3080               	movlw	128
  2949  0919  0263               	subwf	??_WriteAddress^(0+256),w
  2950  091A  1D03               	skipz
  2951  091B  291E               	goto	u3815
  2952  091C  0861               	movf	WriteAddress@num^(0+256),w
  2953  091D  0265               	subwf	WriteAddress@i^(0+256),w
  2954  091E                     u3815:	
  2955  091E  1803               	btfsc	3,0
  2956  091F  2932               	goto	l655
  2957                           
  2958                           ;nRF24L01P.c: 111: SPI_transfer(addr[i]);
  2959  0920  0022               	movlb	2	; select bank2
  2960  0921  0865               	movf	WriteAddress@i^(0+256),w
  2961  0922  0762               	addwf	WriteAddress@addr^(0+256),w
  2962  0923  00E3               	movwf	??_WriteAddress^(0+256)
  2963  0924  0863               	movf	??_WriteAddress^(0+256),w
  2964  0925  0086               	movwf	6
  2965  0926  3001               	movlw	1	; select bank2/3
  2966  0927  0087               	movwf	7
  2967  0928  0801               	movf	1,w
  2968  0929  3197  2771  3189   	fcall	_SPI_transfer
  2969  092C  3001               	movlw	1
  2970  092D  0022               	movlb	2	; select bank2
  2971  092E  07E5               	addwf	WriteAddress@i^(0+256),f
  2972  092F  3000               	movlw	0
  2973  0930  3DE6               	addwfc	(WriteAddress@i+1)^(0+256),f
  2974  0931  2915               	goto	l4353
  2975  0932                     l655:	
  2976                           
  2977                           ;nRF24L01P.c: 112: LATCbits.LATC6 = 1;
  2978  0932  0022               	movlb	2	; select bank2
  2979  0933  170E               	bsf	14,6	;volatile
  2980  0934  0008               	return
  2981  0935                     __end_of_WriteAddress:	
  2982                           
  2983                           	psect	text6
  2984  03E3                     __ptext6:	
  2985 ;; *************** function _USBDeviceInit *****************
  2986 ;; Defined at:
  2987 ;;		line 277 in file "../lib/usb/src/usb_device.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;		None
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;  p               2    1[BANK2 ] PTR unsigned char 
  2992 ;;		 -> UEP1(1), 
  2993 ;;  i               1    3[BANK2 ] unsigned char 
  2994 ;;  i               1    4[BANK2 ] unsigned char 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      void 
  2997 ;; Registers used:
  2998 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3005 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3006 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3007 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  3008 ;;Total ram usage:        5 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:   10
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_main
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           
  3019                           ;psect for function _USBDeviceInit
  3020  03E3                     _USBDeviceInit:	
  3021                           
  3022                           ;usb_device.c: 279: uint8_t i;
  3023                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  3024                           
  3025                           ;incstack = 0
  3026                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  3027  03E3  0021               	movlb	1	; select bank1
  3028  03E4  1112               	bcf	18,2	;volatile
  3029                           
  3030                           ;usb_device.c: 285: ;
  3031                           ;usb_device.c: 288: {UEIR = 0;};
  3032  03E5  003D               	movlb	29	; select bank29
  3033  03E6  0193               	clrf	19	;volatile
  3034                           
  3035                           ;usb_device.c: 291: {UIR = 0;};
  3036  03E7  0190               	clrf	16	;volatile
  3037                           
  3038                           ;usb_device.c: 294: UEP0 = 0;
  3039  03E8  0198               	clrf	24	;volatile
  3040                           
  3041                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  3042  03E9  300E               	movlw	14
  3043  03EA  0022               	movlb	2	; select bank2
  3044  03EB  00E2               	movwf	(USBDeviceInit@p+1)^(0+256)
  3045  03EC  3099               	movlw	153
  3046  03ED  00E1               	movwf	USBDeviceInit@p^(0+256)
  3047  03EE  01E3               	clrf	USBDeviceInit@i_821^(0+256)
  3048  03EF  3002               	movlw	2
  3049  03F0  0263               	subwf	USBDeviceInit@i_821^(0+256),w
  3050  03F1  1803               	btfsc	3,0
  3051  03F2  2C04               	goto	l4405
  3052  03F3                     l4397:	
  3053  03F3  0861               	movf	USBDeviceInit@p^(0+256),w
  3054  03F4  0086               	movwf	6
  3055  03F5  0862               	movf	(USBDeviceInit@p+1)^(0+256),w
  3056  03F6  0087               	movwf	7
  3057  03F7  0181               	clrf	1
  3058  03F8  3001               	movlw	1
  3059  03F9  07E1               	addwf	USBDeviceInit@p^(0+256),f
  3060  03FA  3000               	movlw	0
  3061  03FB  3DE2               	addwfc	(USBDeviceInit@p+1)^(0+256),f
  3062  03FC  3001               	movlw	1
  3063  03FD  00E0               	movwf	??_USBDeviceInit^(0+256)
  3064  03FE  0860               	movf	??_USBDeviceInit^(0+256),w
  3065  03FF  07E3               	addwf	USBDeviceInit@i_821^(0+256),f
  3066  0400  3002               	movlw	2
  3067  0401  0263               	subwf	USBDeviceInit@i_821^(0+256),w
  3068  0402  1C03               	skipc
  3069  0403  2BF3               	goto	l4397
  3070  0404                     l4405:	
  3071                           
  3072                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  3073  0404  3016               	movlw	22
  3074  0405  003D               	movlb	29	; select bank29
  3075  0406  0091               	movwf	17	;volatile
  3076  0407  309F               	movlw	159
  3077  0408  0097               	movwf	23	;volatile
  3078  0409  307B               	movlw	123
  3079  040A  0092               	movwf	18	;volatile
  3080                           
  3081                           ;usb_device.c: 301: ;
  3082                           ;usb_device.c: 304: ;
  3083                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  3084  040B  0022               	movlb	2	; select bank2
  3085  040C  01E4               	clrf	USBDeviceInit@i^(0+256)
  3086  040D  300C               	movlw	12
  3087  040E  0264               	subwf	USBDeviceInit@i^(0+256),w
  3088  040F  1803               	btfsc	3,0
  3089  0410  2C2A               	goto	l173
  3090  0411                     l4413:	
  3091                           
  3092                           ;usb_device.c: 308: {
  3093                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  3094  0411  0864               	movf	USBDeviceInit@i^(0+256),w
  3095  0412  00E0               	movwf	??_USBDeviceInit^(0+256)
  3096  0413  3001               	movlw	1
  3097  0414                     u3855:	
  3098  0414  35E0               	lslf	??_USBDeviceInit^(0+256),f
  3099  0415  3EFF               	addlw	-1
  3100  0416  1D03               	skipz
  3101  0417  2C14               	goto	u3855
  3102  0418  3560               	lslf	??_USBDeviceInit^(0+256),w
  3103  0419  3E20               	addlw	32
  3104  041A  0086               	movwf	6
  3105  041B  0187               	clrf	7
  3106  041C  3000               	movlw	0
  3107  041D  3FC0               	movwi [0]fsr1
  3108  041E  3000               	movlw	0
  3109  041F  3FC1               	movwi [1]fsr1
  3110  0420  3FC2               	movwi [2]fsr1
  3111  0421  3FC3               	movwi [3]fsr1
  3112  0422  3001               	movlw	1
  3113  0423  00E0               	movwf	??_USBDeviceInit^(0+256)
  3114  0424  0860               	movf	??_USBDeviceInit^(0+256),w
  3115  0425  07E4               	addwf	USBDeviceInit@i^(0+256),f
  3116  0426  300C               	movlw	12
  3117  0427  0264               	subwf	USBDeviceInit@i^(0+256),w
  3118  0428  1C03               	skipc
  3119  0429  2C11               	goto	l4413
  3120  042A                     l173:	
  3121                           
  3122                           ;usb_device.c: 310: }
  3123                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  3124  042A  003D               	movlb	29	; select bank29
  3125  042B  170E               	bsf	14,6	;volatile
  3126                           
  3127                           ;usb_device.c: 316: UADDR = 0x00;
  3128  042C  0196               	clrf	22	;volatile
  3129                           
  3130                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  3131  042D  120E               	bcf	14,4	;volatile
  3132                           
  3133                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  3134  042E  130E               	bcf	14,6	;volatile
  3135  042F                     l4425:	
  3136                           ;usb_device.c: 325: do
  3137                           
  3138                           
  3139                           ;usb_device.c: 326: {
  3140                           ;usb_device.c: 327: (UIR &= 0xF7);
  3141  042F  30F7               	movlw	247
  3142  0430  0022               	movlb	2	; select bank2
  3143  0431  00E0               	movwf	??_USBDeviceInit^(0+256)
  3144  0432  0860               	movf	??_USBDeviceInit^(0+256),w
  3145  0433  003D               	movlb	29	; select bank29
  3146  0434  0590               	andwf	16,f	;volatile
  3147                           
  3148                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  3149  0435  0023               	movlb	3	; select bank3
  3150  0436  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  3151                           
  3152                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  3153  0437  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  3154                           
  3155                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  3156  0438  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  3157  0439  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  3158                           
  3159                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  3160  043A  003D               	movlb	29	; select bank29
  3161  043B  1990               	btfsc	16,3	;volatile
  3162  043C  2C2F               	goto	l4425
  3163                           
  3164                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  3165  043D  3001               	movlw	1
  3166  043E  0022               	movlb	2	; select bank2
  3167  043F  00E0               	movwf	??_USBDeviceInit^(0+256)
  3168  0440  0860               	movf	??_USBDeviceInit^(0+256),w
  3169  0441  0023               	movlb	3	; select bank3
  3170  0442  00D4               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  3171                           
  3172                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  3173  0443  3001               	movlw	1
  3174  0444  0022               	movlb	2	; select bank2
  3175  0445  00E0               	movwf	??_USBDeviceInit^(0+256)
  3176  0446  0860               	movf	??_USBDeviceInit^(0+256),w
  3177  0447  0023               	movlb	3	; select bank3
  3178  0448  00D5               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  3179                           
  3180                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  3181  0449  01D1               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  3182                           
  3183                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  3184  044A  01D2               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  3185                           
  3186                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  3187  044B  01D0               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  3188                           
  3189                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  3190  044C  0022               	movlb	2	; select bank2
  3191  044D  01E4               	clrf	USBDeviceInit@i^(0+256)
  3192  044E  3003               	movlw	3
  3193  044F  0264               	subwf	USBDeviceInit@i^(0+256),w
  3194  0450  1803               	btfsc	3,0
  3195  0451  2C76               	goto	l4453
  3196  0452                     l4447:	
  3197                           
  3198                           ;usb_device.c: 346: {
  3199                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  3200  0452  3564               	lslf	USBDeviceInit@i^(0+256),w
  3201  0453  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  3202  0454  0086               	movwf	6
  3203  0455  3001               	movlw	1	; select bank3/4
  3204  0456  0087               	movwf	7
  3205  0457  3000               	movlw	0
  3206  0458  3FC0               	movwi [0]fsr1
  3207  0459  3FC1               	movwi [1]fsr1
  3208                           
  3209                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  3210  045A  3564               	lslf	USBDeviceInit@i^(0+256),w
  3211  045B  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3212  045C  0086               	movwf	6
  3213  045D  3001               	movlw	1	; select bank3/4
  3214  045E  0087               	movwf	7
  3215  045F  3000               	movlw	0
  3216  0460  3FC0               	movwi [0]fsr1
  3217  0461  3FC1               	movwi [1]fsr1
  3218                           
  3219                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  3220  0462  0864               	movf	USBDeviceInit@i^(0+256),w
  3221  0463  3EC0               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  3222  0464  0086               	movwf	6
  3223  0465  3001               	movlw	1	; select bank3/4
  3224  0466  0087               	movwf	7
  3225  0467  0181               	clrf	1
  3226                           
  3227                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  3228  0468  0864               	movf	USBDeviceInit@i^(0+256),w
  3229  0469  3EC3               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  3230  046A  0086               	movwf	6
  3231  046B  3001               	movlw	1	; select bank3/4
  3232  046C  0087               	movwf	7
  3233  046D  0181               	clrf	1
  3234  046E  3001               	movlw	1
  3235  046F  00E0               	movwf	??_USBDeviceInit^(0+256)
  3236  0470  0860               	movf	??_USBDeviceInit^(0+256),w
  3237  0471  07E4               	addwf	USBDeviceInit@i^(0+256),f
  3238  0472  3003               	movlw	3
  3239  0473  0264               	subwf	USBDeviceInit@i^(0+256),w
  3240  0474  1C03               	skipc
  3241  0475  2C52               	goto	l4447
  3242  0476                     l4453:	
  3243                           
  3244                           ;usb_device.c: 351: }
  3245                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  3246  0476  3028               	movlw	40
  3247  0477  0023               	movlb	3	; select bank3
  3248  0478  00A7               	movwf	_pBDTEntryIn^(0+384)
  3249  0479  3000               	movlw	0
  3250  047A  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  3251                           
  3252                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  3253  047B  3016               	movlw	22
  3254  047C  003D               	movlb	29	; select bank29
  3255  047D  0098               	movwf	24	;volatile
  3256                           
  3257                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3258  047E  3000               	movlw	0
  3259  047F  0020               	movlb	0	; select bank0
  3260  0480  00A3               	movwf	35	;volatile
  3261  0481  3050               	movlw	80
  3262  0482  00A2               	movwf	34	;volatile
  3263                           
  3264                           ;usb_device.c: 359: BDT[0].CNT = 8;
  3265  0483  3008               	movlw	8
  3266  0484  00A1               	movwf	33	;volatile
  3267                           
  3268                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  3269  0485  3004               	movlw	4
  3270  0486  0022               	movlb	2	; select bank2
  3271  0487  00E0               	movwf	??_USBDeviceInit^(0+256)
  3272  0488  0860               	movf	??_USBDeviceInit^(0+256),w
  3273  0489  0020               	movlb	0	; select bank0
  3274  048A  00A0               	movwf	32	;volatile
  3275                           
  3276                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  3277  048B  17A0               	bsf	32,7	;volatile
  3278                           
  3279                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  3280  048C  0022               	movlb	2	; select bank2
  3281  048D  01EF               	clrf	_USBActiveConfiguration^(0+256)	;volatile
  3282                           
  3283                           ;usb_device.c: 366: USB1msTickCount = 0;
  3284  048E  3000               	movlw	0
  3285  048F  0023               	movlb	3	; select bank3
  3286  0490  00BF               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
  3287  0491  3000               	movlw	0
  3288  0492  00BE               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
  3289  0493  3000               	movlw	0
  3290  0494  00BD               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
  3291  0495  3000               	movlw	0
  3292  0496  00BC               	movwf	_USB1msTickCount^(0+384)	;volatile
  3293                           
  3294                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  3295  0497  01D7               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  3296                           
  3297                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  3298  0498  0022               	movlb	2	; select bank2
  3299  0499  01ED               	clrf	_USBDeviceState^(0+256)	;volatile
  3300  049A  0008               	return
  3301  049B                     __end_of_USBDeviceInit:	
  3302                           
  3303                           	psect	text7
  3304  0845                     __ptext7:	
  3305 ;; *************** function _USBDeviceAttach *****************
  3306 ;; Defined at:
  3307 ;;		line 1352 in file "../lib/usb/src/usb_device.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;		None
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;		None
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  1    wreg      void 
  3314 ;; Registers used:
  3315 ;;		wreg, status,2, status,0
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3323 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3324 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3325 ;;Total ram usage:        1 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; Hardware stack levels required when called:   10
  3328 ;; This function calls:
  3329 ;;		Nothing
  3330 ;; This function is called by:
  3331 ;;		_main
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334                           
  3335                           
  3336                           ;psect for function _USBDeviceAttach
  3337  0845                     _USBDeviceAttach:	
  3338                           
  3339                           ;usb_device.c: 1356: {
  3340                           ;usb_device.c: 1357: if(1 == 1)
  3341                           
  3342                           ;incstack = 0
  3343                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  3344  0845  0022               	movlb	2	; select bank2
  3345  0846  086D               	movf	_USBDeviceState^(0+256),w	;volatile
  3346  0847  1D03               	btfss	3,2
  3347  0848  0008               	return
  3348                           
  3349                           ;usb_device.c: 1358: {
  3350                           ;usb_device.c: 1360: UCON = 0;
  3351  0849  003D               	movlb	29	; select bank29
  3352  084A  018E               	clrf	14	;volatile
  3353                           
  3354                           ;usb_device.c: 1363: UIE = 0;
  3355  084B  0192               	clrf	18	;volatile
  3356                           
  3357                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  3358  084C  3016               	movlw	22
  3359  084D  0091               	movwf	17	;volatile
  3360  084E  309F               	movlw	159
  3361  084F  0097               	movwf	23	;volatile
  3362  0850  307B               	movlw	123
  3363  0851  0092               	movwf	18	;volatile
  3364                           
  3365                           ;usb_device.c: 1369: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  3366  0852  0021               	movlb	1	; select bank1
  3367  0853  1512               	bsf	18,2	;volatile
  3368  0854  170B               	bsf	11,6	;volatile
  3369  0855  178B               	bsf	11,7	;volatile
  3370  0856                     l233:	
  3371                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  3372                           
  3373  0856  003D               	movlb	29	; select bank29
  3374  0857  198E               	btfsc	14,3	;volatile
  3375  0858  285B               	goto	l4489
  3376  0859  158E               	bsf	14,3	;volatile
  3377  085A  2856               	goto	l233
  3378  085B                     l4489:	
  3379                           
  3380                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  3381  085B  3001               	movlw	1
  3382  085C  0022               	movlb	2	; select bank2
  3383  085D  00E0               	movwf	??_USBDeviceAttach^(0+256)
  3384  085E  0860               	movf	??_USBDeviceAttach^(0+256),w
  3385  085F  00ED               	movwf	_USBDeviceState^(0+256)	;volatile
  3386  0860  0008               	return
  3387  0861                     __end_of_USBDeviceAttach:	
  3388                           
  3389                           	psect	text8
  3390  17B9                     __ptext8:	
  3391 ;; *************** function _SYSTEM_Initialize *****************
  3392 ;; Defined at:
  3393 ;;		line 82 in file "system.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  state           1    wreg     enum E2598
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;  state           1    0[BANK2 ] enum E2598
  3398 ;; Return value:  Size  Location     Type
  3399 ;;                  1    wreg      void 
  3400 ;; Registers used:
  3401 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3408 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3410 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3411 ;;Total ram usage:        1 bytes
  3412 ;; Hardware stack levels used:    1
  3413 ;; Hardware stack levels required when called:   10
  3414 ;; This function calls:
  3415 ;;		Nothing
  3416 ;; This function is called by:
  3417 ;;		_main
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420                           
  3421                           
  3422                           ;psect for function _SYSTEM_Initialize
  3423  17B9                     _SYSTEM_Initialize:	
  3424                           
  3425                           ;incstack = 0
  3426                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0]
  3427                           ;SYSTEM_Initialize@state stored from wreg
  3428  17B9  0022               	movlb	2	; select bank2
  3429  17BA  00E0               	movwf	SYSTEM_Initialize@state^(0+256)
  3430                           
  3431                           ;system.c: 84: switch(state)
  3432  17BB  2FC3               	goto	l4367
  3433  17BC                     l4363:	
  3434                           ;system.c: 85: {
  3435                           ;system.c: 86: case SYSTEM_STATE_USB_START:
  3436                           
  3437                           
  3438                           ;system.c: 90: OSCCON = 0xFC;
  3439  17BC  30FC               	movlw	252
  3440  17BD  0021               	movlb	1	; select bank1
  3441  17BE  0099               	movwf	25	;volatile
  3442                           
  3443                           ;system.c: 91: ACTCON = 0x90;
  3444  17BF  3090               	movlw	144
  3445  17C0  0027               	movlb	7	; select bank7
  3446  17C1  009B               	movwf	27	;volatile
  3447                           
  3448                           ;system.c: 102: }
  3449                           
  3450                           ;system.c: 101: break;
  3451                           
  3452                           ;system.c: 100: case SYSTEM_STATE_USB_RESUME:
  3453                           
  3454                           ;system.c: 98: break;
  3455                           
  3456                           ;system.c: 97: case SYSTEM_STATE_USB_SUSPEND:
  3457                           
  3458                           ;system.c: 95: break;
  3459  17C2  0008               	return
  3460  17C3                     l4367:	
  3461  17C3  0022               	movlb	2	; select bank2
  3462  17C4  0860               	movf	SYSTEM_Initialize@state^(0+256),w
  3463                           
  3464                           ; Switch size 1, requested type "space"
  3465                           ; Number of cases is 3, Range of values is 0 to 2
  3466                           ; switch strategies available:
  3467                           ; Name         Instructions Cycles
  3468                           ; simple_byte           10     6 (average)
  3469                           ; direct_byte           12     6 (fixed)
  3470                           ; jumptable            260     6 (fixed)
  3471                           ;	Chosen strategy is simple_byte
  3472  17C5  3A00               	xorlw	0	; case 0
  3473  17C6  1903               	skipnz
  3474  17C7  2FBC               	goto	l4363
  3475  17C8  3A01               	xorlw	1	; case 1
  3476  17C9  1903               	skipnz
  3477  17CA  2FCF               	goto	l565
  3478  17CB  3A03               	xorlw	3	; case 2
  3479  17CC  1903               	skipnz
  3480  17CD  2FCF               	goto	l565
  3481  17CE  2FCF               	goto	l565
  3482  17CF                     l565:	
  3483  17CF  0008               	return
  3484  17D0                     __end_of_SYSTEM_Initialize:	
  3485                           
  3486                           	psect	text9
  3487  17A4                     __ptext9:	
  3488 ;; *************** function _SPI_init *****************
  3489 ;; Defined at:
  3490 ;;		line 13 in file "spi.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;		None
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;		None
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      void 
  3497 ;; Registers used:
  3498 ;;		wreg, status,2, status,0
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3508 ;;Total ram usage:        0 bytes
  3509 ;; Hardware stack levels used:    1
  3510 ;; Hardware stack levels required when called:   10
  3511 ;; This function calls:
  3512 ;;		Nothing
  3513 ;; This function is called by:
  3514 ;;		_main
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           
  3519                           ;psect for function _SPI_init
  3520  17A4                     _SPI_init:	
  3521                           
  3522                           ;spi.c: 15: SSPCON1bits.SSPEN = 0;
  3523                           
  3524                           ;incstack = 0
  3525                           ; Regs used in _SPI_init: [wreg+status,2+status,0]
  3526  17A4  0024               	movlb	4	; select bank4
  3527  17A5  1295               	bcf	21,5	;volatile
  3528                           
  3529                           ;spi.c: 19: TRISBbits.TRISB6 = 0;
  3530  17A6  0021               	movlb	1	; select bank1
  3531  17A7  130D               	bcf	13,6	;volatile
  3532                           
  3533                           ;spi.c: 20: TRISBbits.TRISB4 = 1;
  3534  17A8  160D               	bsf	13,4	;volatile
  3535                           
  3536                           ;spi.c: 21: TRISCbits.TRISC7 = 0;
  3537  17A9  138E               	bcf	14,7	;volatile
  3538                           
  3539                           ;spi.c: 22: TRISCbits.TRISC6 = 0;
  3540  17AA  130E               	bcf	14,6	;volatile
  3541                           
  3542                           ;spi.c: 23: TRISAbits.TRISA4 = 0;
  3543  17AB  120C               	bcf	12,4	;volatile
  3544                           
  3545                           ;spi.c: 25: LATCbits.LATC6 = 1;
  3546  17AC  0022               	movlb	2	; select bank2
  3547  17AD  170E               	bsf	14,6	;volatile
  3548                           
  3549                           ;spi.c: 26: LATAbits.LATA4 = 0;
  3550  17AE  120C               	bcf	12,4	;volatile
  3551                           
  3552                           ;spi.c: 29: SSPSTATbits.CKE = 1;
  3553  17AF  0024               	movlb	4	; select bank4
  3554  17B0  1714               	bsf	20,6	;volatile
  3555                           
  3556                           ;spi.c: 31: SSPCON1bits.CKP = 0;
  3557  17B1  1215               	bcf	21,4	;volatile
  3558                           
  3559                           ;spi.c: 33: SSPSTATbits.SMP = 0;
  3560  17B2  1394               	bcf	20,7	;volatile
  3561                           
  3562                           ;spi.c: 39: SSPCON1bits.SSPM = 0b0010;
  3563  17B3  0815               	movf	21,w	;volatile
  3564  17B4  39F0               	andlw	-16
  3565  17B5  3802               	iorlw	2
  3566  17B6  0095               	movwf	21	;volatile
  3567                           
  3568                           ;spi.c: 40: SSPCON1bits.SSPEN = 1;
  3569  17B7  1695               	bsf	21,5	;volatile
  3570  17B8  0008               	return
  3571  17B9                     __end_of_SPI_init:	
  3572                           
  3573                           	psect	text10
  3574  178F                     __ptext10:	
  3575 ;; *************** function _ReadRegister *****************
  3576 ;; Defined at:
  3577 ;;		line 115 in file "nRF24L01P.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  reg             1    wreg     unsigned char 
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;  reg             1    2[BANK2 ] unsigned char 
  3582 ;;  temp1           1    4[BANK2 ] unsigned char 
  3583 ;;  temp            1    3[BANK2 ] unsigned char 
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1    wreg      unsigned char 
  3586 ;; Registers used:
  3587 ;;		wreg, status,2, status,0, pclath, cstack
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3594 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3595 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3596 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3597 ;;Total ram usage:        4 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:   11
  3600 ;; This function calls:
  3601 ;;		_SPI_transfer
  3602 ;; This function is called by:
  3603 ;;		_main
  3604 ;;		_WriteRegisterCHK
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           
  3609                           ;psect for function _ReadRegister
  3610  178F                     _ReadRegister:	
  3611                           
  3612                           ;incstack = 0
  3613                           ; Regs used in _ReadRegister: [wreg+status,2+status,0+pclath+cstack]
  3614                           ;ReadRegister@reg stored from wreg
  3615  178F  0022               	movlb	2	; select bank2
  3616  1790  00E2               	movwf	ReadRegister@reg^(0+256)
  3617                           
  3618                           ;nRF24L01P.c: 117: uint8_t temp;
  3619                           ;nRF24L01P.c: 118: uint8_t temp1;
  3620                           ;nRF24L01P.c: 120: LATCbits.LATC6 = 0;
  3621  1791  130E               	bcf	14,6	;volatile
  3622                           
  3623                           ;nRF24L01P.c: 121: temp = 0x00 | reg;
  3624  1792  0862               	movf	ReadRegister@reg^(0+256),w
  3625  1793  00E1               	movwf	??_ReadRegister^(0+256)
  3626  1794  0861               	movf	??_ReadRegister^(0+256),w
  3627  1795  00E3               	movwf	ReadRegister@temp^(0+256)
  3628                           
  3629                           ;nRF24L01P.c: 122: SPI_transfer(temp);
  3630  1796  0863               	movf	ReadRegister@temp^(0+256),w
  3631  1797  3197  2771  3197   	fcall	_SPI_transfer
  3632                           
  3633                           ;nRF24L01P.c: 124: temp1= SPI_transfer(0xFF);
  3634  179A  30FF               	movlw	255
  3635  179B  3197  2771         	fcall	_SPI_transfer
  3636  179D  0022               	movlb	2	; select bank2
  3637  179E  00E1               	movwf	??_ReadRegister^(0+256)
  3638  179F  0861               	movf	??_ReadRegister^(0+256),w
  3639  17A0  00E4               	movwf	ReadRegister@temp1^(0+256)
  3640                           
  3641                           ;nRF24L01P.c: 125: LATCbits.LATC6 = 1;
  3642  17A1  170E               	bsf	14,6	;volatile
  3643                           
  3644                           ;nRF24L01P.c: 127: return temp1;
  3645  17A2  0864               	movf	ReadRegister@temp1^(0+256),w
  3646  17A3  0008               	return
  3647  17A4                     __end_of_ReadRegister:	
  3648                           
  3649                           	psect	text11
  3650  0935                     __ptext11:	
  3651 ;; *************** function _ReadPayload *****************
  3652 ;; Defined at:
  3653 ;;		line 150 in file "nRF24L01P.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;  num             1    wreg     unsigned char 
  3656 ;;  data            1    1[BANK2 ] PTR unsigned char 
  3657 ;;		 -> main@podatak(3), 
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;  num             1    4[BANK2 ] unsigned char 
  3660 ;;  i               1    5[BANK2 ] unsigned char 
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      void 
  3663 ;; Registers used:
  3664 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3670 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3671 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3672 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3673 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  3674 ;;Total ram usage:        5 bytes
  3675 ;; Hardware stack levels used:    1
  3676 ;; Hardware stack levels required when called:   11
  3677 ;; This function calls:
  3678 ;;		_SPI_transfer
  3679 ;; This function is called by:
  3680 ;;		_main
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           
  3685                           ;psect for function _ReadPayload
  3686  0935                     _ReadPayload:	
  3687                           
  3688                           ;incstack = 0
  3689                           ; Regs used in _ReadPayload: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3690                           ;ReadPayload@num stored from wreg
  3691  0935  0022               	movlb	2	; select bank2
  3692  0936  00E4               	movwf	ReadPayload@num^(0+256)
  3693                           
  3694                           ;nRF24L01P.c: 152: LATCbits.LATC6 = 0;
  3695  0937  130E               	bcf	14,6	;volatile
  3696                           
  3697                           ;nRF24L01P.c: 154: SPI_transfer(0x61);
  3698  0938  3061               	movlw	97
  3699  0939  3197  2771  3189   	fcall	_SPI_transfer
  3700                           
  3701                           ;nRF24L01P.c: 155: for(uint8_t i=0; i<num; i++)
  3702  093C  0022               	movlb	2	; select bank2
  3703  093D  01E5               	clrf	ReadPayload@i^(0+256)
  3704  093E                     l4637:	
  3705  093E  0864               	movf	ReadPayload@num^(0+256),w
  3706  093F  0265               	subwf	ReadPayload@i^(0+256),w
  3707  0940  1803               	btfsc	3,0
  3708  0941  2956               	goto	l673
  3709                           
  3710                           ;nRF24L01P.c: 156: {
  3711                           ;nRF24L01P.c: 157: data[i]=SPI_transfer(0xFF);
  3712  0942  30FF               	movlw	255
  3713  0943  3197  2771  3189   	fcall	_SPI_transfer
  3714  0946  0022               	movlb	2	; select bank2
  3715  0947  00E2               	movwf	??_ReadPayload^(0+256)
  3716  0948  0865               	movf	ReadPayload@i^(0+256),w
  3717  0949  0761               	addwf	ReadPayload@data^(0+256),w
  3718  094A  00E3               	movwf	(??_ReadPayload+1)^(0+256)
  3719  094B  0863               	movf	(??_ReadPayload+1)^(0+256),w
  3720  094C  0086               	movwf	6
  3721  094D  3002               	movlw	2	; select bank4/5
  3722  094E  0087               	movwf	7
  3723  094F  0862               	movf	??_ReadPayload^(0+256),w
  3724  0950  0081               	movwf	1
  3725  0951  3001               	movlw	1
  3726  0952  00E2               	movwf	??_ReadPayload^(0+256)
  3727  0953  0862               	movf	??_ReadPayload^(0+256),w
  3728  0954  07E5               	addwf	ReadPayload@i^(0+256),f
  3729  0955  293E               	goto	l4637
  3730  0956                     l673:	
  3731                           
  3732                           ;nRF24L01P.c: 158: }
  3733                           ;nRF24L01P.c: 159: LATCbits.LATC6=1;
  3734  0956  170E               	bsf	14,6	;volatile
  3735                           
  3736                           ;nRF24L01P.c: 160: LATAbits.LATA4=1;
  3737  0957  160C               	bsf	12,4	;volatile
  3738                           
  3739                           ;nRF24L01P.c: 161: _delay((unsigned long)((10)*(48000000L/4000.0)));
  3740  0958  309C               	movlw	156
  3741  0959  00E3               	movwf	(??_ReadPayload^(0+256)+1)
  3742  095A  30D7               	movlw	215
  3743  095B  00E2               	movwf	??_ReadPayload^(0+256)
  3744  095C                     u4217:	
  3745  095C  0BE2               	decfsz	??_ReadPayload^(0+256),f
  3746  095D  295C               	goto	u4217
  3747  095E  0BE3               	decfsz	(??_ReadPayload^(0+256)+1),f
  3748  095F  295C               	goto	u4217
  3749  0960  0008               	return
  3750  0961                     __end_of_ReadPayload:	
  3751                           
  3752                           	psect	text12
  3753  1771                     __ptext12:	
  3754 ;; *************** function _SPI_transfer *****************
  3755 ;; Defined at:
  3756 ;;		line 44 in file "spi.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  data            1    wreg     unsigned char 
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;  data            1    0[BANK2 ] unsigned char 
  3761 ;; Return value:  Size  Location     Type
  3762 ;;                  1    wreg      unsigned char 
  3763 ;; Registers used:
  3764 ;;		wreg
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 0/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3771 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3773 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3774 ;;Total ram usage:        1 bytes
  3775 ;; Hardware stack levels used:    1
  3776 ;; Hardware stack levels required when called:   10
  3777 ;; This function calls:
  3778 ;;		Nothing
  3779 ;; This function is called by:
  3780 ;;		_WriteRegister
  3781 ;;		_WriteAddress
  3782 ;;		_ReadRegister
  3783 ;;		_WriteCommand
  3784 ;;		_ReadPayload
  3785 ;;		_WriteRegisterCHK
  3786 ;;		_WritePayload
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           
  3791                           ;psect for function _SPI_transfer
  3792  1771                     _SPI_transfer:	
  3793                           
  3794                           ;incstack = 0
  3795                           ; Regs used in _SPI_transfer: [wreg]
  3796                           ;SPI_transfer@data stored from wreg
  3797  1771  0022               	movlb	2	; select bank2
  3798  1772  00E0               	movwf	SPI_transfer@data^(0+256)
  3799                           
  3800                           ;spi.c: 46: SSPBUF = data;
  3801  1773  0860               	movf	SPI_transfer@data^(0+256),w
  3802  1774  0024               	movlb	4	; select bank4
  3803  1775  0091               	movwf	17	;volatile
  3804  1776                     l696:	
  3805                           ;spi.c: 47: while (!SSPSTATbits.BF);
  3806                           
  3807  1776  1C14               	btfss	20,0	;volatile
  3808  1777  2F76               	goto	l696
  3809                           
  3810                           ;spi.c: 49: return SSPBUF;
  3811  1778  0811               	movf	17,w	;volatile
  3812  1779  0008               	return
  3813  177A                     __end_of_SPI_transfer:	
  3814                           
  3815                           	psect	text13
  3816  031B                     __ptext13:	
  3817 ;; *************** function _CDCTxService *****************
  3818 ;; Defined at:
  3819 ;;		line 836 in file "../lib/usb/src/usb_device_cdc.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;		None
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;  byte_to_send    1    1[BANK3 ] unsigned char 
  3824 ;;  i               1    0[BANK3 ] unsigned char 
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  1    wreg      void 
  3827 ;; Registers used:
  3828 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3835 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  3836 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3837 ;;      Totals:         0       0       0       1       2       0       0       0       0       0       0       0       
      +0       0
  3838 ;;Total ram usage:        3 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:   11
  3841 ;; This function calls:
  3842 ;;		_USBTransferOnePacket
  3843 ;; This function is called by:
  3844 ;;		_main
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           
  3849                           ;psect for function _CDCTxService
  3850  031B                     _CDCTxService:	
  3851                           
  3852                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  3853                           ;usb_device_cdc.c: 839: uint8_t i;
  3854                           ;usb_device_cdc.c: 841: {PIE2bits.USBIE = 0;};
  3855                           
  3856                           ;incstack = 0
  3857                           ; Regs used in _CDCTxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3858  031B  0021               	movlb	1	; select bank1
  3859  031C  1112               	bcf	18,2	;volatile
  3860                           
  3861                           ;usb_device_cdc.c: 843: {};
  3862                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  3863  031D  0023               	movlb	3	; select bank3
  3864  031E  0846               	movf	_CDCDataInHandle^(0+384),w
  3865  031F  0447               	iorwf	(_CDCDataInHandle+1)^(0+384),w
  3866  0320  1903               	btfsc	3,2
  3867  0321  2B2B               	goto	l4511
  3868  0322  0846               	movf	_CDCDataInHandle^(0+384),w
  3869  0323  0086               	movwf	6
  3870  0324  0847               	movf	(_CDCDataInHandle+1)^(0+384),w
  3871  0325  0087               	movwf	7
  3872  0326  1F81               	btfss	1,7
  3873  0327  2B2B               	goto	l4511
  3874                           
  3875                           ;usb_device_cdc.c: 846: {
  3876                           ;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  3877  0328  0021               	movlb	1	; select bank1
  3878  0329  1512               	bsf	18,2	;volatile
  3879                           
  3880                           ;usb_device_cdc.c: 848: return;
  3881  032A  0008               	return
  3882  032B                     l4511:	
  3883                           
  3884                           ;usb_device_cdc.c: 849: }
  3885                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  3886  032B  3003               	movlw	3
  3887  032C  0021               	movlb	1	; select bank1
  3888  032D  0662               	xorwf	_cdc_trf_state^(0+128),w
  3889  032E  1903               	btfsc	3,2
  3890                           
  3891                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  3892  032F  01E2               	clrf	_cdc_trf_state^(0+128)
  3893                           
  3894                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  3895  0330  0862               	movf	_cdc_trf_state^(0+128),w
  3896  0331  1D03               	btfss	3,2
  3897  0332  2B35               	goto	l4519
  3898                           
  3899                           ;usb_device_cdc.c: 863: {
  3900                           ;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  3901  0333  1512               	bsf	18,2	;volatile
  3902                           
  3903                           ;usb_device_cdc.c: 865: return;
  3904  0334  0008               	return
  3905  0335                     l4519:	
  3906                           
  3907                           ;usb_device_cdc.c: 866: }
  3908                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  3909  0335  3002               	movlw	2
  3910  0336  0662               	xorwf	_cdc_trf_state^(0+128),w
  3911  0337  1D03               	btfss	3,2
  3912  0338  2B54               	goto	l4525
  3913                           
  3914                           ;usb_device_cdc.c: 872: {
  3915                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  3916  0339  0022               	movlb	2	; select bank2
  3917  033A  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  3918  033B  0AE0               	incf	USBTransferOnePacket@dir^(0+256),f
  3919  033C  3000               	movlw	0
  3920  033D  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  3921  033E  3000               	movlw	0
  3922  033F  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  3923  0340  01E3               	clrf	USBTransferOnePacket@len^(0+256)
  3924  0341  3002               	movlw	2
  3925  0342  318E  26EF  3183   	fcall	_USBTransferOnePacket
  3926  0345  0022               	movlb	2	; select bank2
  3927  0346  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  3928  0347  0023               	movlb	3	; select bank3
  3929  0348  00C7               	movwf	(_CDCDataInHandle+1)^(0+384)
  3930  0349  0022               	movlb	2	; select bank2
  3931  034A  0860               	movf	?_USBTransferOnePacket^(0+256),w
  3932  034B  0023               	movlb	3	; select bank3
  3933  034C  00C6               	movwf	_CDCDataInHandle^(0+384)
  3934                           
  3935                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  3936  034D  3003               	movlw	3
  3937  034E  0022               	movlb	2	; select bank2
  3938  034F  00EB               	movwf	??_CDCTxService^(0+256)
  3939  0350  086B               	movf	??_CDCTxService^(0+256),w
  3940  0351  0021               	movlb	1	; select bank1
  3941  0352  00E2               	movwf	_cdc_trf_state^(0+128)
  3942                           
  3943                           ;usb_device_cdc.c: 876: }
  3944  0353  2BE0               	goto	l4573
  3945  0354                     l4525:	
  3946                           
  3947                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  3948  0354  0362               	decf	_cdc_trf_state^(0+128),w
  3949  0355  1D03               	btfss	3,2
  3950  0356  2BE0               	goto	l4573
  3951                           
  3952                           ;usb_device_cdc.c: 878: {
  3953                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  3954  0357  3041               	movlw	65
  3955  0358  0023               	movlb	3	; select bank3
  3956  0359  025A               	subwf	_cdc_tx_len^(0+384),w
  3957  035A  1C03               	skipc
  3958  035B  2B5E               	goto	l4531
  3959                           
  3960                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  3961  035C  3040               	movlw	64
  3962  035D  2B5F               	goto	L1
  3963  035E                     l4531:	
  3964                           
  3965                           ;usb_device_cdc.c: 884: else
  3966                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  3967  035E  085A               	movf	_cdc_tx_len^(0+384),w
  3968  035F                     L1:	
  3969  035F  0022               	movlb	2	; select bank2
  3970  0360  00EB               	movwf	??_CDCTxService^(0+256)
  3971  0361  086B               	movf	??_CDCTxService^(0+256),w
  3972  0362  0023               	movlb	3	; select bank3
  3973  0363  00E8               	movwf	CDCTxService@byte_to_send^(0+384)
  3974                           
  3975                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  3976  0364  0368               	decf	CDCTxService@byte_to_send^(0+384),w
  3977  0365  3AFF               	xorlw	255
  3978  0366  075A               	addwf	_cdc_tx_len^(0+384),w
  3979  0367  0022               	movlb	2	; select bank2
  3980  0368  00EB               	movwf	??_CDCTxService^(0+256)
  3981  0369  086B               	movf	??_CDCTxService^(0+256),w
  3982  036A  0023               	movlb	3	; select bank3
  3983  036B  00DA               	movwf	_cdc_tx_len^(0+384)
  3984                           
  3985                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  3986  036C  30A0               	movlw	160
  3987  036D  0022               	movlb	2	; select bank2
  3988  036E  00EB               	movwf	??_CDCTxService^(0+256)
  3989  036F  086B               	movf	??_CDCTxService^(0+256),w
  3990  0370  0023               	movlb	3	; select bank3
  3991  0371  00CA               	movwf	_pCDCDst^(0+384)
  3992                           
  3993                           ;usb_device_cdc.c: 894: i = byte_to_send;
  3994  0372  0868               	movf	CDCTxService@byte_to_send^(0+384),w
  3995  0373  0022               	movlb	2	; select bank2
  3996  0374  00EB               	movwf	??_CDCTxService^(0+256)
  3997  0375  086B               	movf	??_CDCTxService^(0+256),w
  3998  0376  0023               	movlb	3	; select bank3
  3999  0377  00E7               	movwf	CDCTxService@i^(0+384)
  4000                           
  4001                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  4002  0378  0858               	movf	_cdc_mem_type^(0+384),w
  4003  0379  1903               	btfsc	3,2
  4004  037A  2B97               	goto	l4551
  4005  037B  2BB6               	goto	l4561
  4006  037C                     l4543:	
  4007                           ;usb_device_cdc.c: 896: {
  4008                           ;usb_device_cdc.c: 897: while(i)
  4009                           
  4010                           
  4011                           ;usb_device_cdc.c: 898: {
  4012                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  4013  037C  084C               	movf	_pCDCSrc^(0+384),w
  4014  037D  0086               	movwf	6
  4015  037E  3002               	movlw	2	; select bank4/5
  4016  037F  0087               	movwf	7
  4017  0380  0801               	movf	1,w
  4018  0381  0022               	movlb	2	; select bank2
  4019  0382  00EB               	movwf	??_CDCTxService^(0+256)
  4020  0383  0023               	movlb	3	; select bank3
  4021  0384  084A               	movf	_pCDCDst^(0+384),w
  4022  0385  0086               	movwf	6
  4023  0386  0187               	clrf	7
  4024  0387  0022               	movlb	2	; select bank2
  4025  0388  086B               	movf	??_CDCTxService^(0+256),w
  4026  0389  0081               	movwf	1
  4027                           
  4028                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  4029  038A  3001               	movlw	1
  4030  038B  00EB               	movwf	??_CDCTxService^(0+256)
  4031  038C  086B               	movf	??_CDCTxService^(0+256),w
  4032  038D  0023               	movlb	3	; select bank3
  4033  038E  07CA               	addwf	_pCDCDst^(0+384),f
  4034                           
  4035                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  4036  038F  3001               	movlw	1
  4037  0390  0022               	movlb	2	; select bank2
  4038  0391  00EB               	movwf	??_CDCTxService^(0+256)
  4039  0392  086B               	movf	??_CDCTxService^(0+256),w
  4040  0393  0023               	movlb	3	; select bank3
  4041  0394  07CC               	addwf	_pCDCSrc^(0+384),f
  4042                           
  4043                           ;usb_device_cdc.c: 902: i--;
  4044  0395  3001               	movlw	1
  4045  0396  02E7               	subwf	CDCTxService@i^(0+384),f
  4046  0397                     l4551:	
  4047  0397  0867               	movf	CDCTxService@i^(0+384),w
  4048  0398  1903               	btfsc	3,2
  4049  0399  2BB9               	goto	l4563
  4050  039A  2B7C               	goto	l4543
  4051  039B                     l4553:	
  4052                           ;usb_device_cdc.c: 905: else
  4053                           ;usb_device_cdc.c: 906: {
  4054                           ;usb_device_cdc.c: 907: while(i)
  4055                           
  4056                           ;usb_device_cdc.c: 903: }
  4057                           ;usb_device_cdc.c: 904: }
  4058                           
  4059                           
  4060                           ;usb_device_cdc.c: 908: {
  4061                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  4062  039B  084C               	movf	_pCDCSrc^(0+384),w
  4063  039C  0086               	movwf	6
  4064  039D  3002               	movlw	2	; select bank4/5
  4065  039E  0087               	movwf	7
  4066  039F  0801               	movf	1,w
  4067  03A0  0022               	movlb	2	; select bank2
  4068  03A1  00EB               	movwf	??_CDCTxService^(0+256)
  4069  03A2  0023               	movlb	3	; select bank3
  4070  03A3  084A               	movf	_pCDCDst^(0+384),w
  4071  03A4  0086               	movwf	6
  4072  03A5  0187               	clrf	7
  4073  03A6  0022               	movlb	2	; select bank2
  4074  03A7  086B               	movf	??_CDCTxService^(0+256),w
  4075  03A8  0081               	movwf	1
  4076                           
  4077                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  4078  03A9  3001               	movlw	1
  4079  03AA  00EB               	movwf	??_CDCTxService^(0+256)
  4080  03AB  086B               	movf	??_CDCTxService^(0+256),w
  4081  03AC  0023               	movlb	3	; select bank3
  4082  03AD  07CA               	addwf	_pCDCDst^(0+384),f
  4083                           
  4084                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  4085  03AE  3001               	movlw	1
  4086  03AF  0022               	movlb	2	; select bank2
  4087  03B0  00EB               	movwf	??_CDCTxService^(0+256)
  4088  03B1  086B               	movf	??_CDCTxService^(0+256),w
  4089  03B2  0023               	movlb	3	; select bank3
  4090  03B3  07CC               	addwf	_pCDCSrc^(0+384),f
  4091                           
  4092                           ;usb_device_cdc.c: 912: i--;
  4093  03B4  3001               	movlw	1
  4094  03B5  02E7               	subwf	CDCTxService@i^(0+384),f
  4095  03B6                     l4561:	
  4096  03B6  0867               	movf	CDCTxService@i^(0+384),w
  4097  03B7  1D03               	btfss	3,2
  4098  03B8  2B9B               	goto	l4553
  4099  03B9                     l4563:	
  4100                           
  4101                           ;usb_device_cdc.c: 913: }
  4102                           ;usb_device_cdc.c: 914: }
  4103                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  4104  03B9  085A               	movf	_cdc_tx_len^(0+384),w
  4105  03BA  1D03               	btfss	3,2
  4106  03BB  2BC8               	goto	l4571
  4107                           
  4108                           ;usb_device_cdc.c: 921: {
  4109                           ;usb_device_cdc.c: 922: if(byte_to_send == 64)
  4110  03BC  3040               	movlw	64
  4111  03BD  0668               	xorwf	CDCTxService@byte_to_send^(0+384),w
  4112  03BE  1D03               	btfss	3,2
  4113  03BF  2BC2               	goto	l4569
  4114                           
  4115                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  4116  03C0  3002               	movlw	2
  4117  03C1  2BC3               	goto	L2
  4118  03C2                     l4569:	
  4119                           
  4120                           ;usb_device_cdc.c: 924: else
  4121                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  4122  03C2  3003               	movlw	3
  4123  03C3                     L2:	
  4124  03C3  0022               	movlb	2	; select bank2
  4125  03C4  00EB               	movwf	??_CDCTxService^(0+256)
  4126  03C5  086B               	movf	??_CDCTxService^(0+256),w
  4127  03C6  0021               	movlb	1	; select bank1
  4128  03C7  00E2               	movwf	_cdc_trf_state^(0+128)
  4129  03C8                     l4571:	
  4130                           
  4131                           ;usb_device_cdc.c: 926: }
  4132                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  4133  03C8  0022               	movlb	2	; select bank2
  4134  03C9  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  4135  03CA  0AE0               	incf	USBTransferOnePacket@dir^(0+256),f
  4136  03CB  30A0               	movlw	160
  4137  03CC  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  4138  03CD  3000               	movlw	0
  4139  03CE  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  4140  03CF  0023               	movlb	3	; select bank3
  4141  03D0  0868               	movf	CDCTxService@byte_to_send^(0+384),w
  4142  03D1  0022               	movlb	2	; select bank2
  4143  03D2  00EB               	movwf	??_CDCTxService^(0+256)
  4144  03D3  086B               	movf	??_CDCTxService^(0+256),w
  4145  03D4  00E3               	movwf	USBTransferOnePacket@len^(0+256)
  4146  03D5  3002               	movlw	2
  4147  03D6  318E  26EF         	fcall	_USBTransferOnePacket
  4148  03D8  0022               	movlb	2	; select bank2
  4149  03D9  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  4150  03DA  0023               	movlb	3	; select bank3
  4151  03DB  00C7               	movwf	(_CDCDataInHandle+1)^(0+384)
  4152  03DC  0022               	movlb	2	; select bank2
  4153  03DD  0860               	movf	?_USBTransferOnePacket^(0+256),w
  4154  03DE  0023               	movlb	3	; select bank3
  4155  03DF  00C6               	movwf	_CDCDataInHandle^(0+384)
  4156  03E0                     l4573:	
  4157                           
  4158                           ;usb_device_cdc.c: 929: }
  4159                           ;usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  4160  03E0  0021               	movlb	1	; select bank1
  4161  03E1  1512               	bsf	18,2	;volatile
  4162  03E2  0008               	return
  4163  03E3                     __end_of_CDCTxService:	
  4164                           
  4165                           	psect	text14
  4166  0A06                     __ptext14:	
  4167 ;; *************** function _CDCInitEP *****************
  4168 ;; Defined at:
  4169 ;;		line 294 in file "../lib/usb/src/usb_device_cdc.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;		None
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;		None
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      void 
  4176 ;; Registers used:
  4177 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4185 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4186 ;;      Totals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4187 ;;Total ram usage:        1 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:   12
  4190 ;; This function calls:
  4191 ;;		_USBEnableEndpoint
  4192 ;;		_USBTransferOnePacket
  4193 ;; This function is called by:
  4194 ;;		_main
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           
  4199                           ;psect for function _CDCInitEP
  4200  0A06                     _CDCInitEP:	
  4201                           
  4202                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
  4203                           
  4204                           ;incstack = 0
  4205                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4206  0A06  3000               	movlw	0
  4207  0A07  0023               	movlb	3	; select bank3
  4208  0A08  00E1               	movwf	(_line_coding+3)^(0+384)
  4209  0A09  3000               	movlw	0
  4210  0A0A  00E0               	movwf	(_line_coding+2)^(0+384)
  4211  0A0B  304B               	movlw	75
  4212  0A0C  00DF               	movwf	(_line_coding+1)^(0+384)
  4213  0A0D  3000               	movlw	0
  4214  0A0E  00DE               	movwf	_line_coding^(0+384)
  4215                           
  4216                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  4217  0A0F  01E2               	clrf	(_line_coding^(0+384)+4)
  4218                           
  4219                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  4220  0A10  01E3               	clrf	(_line_coding^(0+384)+5)
  4221                           
  4222                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  4223  0A11  3008               	movlw	8
  4224  0A12  00E7               	movwf	??_CDCInitEP^(0+384)
  4225  0A13  0867               	movf	??_CDCInitEP^(0+384),w
  4226  0A14  00E4               	movwf	(_line_coding^(0+384)+6)
  4227                           
  4228                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  4229  0A15  01D9               	clrf	_cdc_rx_len^(0+384)
  4230                           
  4231                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  4232  0A16  301A               	movlw	26
  4233  0A17  00E7               	movwf	??_CDCInitEP^(0+384)
  4234  0A18  0867               	movf	??_CDCInitEP^(0+384),w
  4235  0A19  0022               	movlb	2	; select bank2
  4236  0A1A  00E7               	movwf	USBEnableEndpoint@options^(0+256)
  4237  0A1B  3001               	movlw	1
  4238  0A1C  3188  20C0  318A   	fcall	_USBEnableEndpoint
  4239                           
  4240                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  4241  0A1F  301E               	movlw	30
  4242  0A20  0023               	movlb	3	; select bank3
  4243  0A21  00E7               	movwf	??_CDCInitEP^(0+384)
  4244  0A22  0867               	movf	??_CDCInitEP^(0+384),w
  4245  0A23  0022               	movlb	2	; select bank2
  4246  0A24  00E7               	movwf	USBEnableEndpoint@options^(0+256)
  4247  0A25  3002               	movlw	2
  4248  0A26  3188  20C0  318A   	fcall	_USBEnableEndpoint
  4249                           
  4250                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  4251  0A29  0022               	movlb	2	; select bank2
  4252  0A2A  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  4253  0A2B  3020               	movlw	32
  4254  0A2C  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  4255  0A2D  3001               	movlw	1
  4256  0A2E  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  4257  0A2F  3040               	movlw	64
  4258  0A30  0023               	movlb	3	; select bank3
  4259  0A31  00E7               	movwf	??_CDCInitEP^(0+384)
  4260  0A32  0867               	movf	??_CDCInitEP^(0+384),w
  4261  0A33  0022               	movlb	2	; select bank2
  4262  0A34  00E3               	movwf	USBTransferOnePacket@len^(0+256)
  4263  0A35  3002               	movlw	2
  4264  0A36  318E  26EF         	fcall	_USBTransferOnePacket
  4265  0A38  0022               	movlb	2	; select bank2
  4266  0A39  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  4267  0A3A  0023               	movlb	3	; select bank3
  4268  0A3B  00C9               	movwf	(_CDCDataOutHandle+1)^(0+384)
  4269  0A3C  0022               	movlb	2	; select bank2
  4270  0A3D  0860               	movf	?_USBTransferOnePacket^(0+256),w
  4271  0A3E  0023               	movlb	3	; select bank3
  4272  0A3F  00C8               	movwf	_CDCDataOutHandle^(0+384)
  4273                           
  4274                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  4275  0A40  01C6               	clrf	_CDCDataInHandle^(0+384)
  4276  0A41  01C7               	clrf	(_CDCDataInHandle+1)^(0+384)
  4277                           
  4278                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
  4279  0A42  0021               	movlb	1	; select bank1
  4280  0A43  01E2               	clrf	_cdc_trf_state^(0+128)
  4281  0A44  0008               	return
  4282  0A45                     __end_of_CDCInitEP:	
  4283                           
  4284                           	psect	text15
  4285  0EEF                     __ptext15:	
  4286 ;; *************** function _USBTransferOnePacket *****************
  4287 ;; Defined at:
  4288 ;;		line 995 in file "../lib/usb/src/usb_device.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;  ep              1    wreg     unsigned char 
  4291 ;;  dir             1    0[BANK2 ] unsigned char 
  4292 ;;  data            2    1[BANK2 ] PTR unsigned char 
  4293 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  4294 ;;  len             1    3[BANK2 ] unsigned char 
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;  ep              1    8[BANK2 ] unsigned char 
  4297 ;;  handle          2    9[BANK2 ] PTR volatile struct __BD
  4298 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  2    0[BANK2 ] PTR void 
  4301 ;; Registers used:
  4302 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4308 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4309 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4310 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4311 ;;      Totals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0
  4312 ;;Total ram usage:       11 bytes
  4313 ;; Hardware stack levels used:    1
  4314 ;; Hardware stack levels required when called:   10
  4315 ;; This function calls:
  4316 ;;		Nothing
  4317 ;; This function is called by:
  4318 ;;		_CDCInitEP
  4319 ;;		_CDCTxService
  4320 ;;		_USBCDCEventHandler
  4321 ;;		_getsUSBUSART
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           
  4326                           ;psect for function _USBTransferOnePacket
  4327  0EEF                     _USBTransferOnePacket:	
  4328                           
  4329                           ;incstack = 0
  4330                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  4331                           ;USBTransferOnePacket@ep stored from wreg
  4332  0EEF  0022               	movlb	2	; select bank2
  4333  0EF0  00E8               	movwf	USBTransferOnePacket@ep^(0+256)
  4334                           
  4335                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  4336                           ;usb_device.c: 1000: if(dir != 0)
  4337  0EF1  0860               	movf	USBTransferOnePacket@dir^(0+256),w
  4338  0EF2  1903               	btfsc	3,2
  4339  0EF3  2EFD               	goto	l4313
  4340                           
  4341                           ;usb_device.c: 1001: {
  4342                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  4343  0EF4  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  4344  0EF5  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  4345  0EF6  0086               	movwf	6
  4346  0EF7  3001               	movlw	1	; select bank3/4
  4347  0EF8  0087               	movwf	7
  4348  0EF9  3F40               	moviw [0]fsr1
  4349  0EFA  00E9               	movwf	USBTransferOnePacket@handle^(0+256)
  4350  0EFB  3F41               	moviw [1]fsr1
  4351  0EFC  2F05               	goto	L3
  4352  0EFD                     l4313:	
  4353                           ;usb_device.c: 1004: }
  4354                           
  4355                           
  4356                           ;usb_device.c: 1005: else
  4357                           ;usb_device.c: 1006: {
  4358                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  4359  0EFD  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  4360  0EFE  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4361  0EFF  0086               	movwf	6
  4362  0F00  3001               	movlw	1	; select bank3/4
  4363  0F01  0087               	movwf	7
  4364  0F02  3F40               	moviw [0]fsr1
  4365  0F03  00E9               	movwf	USBTransferOnePacket@handle^(0+256)
  4366  0F04  3F41               	moviw [1]fsr1
  4367  0F05                     L3:	
  4368  0F05  00EA               	movwf	(USBTransferOnePacket@handle+1)^(0+256)
  4369                           
  4370                           ;usb_device.c: 1009: }
  4371                           ;usb_device.c: 1013: if(handle == 0)
  4372  0F06  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  4373  0F07  046A               	iorwf	(USBTransferOnePacket@handle+1)^(0+256),w
  4374  0F08  1D03               	btfss	3,2
  4375  0F09  2F0D               	goto	l4321
  4376                           
  4377                           ;usb_device.c: 1014: {
  4378                           ;usb_device.c: 1015: return 0;
  4379  0F0A  01E0               	clrf	?_USBTransferOnePacket^(0+256)
  4380  0F0B  01E1               	clrf	(?_USBTransferOnePacket+1)^(0+256)
  4381  0F0C  0008               	return
  4382  0F0D                     l4321:	
  4383                           
  4384                           ;usb_device.c: 1016: }
  4385                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  4386  0F0D  30FF               	movlw	255
  4387  0F0E  0561               	andwf	USBTransferOnePacket@data^(0+256),w
  4388  0F0F  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4389  0F10  307F               	movlw	127
  4390  0F11  0562               	andwf	(USBTransferOnePacket@data+1)^(0+256),w
  4391  0F12  00E5               	movwf	(??_USBTransferOnePacket+1)^(0+256)
  4392  0F13  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  4393  0F14  0086               	movwf	6
  4394  0F15  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  4395  0F16  0087               	movwf	7
  4396  0F17  3142               	addfsr 1,2
  4397  0F18  0864               	movf	??_USBTransferOnePacket^(0+256),w
  4398  0F19  3FC0               	movwi [0]fsr1
  4399  0F1A  0865               	movf	(??_USBTransferOnePacket^(0+256)+1),w
  4400  0F1B  3FC1               	movwi [1]fsr1
  4401                           
  4402                           ;usb_device.c: 1030: handle->CNT = len;
  4403  0F1C  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  4404  0F1D  3E01               	addlw	1
  4405  0F1E  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4406  0F1F  3000               	movlw	0
  4407  0F20  3D6A               	addwfc	(USBTransferOnePacket@handle+1)^(0+256),w
  4408  0F21  00E5               	movwf	(??_USBTransferOnePacket+1)^(0+256)
  4409  0F22  0864               	movf	??_USBTransferOnePacket^(0+256),w
  4410  0F23  0086               	movwf	6
  4411  0F24  0865               	movf	(??_USBTransferOnePacket+1)^(0+256),w
  4412  0F25  0087               	movwf	7
  4413  0F26  0863               	movf	USBTransferOnePacket@len^(0+256),w
  4414  0F27  0081               	movwf	1
  4415                           
  4416                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  4417  0F28  3040               	movlw	64
  4418  0F29  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4419  0F2A  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  4420  0F2B  0086               	movwf	6
  4421  0F2C  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  4422  0F2D  0087               	movwf	7
  4423  0F2E  0864               	movf	??_USBTransferOnePacket^(0+256),w
  4424  0F2F  0581               	andwf	1,f
  4425                           
  4426                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  4427  0F30  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  4428  0F31  0086               	movwf	6
  4429  0F32  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  4430  0F33  0087               	movwf	7
  4431  0F34  1581               	bsf	1,3
  4432                           
  4433                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  4434  0F35  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  4435  0F36  0086               	movwf	6
  4436  0F37  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  4437  0F38  0087               	movwf	7
  4438  0F39  1781               	bsf	1,7
  4439                           
  4440                           ;usb_device.c: 1036: if(dir != 0)
  4441  0F3A  0860               	movf	USBTransferOnePacket@dir^(0+256),w
  4442  0F3B  1903               	btfsc	3,2
  4443  0F3C  2F56               	goto	l4331
  4444                           
  4445                           ;usb_device.c: 1037: {
  4446                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  4447  0F3D  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  4448  0F3E  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  4449  0F3F  0086               	movwf	6
  4450  0F40  3001               	movlw	1	; select bank3/4
  4451  0F41  0087               	movwf	7
  4452  0F42  3F40               	moviw [0]fsr1
  4453  0F43  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4454  0F44  3F41               	moviw [1]fsr1
  4455  0F45  00E5               	movwf	(??_USBTransferOnePacket^(0+256)+1)
  4456  0F46  3004               	movlw	4
  4457  0F47  0664               	xorwf	??_USBTransferOnePacket^(0+256),w
  4458  0F48  00E6               	movwf	(??_USBTransferOnePacket+2)^(0+256)
  4459  0F49  3000               	movlw	0
  4460  0F4A  0665               	xorwf	(??_USBTransferOnePacket+1)^(0+256),w
  4461  0F4B  00E7               	movwf	(??_USBTransferOnePacket+3)^(0+256)
  4462  0F4C  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  4463  0F4D  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  4464  0F4E  0086               	movwf	6
  4465  0F4F  3001               	movlw	1	; select bank3/4
  4466  0F50  0087               	movwf	7
  4467  0F51  0866               	movf	(??_USBTransferOnePacket+2)^(0+256),w
  4468  0F52  3FC0               	movwi [0]fsr1
  4469  0F53  0867               	movf	(??_USBTransferOnePacket+3)^(0+256),w
  4470  0F54  3FC1               	movwi [1]fsr1
  4471                           
  4472                           ;usb_device.c: 1040: }
  4473  0F55  2F6E               	goto	l4333
  4474  0F56                     l4331:	
  4475                           
  4476                           ;usb_device.c: 1041: else
  4477                           ;usb_device.c: 1042: {
  4478                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  4479  0F56  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  4480  0F57  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4481  0F58  0086               	movwf	6
  4482  0F59  3001               	movlw	1	; select bank3/4
  4483  0F5A  0087               	movwf	7
  4484  0F5B  3F40               	moviw [0]fsr1
  4485  0F5C  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4486  0F5D  3F41               	moviw [1]fsr1
  4487  0F5E  00E5               	movwf	(??_USBTransferOnePacket^(0+256)+1)
  4488  0F5F  3004               	movlw	4
  4489  0F60  0664               	xorwf	??_USBTransferOnePacket^(0+256),w
  4490  0F61  00E6               	movwf	(??_USBTransferOnePacket+2)^(0+256)
  4491  0F62  3000               	movlw	0
  4492  0F63  0665               	xorwf	(??_USBTransferOnePacket+1)^(0+256),w
  4493  0F64  00E7               	movwf	(??_USBTransferOnePacket+3)^(0+256)
  4494  0F65  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  4495  0F66  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4496  0F67  0086               	movwf	6
  4497  0F68  3001               	movlw	1	; select bank3/4
  4498  0F69  0087               	movwf	7
  4499  0F6A  0866               	movf	(??_USBTransferOnePacket+2)^(0+256),w
  4500  0F6B  3FC0               	movwi [0]fsr1
  4501  0F6C  0867               	movf	(??_USBTransferOnePacket+3)^(0+256),w
  4502  0F6D  3FC1               	movwi [1]fsr1
  4503  0F6E                     l4333:	
  4504                           
  4505                           ;usb_device.c: 1045: }
  4506                           ;usb_device.c: 1046: return (void*)handle;
  4507  0F6E  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  4508  0F6F  00E1               	movwf	(?_USBTransferOnePacket+1)^(0+256)
  4509  0F70  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  4510  0F71  00E0               	movwf	?_USBTransferOnePacket^(0+256)
  4511  0F72  0008               	return
  4512  0F73                     __end_of_USBTransferOnePacket:	
  4513                           
  4514                           	psect	text16
  4515  08C0                     __ptext16:	
  4516 ;; *************** function _USBEnableEndpoint *****************
  4517 ;; Defined at:
  4518 ;;		line 878 in file "../lib/usb/src/usb_device.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;  ep              1    wreg     unsigned char 
  4521 ;;  options         1    7[BANK2 ] unsigned char 
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;  ep              1   12[BANK2 ] unsigned char 
  4524 ;;  p               2   10[BANK2 ] PTR unsigned char 
  4525 ;;		 -> UEP0(1), 
  4526 ;; Return value:  Size  Location     Type
  4527 ;;                  1    wreg      void 
  4528 ;; Registers used:
  4529 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4530 ;; Tracked objects:
  4531 ;;		On entry : 0/0
  4532 ;;		On exit  : 0/0
  4533 ;;		Unchanged: 0/0
  4534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4535 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4536 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4537 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4538 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  4539 ;;Total ram usage:        6 bytes
  4540 ;; Hardware stack levels used:    1
  4541 ;; Hardware stack levels required when called:   11
  4542 ;; This function calls:
  4543 ;;		_USBConfigureEndpoint
  4544 ;; This function is called by:
  4545 ;;		_CDCInitEP
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           
  4550                           ;psect for function _USBEnableEndpoint
  4551  08C0                     _USBEnableEndpoint:	
  4552                           
  4553                           ;incstack = 0
  4554                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4555                           ;USBEnableEndpoint@ep stored from wreg
  4556  08C0  0022               	movlb	2	; select bank2
  4557  08C1  00EC               	movwf	USBEnableEndpoint@ep^(0+256)
  4558                           
  4559                           ;usb_device.c: 880: unsigned char* p;
  4560                           ;usb_device.c: 884: if(options & 0x04)
  4561  08C2  1D67               	btfss	USBEnableEndpoint@options^(0+256),2
  4562  08C3  28C9               	goto	l4301
  4563                           
  4564                           ;usb_device.c: 885: {
  4565                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  4566  08C4  01E0               	clrf	USBConfigureEndpoint@direction^(0+256)
  4567  08C5  086C               	movf	USBEnableEndpoint@ep^(0+256),w
  4568  08C6  3187  27B0  3188   	fcall	_USBConfigureEndpoint
  4569  08C9                     l4301:	
  4570                           
  4571                           ;usb_device.c: 887: }
  4572                           ;usb_device.c: 888: if(options & 0x02)
  4573  08C9  0022               	movlb	2	; select bank2
  4574  08CA  1CE7               	btfss	USBEnableEndpoint@options^(0+256),1
  4575  08CB  28D1               	goto	l4305
  4576                           
  4577                           ;usb_device.c: 889: {
  4578                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  4579  08CC  01E0               	clrf	USBConfigureEndpoint@direction^(0+256)
  4580  08CD  0AE0               	incf	USBConfigureEndpoint@direction^(0+256),f
  4581  08CE  086C               	movf	USBEnableEndpoint@ep^(0+256),w
  4582  08CF  3187  27B0         	fcall	_USBConfigureEndpoint
  4583  08D1                     l4305:	
  4584                           
  4585                           ;usb_device.c: 891: }
  4586                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  4587  08D1  0022               	movlb	2	; select bank2
  4588  08D2  086C               	movf	USBEnableEndpoint@ep^(0+256),w
  4589  08D3  3E98               	addlw	152
  4590  08D4  00E8               	movwf	??_USBEnableEndpoint^(0+256)
  4591  08D5  01E9               	clrf	(??_USBEnableEndpoint^(0+256)+1)
  4592  08D6  300E               	movlw	14
  4593  08D7  3DE9               	addwfc	(??_USBEnableEndpoint^(0+256)+1),f
  4594  08D8  0868               	movf	??_USBEnableEndpoint^(0+256),w
  4595  08D9  00EA               	movwf	USBEnableEndpoint@p^(0+256)
  4596  08DA  0869               	movf	(??_USBEnableEndpoint+1)^(0+256),w
  4597  08DB  00EB               	movwf	(USBEnableEndpoint@p+1)^(0+256)
  4598                           
  4599                           ;usb_device.c: 901: *p = options;
  4600  08DC  086A               	movf	USBEnableEndpoint@p^(0+256),w
  4601  08DD  0086               	movwf	6
  4602  08DE  086B               	movf	(USBEnableEndpoint@p+1)^(0+256),w
  4603  08DF  0087               	movwf	7
  4604  08E0  0867               	movf	USBEnableEndpoint@options^(0+256),w
  4605  08E1  0081               	movwf	1
  4606  08E2  0008               	return
  4607  08E3                     __end_of_USBEnableEndpoint:	
  4608                           
  4609                           	psect	text17
  4610  07B0                     __ptext17:	
  4611 ;; *************** function _USBConfigureEndpoint *****************
  4612 ;; Defined at:
  4613 ;;		line 1543 in file "../lib/usb/src/usb_device.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;  EPNum           1    wreg     unsigned char 
  4616 ;;  direction       1    0[BANK2 ] unsigned char 
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;  EPNum           1    5[BANK2 ] unsigned char 
  4619 ;;  handle          1    6[BANK2 ] PTR volatile struct __BD
  4620 ;;		 -> BDT(48), 
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  1    wreg      void 
  4623 ;; Registers used:
  4624 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4630 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4631 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4632 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4633 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0
  4634 ;;Total ram usage:        7 bytes
  4635 ;; Hardware stack levels used:    1
  4636 ;; Hardware stack levels required when called:   10
  4637 ;; This function calls:
  4638 ;;		Nothing
  4639 ;; This function is called by:
  4640 ;;		_USBEnableEndpoint
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           
  4645                           ;psect for function _USBConfigureEndpoint
  4646  07B0                     _USBConfigureEndpoint:	
  4647                           
  4648                           ;incstack = 0
  4649                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  4650                           ;USBConfigureEndpoint@EPNum stored from wreg
  4651  07B0  0022               	movlb	2	; select bank2
  4652  07B1  00E5               	movwf	USBConfigureEndpoint@EPNum^(0+256)
  4653                           
  4654                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  4655                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  4656  07B2  3020               	movlw	32
  4657  07B3  00E1               	movwf	??_USBConfigureEndpoint^(0+256)
  4658  07B4  0861               	movf	??_USBConfigureEndpoint^(0+256),w
  4659  07B5  00E6               	movwf	USBConfigureEndpoint@handle^(0+256)
  4660                           
  4661                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  4662  07B6  0860               	movf	USBConfigureEndpoint@direction^(0+256),w
  4663  07B7  00E1               	movwf	??_USBConfigureEndpoint^(0+256)
  4664  07B8  3001               	movlw	1
  4665  07B9                     u3715:	
  4666  07B9  35E1               	lslf	??_USBConfigureEndpoint^(0+256),f
  4667  07BA  0B89               	decfsz	9,f
  4668  07BB  2FB9               	goto	u3715
  4669  07BC  0865               	movf	USBConfigureEndpoint@EPNum^(0+256),w
  4670  07BD  00E2               	movwf	(??_USBConfigureEndpoint+1)^(0+256)
  4671  07BE  3001               	movlw	1
  4672  07BF                     u3725:	
  4673  07BF  35E2               	lslf	(??_USBConfigureEndpoint+1)^(0+256),f
  4674  07C0  3EFF               	addlw	-1
  4675  07C1  1D03               	skipz
  4676  07C2  2FBF               	goto	u3725
  4677  07C3  3562               	lslf	(??_USBConfigureEndpoint+1)^(0+256),w
  4678  07C4  0761               	addwf	??_USBConfigureEndpoint^(0+256),w
  4679  07C5  00E3               	movwf	(??_USBConfigureEndpoint+2)^(0+256)
  4680  07C6  3001               	movlw	1
  4681  07C7                     u3735:	
  4682  07C7  35E3               	lslf	(??_USBConfigureEndpoint+2)^(0+256),f
  4683  07C8  3EFF               	addlw	-1
  4684  07C9  1D03               	skipz
  4685  07CA  2FC7               	goto	u3735
  4686  07CB  3563               	lslf	(??_USBConfigureEndpoint+2)^(0+256),w
  4687  07CC  00E4               	movwf	(??_USBConfigureEndpoint+3)^(0+256)
  4688  07CD  0864               	movf	(??_USBConfigureEndpoint+3)^(0+256),w
  4689  07CE  07E6               	addwf	USBConfigureEndpoint@handle^(0+256),f
  4690                           
  4691                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  4692  07CF  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  4693  07D0  0086               	movwf	6
  4694  07D1  0187               	clrf	7
  4695  07D2  1381               	bcf	1,7
  4696                           
  4697                           ;usb_device.c: 1557: if(direction == 0)
  4698  07D3  0860               	movf	USBConfigureEndpoint@direction^(0+256),w
  4699  07D4  1D03               	btfss	3,2
  4700  07D5  2FE0               	goto	l4285
  4701                           
  4702                           ;usb_device.c: 1558: {
  4703                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  4704  07D6  3565               	lslf	USBConfigureEndpoint@EPNum^(0+256),w
  4705  07D7  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4706  07D8  0086               	movwf	6
  4707  07D9  3001               	movlw	1	; select bank3/4
  4708  07DA  0087               	movwf	7
  4709  07DB  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  4710  07DC  3FC0               	movwi [0]fsr1
  4711  07DD  3000               	movlw	0
  4712  07DE  3FC1               	movwi [1]fsr1
  4713                           
  4714                           ;usb_device.c: 1560: }
  4715  07DF  2FE9               	goto	l4287
  4716  07E0                     l4285:	
  4717                           
  4718                           ;usb_device.c: 1561: else
  4719                           ;usb_device.c: 1562: {
  4720                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  4721  07E0  3565               	lslf	USBConfigureEndpoint@EPNum^(0+256),w
  4722  07E1  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  4723  07E2  0086               	movwf	6
  4724  07E3  3001               	movlw	1	; select bank3/4
  4725  07E4  0087               	movwf	7
  4726  07E5  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  4727  07E6  3FC0               	movwi [0]fsr1
  4728  07E7  3000               	movlw	0
  4729  07E8  3FC1               	movwi [1]fsr1
  4730  07E9                     l4287:	
  4731                           
  4732                           ;usb_device.c: 1564: }
  4733                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  4734  07E9  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  4735  07EA  0086               	movwf	6
  4736  07EB  0187               	clrf	7
  4737  07EC  1301               	bcf	1,6
  4738                           
  4739                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  4740  07ED  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  4741  07EE  3E04               	addlw	4
  4742  07EF  0086               	movwf	6
  4743  07F0  0187               	clrf	7
  4744  07F1  1701               	bsf	1,6
  4745  07F2  0008               	return
  4746  07F3                     __end_of_USBConfigureEndpoint:	
  4747                           
  4748                           	psect	intentry
  4749  0004                     __pintentry:	
  4750 ;; *************** function _SYS_InterruptHigh *****************
  4751 ;; Defined at:
  4752 ;;		line 105 in file "system.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;		None
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;		None
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  1    wreg      void 
  4759 ;; Registers used:
  4760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4768 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4769 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4770 ;;Total ram usage:        1 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    9
  4773 ;; This function calls:
  4774 ;;		_USBDeviceTasks
  4775 ;; This function is called by:
  4776 ;;		Interrupt level 1
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780  0004                     _SYS_InterruptHigh:	
  4781                           
  4782                           ;incstack = 0
  4783  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4784                           
  4785                           ; Regs used in _SYS_InterruptHigh: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4786  0005  3180               	pagesel	$
  4787  0006  0020               	movlb	0	; select bank0
  4788  0007  087F               	movf	127,w
  4789  0008  0021               	movlb	1	; select bank1
  4790  0009  00EB               	movwf	??_SYS_InterruptHigh^(0+128)
  4791                           
  4792                           ;system.c: 108: USBDeviceTasks();
  4793  000A  3181  216B         	fcall	_USBDeviceTasks
  4794  000C  0021               	movlb	1	; select bank1
  4795  000D  086B               	movf	??_SYS_InterruptHigh^(0+128),w
  4796  000E  0020               	movlb	0	; select bank0
  4797  000F  00FF               	movwf	127
  4798  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4799  0011  0009               	retfie
  4800  0012                     __end_of_SYS_InterruptHigh:	
  4801                           
  4802                           	psect	text19
  4803  016B                     __ptext19:	
  4804 ;; *************** function _USBDeviceTasks *****************
  4805 ;; Defined at:
  4806 ;;		line 477 in file "../lib/usb/src/usb_device.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;		None
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;  i               1   15[BANK0 ] unsigned char 
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  1    wreg      void 
  4813 ;; Registers used:
  4814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4821 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4822 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4823 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4824 ;;Total ram usage:        3 bytes
  4825 ;; Hardware stack levels used:    1
  4826 ;; Hardware stack levels required when called:    8
  4827 ;; This function calls:
  4828 ;;		_USBCtrlEPAllowStatusStage
  4829 ;;		_USBCtrlEPService
  4830 ;;		_USBIncrement1msInternalTimers
  4831 ;;		_USBStallHandler
  4832 ;;		_USBSuspend
  4833 ;;		_USBWakeFromSuspend
  4834 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4835 ;;		i1_USBDeviceInit
  4836 ;; This function is called by:
  4837 ;;		_SYS_InterruptHigh
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           
  4842                           ;psect for function _USBDeviceTasks
  4843  016B                     _USBDeviceTasks:	
  4844                           
  4845                           ;usb_device.c: 479: uint8_t i;
  4846                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  4847                           
  4848                           ;incstack = 0
  4849                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4850  016B  0022               	movlb	2	; select bank2
  4851  016C  036D               	decf	_USBDeviceState^(0+256),w	;volatile
  4852  016D  1D03               	btfss	3,2
  4853  016E  297B               	goto	i1l3735
  4854                           
  4855                           ;usb_device.c: 591: {
  4856                           ;usb_device.c: 601: if(!UCONbits.SE0)
  4857  016F  003D               	movlb	29	; select bank29
  4858  0170  1A8E               	btfsc	14,5	;volatile
  4859  0171  297B               	goto	i1l3735
  4860                           
  4861                           ;usb_device.c: 602: {
  4862                           ;usb_device.c: 608: {UIR = 0;};
  4863  0172  0190               	clrf	16	;volatile
  4864                           
  4865                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  4866  0173  1412               	bsf	18,0	;volatile
  4867                           
  4868                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  4869  0174  1612               	bsf	18,4	;volatile
  4870                           
  4871                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  4872  0175  3002               	movlw	2
  4873  0176  0021               	movlb	1	; select bank1
  4874  0177  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4875  0178  0869               	movf	??_USBDeviceTasks^(0+128),w
  4876  0179  0022               	movlb	2	; select bank2
  4877  017A  00ED               	movwf	_USBDeviceState^(0+256)	;volatile
  4878  017B                     i1l3735:	
  4879                           
  4880                           ;usb_device.c: 617: }
  4881                           ;usb_device.c: 618: }
  4882                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4883  017B  003D               	movlb	29	; select bank29
  4884  017C  1910               	btfsc	16,2	;volatile
  4885  017D  1D12               	btfss	18,2	;volatile
  4886  017E  2988               	goto	i1l3743
  4887                           
  4888                           ;usb_device.c: 635: {
  4889                           ;usb_device.c: 636: (UIR &= 0xFB);
  4890  017F  30FB               	movlw	251
  4891  0180  0021               	movlb	1	; select bank1
  4892  0181  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4893  0182  0869               	movf	??_USBDeviceTasks^(0+128),w
  4894  0183  003D               	movlb	29	; select bank29
  4895  0184  0590               	andwf	16,f	;volatile
  4896                           
  4897                           ;usb_device.c: 640: USBWakeFromSuspend();
  4898  0185  3188  20A0  3181   	fcall	_USBWakeFromSuspend
  4899  0188                     i1l3743:	
  4900                           
  4901                           ;usb_device.c: 642: }
  4902                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  4903  0188  003D               	movlb	29	; select bank29
  4904  0189  1C8E               	btfss	14,1	;volatile
  4905  018A  298E               	goto	i1l184
  4906                           
  4907                           ;usb_device.c: 648: {
  4908                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
  4909  018B  0020               	movlb	0	; select bank0
  4910  018C  1112               	bcf	18,2	;volatile
  4911                           
  4912                           ;usb_device.c: 650: return;
  4913  018D  0008               	return
  4914  018E                     i1l184:	
  4915                           
  4916                           ;usb_device.c: 651: }
  4917                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4918  018E  1810               	btfsc	16,0	;volatile
  4919  018F  1C12               	btfss	18,0	;volatile
  4920  0190  29A1               	goto	i1l3757
  4921                           
  4922                           ;usb_device.c: 664: {
  4923                           ;usb_device.c: 665: USBDeviceInit();
  4924  0191  3184  249B  3181   	fcall	i1_USBDeviceInit
  4925                           
  4926                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  4927  0194  0021               	movlb	1	; select bank1
  4928  0195  1512               	bsf	18,2	;volatile
  4929                           
  4930                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  4931  0196  3004               	movlw	4
  4932  0197  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4933  0198  0869               	movf	??_USBDeviceTasks^(0+128),w
  4934  0199  0022               	movlb	2	; select bank2
  4935  019A  00ED               	movwf	_USBDeviceState^(0+256)	;volatile
  4936                           
  4937                           ;usb_device.c: 681: (UIR &= 0xFE);
  4938  019B  30FE               	movlw	254
  4939  019C  0021               	movlb	1	; select bank1
  4940  019D  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4941  019E  0869               	movf	??_USBDeviceTasks^(0+128),w
  4942  019F  003D               	movlb	29	; select bank29
  4943  01A0  0590               	andwf	16,f	;volatile
  4944  01A1                     i1l3757:	
  4945                           
  4946                           ;usb_device.c: 682: }
  4947                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4948  01A1  1A10               	btfsc	16,4	;volatile
  4949  01A2  1E12               	btfss	18,4	;volatile
  4950  01A3  29A7               	goto	i1l3763
  4951                           
  4952                           ;usb_device.c: 688: {
  4953                           ;usb_device.c: 694: USBSuspend();
  4954  01A4  3188  2061  3181   	fcall	_USBSuspend
  4955  01A7                     i1l3763:	
  4956                           
  4957                           ;usb_device.c: 696: }
  4958                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  4959  01A7  003D               	movlb	29	; select bank29
  4960  01A8  1F10               	btfss	16,6	;volatile
  4961  01A9  29D1               	goto	i1l3779
  4962                           
  4963                           ;usb_device.c: 709: {
  4964                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  4965  01AA  1F12               	btfss	18,6	;volatile
  4966  01AB  29BC               	goto	i1l3769
  4967                           
  4968                           ;usb_device.c: 712: {
  4969                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4970  01AC  3073               	movlw	115
  4971  01AD  0020               	movlb	0	; select bank0
  4972  01AE  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4973  01AF  3000               	movlw	0
  4974  01B0  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4975  01B1  3000               	movlw	0
  4976  01B2  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4977  01B3  3000               	movlw	0
  4978  01B4  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4979  01B5  3001               	movlw	1
  4980  01B6  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4981  01B7  3000               	movlw	0
  4982  01B8  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4983  01B9  3189  21CE  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4984  01BC                     i1l3769:	
  4985                           
  4986                           ;usb_device.c: 714: }
  4987                           ;usb_device.c: 715: (UIR &= 0xBF);
  4988  01BC  30BF               	movlw	191
  4989  01BD  0021               	movlb	1	; select bank1
  4990  01BE  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4991  01BF  0869               	movf	??_USBDeviceTasks^(0+128),w
  4992  01C0  003D               	movlb	29	; select bank29
  4993  01C1  0590               	andwf	16,f	;volatile
  4994                           
  4995                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  4996  01C2  3197  27E8  3181   	fcall	_USBIncrement1msInternalTimers
  4997                           
  4998                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  4999  01C5  0023               	movlb	3	; select bank3
  5000  01C6  0856               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  5001  01C7  1903               	btfsc	3,2
  5002  01C8  29CB               	goto	i1l190
  5003                           
  5004                           ;usb_device.c: 736: {
  5005                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  5006  01C9  3001               	movlw	1
  5007  01CA  02D6               	subwf	_USBStatusStageTimeoutCounter^(0+384),f	;volatile
  5008  01CB                     i1l190:	
  5009                           
  5010                           ;usb_device.c: 738: }
  5011                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  5012  01CB  0856               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  5013  01CC  1D03               	btfss	3,2
  5014  01CD  29D1               	goto	i1l3779
  5015                           
  5016                           ;usb_device.c: 745: {
  5017                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  5018  01CE  318D  257B  3181   	fcall	_USBCtrlEPAllowStatusStage
  5019  01D1                     i1l3779:	
  5020                           
  5021                           ;usb_device.c: 747: }
  5022                           ;usb_device.c: 749: }
  5023                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  5024  01D1  003D               	movlb	29	; select bank29
  5025  01D2  1A90               	btfsc	16,5	;volatile
  5026  01D3  1E92               	btfss	18,5	;volatile
  5027  01D4  29D8               	goto	i1l3785
  5028                           
  5029                           ;usb_device.c: 752: {
  5030                           ;usb_device.c: 753: USBStallHandler();
  5031  01D5  3188  20E3  3181   	fcall	_USBStallHandler
  5032  01D8                     i1l3785:	
  5033                           
  5034                           ;usb_device.c: 754: }
  5035                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  5036  01D8  003D               	movlb	29	; select bank29
  5037  01D9  1890               	btfsc	16,1	;volatile
  5038  01DA  1C92               	btfss	18,1	;volatile
  5039  01DB  29EE               	goto	i1l3793
  5040                           
  5041                           ;usb_device.c: 757: {
  5042                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  5043  01DC  30FF               	movlw	255
  5044  01DD  0020               	movlb	0	; select bank0
  5045  01DE  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5046  01DF  307F               	movlw	127
  5047  01E0  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5048  01E1  3000               	movlw	0
  5049  01E2  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5050  01E3  3000               	movlw	0
  5051  01E4  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5052  01E5  3001               	movlw	1
  5053  01E6  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5054  01E7  3000               	movlw	0
  5055  01E8  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5056  01E9  3189  21CE  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5057                           
  5058                           ;usb_device.c: 759: {UEIR = 0;};
  5059  01EC  003D               	movlb	29	; select bank29
  5060  01ED  0193               	clrf	19	;volatile
  5061  01EE                     i1l3793:	
  5062                           
  5063                           ;usb_device.c: 767: }
  5064                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  5065  01EE  3004               	movlw	4
  5066  01EF  0022               	movlb	2	; select bank2
  5067  01F0  026D               	subwf	_USBDeviceState^(0+256),w	;volatile
  5068  01F1  1803               	skipnc
  5069  01F2  29F6               	goto	i1l194
  5070                           
  5071                           ;usb_device.c: 775: {
  5072                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  5073  01F3  0020               	movlb	0	; select bank0
  5074  01F4  1112               	bcf	18,2	;volatile
  5075                           
  5076                           ;usb_device.c: 777: return;
  5077  01F5  0008               	return
  5078  01F6                     i1l194:	
  5079                           
  5080                           ;usb_device.c: 778: }
  5081                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  5082  01F6  003D               	movlb	29	; select bank29
  5083  01F7  1D92               	btfss	18,3	;volatile
  5084  01F8  2A4F               	goto	i1l195
  5085                           
  5086                           ;usb_device.c: 784: {
  5087                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  5088  01F9  0020               	movlb	0	; select bank0
  5089  01FA  01EF               	clrf	USBDeviceTasks@i
  5090  01FB  3004               	movlw	4
  5091  01FC  026F               	subwf	USBDeviceTasks@i,w
  5092  01FD  1803               	btfsc	3,0
  5093  01FE  2A4F               	goto	i1l195
  5094  01FF                     i1l196:	
  5095                           
  5096                           ;usb_device.c: 786: {
  5097                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  5098  01FF  003D               	movlb	29	; select bank29
  5099  0200  1D90               	btfss	16,3	;volatile
  5100  0201  2A4F               	goto	i1l195
  5101                           
  5102                           ;usb_device.c: 788: {
  5103                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  5104  0202  080F               	movf	15,w	;volatile
  5105  0203  0021               	movlb	1	; select bank1
  5106  0204  00E9               	movwf	??_USBDeviceTasks^(0+128)
  5107  0205  0869               	movf	??_USBDeviceTasks^(0+128),w
  5108  0206  00E5               	movwf	_USTATcopy^(0+128)	;volatile
  5109                           
  5110                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  5111  0207  0C65               	rrf	_USTATcopy^(0+128),w	;volatile
  5112  0208  00E9               	movwf	??_USBDeviceTasks^(0+128)
  5113  0209  0CE9               	rrf	??_USBDeviceTasks^(0+128),f
  5114  020A  0C69               	rrf	??_USBDeviceTasks^(0+128),w
  5115  020B  390F               	andlw	15
  5116  020C  00EA               	movwf	(??_USBDeviceTasks+1)^(0+128)
  5117  020D  086A               	movf	(??_USBDeviceTasks+1)^(0+128),w
  5118  020E  0023               	movlb	3	; select bank3
  5119  020F  00DC               	movwf	_endpoint_number^(0+384)	;volatile
  5120                           
  5121                           ;usb_device.c: 793: (UIR &= 0xF7);
  5122  0210  30F7               	movlw	247
  5123  0211  0021               	movlb	1	; select bank1
  5124  0212  00E9               	movwf	??_USBDeviceTasks^(0+128)
  5125  0213  0869               	movf	??_USBDeviceTasks^(0+128),w
  5126  0214  003D               	movlb	29	; select bank29
  5127  0215  0590               	andwf	16,f	;volatile
  5128                           
  5129                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  5130  0216  0021               	movlb	1	; select bank1
  5131  0217  1965               	btfsc	_USTATcopy^(0+128),2	;volatile
  5132  0218  2A1D               	goto	i1l3813
  5133                           
  5134                           ;usb_device.c: 799: {
  5135                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  5136  0219  0023               	movlb	3	; select bank3
  5137  021A  085C               	movf	_endpoint_number^(0+384),w	;volatile
  5138  021B  3EC3               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5139  021C  2A20               	goto	L4
  5140  021D                     i1l3813:	
  5141                           ;usb_device.c: 801: }
  5142                           
  5143                           
  5144                           ;usb_device.c: 802: else
  5145                           ;usb_device.c: 803: {
  5146                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  5147  021D  0023               	movlb	3	; select bank3
  5148  021E  085C               	movf	_endpoint_number^(0+384),w	;volatile
  5149  021F  3EC0               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5150  0220                     L4:	
  5151  0220  0086               	movwf	6
  5152  0221  3001               	movlw	1	; select bank3/4
  5153  0222  0087               	movwf	7
  5154  0223  0801               	movf	1,w
  5155  0224  3901               	andlw	1
  5156  0225  0021               	movlb	1	; select bank1
  5157  0226  00E9               	movwf	??_USBDeviceTasks^(0+128)
  5158  0227  3001               	movlw	1
  5159  0228  06E9               	xorwf	??_USBDeviceTasks^(0+128),f
  5160  0229  0801               	movf	1,w
  5161  022A  0669               	xorwf	??_USBDeviceTasks^(0+128),w
  5162  022B  39FE               	andlw	-2
  5163  022C  0669               	xorwf	??_USBDeviceTasks^(0+128),w
  5164  022D  0081               	movwf	1
  5165                           
  5166                           ;usb_device.c: 805: }
  5167                           ;usb_device.c: 810: if(endpoint_number == 0)
  5168  022E  0023               	movlb	3	; select bank3
  5169  022F  085C               	movf	_endpoint_number^(0+384),w	;volatile
  5170  0230  1D03               	btfss	3,2
  5171  0231  2A36               	goto	i1l3819
  5172                           
  5173                           ;usb_device.c: 811: {
  5174                           ;usb_device.c: 812: USBCtrlEPService();
  5175  0232  318A  22DB  3181   	fcall	_USBCtrlEPService
  5176                           
  5177                           ;usb_device.c: 813: }
  5178  0235  2A45               	goto	i1l3821
  5179  0236                     i1l3819:	
  5180                           
  5181                           ;usb_device.c: 814: else
  5182                           ;usb_device.c: 815: {
  5183                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  5184  0236  3072               	movlw	114
  5185  0237  0020               	movlb	0	; select bank0
  5186  0238  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5187  0239  3000               	movlw	0
  5188  023A  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5189  023B  30E5               	movlw	low _USTATcopy
  5190  023C  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5191  023D  3000               	movlw	high _USTATcopy
  5192  023E  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5193  023F  3000               	movlw	0
  5194  0240  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5195  0241  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5196  0242  3189  21CE  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5197  0245                     i1l3821:	
  5198                           ;usb_device.c: 819: else
  5199                           ;usb_device.c: 820: {
  5200                           ;usb_device.c: 821: break;
  5201                           
  5202                           ;usb_device.c: 817: }
  5203                           ;usb_device.c: 818: }
  5204                           
  5205  0245  3001               	movlw	1
  5206  0246  0021               	movlb	1	; select bank1
  5207  0247  00E9               	movwf	??_USBDeviceTasks^(0+128)
  5208  0248  0869               	movf	??_USBDeviceTasks^(0+128),w
  5209  0249  0020               	movlb	0	; select bank0
  5210  024A  07EF               	addwf	USBDeviceTasks@i,f
  5211  024B  3004               	movlw	4
  5212  024C  026F               	subwf	USBDeviceTasks@i,w
  5213  024D  1C03               	skipc
  5214  024E  29FF               	goto	i1l196
  5215  024F                     i1l195:	
  5216                           
  5217                           ;usb_device.c: 822: }
  5218                           ;usb_device.c: 823: }
  5219                           ;usb_device.c: 824: }
  5220                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  5221  024F  0020               	movlb	0	; select bank0
  5222  0250  1112               	bcf	18,2	;volatile
  5223  0251  0008               	return
  5224  0252                     __end_of_USBDeviceTasks:	
  5225                           
  5226                           	psect	text20
  5227  049B                     __ptext20:	
  5228 ;; *************** function i1_USBDeviceInit *****************
  5229 ;; Defined at:
  5230 ;;		line 277 in file "../lib/usb/src/usb_device.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;		None
  5233 ;; Auto vars:     Size  Location     Type
  5234 ;;  USBDeviceIni    2    1[COMMON] PTR unsigned char 
  5235 ;;		 -> UEP1(1), 
  5236 ;;  USBDeviceIni    1    4[COMMON] unsigned char 
  5237 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  1    wreg      void 
  5240 ;; Registers used:
  5241 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5248 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5249 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5250 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5251 ;;Total ram usage:        5 bytes
  5252 ;; Hardware stack levels used:    1
  5253 ;; This function calls:
  5254 ;;		Nothing
  5255 ;; This function is called by:
  5256 ;;		_USBDeviceTasks
  5257 ;; This function uses a non-reentrant model
  5258 ;;
  5259                           
  5260                           
  5261                           ;psect for function i1_USBDeviceInit
  5262  049B                     i1_USBDeviceInit:	
  5263                           
  5264                           ;usb_device.c: 279: uint8_t i;
  5265                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  5266                           
  5267                           ;incstack = 0
  5268                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  5269  049B  0021               	movlb	1	; select bank1
  5270  049C  1112               	bcf	18,2	;volatile
  5271                           
  5272                           ;usb_device.c: 285: ;
  5273                           ;usb_device.c: 288: {UEIR = 0;};
  5274  049D  003D               	movlb	29	; select bank29
  5275  049E  0193               	clrf	19	;volatile
  5276                           
  5277                           ;usb_device.c: 291: {UIR = 0;};
  5278  049F  0190               	clrf	16	;volatile
  5279                           
  5280                           ;usb_device.c: 294: UEP0 = 0;
  5281  04A0  0198               	clrf	24	;volatile
  5282                           
  5283                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  5284  04A1  300E               	movlw	14
  5285  04A2  00F2               	movwf	i1USBDeviceInit@p+1
  5286  04A3  3099               	movlw	153
  5287  04A4  00F1               	movwf	i1USBDeviceInit@p
  5288  04A5  01F3               	clrf	i1USBDeviceInit@i_821
  5289  04A6  3002               	movlw	2
  5290  04A7  0273               	subwf	i1USBDeviceInit@i_821,w
  5291  04A8  1803               	btfsc	3,0
  5292  04A9  2CBB               	goto	i1l3543
  5293  04AA                     i1l3535:	
  5294  04AA  0871               	movf	i1USBDeviceInit@p,w
  5295  04AB  0086               	movwf	6
  5296  04AC  0872               	movf	i1USBDeviceInit@p+1,w
  5297  04AD  0087               	movwf	7
  5298  04AE  0181               	clrf	1
  5299  04AF  3001               	movlw	1
  5300  04B0  07F1               	addwf	i1USBDeviceInit@p,f
  5301  04B1  3000               	movlw	0
  5302  04B2  3DF2               	addwfc	i1USBDeviceInit@p+1,f
  5303  04B3  3001               	movlw	1
  5304  04B4  00F0               	movwf	??i1_USBDeviceInit
  5305  04B5  0870               	movf	??i1_USBDeviceInit,w
  5306  04B6  07F3               	addwf	i1USBDeviceInit@i_821,f
  5307  04B7  3002               	movlw	2
  5308  04B8  0273               	subwf	i1USBDeviceInit@i_821,w
  5309  04B9  1C03               	skipc
  5310  04BA  2CAA               	goto	i1l3535
  5311  04BB                     i1l3543:	
  5312                           
  5313                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  5314  04BB  3016               	movlw	22
  5315  04BC  003D               	movlb	29	; select bank29
  5316  04BD  0091               	movwf	17	;volatile
  5317  04BE  309F               	movlw	159
  5318  04BF  0097               	movwf	23	;volatile
  5319  04C0  307B               	movlw	123
  5320  04C1  0092               	movwf	18	;volatile
  5321                           
  5322                           ;usb_device.c: 301: ;
  5323                           ;usb_device.c: 304: ;
  5324                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  5325  04C2  01F4               	clrf	i1USBDeviceInit@i
  5326  04C3  300C               	movlw	12
  5327  04C4  0274               	subwf	i1USBDeviceInit@i,w
  5328  04C5  1803               	btfsc	3,0
  5329  04C6  2CE0               	goto	i1l173
  5330  04C7                     i1l3551:	
  5331                           
  5332                           ;usb_device.c: 308: {
  5333                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  5334  04C7  0874               	movf	i1USBDeviceInit@i,w
  5335  04C8  00F0               	movwf	??i1_USBDeviceInit
  5336  04C9  3001               	movlw	1
  5337  04CA                     u291_25:	
  5338  04CA  35F0               	lslf	??i1_USBDeviceInit,f
  5339  04CB  3EFF               	addlw	-1
  5340  04CC  1D03               	skipz
  5341  04CD  2CCA               	goto	u291_25
  5342  04CE  3570               	lslf	??i1_USBDeviceInit,w
  5343  04CF  3E20               	addlw	32
  5344  04D0  0086               	movwf	6
  5345  04D1  0187               	clrf	7
  5346  04D2  3000               	movlw	0
  5347  04D3  3FC0               	movwi [0]fsr1
  5348  04D4  3000               	movlw	0
  5349  04D5  3FC1               	movwi [1]fsr1
  5350  04D6  3FC2               	movwi [2]fsr1
  5351  04D7  3FC3               	movwi [3]fsr1
  5352  04D8  3001               	movlw	1
  5353  04D9  00F0               	movwf	??i1_USBDeviceInit
  5354  04DA  0870               	movf	??i1_USBDeviceInit,w
  5355  04DB  07F4               	addwf	i1USBDeviceInit@i,f
  5356  04DC  300C               	movlw	12
  5357  04DD  0274               	subwf	i1USBDeviceInit@i,w
  5358  04DE  1C03               	skipc
  5359  04DF  2CC7               	goto	i1l3551
  5360  04E0                     i1l173:	
  5361                           
  5362                           ;usb_device.c: 310: }
  5363                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  5364  04E0  003D               	movlb	29	; select bank29
  5365  04E1  170E               	bsf	14,6	;volatile
  5366                           
  5367                           ;usb_device.c: 316: UADDR = 0x00;
  5368  04E2  0196               	clrf	22	;volatile
  5369                           
  5370                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  5371  04E3  120E               	bcf	14,4	;volatile
  5372                           
  5373                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  5374  04E4  130E               	bcf	14,6	;volatile
  5375  04E5                     i1l3563:	
  5376                           ;usb_device.c: 325: do
  5377                           
  5378                           
  5379                           ;usb_device.c: 326: {
  5380                           ;usb_device.c: 327: (UIR &= 0xF7);
  5381  04E5  30F7               	movlw	247
  5382  04E6  00F0               	movwf	??i1_USBDeviceInit
  5383  04E7  0870               	movf	??i1_USBDeviceInit,w
  5384  04E8  0590               	andwf	16,f	;volatile
  5385                           
  5386                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  5387  04E9  0023               	movlb	3	; select bank3
  5388  04EA  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  5389                           
  5390                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  5391  04EB  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  5392                           
  5393                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  5394  04EC  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  5395  04ED  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  5396                           
  5397                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  5398  04EE  003D               	movlb	29	; select bank29
  5399  04EF  1990               	btfsc	16,3	;volatile
  5400  04F0  2CE5               	goto	i1l3563
  5401                           
  5402                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  5403  04F1  3001               	movlw	1
  5404  04F2  00F0               	movwf	??i1_USBDeviceInit
  5405  04F3  0870               	movf	??i1_USBDeviceInit,w
  5406  04F4  0023               	movlb	3	; select bank3
  5407  04F5  00D4               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5408                           
  5409                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  5410  04F6  3001               	movlw	1
  5411  04F7  00F0               	movwf	??i1_USBDeviceInit
  5412  04F8  0870               	movf	??i1_USBDeviceInit,w
  5413  04F9  00D5               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5414                           
  5415                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  5416  04FA  01D1               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  5417                           
  5418                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  5419  04FB  01D2               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  5420                           
  5421                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  5422  04FC  01D0               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  5423                           
  5424                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  5425  04FD  01F4               	clrf	i1USBDeviceInit@i
  5426  04FE  3003               	movlw	3
  5427  04FF  0274               	subwf	i1USBDeviceInit@i,w
  5428  0500  1803               	btfsc	3,0
  5429  0501  2D26               	goto	i1l3591
  5430  0502                     i1l3585:	
  5431                           
  5432                           ;usb_device.c: 346: {
  5433                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  5434  0502  3574               	lslf	i1USBDeviceInit@i,w
  5435  0503  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  5436  0504  0086               	movwf	6
  5437  0505  3001               	movlw	1	; select bank3/4
  5438  0506  0087               	movwf	7
  5439  0507  3000               	movlw	0
  5440  0508  3FC0               	movwi [0]fsr1
  5441  0509  3FC1               	movwi [1]fsr1
  5442                           
  5443                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  5444  050A  3574               	lslf	i1USBDeviceInit@i,w
  5445  050B  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5446  050C  0086               	movwf	6
  5447  050D  3001               	movlw	1	; select bank3/4
  5448  050E  0087               	movwf	7
  5449  050F  3000               	movlw	0
  5450  0510  3FC0               	movwi [0]fsr1
  5451  0511  3FC1               	movwi [1]fsr1
  5452                           
  5453                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  5454  0512  0874               	movf	i1USBDeviceInit@i,w
  5455  0513  3EC0               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5456  0514  0086               	movwf	6
  5457  0515  3001               	movlw	1	; select bank3/4
  5458  0516  0087               	movwf	7
  5459  0517  0181               	clrf	1
  5460                           
  5461                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  5462  0518  0874               	movf	i1USBDeviceInit@i,w
  5463  0519  3EC3               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5464  051A  0086               	movwf	6
  5465  051B  3001               	movlw	1	; select bank3/4
  5466  051C  0087               	movwf	7
  5467  051D  0181               	clrf	1
  5468  051E  3001               	movlw	1
  5469  051F  00F0               	movwf	??i1_USBDeviceInit
  5470  0520  0870               	movf	??i1_USBDeviceInit,w
  5471  0521  07F4               	addwf	i1USBDeviceInit@i,f
  5472  0522  3003               	movlw	3
  5473  0523  0274               	subwf	i1USBDeviceInit@i,w
  5474  0524  1C03               	skipc
  5475  0525  2D02               	goto	i1l3585
  5476  0526                     i1l3591:	
  5477                           
  5478                           ;usb_device.c: 351: }
  5479                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5480  0526  3028               	movlw	40
  5481  0527  0023               	movlb	3	; select bank3
  5482  0528  00A7               	movwf	_pBDTEntryIn^(0+384)
  5483  0529  3000               	movlw	0
  5484  052A  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  5485                           
  5486                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  5487  052B  3016               	movlw	22
  5488  052C  003D               	movlb	29	; select bank29
  5489  052D  0098               	movwf	24	;volatile
  5490                           
  5491                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5492  052E  3000               	movlw	0
  5493  052F  0020               	movlb	0	; select bank0
  5494  0530  00A3               	movwf	35	;volatile
  5495  0531  3050               	movlw	80
  5496  0532  00A2               	movwf	34	;volatile
  5497                           
  5498                           ;usb_device.c: 359: BDT[0].CNT = 8;
  5499  0533  3008               	movlw	8
  5500  0534  00A1               	movwf	33	;volatile
  5501                           
  5502                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  5503  0535  3004               	movlw	4
  5504  0536  00F0               	movwf	??i1_USBDeviceInit
  5505  0537  0870               	movf	??i1_USBDeviceInit,w
  5506  0538  00A0               	movwf	32	;volatile
  5507                           
  5508                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  5509  0539  17A0               	bsf	32,7	;volatile
  5510                           
  5511                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  5512  053A  0022               	movlb	2	; select bank2
  5513  053B  01EF               	clrf	_USBActiveConfiguration^(0+256)	;volatile
  5514                           
  5515                           ;usb_device.c: 366: USB1msTickCount = 0;
  5516  053C  3000               	movlw	0
  5517  053D  0023               	movlb	3	; select bank3
  5518  053E  00BF               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
  5519  053F  3000               	movlw	0
  5520  0540  00BE               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
  5521  0541  3000               	movlw	0
  5522  0542  00BD               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
  5523  0543  3000               	movlw	0
  5524  0544  00BC               	movwf	_USB1msTickCount^(0+384)	;volatile
  5525                           
  5526                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  5527  0545  01D7               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5528                           
  5529                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  5530  0546  0022               	movlb	2	; select bank2
  5531  0547  01ED               	clrf	_USBDeviceState^(0+256)	;volatile
  5532  0548  0008               	return
  5533  0549                     __end_ofi1_USBDeviceInit:	
  5534                           
  5535                           	psect	text21
  5536  08A0                     __ptext21:	
  5537 ;; *************** function _USBWakeFromSuspend *****************
  5538 ;; Defined at:
  5539 ;;		line 2303 in file "../lib/usb/src/usb_device.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;		None
  5542 ;; Auto vars:     Size  Location     Type
  5543 ;;		None
  5544 ;; Return value:  Size  Location     Type
  5545 ;;                  1    wreg      void 
  5546 ;; Registers used:
  5547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5548 ;; Tracked objects:
  5549 ;;		On entry : 0/0
  5550 ;;		On exit  : 0/0
  5551 ;;		Unchanged: 0/0
  5552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5555 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5556 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5557 ;;Total ram usage:        1 bytes
  5558 ;; Hardware stack levels used:    1
  5559 ;; Hardware stack levels required when called:    4
  5560 ;; This function calls:
  5561 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5562 ;; This function is called by:
  5563 ;;		_USBDeviceTasks
  5564 ;; This function uses a non-reentrant model
  5565 ;;
  5566                           
  5567                           
  5568                           ;psect for function _USBWakeFromSuspend
  5569  08A0                     _USBWakeFromSuspend:	
  5570                           
  5571                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  5572                           
  5573                           ;incstack = 0
  5574                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5575  08A0  0023               	movlb	3	; select bank3
  5576  08A1  01D0               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  5577                           
  5578                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  5579  08A2  3074               	movlw	116
  5580  08A3  0020               	movlb	0	; select bank0
  5581  08A4  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5582  08A5  3000               	movlw	0
  5583  08A6  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5584  08A7  3000               	movlw	0
  5585  08A8  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5586  08A9  3000               	movlw	0
  5587  08AA  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5588  08AB  3000               	movlw	0
  5589  08AC  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5590  08AD  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5591  08AE  3189  21CE  3188   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5592                           
  5593                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  5594  08B1  003D               	movlb	29	; select bank29
  5595  08B2  108E               	bcf	14,1	;volatile
  5596                           
  5597                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  5598  08B3  1112               	bcf	18,2	;volatile
  5599  08B4                     i1l3403:	
  5600                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  5601                           
  5602  08B4  1D10               	btfss	16,2	;volatile
  5603  08B5  28BD               	goto	i1l3405
  5604                           
  5605                           ;usb_device.c: 2343: {
  5606                           ;usb_device.c: 2344: (UIR &= 0xFB);
  5607  08B6  30FB               	movlw	251
  5608  08B7  0020               	movlb	0	; select bank0
  5609  08B8  00E6               	movwf	??_USBWakeFromSuspend
  5610  08B9  0866               	movf	??_USBWakeFromSuspend,w
  5611  08BA  003D               	movlb	29	; select bank29
  5612  08BB  0590               	andwf	16,f	;volatile
  5613  08BC  28B4               	goto	i1l3403
  5614  08BD                     i1l3405:	
  5615                           
  5616                           ;usb_device.c: 2345: }
  5617                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  5618  08BD  0023               	movlb	3	; select bank3
  5619  08BE  01D7               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5620  08BF  0008               	return
  5621  08C0                     __end_of_USBWakeFromSuspend:	
  5622                           
  5623                           	psect	text22
  5624  0861                     __ptext22:	
  5625 ;; *************** function _USBSuspend *****************
  5626 ;; Defined at:
  5627 ;;		line 2245 in file "../lib/usb/src/usb_device.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;		None
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;		None
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  1    wreg      void 
  5634 ;; Registers used:
  5635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5643 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5644 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5645 ;;Total ram usage:        1 bytes
  5646 ;; Hardware stack levels used:    1
  5647 ;; Hardware stack levels required when called:    4
  5648 ;; This function calls:
  5649 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5650 ;; This function is called by:
  5651 ;;		_USBDeviceTasks
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           
  5656                           ;psect for function _USBSuspend
  5657  0861                     _USBSuspend:	
  5658                           
  5659                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  5660                           
  5661                           ;incstack = 0
  5662                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5663  0861  003D               	movlb	29	; select bank29
  5664  0862  1512               	bsf	18,2	;volatile
  5665                           
  5666                           ;usb_device.c: 2271: (UIR &= 0xEF);
  5667  0863  30EF               	movlw	239
  5668  0864  0020               	movlb	0	; select bank0
  5669  0865  00E6               	movwf	??_USBSuspend
  5670  0866  0866               	movf	??_USBSuspend,w
  5671  0867  003D               	movlb	29	; select bank29
  5672  0868  0590               	andwf	16,f	;volatile
  5673                           
  5674                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  5675  0869  148E               	bsf	14,1	;volatile
  5676                           
  5677                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  5678  086A  3001               	movlw	1
  5679  086B  0020               	movlb	0	; select bank0
  5680  086C  00E6               	movwf	??_USBSuspend
  5681  086D  0866               	movf	??_USBSuspend,w
  5682  086E  0023               	movlb	3	; select bank3
  5683  086F  00D0               	movwf	_USBBusIsSuspended^(0+384)	;volatile
  5684                           
  5685                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  5686  0870  01D7               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5687                           
  5688                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  5689  0871  3075               	movlw	117
  5690  0872  0020               	movlb	0	; select bank0
  5691  0873  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5692  0874  3000               	movlw	0
  5693  0875  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5694  0876  3000               	movlw	0
  5695  0877  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5696  0878  3000               	movlw	0
  5697  0879  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5698  087A  3000               	movlw	0
  5699  087B  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5700  087C  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5701  087D  3189  21CE         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5702  087F  0008               	return
  5703  0880                     __end_of_USBSuspend:	
  5704                           
  5705                           	psect	text23
  5706  08E3                     __ptext23:	
  5707 ;; *************** function _USBStallHandler *****************
  5708 ;; Defined at:
  5709 ;;		line 2202 in file "../lib/usb/src/usb_device.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;		None
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;		None
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  1    wreg      void 
  5716 ;; Registers used:
  5717 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5725 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5726 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5727 ;;Total ram usage:        1 bytes
  5728 ;; Hardware stack levels used:    1
  5729 ;; This function calls:
  5730 ;;		Nothing
  5731 ;; This function is called by:
  5732 ;;		_USBDeviceTasks
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736                           
  5737                           ;psect for function _USBStallHandler
  5738  08E3                     _USBStallHandler:	
  5739                           
  5740                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  5741                           
  5742                           ;incstack = 0
  5743                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  5744  08E3  003D               	movlb	29	; select bank29
  5745  08E4  1C18               	btfss	24,0	;volatile
  5746  08E5  2905               	goto	i1l3437
  5747                           
  5748                           ;usb_device.c: 2215: {
  5749                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  5750  08E6  0021               	movlb	1	; select bank1
  5751  08E7  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5752  08E8  0086               	movwf	6
  5753  08E9  0187               	clrf	7
  5754  08EA  3080               	movlw	128
  5755  08EB  0601               	xorwf	1,w
  5756  08EC  1D03               	btfss	3,2
  5757  08ED  2903               	goto	i1l3435
  5758  08EE  0023               	movlb	3	; select bank3
  5759  08EF  0827               	movf	_pBDTEntryIn^(0+384),w
  5760  08F0  0086               	movwf	6
  5761  08F1  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5762  08F2  0087               	movwf	7
  5763  08F3  3084               	movlw	132
  5764  08F4  0601               	xorwf	1,w
  5765  08F5  1D03               	btfss	3,2
  5766  08F6  2903               	goto	i1l3435
  5767                           
  5768                           ;usb_device.c: 2218: {
  5769                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5770  08F7  300C               	movlw	12
  5771  08F8  00F0               	movwf	??_USBStallHandler
  5772  08F9  0021               	movlb	1	; select bank1
  5773  08FA  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5774  08FB  0086               	movwf	6
  5775  08FC  0187               	clrf	7
  5776  08FD  0870               	movf	??_USBStallHandler,w
  5777  08FE  0081               	movwf	1
  5778                           
  5779                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  5780  08FF  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5781  0900  0086               	movwf	6
  5782  0901  0187               	clrf	7
  5783  0902  1781               	bsf	1,7
  5784  0903                     i1l3435:	
  5785                           
  5786                           ;usb_device.c: 2222: }
  5787                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  5788  0903  003D               	movlb	29	; select bank29
  5789  0904  1018               	bcf	24,0	;volatile
  5790  0905                     i1l3437:	
  5791                           
  5792                           ;usb_device.c: 2224: }
  5793                           ;usb_device.c: 2226: (UIR &= 0xDF);
  5794  0905  30DF               	movlw	223
  5795  0906  00F0               	movwf	??_USBStallHandler
  5796  0907  0870               	movf	??_USBStallHandler,w
  5797  0908  0590               	andwf	16,f	;volatile
  5798  0909  0008               	return
  5799  090A                     __end_of_USBStallHandler:	
  5800                           
  5801                           	psect	text24
  5802  17E8                     __ptext24:	
  5803 ;; *************** function _USBIncrement1msInternalTimers *****************
  5804 ;; Defined at:
  5805 ;;		line 3025 in file "../lib/usb/src/usb_device.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;		None
  5808 ;; Auto vars:     Size  Location     Type
  5809 ;;		None
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  1    wreg      void 
  5812 ;; Registers used:
  5813 ;;		wreg, status,2, status,0
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5821 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5822 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5823 ;;Total ram usage:        1 bytes
  5824 ;; Hardware stack levels used:    1
  5825 ;; This function calls:
  5826 ;;		Nothing
  5827 ;; This function is called by:
  5828 ;;		_USBDeviceTasks
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           
  5833                           ;psect for function _USBIncrement1msInternalTimers
  5834  17E8                     _USBIncrement1msInternalTimers:	
  5835                           
  5836                           ;usb_device.c: 3033: USB1msTickCount++;
  5837                           
  5838                           ;incstack = 0
  5839                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  5840  17E8  3001               	movlw	1
  5841  17E9  0023               	movlb	3	; select bank3
  5842  17EA  07BC               	addwf	_USB1msTickCount^(0+384),f	;volatile
  5843  17EB  3000               	movlw	0
  5844  17EC  3DBD               	addwfc	(_USB1msTickCount+1)^(0+384),f	;volatile
  5845  17ED  3000               	movlw	0
  5846  17EE  3DBE               	addwfc	(_USB1msTickCount+2)^(0+384),f	;volatile
  5847  17EF  3000               	movlw	0
  5848  17F0  3DBF               	addwfc	(_USB1msTickCount+3)^(0+384),f	;volatile
  5849                           
  5850                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  5851  17F1  0850               	movf	_USBBusIsSuspended^(0+384),w	;volatile
  5852  17F2  1D03               	btfss	3,2
  5853  17F3  0008               	return
  5854                           
  5855                           ;usb_device.c: 3035: {
  5856                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  5857  17F4  3001               	movlw	1
  5858  17F5  00F0               	movwf	??_USBIncrement1msInternalTimers
  5859  17F6  0870               	movf	??_USBIncrement1msInternalTimers,w
  5860  17F7  07D7               	addwf	_USBTicksSinceSuspendEnd^(0+384),f	;volatile
  5861                           
  5862                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  5863  17F8  0857               	movf	_USBTicksSinceSuspendEnd^(0+384),w	;volatile
  5864  17F9  1D03               	btfss	3,2
  5865  17FA  0008               	return
  5866                           
  5867                           ;usb_device.c: 3039: {
  5868                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  5869  17FB  30FF               	movlw	255
  5870  17FC  00F0               	movwf	??_USBIncrement1msInternalTimers
  5871  17FD  0870               	movf	??_USBIncrement1msInternalTimers,w
  5872  17FE  00D7               	movwf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5873  17FF  0008               	return
  5874  1800                     __end_of_USBIncrement1msInternalTimers:	
  5875                           
  5876                           	psect	text25
  5877  0ADB                     __ptext25:	
  5878 ;; *************** function _USBCtrlEPService *****************
  5879 ;; Defined at:
  5880 ;;		line 2372 in file "../lib/usb/src/usb_device.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;		None
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;		None
  5885 ;; Return value:  Size  Location     Type
  5886 ;;                  1    wreg      void 
  5887 ;; Registers used:
  5888 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/0
  5891 ;;		On exit  : 0/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5896 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5897 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5898 ;;Total ram usage:        3 bytes
  5899 ;; Hardware stack levels used:    1
  5900 ;; Hardware stack levels required when called:    7
  5901 ;; This function calls:
  5902 ;;		_USBCtrlTrfInHandler
  5903 ;;		_USBCtrlTrfOutHandler
  5904 ;;		_USBCtrlTrfSetupHandler
  5905 ;; This function is called by:
  5906 ;;		_USBDeviceTasks
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           
  5911                           ;psect for function _USBCtrlEPService
  5912  0ADB                     _USBCtrlEPService:	
  5913                           
  5914                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  5915                           
  5916                           ;incstack = 0
  5917                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5918  0ADB  302D               	movlw	45
  5919  0ADC  0021               	movlb	1	; select bank1
  5920  0ADD  00E6               	movwf	??_USBCtrlEPService^(0+128)
  5921  0ADE  0866               	movf	??_USBCtrlEPService^(0+128),w
  5922  0ADF  0023               	movlb	3	; select bank3
  5923  0AE0  00D6               	movwf	_USBStatusStageTimeoutCounter^(0+384)	;volatile
  5924                           
  5925                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  5926  0AE1  0021               	movlb	1	; select bank1
  5927  0AE2  0865               	movf	_USTATcopy^(0+128),w	;volatile
  5928  0AE3  39FD               	andlw	253
  5929  0AE4  1D03               	btfss	3,2
  5930  0AE5  2B24               	goto	i1l3457
  5931                           
  5932                           ;usb_device.c: 2383: {
  5933                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5934  0AE6  3665               	lsrf	_USTATcopy^(0+128),w	;volatile
  5935  0AE7  393F               	andlw	63
  5936  0AE8  00E6               	movwf	??_USBCtrlEPService^(0+128)
  5937  0AE9  3001               	movlw	1
  5938  0AEA                     u278_25:	
  5939  0AEA  35E6               	lslf	??_USBCtrlEPService^(0+128),f
  5940  0AEB  3EFF               	addlw	-1
  5941  0AEC  1D03               	skipz
  5942  0AED  2AEA               	goto	u278_25
  5943  0AEE  3566               	lslf	??_USBCtrlEPService^(0+128),w
  5944  0AEF  3E20               	addlw	32
  5945  0AF0  00E7               	movwf	(??_USBCtrlEPService+1)^(0+128)
  5946  0AF1  0867               	movf	(??_USBCtrlEPService+1)^(0+128),w
  5947  0AF2  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  5948                           
  5949                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5950  0AF3  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5951  0AF4  00E0               	movwf	_pBDTEntryEP0OutNext^(0+128)
  5952  0AF5  39FF               	andlw	255
  5953  0AF6  1D03               	skipz
  5954  0AF7  3000               	movlw	0
  5955  0AF8  00E1               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  5956                           
  5957                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  5958  0AF9  3004               	movlw	4
  5959  0AFA  0660               	xorwf	_pBDTEntryEP0OutNext^(0+128),w
  5960  0AFB  00E0               	movwf	_pBDTEntryEP0OutNext^(0+128)
  5961  0AFC  3000               	movlw	0
  5962  0AFD  0661               	xorwf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5963  0AFE  00E1               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  5964                           
  5965                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5966  0AFF  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5967  0B00  0086               	movwf	6
  5968  0B01  0187               	clrf	7
  5969  0B02  0C01               	rrf	1,w
  5970  0B03  0C89               	rrf	9,f
  5971  0B04  390F               	andlw	15
  5972  0B05  3A0D               	xorlw	13
  5973  0B06  1D03               	skipz
  5974  0B07  2B21               	goto	i1l3455
  5975                           
  5976                           ;usb_device.c: 2400: {
  5977                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
  5978  0B08  3050               	movlw	80
  5979  0B09  0086               	movwf	6
  5980  0B0A  0187               	clrf	7
  5981  0B0B  0021               	movlb	1	; select bank1
  5982  0B0C  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5983  0B0D  3E02               	addlw	2
  5984  0B0E  0084               	movwf	4
  5985  0B0F  0185               	clrf	5
  5986  0B10  3F00               	moviw [0]fsr0
  5987  0B11  00E6               	movwf	??_USBCtrlEPService^(0+128)
  5988  0B12  3F01               	moviw [1]fsr0
  5989  0B13  00E7               	movwf	(??_USBCtrlEPService^(0+128)+1)
  5990  0B14  0866               	movf	??_USBCtrlEPService^(0+128),w
  5991  0B15  0084               	movwf	4
  5992  0B16  0867               	movf	(??_USBCtrlEPService+1)^(0+128),w
  5993  0B17  0085               	movwf	5
  5994  0B18  3008               	movlw	8
  5995  0B19  00E8               	movwf	(??_USBCtrlEPService+2)^(0+128)
  5996  0B1A                     u280_2m0:	
  5997  0B1A  0012               	moviw fsr0++
  5998  0B1B  001E               	movwi fsr1++
  5999  0B1C  0BE8               	decfsz	(??_USBCtrlEPService+2)^(0+128),f
  6000  0B1D  2B1A               	goto	u280_2m0
  6001                           
  6002                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  6003  0B1E  318A  2287         	fcall	_USBCtrlTrfSetupHandler
  6004                           
  6005                           ;usb_device.c: 2409: }
  6006  0B20  0008               	return
  6007  0B21                     i1l3455:	
  6008                           
  6009                           ;usb_device.c: 2410: else
  6010                           ;usb_device.c: 2411: {
  6011                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
  6012  0B21  3189  2197         	fcall	_USBCtrlTrfOutHandler
  6013                           
  6014                           ;usb_device.c: 2414: }
  6015                           ;usb_device.c: 2415: }
  6016  0B23  0008               	return
  6017  0B24                     i1l3457:	
  6018                           
  6019                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  6020  0B24  30FD               	movlw	253
  6021  0B25  0021               	movlb	1	; select bank1
  6022  0B26  0565               	andwf	_USTATcopy^(0+128),w	;volatile
  6023  0B27  00E6               	movwf	??_USBCtrlEPService^(0+128)
  6024  0B28  3004               	movlw	4
  6025  0B29  0666               	xorwf	??_USBCtrlEPService^(0+128),w
  6026  0B2A  1D03               	btfss	3,2
  6027  0B2B  0008               	return
  6028                           
  6029                           ;usb_device.c: 2417: {
  6030                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  6031  0B2C  318D  250B         	fcall	_USBCtrlTrfInHandler
  6032  0B2E  0008               	return
  6033  0B2F                     __end_of_USBCtrlEPService:	
  6034                           
  6035                           	psect	text26
  6036  0A87                     __ptext26:	
  6037 ;; *************** function _USBCtrlTrfSetupHandler *****************
  6038 ;; Defined at:
  6039 ;;		line 2465 in file "../lib/usb/src/usb_device.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;		None
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;		None
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  1    wreg      void 
  6046 ;; Registers used:
  6047 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6055 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6056 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6057 ;;Total ram usage:        1 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; Hardware stack levels required when called:    6
  6060 ;; This function calls:
  6061 ;;		_USBCheckStdRequest
  6062 ;;		_USBCtrlEPServiceComplete
  6063 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6064 ;; This function is called by:
  6065 ;;		_USBCtrlEPService
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069                           
  6070                           ;psect for function _USBCtrlTrfSetupHandler
  6071  0A87                     _USBCtrlTrfSetupHandler:	
  6072                           
  6073                           ;usb_device.c: 2470: shortPacketStatus = 0;
  6074                           
  6075                           ;incstack = 0
  6076                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6077  0A87  0022               	movlb	2	; select bank2
  6078  0A88  01EE               	clrf	_shortPacketStatus^(0+256)	;volatile
  6079                           
  6080                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  6081  0A89  0023               	movlb	3	; select bank3
  6082  0A8A  01D3               	clrf	_USBDeferStatusStagePacket^(0+384)	;volatile
  6083                           
  6084                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  6085  0A8B  01D1               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  6086                           
  6087                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  6088  0A8C  01D2               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  6089                           
  6090                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  6091  0A8D  01CE               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  6092                           
  6093                           ;usb_device.c: 2475: controlTransferState = 0;
  6094  0A8E  0021               	movlb	1	; select bank1
  6095  0A8F  01E3               	clrf	_controlTransferState^(0+128)	;volatile
  6096                           
  6097                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  6098  0A90  307F               	movlw	127
  6099  0A91  0020               	movlb	0	; select bank0
  6100  0A92  00EE               	movwf	??_USBCtrlTrfSetupHandler
  6101  0A93  0023               	movlb	3	; select bank3
  6102  0A94  0827               	movf	_pBDTEntryIn^(0+384),w
  6103  0A95  0086               	movwf	6
  6104  0A96  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6105  0A97  0087               	movwf	7
  6106  0A98  0020               	movlb	0	; select bank0
  6107  0A99  086E               	movf	??_USBCtrlTrfSetupHandler,w
  6108  0A9A  0581               	andwf	1,f
  6109                           
  6110                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  6111  0A9B  3004               	movlw	4
  6112  0A9C  0023               	movlb	3	; select bank3
  6113  0A9D  0627               	xorwf	_pBDTEntryIn^(0+384),w
  6114  0A9E  00A7               	movwf	_pBDTEntryIn^(0+384)
  6115  0A9F  3000               	movlw	0
  6116  0AA0  0628               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  6117  0AA1  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  6118                           
  6119                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  6120  0AA2  307F               	movlw	127
  6121  0AA3  0020               	movlb	0	; select bank0
  6122  0AA4  00EE               	movwf	??_USBCtrlTrfSetupHandler
  6123  0AA5  0023               	movlb	3	; select bank3
  6124  0AA6  0827               	movf	_pBDTEntryIn^(0+384),w
  6125  0AA7  0086               	movwf	6
  6126  0AA8  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6127  0AA9  0087               	movwf	7
  6128  0AAA  0020               	movlb	0	; select bank0
  6129  0AAB  086E               	movf	??_USBCtrlTrfSetupHandler,w
  6130  0AAC  0581               	andwf	1,f
  6131                           
  6132                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  6133  0AAD  3004               	movlw	4
  6134  0AAE  0023               	movlb	3	; select bank3
  6135  0AAF  0627               	xorwf	_pBDTEntryIn^(0+384),w
  6136  0AB0  00A7               	movwf	_pBDTEntryIn^(0+384)
  6137  0AB1  3000               	movlw	0
  6138  0AB2  0628               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  6139  0AB3  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  6140                           
  6141                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  6142  0AB4  307F               	movlw	127
  6143  0AB5  0020               	movlb	0	; select bank0
  6144  0AB6  00EE               	movwf	??_USBCtrlTrfSetupHandler
  6145  0AB7  0021               	movlb	1	; select bank1
  6146  0AB8  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6147  0AB9  0086               	movwf	6
  6148  0ABA  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6149  0ABB  0087               	movwf	7
  6150  0ABC  0020               	movlb	0	; select bank0
  6151  0ABD  086E               	movf	??_USBCtrlTrfSetupHandler,w
  6152  0ABE  0581               	andwf	1,f
  6153                           
  6154                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  6155  0ABF  0023               	movlb	3	; select bank3
  6156  0AC0  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  6157                           
  6158                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  6159  0AC1  01B6               	clrf	(_inPipes^(0+384)+3)	;volatile
  6160  0AC2  01B7               	clrf	((_inPipes+1)^(0+384)+3)	;volatile
  6161                           
  6162                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  6163  0AC3  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  6164                           
  6165                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  6166  0AC4  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  6167  0AC5  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  6168                           
  6169                           ;usb_device.c: 2500: USBCheckStdRequest();
  6170  0AC6  318C  243F  318A   	fcall	_USBCheckStdRequest
  6171                           
  6172                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  6173  0AC9  3000               	movlw	0
  6174  0ACA  0020               	movlb	0	; select bank0
  6175  0ACB  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6176  0ACC  3003               	movlw	3
  6177  0ACD  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6178  0ACE  3000               	movlw	0
  6179  0ACF  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6180  0AD0  3000               	movlw	0
  6181  0AD1  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  6182  0AD2  3000               	movlw	0
  6183  0AD3  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6184  0AD4  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6185  0AD5  3189  21CE  318A   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6186                           
  6187                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  6188  0AD8  3186  2690         	fcall	_USBCtrlEPServiceComplete
  6189  0ADA  0008               	return
  6190  0ADB                     __end_of_USBCtrlTrfSetupHandler:	
  6191                           
  6192                           	psect	text27
  6193  0690                     __ptext27:	
  6194 ;; *************** function _USBCtrlEPServiceComplete *****************
  6195 ;; Defined at:
  6196 ;;		line 1616 in file "../lib/usb/src/usb_device.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;		None
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;		None
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  1    wreg      void 
  6203 ;; Registers used:
  6204 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6212 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6213 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6214 ;;Total ram usage:        2 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; Hardware stack levels required when called:    2
  6217 ;; This function calls:
  6218 ;;		_USBCtrlEPAllowDataStage
  6219 ;;		_USBCtrlEPAllowStatusStage
  6220 ;; This function is called by:
  6221 ;;		_USBCtrlTrfSetupHandler
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225                           
  6226                           ;psect for function _USBCtrlEPServiceComplete
  6227  0690                     _USBCtrlEPServiceComplete:	
  6228                           
  6229                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  6230                           
  6231                           ;incstack = 0
  6232                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6233  0690  003D               	movlb	29	; select bank29
  6234  0691  120E               	bcf	14,4	;volatile
  6235                           
  6236                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  6237  0692  0023               	movlb	3	; select bank3
  6238  0693  1BB5               	btfsc	(_inPipes^(0+384)+2),7	;volatile
  6239  0694  2ED8               	goto	i1l258
  6240                           
  6241                           ;usb_device.c: 1629: {
  6242                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  6243  0695  1FA2               	btfss	(_outPipes^(0+384)+2),7	;volatile
  6244  0696  2EA6               	goto	i1l3167
  6245                           
  6246                           ;usb_device.c: 1631: {
  6247                           ;usb_device.c: 1632: controlTransferState = 2;
  6248  0697  3002               	movlw	2
  6249  0698  00F5               	movwf	??_USBCtrlEPServiceComplete
  6250  0699  0875               	movf	??_USBCtrlEPServiceComplete,w
  6251  069A  0021               	movlb	1	; select bank1
  6252  069B  00E3               	movwf	_controlTransferState^(0+128)	;volatile
  6253                           
  6254                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  6255  069C  0023               	movlb	3	; select bank3
  6256  069D  0852               	movf	_USBDeferOUTDataStagePackets^(0+384),w	;volatile
  6257  069E  1D03               	btfss	3,2
  6258  069F  2EA2               	goto	i1l3163
  6259                           
  6260                           ;usb_device.c: 1644: {
  6261                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  6262  06A0  318B  2384         	fcall	_USBCtrlEPAllowDataStage
  6263  06A2                     i1l3163:	
  6264                           
  6265                           ;usb_device.c: 1646: }
  6266                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  6267  06A2  0023               	movlb	3	; select bank3
  6268  06A3  01D5               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  6269                           
  6270                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  6271  06A4  01D4               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  6272                           
  6273                           ;usb_device.c: 1652: }
  6274  06A5  0008               	return
  6275  06A6                     i1l3167:	
  6276                           
  6277                           ;usb_device.c: 1653: else
  6278                           ;usb_device.c: 1654: {
  6279                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  6280  06A6  0021               	movlb	1	; select bank1
  6281  06A7  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6282  06A8  3E01               	addlw	1
  6283  06A9  00F5               	movwf	??_USBCtrlEPServiceComplete
  6284  06AA  3000               	movlw	0
  6285  06AB  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6286  06AC  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  6287  06AD  0875               	movf	??_USBCtrlEPServiceComplete,w
  6288  06AE  0086               	movwf	6
  6289  06AF  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  6290  06B0  0087               	movwf	7
  6291  06B1  3008               	movlw	8
  6292  06B2  0081               	movwf	1
  6293                           
  6294                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6295  06B3  3050               	movlw	80
  6296  06B4  00F5               	movwf	??_USBCtrlEPServiceComplete
  6297  06B5  3000               	movlw	0
  6298  06B6  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  6299  06B7  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6300  06B8  0086               	movwf	6
  6301  06B9  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6302  06BA  0087               	movwf	7
  6303  06BB  3142               	addfsr 1,2
  6304  06BC  0875               	movf	??_USBCtrlEPServiceComplete,w
  6305  06BD  3FC0               	movwi [0]fsr1
  6306  06BE  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  6307  06BF  3FC1               	movwi [1]fsr1
  6308                           
  6309                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6310  06C0  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6311  06C1  0086               	movwf	6
  6312  06C2  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6313  06C3  0087               	movwf	7
  6314  06C4  300C               	movlw	12
  6315  06C5  0081               	movwf	1
  6316                           
  6317                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6318  06C6  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6319  06C7  0086               	movwf	6
  6320  06C8  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6321  06C9  0087               	movwf	7
  6322  06CA  1781               	bsf	1,7
  6323                           
  6324                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  6325  06CB  0023               	movlb	3	; select bank3
  6326  06CC  0827               	movf	_pBDTEntryIn^(0+384),w
  6327  06CD  0086               	movwf	6
  6328  06CE  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6329  06CF  0087               	movwf	7
  6330  06D0  3004               	movlw	4
  6331  06D1  0081               	movwf	1
  6332                           
  6333                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6334  06D2  0827               	movf	_pBDTEntryIn^(0+384),w
  6335  06D3  0086               	movwf	6
  6336  06D4  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6337  06D5  0087               	movwf	7
  6338  06D6  1781               	bsf	1,7
  6339                           
  6340                           ;usb_device.c: 1665: }
  6341                           ;usb_device.c: 1666: }
  6342  06D7  0008               	return
  6343  06D8                     i1l258:	
  6344                           
  6345                           ;usb_device.c: 1667: else
  6346                           ;usb_device.c: 1668: {
  6347                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  6348  06D8  0020               	movlb	0	; select bank0
  6349  06D9  1FD0               	btfss	80,7	;volatile
  6350  06DA  2EF0               	goto	i1l3193
  6351                           
  6352                           ;usb_device.c: 1670: {
  6353                           ;usb_device.c: 1671: controlTransferState = 1;
  6354  06DB  3001               	movlw	1
  6355  06DC  00F5               	movwf	??_USBCtrlEPServiceComplete
  6356  06DD  0875               	movf	??_USBCtrlEPServiceComplete,w
  6357  06DE  0021               	movlb	1	; select bank1
  6358  06DF  00E3               	movwf	_controlTransferState^(0+128)	;volatile
  6359                           
  6360                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  6361  06E0  0023               	movlb	3	; select bank3
  6362  06E1  0851               	movf	_USBDeferINDataStagePackets^(0+384),w	;volatile
  6363  06E2  1D03               	btfss	3,2
  6364  06E3  2EE7               	goto	i1l3185
  6365                           
  6366                           ;usb_device.c: 1686: {
  6367                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  6368  06E4  318B  2384  3186   	fcall	_USBCtrlEPAllowDataStage
  6369  06E7                     i1l3185:	
  6370                           
  6371                           ;usb_device.c: 1688: }
  6372                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  6373  06E7  0023               	movlb	3	; select bank3
  6374  06E8  01D5               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  6375                           
  6376                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  6377  06E9  01D4               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  6378                           
  6379                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  6380  06EA  0853               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  6381  06EB  1D03               	btfss	3,2
  6382  06EC  0008               	return
  6383                           
  6384                           ;usb_device.c: 1713: {
  6385                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  6386  06ED  318D  257B         	fcall	_USBCtrlEPAllowStatusStage
  6387                           
  6388                           ;usb_device.c: 1715: }
  6389                           ;usb_device.c: 1716: }
  6390  06EF  0008               	return
  6391  06F0                     i1l3193:	
  6392                           
  6393                           ;usb_device.c: 1717: else
  6394                           ;usb_device.c: 1718: {
  6395                           ;usb_device.c: 1729: controlTransferState = 2;
  6396  06F0  3002               	movlw	2
  6397  06F1  00F5               	movwf	??_USBCtrlEPServiceComplete
  6398  06F2  0875               	movf	??_USBCtrlEPServiceComplete,w
  6399  06F3  0021               	movlb	1	; select bank1
  6400  06F4  00E3               	movwf	_controlTransferState^(0+128)	;volatile
  6401                           
  6402                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  6403  06F5  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6404  06F6  3E01               	addlw	1
  6405  06F7  00F5               	movwf	??_USBCtrlEPServiceComplete
  6406  06F8  3000               	movlw	0
  6407  06F9  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6408  06FA  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  6409  06FB  0875               	movf	??_USBCtrlEPServiceComplete,w
  6410  06FC  0086               	movwf	6
  6411  06FD  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  6412  06FE  0087               	movwf	7
  6413  06FF  3008               	movlw	8
  6414  0700  0081               	movwf	1
  6415                           
  6416                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6417  0701  3050               	movlw	80
  6418  0702  00F5               	movwf	??_USBCtrlEPServiceComplete
  6419  0703  3000               	movlw	0
  6420  0704  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  6421  0705  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6422  0706  0086               	movwf	6
  6423  0707  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6424  0708  0087               	movwf	7
  6425  0709  3142               	addfsr 1,2
  6426  070A  0875               	movf	??_USBCtrlEPServiceComplete,w
  6427  070B  3FC0               	movwi [0]fsr1
  6428  070C  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  6429  070D  3FC1               	movwi [1]fsr1
  6430                           
  6431                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  6432  070E  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6433  070F  0086               	movwf	6
  6434  0710  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6435  0711  0087               	movwf	7
  6436  0712  3004               	movlw	4
  6437  0713  0081               	movwf	1
  6438                           
  6439                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6440  0714  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6441  0715  0086               	movwf	6
  6442  0716  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6443  0717  0087               	movwf	7
  6444  0718  1781               	bsf	1,7
  6445                           
  6446                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  6447  0719  0023               	movlb	3	; select bank3
  6448  071A  01D5               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  6449                           
  6450                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  6451  071B  01D4               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  6452                           
  6453                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  6454  071C  0853               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  6455  071D  1D03               	btfss	3,2
  6456  071E  0008               	return
  6457                           
  6458                           ;usb_device.c: 1741: {
  6459                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
  6460  071F  318D  257B         	fcall	_USBCtrlEPAllowStatusStage
  6461  0721  0008               	return
  6462  0722                     __end_of_USBCtrlEPServiceComplete:	
  6463                           
  6464                           	psect	text28
  6465  0B84                     __ptext28:	
  6466 ;; *************** function _USBCtrlEPAllowDataStage *****************
  6467 ;; Defined at:
  6468 ;;		line 1488 in file "../lib/usb/src/usb_device.c"
  6469 ;; Parameters:    Size  Location     Type
  6470 ;;		None
  6471 ;; Auto vars:     Size  Location     Type
  6472 ;;		None
  6473 ;; Return value:  Size  Location     Type
  6474 ;;                  1    wreg      void 
  6475 ;; Registers used:
  6476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6477 ;; Tracked objects:
  6478 ;;		On entry : 0/0
  6479 ;;		On exit  : 0/0
  6480 ;;		Unchanged: 0/0
  6481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6484 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6485 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6486 ;;Total ram usage:        2 bytes
  6487 ;; Hardware stack levels used:    1
  6488 ;; Hardware stack levels required when called:    1
  6489 ;; This function calls:
  6490 ;;		_USBCtrlTrfTxService
  6491 ;; This function is called by:
  6492 ;;		_USBCtrlEPServiceComplete
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496                           
  6497                           ;psect for function _USBCtrlEPAllowDataStage
  6498  0B84                     _USBCtrlEPAllowDataStage:	
  6499                           
  6500                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  6501                           
  6502                           ;incstack = 0
  6503                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6504  0B84  0023               	movlb	3	; select bank3
  6505  0B85  01D1               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  6506                           
  6507                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  6508  0B86  01D2               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  6509                           
  6510                           ;usb_device.c: 1493: if(controlTransferState == 2)
  6511  0B87  3002               	movlw	2
  6512  0B88  0021               	movlb	1	; select bank1
  6513  0B89  0663               	xorwf	_controlTransferState^(0+128),w	;volatile
  6514  0B8A  1D03               	btfss	3,2
  6515  0B8B  2BB1               	goto	i1l2945
  6516                           
  6517                           ;usb_device.c: 1494: {
  6518                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  6519  0B8C  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6520  0B8D  3E01               	addlw	1
  6521  0B8E  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6522  0B8F  3000               	movlw	0
  6523  0B90  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6524  0B91  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  6525  0B92  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6526  0B93  0086               	movwf	6
  6527  0B94  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  6528  0B95  0087               	movwf	7
  6529  0B96  3008               	movlw	8
  6530  0B97  0081               	movwf	1
  6531                           
  6532                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  6533  0B98  3058               	movlw	88
  6534  0B99  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6535  0B9A  3000               	movlw	0
  6536  0B9B  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  6537  0B9C  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6538  0B9D  0086               	movwf	6
  6539  0B9E  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6540  0B9F  0087               	movwf	7
  6541  0BA0  3142               	addfsr 1,2
  6542  0BA1  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6543  0BA2  3FC0               	movwi [0]fsr1
  6544  0BA3  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  6545  0BA4  3FC1               	movwi [1]fsr1
  6546                           
  6547                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  6548  0BA5  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6549  0BA6  0086               	movwf	6
  6550  0BA7  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6551  0BA8  0087               	movwf	7
  6552  0BA9  3048               	movlw	72
  6553  0BAA  0081               	movwf	1
  6554                           
  6555                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6556  0BAB  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6557  0BAC  0086               	movwf	6
  6558  0BAD  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6559  0BAE  0087               	movwf	7
  6560  0BAF  1781               	bsf	1,7
  6561                           
  6562                           ;usb_device.c: 1500: }
  6563  0BB0  0008               	return
  6564  0BB1                     i1l2945:	
  6565                           
  6566                           ;usb_device.c: 1501: else
  6567                           ;usb_device.c: 1502: {
  6568                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  6569  0BB1  0023               	movlb	3	; select bank3
  6570  0BB2  0837               	movf	((_inPipes+1)^(0+384)+3),w	;volatile
  6571  0BB3  0020               	movlb	0	; select bank0
  6572  0BB4  0257               	subwf	87,w	;volatile
  6573  0BB5  1D03               	skipz
  6574  0BB6  2BBB               	goto	u213_25
  6575  0BB7  0023               	movlb	3	; select bank3
  6576  0BB8  0836               	movf	(_inPipes^(0+384)+3),w	;volatile
  6577  0BB9  0020               	movlb	0	; select bank0
  6578  0BBA  0256               	subwf	86,w	;volatile
  6579  0BBB                     u213_25:	
  6580  0BBB  1803               	skipnc
  6581  0BBC  2BC4               	goto	i1l2949
  6582                           
  6583                           ;usb_device.c: 1506: {
  6584                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  6585  0BBD  0857               	movf	87,w	;volatile
  6586  0BBE  0023               	movlb	3	; select bank3
  6587  0BBF  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  6588  0BC0  0020               	movlb	0	; select bank0
  6589  0BC1  0856               	movf	86,w	;volatile
  6590  0BC2  0023               	movlb	3	; select bank3
  6591  0BC3  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6592  0BC4                     i1l2949:	
  6593                           
  6594                           ;usb_device.c: 1508: }
  6595                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  6596  0BC4  318C  24A1         	fcall	_USBCtrlTrfTxService
  6597                           
  6598                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  6599  0BC6  3058               	movlw	88
  6600  0BC7  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6601  0BC8  3000               	movlw	0
  6602  0BC9  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  6603  0BCA  0023               	movlb	3	; select bank3
  6604  0BCB  0827               	movf	_pBDTEntryIn^(0+384),w
  6605  0BCC  0086               	movwf	6
  6606  0BCD  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6607  0BCE  0087               	movwf	7
  6608  0BCF  3142               	addfsr 1,2
  6609  0BD0  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6610  0BD1  3FC0               	movwi [0]fsr1
  6611  0BD2  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  6612  0BD3  3FC1               	movwi [1]fsr1
  6613                           
  6614                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  6615  0BD4  0827               	movf	_pBDTEntryIn^(0+384),w
  6616  0BD5  0086               	movwf	6
  6617  0BD6  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6618  0BD7  0087               	movwf	7
  6619  0BD8  3048               	movlw	72
  6620  0BD9  0081               	movwf	1
  6621                           
  6622                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6623  0BDA  0827               	movf	_pBDTEntryIn^(0+384),w
  6624  0BDB  0086               	movwf	6
  6625  0BDC  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6626  0BDD  0087               	movwf	7
  6627  0BDE  1781               	bsf	1,7
  6628  0BDF  0008               	return
  6629  0BE0                     __end_of_USBCtrlEPAllowDataStage:	
  6630                           
  6631                           	psect	text29
  6632  0C3F                     __ptext29:	
  6633 ;; *************** function _USBCheckStdRequest *****************
  6634 ;; Defined at:
  6635 ;;		line 2686 in file "../lib/usb/src/usb_device.c"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;		None
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;		None
  6640 ;; Return value:  Size  Location     Type
  6641 ;;                  1    wreg      void 
  6642 ;; Registers used:
  6643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6651 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6652 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6653 ;;Total ram usage:        1 bytes
  6654 ;; Hardware stack levels used:    1
  6655 ;; Hardware stack levels required when called:    5
  6656 ;; This function calls:
  6657 ;;		_USBStdFeatureReqHandler
  6658 ;;		_USBStdGetDscHandler
  6659 ;;		_USBStdGetStatusHandler
  6660 ;;		_USBStdSetCfgHandler
  6661 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6662 ;; This function is called by:
  6663 ;;		_USBCtrlTrfSetupHandler
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           
  6668                           ;psect for function _USBCheckStdRequest
  6669  0C3F                     _USBCheckStdRequest:	
  6670                           
  6671                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  6672                           
  6673                           ;incstack = 0
  6674                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6675  0C3F  0020               	movlb	0	; select bank0
  6676  0C40  0E50               	swapf	80,w	;volatile
  6677  0C41  0C89               	rrf	9,f
  6678  0C42  3903               	andlw	3
  6679  0C43  3A00               	xorlw	0
  6680  0C44  1D03               	btfss	3,2
  6681  0C45  0008               	return
  6682  0C46  2C95               	goto	i1l3287
  6683  0C47                     i1l385:	
  6684                           ;usb_device.c: 2691: {
  6685                           ;usb_device.c: 2692: case 5:
  6686                           
  6687                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
  6688                           
  6689                           
  6690                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  6691  0C47  0023               	movlb	3	; select bank3
  6692  0C48  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6693                           
  6694                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  6695  0C49  3008               	movlw	8
  6696  0C4A  0020               	movlb	0	; select bank0
  6697  0C4B  00ED               	movwf	??_USBCheckStdRequest
  6698  0C4C  086D               	movf	??_USBCheckStdRequest,w
  6699  0C4D  0022               	movlb	2	; select bank2
  6700  0C4E  00ED               	movwf	_USBDeviceState^(0+256)	;volatile
  6701                           
  6702                           ;usb_device.c: 2696: break;
  6703  0C4F  0008               	return
  6704  0C50                     i1l3257:	
  6705                           ;usb_device.c: 2697: case 6:
  6706                           
  6707                           
  6708                           ;usb_device.c: 2698: USBStdGetDscHandler();
  6709  0C50  318D  25ED         	fcall	_USBStdGetDscHandler
  6710                           
  6711                           ;usb_device.c: 2699: break;
  6712  0C52  0008               	return
  6713  0C53                     i1l3259:	
  6714                           ;usb_device.c: 2700: case 9:
  6715                           
  6716                           
  6717                           ;usb_device.c: 2701: USBStdSetCfgHandler();
  6718  0C53  3187  2722         	fcall	_USBStdSetCfgHandler
  6719                           
  6720                           ;usb_device.c: 2702: break;
  6721  0C55  0008               	return
  6722  0C56                     i1l3261:	
  6723                           ;usb_device.c: 2703: case 8:
  6724                           
  6725                           
  6726                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  6727  0C56  306F               	movlw	low _USBActiveConfiguration
  6728  0C57  0023               	movlb	3	; select bank3
  6729  0C58  00B3               	movwf	_inPipes^(0+384)	;volatile
  6730  0C59  3001               	movlw	high _USBActiveConfiguration
  6731  0C5A  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  6732                           
  6733                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6734  0C5B  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  6735                           
  6736                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  6737  0C5C  3001               	movlw	1
  6738  0C5D  0020               	movlb	0	; select bank0
  6739  0C5E  00ED               	movwf	??_USBCheckStdRequest
  6740  0C5F  086D               	movf	??_USBCheckStdRequest,w
  6741  0C60  0023               	movlb	3	; select bank3
  6742  0C61  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6743                           
  6744                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  6745  0C62  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6746                           
  6747                           ;usb_device.c: 2708: break;
  6748  0C63  0008               	return
  6749  0C64                     i1l3269:	
  6750                           ;usb_device.c: 2709: case 0:
  6751                           
  6752                           
  6753                           ;usb_device.c: 2710: USBStdGetStatusHandler();
  6754  0C64  318B  232F         	fcall	_USBStdGetStatusHandler
  6755                           
  6756                           ;usb_device.c: 2711: break;
  6757  0C66  0008               	return
  6758  0C67                     i1l3271:	
  6759                           ;usb_device.c: 2712: case 1:
  6760                           
  6761                           
  6762                           ;usb_device.c: 2713: case 3:
  6763                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
  6764  0C67  3180  2042         	fcall	_USBStdFeatureReqHandler
  6765                           
  6766                           ;usb_device.c: 2715: break;
  6767  0C69  0008               	return
  6768  0C6A                     i1l3273:	
  6769                           ;usb_device.c: 2716: case 10:
  6770                           
  6771                           
  6772                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  6773  0C6A  0020               	movlb	0	; select bank0
  6774  0C6B  0854               	movf	84,w	;volatile
  6775  0C6C  3EE5               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  6776  0C6D  0023               	movlb	3	; select bank3
  6777  0C6E  00B3               	movwf	_inPipes^(0+384)	;volatile
  6778  0C6F  3001               	movlw	1
  6779  0C70  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  6780                           
  6781                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6782  0C71  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  6783                           
  6784                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  6785  0C72  3001               	movlw	1
  6786  0C73  0020               	movlb	0	; select bank0
  6787  0C74  00ED               	movwf	??_USBCheckStdRequest
  6788  0C75  086D               	movf	??_USBCheckStdRequest,w
  6789  0C76  0023               	movlb	3	; select bank3
  6790  0C77  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6791                           
  6792                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  6793  0C78  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6794                           
  6795                           ;usb_device.c: 2721: break;
  6796  0C79  0008               	return
  6797  0C7A                     i1l394:	
  6798                           ;usb_device.c: 2722: case 11:
  6799                           
  6800                           
  6801                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  6802  0C7A  0023               	movlb	3	; select bank3
  6803  0C7B  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6804                           
  6805                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  6806  0C7C  0020               	movlb	0	; select bank0
  6807  0C7D  0852               	movf	82,w	;volatile
  6808  0C7E  00ED               	movwf	??_USBCheckStdRequest
  6809  0C7F  0854               	movf	84,w	;volatile
  6810  0C80  3EE5               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  6811  0C81  0086               	movwf	6
  6812  0C82  3001               	movlw	1	; select bank3/4
  6813  0C83  0087               	movwf	7
  6814  0C84  086D               	movf	??_USBCheckStdRequest,w
  6815  0C85  0081               	movwf	1
  6816                           
  6817                           ;usb_device.c: 2725: break;
  6818  0C86  0008               	return
  6819  0C87                     i1l3283:	
  6820                           ;usb_device.c: 2726: case 7:
  6821                           
  6822                           
  6823                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  6824  0C87  3000               	movlw	0
  6825  0C88  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6826  0C89  3002               	movlw	2
  6827  0C8A  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6828  0C8B  3000               	movlw	0
  6829  0C8C  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6830  0C8D  3000               	movlw	0
  6831  0C8E  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  6832  0C8F  3000               	movlw	0
  6833  0C90  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6834  0C91  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6835  0C92  3189  21CE         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6836                           
  6837                           ;usb_device.c: 2732: }
  6838                           
  6839                           ;usb_device.c: 2731: break;
  6840                           
  6841                           ;usb_device.c: 2730: default:
  6842                           
  6843                           ;usb_device.c: 2729: case 12:
  6844                           
  6845                           ;usb_device.c: 2728: break;
  6846  0C94  0008               	return
  6847  0C95                     i1l3287:	
  6848  0C95  0020               	movlb	0	; select bank0
  6849  0C96  0851               	movf	81,w	;volatile
  6850                           
  6851                           ; Switch size 1, requested type "space"
  6852                           ; Number of cases is 11, Range of values is 0 to 12
  6853                           ; switch strategies available:
  6854                           ; Name         Instructions Cycles
  6855                           ; direct_byte           32     6 (fixed)
  6856                           ; simple_byte           34    18 (average)
  6857                           ; jumptable            260     6 (fixed)
  6858                           ;	Chosen strategy is direct_byte
  6859  0C97  0084               	movwf	4
  6860  0C98  300D               	movlw	13
  6861  0C99  0204               	subwf	4,w
  6862  0C9A  1803               	skipnc
  6863  0C9B  0008               	return
  6864  0C9C  3188               	movlp	high i1S4835
  6865  0C9D  3504               	lslf	4,w
  6866  0C9E  3E00               	addlw	low i1S4835
  6867  0C9F  0082               	movwf	2
  6868  0CA0                     i1l383:	
  6869  0CA0  0008               	return
  6870  0CA1                     __end_of_USBCheckStdRequest:	
  6871                           
  6872                           	psect	swtext1
  6873  0800                     __pswtext1:	
  6874  0800                     i1S4835:	
  6875  0800  318C  2C64         	ljmp	i1l3269
  6876  0802  318C  2C67         	ljmp	i1l3271
  6877  0804  318C  2CA0         	ljmp	i1l383
  6878  0806  318C  2C67         	ljmp	i1l3271
  6879  0808  318C  2CA0         	ljmp	i1l383
  6880  080A  318C  2C47         	ljmp	i1l385
  6881  080C  318C  2C50         	ljmp	i1l3257
  6882  080E  318C  2C87         	ljmp	i1l3283
  6883  0810  318C  2C56         	ljmp	i1l3261
  6884  0812  318C  2C53         	ljmp	i1l3259
  6885  0814  318C  2C6A         	ljmp	i1l3273
  6886  0816  318C  2C7A         	ljmp	i1l394
  6887  0818  318C  2CA0         	ljmp	i1l383
  6888                           
  6889                           	psect	text30
  6890  0722                     __ptext30:	
  6891 ;; *************** function _USBStdSetCfgHandler *****************
  6892 ;; Defined at:
  6893 ;;		line 1968 in file "../lib/usb/src/usb_device.c"
  6894 ;; Parameters:    Size  Location     Type
  6895 ;;		None
  6896 ;; Auto vars:     Size  Location     Type
  6897 ;;  p               2    7[BANK0 ] PTR unsigned char 
  6898 ;;		 -> UEP1(1), 
  6899 ;;  i               1    9[BANK0 ] unsigned char 
  6900 ;;  i               1   10[BANK0 ] unsigned char 
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  1    wreg      void 
  6903 ;; Registers used:
  6904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6911 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6912 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6913 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6914 ;;Total ram usage:        5 bytes
  6915 ;; Hardware stack levels used:    1
  6916 ;; Hardware stack levels required when called:    4
  6917 ;; This function calls:
  6918 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6919 ;;		_memset
  6920 ;; This function is called by:
  6921 ;;		_USBCheckStdRequest
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           
  6925                           
  6926                           ;psect for function _USBStdSetCfgHandler
  6927  0722                     _USBStdSetCfgHandler:	
  6928                           
  6929                           ;usb_device.c: 1970: uint8_t i;
  6930                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  6931                           
  6932                           ;incstack = 0
  6933                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6934  0722  0023               	movlb	3	; select bank3
  6935  0723  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6936                           
  6937                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
  6938  0724  300E               	movlw	14
  6939  0725  0020               	movlb	0	; select bank0
  6940  0726  00E8               	movwf	USBStdSetCfgHandler@p+1
  6941  0727  3099               	movlw	153
  6942  0728  00E7               	movwf	USBStdSetCfgHandler@p
  6943  0729  01E9               	clrf	USBStdSetCfgHandler@i_1174
  6944  072A  3002               	movlw	2
  6945  072B  0269               	subwf	USBStdSetCfgHandler@i_1174,w
  6946  072C  1803               	btfsc	3,0
  6947  072D  2F3F               	goto	i1l2973
  6948  072E                     i1l2965:	
  6949  072E  0867               	movf	USBStdSetCfgHandler@p,w
  6950  072F  0086               	movwf	6
  6951  0730  0868               	movf	USBStdSetCfgHandler@p+1,w
  6952  0731  0087               	movwf	7
  6953  0732  0181               	clrf	1
  6954  0733  3001               	movlw	1
  6955  0734  07E7               	addwf	USBStdSetCfgHandler@p,f
  6956  0735  3000               	movlw	0
  6957  0736  3DE8               	addwfc	USBStdSetCfgHandler@p+1,f
  6958  0737  3001               	movlw	1
  6959  0738  00E6               	movwf	??_USBStdSetCfgHandler
  6960  0739  0866               	movf	??_USBStdSetCfgHandler,w
  6961  073A  07E9               	addwf	USBStdSetCfgHandler@i_1174,f
  6962  073B  3002               	movlw	2
  6963  073C  0269               	subwf	USBStdSetCfgHandler@i_1174,w
  6964  073D  1C03               	skipc
  6965  073E  2F2E               	goto	i1l2965
  6966  073F                     i1l2973:	
  6967                           
  6968                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  6969  073F  3020               	movlw	32
  6970  0740  00F0               	movwf	memset@p1
  6971  0741  3000               	movlw	0
  6972  0742  00F1               	movwf	memset@p1+1
  6973  0743  3000               	movlw	0
  6974  0744  00F2               	movwf	memset@c
  6975  0745  00F3               	movwf	memset@c+1
  6976  0746  3030               	movlw	48
  6977  0747  00F4               	movwf	memset@n
  6978  0748  3000               	movlw	0
  6979  0749  00F5               	movwf	memset@n+1
  6980  074A  3197  27D0  3187   	fcall	_memset
  6981                           
  6982                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  6983  074D  003D               	movlb	29	; select bank29
  6984  074E  170E               	bsf	14,6	;volatile
  6985                           
  6986                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  6987  074F  0020               	movlb	0	; select bank0
  6988  0750  01EA               	clrf	USBStdSetCfgHandler@i
  6989  0751  3003               	movlw	3
  6990  0752  026A               	subwf	USBStdSetCfgHandler@i,w
  6991  0753  1803               	btfsc	3,0
  6992  0754  2F69               	goto	i1l2989
  6993  0755                     i1l2983:	
  6994                           
  6995                           ;usb_device.c: 1988: {
  6996                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  6997  0755  086A               	movf	USBStdSetCfgHandler@i,w
  6998  0756  3EC0               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  6999  0757  0086               	movwf	6
  7000  0758  3001               	movlw	1	; select bank3/4
  7001  0759  0087               	movwf	7
  7002  075A  0181               	clrf	1
  7003                           
  7004                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  7005  075B  086A               	movf	USBStdSetCfgHandler@i,w
  7006  075C  3EC3               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7007  075D  0086               	movwf	6
  7008  075E  3001               	movlw	1	; select bank3/4
  7009  075F  0087               	movwf	7
  7010  0760  0181               	clrf	1
  7011  0761  3001               	movlw	1
  7012  0762  00E6               	movwf	??_USBStdSetCfgHandler
  7013  0763  0866               	movf	??_USBStdSetCfgHandler,w
  7014  0764  07EA               	addwf	USBStdSetCfgHandler@i,f
  7015  0765  3003               	movlw	3
  7016  0766  026A               	subwf	USBStdSetCfgHandler@i,w
  7017  0767  1C03               	skipc
  7018  0768  2F55               	goto	i1l2983
  7019  0769                     i1l2989:	
  7020                           
  7021                           ;usb_device.c: 1991: }
  7022                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  7023  0769  30E5               	movlw	low _USBAlternateInterface
  7024  076A  00F0               	movwf	memset@p1
  7025  076B  3001               	movlw	high _USBAlternateInterface
  7026  076C  00F1               	movwf	memset@p1+1
  7027  076D  3000               	movlw	0
  7028  076E  00F2               	movwf	memset@c
  7029  076F  00F3               	movwf	memset@c+1
  7030  0770  3002               	movlw	2
  7031  0771  00F4               	movwf	memset@n
  7032  0772  3000               	movlw	0
  7033  0773  00F5               	movwf	memset@n+1
  7034  0774  3197  27D0  3187   	fcall	_memset
  7035                           
  7036                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  7037  0777  003D               	movlb	29	; select bank29
  7038  0778  130E               	bcf	14,6	;volatile
  7039                           
  7040                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7041  0779  3028               	movlw	40
  7042  077A  0023               	movlb	3	; select bank3
  7043  077B  00A7               	movwf	_pBDTEntryIn^(0+384)
  7044  077C  3000               	movlw	0
  7045  077D  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  7046                           
  7047                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  7048  077E  3020               	movlw	32
  7049  077F  0020               	movlb	0	; select bank0
  7050  0780  00E6               	movwf	??_USBStdSetCfgHandler
  7051  0781  0866               	movf	??_USBStdSetCfgHandler,w
  7052  0782  0021               	movlb	1	; select bank1
  7053  0783  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  7054                           
  7055                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  7056  0784  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  7057  0785  00E0               	movwf	_pBDTEntryEP0OutNext^(0+128)
  7058  0786  39FF               	andlw	255
  7059  0787  1D03               	skipz
  7060  0788  3000               	movlw	0
  7061  0789  00E1               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  7062                           
  7063                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  7064  078A  0020               	movlb	0	; select bank0
  7065  078B  0852               	movf	82,w	;volatile
  7066  078C  00E6               	movwf	??_USBStdSetCfgHandler
  7067  078D  0866               	movf	??_USBStdSetCfgHandler,w
  7068  078E  0022               	movlb	2	; select bank2
  7069  078F  00EF               	movwf	_USBActiveConfiguration^(0+256)	;volatile
  7070                           
  7071                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  7072  0790  086F               	movf	_USBActiveConfiguration^(0+256),w	;volatile
  7073  0791  1D03               	btfss	3,2
  7074  0792  2F9A               	goto	i1l3005
  7075                           
  7076                           ;usb_device.c: 2010: {
  7077                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  7078  0793  3010               	movlw	16
  7079  0794  0020               	movlb	0	; select bank0
  7080  0795  00E6               	movwf	??_USBStdSetCfgHandler
  7081  0796  0866               	movf	??_USBStdSetCfgHandler,w
  7082  0797  0022               	movlb	2	; select bank2
  7083  0798  00ED               	movwf	_USBDeviceState^(0+256)	;volatile
  7084                           
  7085                           ;usb_device.c: 2013: }
  7086  0799  0008               	return
  7087  079A                     i1l3005:	
  7088                           
  7089                           ;usb_device.c: 2014: else
  7090                           ;usb_device.c: 2015: {
  7091                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  7092  079A  3000               	movlw	0
  7093  079B  0020               	movlb	0	; select bank0
  7094  079C  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7095  079D  3001               	movlw	1
  7096  079E  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7097  079F  306F               	movlw	low _USBActiveConfiguration
  7098  07A0  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7099  07A1  3001               	movlw	high _USBActiveConfiguration
  7100  07A2  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7101  07A3  3001               	movlw	1
  7102  07A4  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7103  07A5  3000               	movlw	0
  7104  07A6  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7105  07A7  3189  21CE         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7106                           
  7107                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  7108  07A9  3020               	movlw	32
  7109  07AA  0020               	movlb	0	; select bank0
  7110  07AB  00E6               	movwf	??_USBStdSetCfgHandler
  7111  07AC  0866               	movf	??_USBStdSetCfgHandler,w
  7112  07AD  0022               	movlb	2	; select bank2
  7113  07AE  00ED               	movwf	_USBDeviceState^(0+256)	;volatile
  7114  07AF  0008               	return
  7115  07B0                     __end_of_USBStdSetCfgHandler:	
  7116                           
  7117                           	psect	text31
  7118  17D0                     __ptext31:	
  7119 ;; *************** function _memset *****************
  7120 ;; Defined at:
  7121 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;  p1              2    0[COMMON] PTR void 
  7124 ;;		 -> USBAlternateInterface(2), BDT(48), 
  7125 ;;  c               2    2[COMMON] int 
  7126 ;;  n               2    4[COMMON] unsigned int 
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;  p               2    6[COMMON] PTR unsigned char 
  7129 ;;		 -> USBAlternateInterface(2), BDT(48), 
  7130 ;; Return value:  Size  Location     Type
  7131 ;;                  2    0[COMMON] PTR void 
  7132 ;; Registers used:
  7133 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7134 ;; Tracked objects:
  7135 ;;		On entry : 0/0
  7136 ;;		On exit  : 0/0
  7137 ;;		Unchanged: 0/0
  7138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7139 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7140 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7142 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7143 ;;Total ram usage:        8 bytes
  7144 ;; Hardware stack levels used:    1
  7145 ;; This function calls:
  7146 ;;		Nothing
  7147 ;; This function is called by:
  7148 ;;		_USBStdSetCfgHandler
  7149 ;; This function uses a non-reentrant model
  7150 ;;
  7151                           
  7152                           
  7153                           ;psect for function _memset
  7154  17D0                     _memset:	
  7155                           
  7156                           ;incstack = 0
  7157                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7158  17D0  0871               	movf	memset@p1+1,w
  7159  17D1  00F7               	movwf	memset@p+1
  7160  17D2  0870               	movf	memset@p1,w
  7161  17D3  00F6               	movwf	memset@p
  7162  17D4                     i1l2895:	
  7163  17D4  3001               	movlw	1
  7164  17D5  02F4               	subwf	memset@n,f
  7165  17D6  3000               	movlw	0
  7166  17D7  3BF5               	subwfb	memset@n+1,f
  7167  17D8  0A74               	incf	memset@n,w
  7168  17D9  1903               	btfsc	3,2
  7169  17DA  0A75               	incf	memset@n+1,w
  7170  17DB  1903               	btfsc	3,2
  7171  17DC  0008               	return
  7172  17DD  0876               	movf	memset@p,w
  7173  17DE  0086               	movwf	6
  7174  17DF  0877               	movf	memset@p+1,w
  7175  17E0  0087               	movwf	7
  7176  17E1  0872               	movf	memset@c,w
  7177  17E2  0081               	movwf	1
  7178  17E3  3001               	movlw	1
  7179  17E4  07F6               	addwf	memset@p,f
  7180  17E5  3000               	movlw	0
  7181  17E6  3DF7               	addwfc	memset@p+1,f
  7182  17E7  2FD4               	goto	i1l2895
  7183  17E8                     __end_of_memset:	
  7184                           ;	Return value of _memset is never used
  7185                           
  7186                           
  7187                           	psect	text32
  7188  0B2F                     __ptext32:	
  7189 ;; *************** function _USBStdGetStatusHandler *****************
  7190 ;; Defined at:
  7191 ;;		line 2129 in file "../lib/usb/src/usb_device.c"
  7192 ;; Parameters:    Size  Location     Type
  7193 ;;		None
  7194 ;; Auto vars:     Size  Location     Type
  7195 ;;  p               2    1[COMMON] PTR struct __BDT
  7196 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  1    wreg      void 
  7199 ;; Registers used:
  7200 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7207 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7208 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7209 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7210 ;;Total ram usage:        3 bytes
  7211 ;; Hardware stack levels used:    1
  7212 ;; This function calls:
  7213 ;;		Nothing
  7214 ;; This function is called by:
  7215 ;;		_USBCheckStdRequest
  7216 ;; This function uses a non-reentrant model
  7217 ;;
  7218                           
  7219                           
  7220                           ;psect for function _USBStdGetStatusHandler
  7221  0B2F                     _USBStdGetStatusHandler:	
  7222                           
  7223                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  7224                           
  7225                           ;incstack = 0
  7226                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  7227  0B2F  0020               	movlb	0	; select bank0
  7228  0B30  01D8               	clrf	88	;volatile
  7229                           
  7230                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  7231  0B31  01D9               	clrf	89	;volatile
  7232                           
  7233                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  7234  0B32  2B6B               	goto	i1l3061
  7235  0B33                     i1l323:	
  7236                           ;usb_device.c: 2135: {
  7237                           ;usb_device.c: 2136: case (0x00):
  7238                           
  7239                           
  7240                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  7241  0B33  0023               	movlb	3	; select bank3
  7242  0B34  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  7243                           
  7244                           ;usb_device.c: 2145: }
  7245                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  7246                           
  7247                           ;usb_device.c: 2143: {
  7248                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
  7249                           
  7250                           ;usb_device.c: 2142: if(0 == 1)
  7251  0B35  0023               	movlb	3	; select bank3
  7252  0B36  034F               	decf	_RemoteWakeup^(0+384),w	;volatile
  7253  0B37  1D03               	btfss	3,2
  7254  0B38  2B77               	goto	i1l326
  7255                           
  7256                           ;usb_device.c: 2148: {
  7257                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  7258  0B39  0020               	movlb	0	; select bank0
  7259  0B3A  14D8               	bsf	88,1	;volatile
  7260                           
  7261                           ;usb_device.c: 2150: }
  7262                           ;usb_device.c: 2151: break;
  7263  0B3B  2B77               	goto	i1l326
  7264  0B3C                     i1l327:	
  7265                           ;usb_device.c: 2152: case (0x01):
  7266                           
  7267                           
  7268                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  7269  0B3C  0023               	movlb	3	; select bank3
  7270  0B3D  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  7271                           
  7272                           ;usb_device.c: 2154: break;
  7273  0B3E  2B77               	goto	i1l326
  7274  0B3F                     i1l328:	
  7275                           ;usb_device.c: 2155: case (0x02):
  7276                           
  7277                           
  7278                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  7279  0B3F  0023               	movlb	3	; select bank3
  7280  0B40  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  7281                           
  7282                           ;usb_device.c: 2160: {
  7283                           ;usb_device.c: 2161: BDT_ENTRY *p;
  7284                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  7285  0B41  0020               	movlb	0	; select bank0
  7286  0B42  1BD4               	btfsc	84,7	;volatile
  7287  0B43  2B4F               	goto	i1l3051
  7288                           
  7289                           ;usb_device.c: 2164: {
  7290                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7291  0B44  0854               	movf	84,w	;volatile
  7292  0B45  390F               	andlw	15
  7293  0B46  0709               	addwf	9,w
  7294  0B47  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7295  0B48  0086               	movwf	6
  7296  0B49  3001               	movlw	1	; select bank3/4
  7297  0B4A  0087               	movwf	7
  7298  0B4B  3F40               	moviw [0]fsr1
  7299  0B4C  00F1               	movwf	USBStdGetStatusHandler@p
  7300  0B4D  3F41               	moviw [1]fsr1
  7301  0B4E  2B59               	goto	L5
  7302  0B4F                     i1l3051:	
  7303                           ;usb_device.c: 2166: }
  7304                           
  7305                           
  7306                           ;usb_device.c: 2167: else
  7307                           ;usb_device.c: 2168: {
  7308                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7309  0B4F  0854               	movf	84,w	;volatile
  7310  0B50  390F               	andlw	15
  7311  0B51  0709               	addwf	9,w
  7312  0B52  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7313  0B53  0086               	movwf	6
  7314  0B54  3001               	movlw	1	; select bank3/4
  7315  0B55  0087               	movwf	7
  7316  0B56  3F40               	moviw [0]fsr1
  7317  0B57  00F1               	movwf	USBStdGetStatusHandler@p
  7318  0B58  3F41               	moviw [1]fsr1
  7319  0B59                     L5:	
  7320  0B59  00F2               	movwf	USBStdGetStatusHandler@p+1
  7321                           
  7322                           ;usb_device.c: 2170: }
  7323                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  7324  0B5A  0871               	movf	USBStdGetStatusHandler@p,w
  7325  0B5B  0086               	movwf	6
  7326  0B5C  0872               	movf	USBStdGetStatusHandler@p+1,w
  7327  0B5D  0087               	movwf	7
  7328  0B5E  1F81               	btfss	1,7
  7329  0B5F  2B77               	goto	i1l326
  7330  0B60  0871               	movf	USBStdGetStatusHandler@p,w
  7331  0B61  0086               	movwf	6
  7332  0B62  0872               	movf	USBStdGetStatusHandler@p+1,w
  7333  0B63  0087               	movwf	7
  7334  0B64  1D01               	btfss	1,2
  7335  0B65  2B77               	goto	i1l326
  7336                           
  7337                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  7338  0B66  3001               	movlw	1
  7339  0B67  00F0               	movwf	??_USBStdGetStatusHandler
  7340  0B68  0870               	movf	??_USBStdGetStatusHandler,w
  7341  0B69  00D8               	movwf	88	;volatile
  7342                           
  7343                           ;usb_device.c: 2175: }
  7344                           ;usb_device.c: 2176: }
  7345                           
  7346                           ;usb_device.c: 2174: break;
  7347  0B6A  2B77               	goto	i1l326
  7348  0B6B                     i1l3061:	
  7349  0B6B  0850               	movf	80,w	;volatile
  7350  0B6C  391F               	andlw	31
  7351                           
  7352                           ; Switch size 1, requested type "space"
  7353                           ; Number of cases is 3, Range of values is 0 to 2
  7354                           ; switch strategies available:
  7355                           ; Name         Instructions Cycles
  7356                           ; simple_byte           10     6 (average)
  7357                           ; direct_byte           12     6 (fixed)
  7358                           ; jumptable            260     6 (fixed)
  7359                           ;	Chosen strategy is simple_byte
  7360  0B6D  3A00               	xorlw	0	; case 0
  7361  0B6E  1903               	skipnz
  7362  0B6F  2B33               	goto	i1l323
  7363  0B70  3A01               	xorlw	1	; case 1
  7364  0B71  1903               	skipnz
  7365  0B72  2B3C               	goto	i1l327
  7366  0B73  3A03               	xorlw	3	; case 2
  7367  0B74  1903               	skipnz
  7368  0B75  2B3F               	goto	i1l328
  7369  0B76  2B77               	goto	i1l326
  7370  0B77                     i1l326:	
  7371                           
  7372                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  7373  0B77  0023               	movlb	3	; select bank3
  7374  0B78  1FB5               	btfss	(_inPipes^(0+384)+2),7	;volatile
  7375  0B79  0008               	return
  7376                           
  7377                           ;usb_device.c: 2179: {
  7378                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  7379  0B7A  3058               	movlw	88
  7380  0B7B  00B3               	movwf	_inPipes^(0+384)	;volatile
  7381  0B7C  3000               	movlw	0
  7382  0B7D  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  7383                           
  7384                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7385  0B7E  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  7386                           
  7387                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  7388  0B7F  3002               	movlw	2
  7389  0B80  00F0               	movwf	??_USBStdGetStatusHandler
  7390  0B81  0870               	movf	??_USBStdGetStatusHandler,w
  7391  0B82  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  7392  0B83  0008               	return
  7393  0B84                     __end_of_USBStdGetStatusHandler:	
  7394                           
  7395                           	psect	text33
  7396  0DED                     __ptext33:	
  7397 ;; *************** function _USBStdGetDscHandler *****************
  7398 ;; Defined at:
  7399 ;;		line 2043 in file "../lib/usb/src/usb_device.c"
  7400 ;; Parameters:    Size  Location     Type
  7401 ;;		None
  7402 ;; Auto vars:     Size  Location     Type
  7403 ;;		None
  7404 ;; Return value:  Size  Location     Type
  7405 ;;                  1    wreg      void 
  7406 ;; Registers used:
  7407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7408 ;; Tracked objects:
  7409 ;;		On entry : 0/0
  7410 ;;		On exit  : 0/0
  7411 ;;		Unchanged: 0/0
  7412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7415 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7416 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7417 ;;Total ram usage:        3 bytes
  7418 ;; Hardware stack levels used:    1
  7419 ;; This function calls:
  7420 ;;		Nothing
  7421 ;; This function is called by:
  7422 ;;		_USBCheckStdRequest
  7423 ;; This function uses a non-reentrant model
  7424 ;;
  7425                           
  7426                           
  7427                           ;psect for function _USBStdGetDscHandler
  7428  0DED                     _USBStdGetDscHandler:	
  7429                           
  7430                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  7431                           
  7432                           ;incstack = 0
  7433                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  7434  0DED  3080               	movlw	128
  7435  0DEE  0020               	movlb	0	; select bank0
  7436  0DEF  0650               	xorwf	80,w	;volatile
  7437  0DF0  1D03               	btfss	3,2
  7438  0DF1  0008               	return
  7439                           
  7440                           ;usb_device.c: 2046: {
  7441                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  7442  0DF2  30C0               	movlw	192
  7443  0DF3  00F0               	movwf	??_USBStdGetDscHandler
  7444  0DF4  0870               	movf	??_USBStdGetDscHandler,w
  7445  0DF5  0023               	movlb	3	; select bank3
  7446  0DF6  00B5               	movwf	(_inPipes^(0+384)+2)	;volatile
  7447                           
  7448                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  7449  0DF7  2E5F               	goto	i1l3039
  7450  0DF8                     i1l3013:	
  7451                           ;usb_device.c: 2050: {
  7452                           ;usb_device.c: 2051: case 0x01:
  7453                           
  7454                           
  7455                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  7456  0DF8  3005               	movlw	low (_device_dsc| (0+32768))
  7457  0DF9  0023               	movlb	3	; select bank3
  7458  0DFA  00B3               	movwf	_inPipes^(0+384)	;volatile
  7459  0DFB  3083               	movlw	high (_device_dsc| (0+32768))
  7460  0DFC  00B4               	movwf	(_inPipes^(0+384)+1)	;volatile
  7461                           
  7462                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  7463  0DFD  3000               	movlw	0
  7464  0DFE  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  7465  0DFF  3012               	movlw	18
  7466  0E00  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  7467                           
  7468                           ;usb_device.c: 2058: break;
  7469  0E01  0008               	return
  7470  0E02                     i1l3017:	
  7471                           ;usb_device.c: 2059: case 0x02:
  7472                           
  7473                           
  7474                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  7475  0E02  0020               	movlb	0	; select bank0
  7476  0E03  0852               	movf	82,w	;volatile
  7477  0E04  1D03               	btfss	3,2
  7478  0E05  2E35               	goto	i1l3025
  7479                           
  7480                           ;usb_device.c: 2064: {
  7481                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  7482  0E06  0852               	movf	82,w	;volatile
  7483  0E07  00F0               	movwf	??_USBStdGetDscHandler
  7484  0E08  01F1               	clrf	??_USBStdGetDscHandler+1
  7485  0E09  35F0               	lslf	??_USBStdGetDscHandler,f
  7486  0E0A  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  7487  0E0B  3058               	movlw	low (_USB_CD_Ptr| (0+32768))
  7488  0E0C  0770               	addwf	??_USBStdGetDscHandler,w
  7489  0E0D  0084               	movwf	4
  7490  0E0E  3082               	movlw	high (_USB_CD_Ptr| (0+32768))
  7491  0E0F  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  7492  0E10  0085               	movwf	5
  7493  0E11  3F00               	moviw [0]fsr0
  7494  0E12  0023               	movlb	3	; select bank3
  7495  0E13  00B3               	movwf	_inPipes^(0+384)	;volatile
  7496  0E14  3F01               	moviw [1]fsr0
  7497  0E15  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  7498                           
  7499                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  7500  0E16  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  7501  0E17  00F1               	movwf	??_USBStdGetDscHandler+1
  7502  0E18  0833               	movf	_inPipes^(0+384),w	;volatile
  7503  0E19  00F0               	movwf	??_USBStdGetDscHandler
  7504  0E1A  3002               	movlw	2
  7505  0E1B  0770               	addwf	??_USBStdGetDscHandler,w
  7506  0E1C  0084               	movwf	4
  7507  0E1D  0871               	movf	??_USBStdGetDscHandler+1,w
  7508  0E1E  1803               	skipnc
  7509  0E1F  0A71               	incf	??_USBStdGetDscHandler+1,w
  7510  0E20  0085               	movwf	5
  7511  0E21  0800               	movf	0,w	;code access
  7512  0E22  00F2               	movwf	??_USBStdGetDscHandler+2
  7513  0E23  0872               	movf	??_USBStdGetDscHandler+2,w
  7514  0E24  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  7515                           
  7516                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  7517  0E25  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  7518  0E26  00F1               	movwf	??_USBStdGetDscHandler+1
  7519  0E27  0833               	movf	_inPipes^(0+384),w	;volatile
  7520  0E28  00F0               	movwf	??_USBStdGetDscHandler
  7521  0E29  3003               	movlw	3
  7522  0E2A  0770               	addwf	??_USBStdGetDscHandler,w
  7523  0E2B  0084               	movwf	4
  7524  0E2C  0871               	movf	??_USBStdGetDscHandler+1,w
  7525  0E2D  1803               	skipnc
  7526  0E2E  0A71               	incf	??_USBStdGetDscHandler+1,w
  7527  0E2F  0085               	movwf	5
  7528  0E30  0800               	movf	0,w	;code access
  7529  0E31  00F2               	movwf	??_USBStdGetDscHandler+2
  7530  0E32  0872               	movf	??_USBStdGetDscHandler+2,w
  7531  0E33  00B7               	movwf	(_inPipes^(0+384)+4)	;volatile
  7532                           
  7533                           ;usb_device.c: 2076: }
  7534  0E34  0008               	return
  7535  0E35                     i1l3025:	
  7536                           
  7537                           ;usb_device.c: 2077: else
  7538                           ;usb_device.c: 2078: {
  7539                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  7540  0E35  0023               	movlb	3	; select bank3
  7541  0E36  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  7542                           
  7543                           ;usb_device.c: 2080: }
  7544                           ;usb_device.c: 2081: break;
  7545  0E37  0008               	return
  7546  0E38                     i1l3027:	
  7547                           ;usb_device.c: 2082: case 0x03:
  7548                           
  7549                           
  7550                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  7551  0E38  3003               	movlw	3
  7552  0E39  0020               	movlb	0	; select bank0
  7553  0E3A  0252               	subwf	82,w	;volatile
  7554  0E3B  1803               	skipnc
  7555  0E3C  2E59               	goto	i1l3033
  7556                           
  7557                           ;usb_device.c: 2087: {
  7558                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  7559  0E3D  0852               	movf	82,w	;volatile
  7560  0E3E  00F0               	movwf	??_USBStdGetDscHandler
  7561  0E3F  01F1               	clrf	??_USBStdGetDscHandler+1
  7562  0E40  35F0               	lslf	??_USBStdGetDscHandler,f
  7563  0E41  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  7564  0E42  3052               	movlw	low (_USB_SD_Ptr| (0+32768))
  7565  0E43  0770               	addwf	??_USBStdGetDscHandler,w
  7566  0E44  0084               	movwf	4
  7567  0E45  3082               	movlw	high (_USB_SD_Ptr| (0+32768))
  7568  0E46  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  7569  0E47  0085               	movwf	5
  7570  0E48  3F00               	moviw [0]fsr0
  7571  0E49  0023               	movlb	3	; select bank3
  7572  0E4A  00B3               	movwf	_inPipes^(0+384)	;volatile
  7573  0E4B  3F01               	moviw [1]fsr0
  7574  0E4C  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  7575                           
  7576                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  7577  0E4D  0833               	movf	_inPipes^(0+384),w	;volatile
  7578  0E4E  0084               	movwf	4
  7579  0E4F  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  7580  0E50  0085               	movwf	5
  7581  0E51  0800               	movf	0,w	;code access
  7582  0E52  00F0               	movwf	??_USBStdGetDscHandler
  7583  0E53  01F1               	clrf	??_USBStdGetDscHandler+1
  7584  0E54  0870               	movf	??_USBStdGetDscHandler,w
  7585  0E55  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  7586  0E56  0871               	movf	??_USBStdGetDscHandler+1,w
  7587  0E57  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  7588                           
  7589                           ;usb_device.c: 2092: }
  7590  0E58  0008               	return
  7591  0E59                     i1l3033:	
  7592                           
  7593                           ;usb_device.c: 2102: else
  7594                           ;usb_device.c: 2103: {
  7595                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  7596  0E59  0023               	movlb	3	; select bank3
  7597  0E5A  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  7598                           
  7599                           ;usb_device.c: 2105: }
  7600                           ;usb_device.c: 2106: break;
  7601  0E5B  0008               	return
  7602  0E5C                     i1l3035:	
  7603                           ;usb_device.c: 2107: default:
  7604                           
  7605                           
  7606                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  7607  0E5C  0023               	movlb	3	; select bank3
  7608  0E5D  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  7609                           
  7610                           ;usb_device.c: 2110: }
  7611                           
  7612                           ;usb_device.c: 2109: break;
  7613  0E5E  0008               	return
  7614  0E5F                     i1l3039:	
  7615  0E5F  0020               	movlb	0	; select bank0
  7616  0E60  0853               	movf	83,w	;volatile
  7617                           
  7618                           ; Switch size 1, requested type "space"
  7619                           ; Number of cases is 3, Range of values is 1 to 3
  7620                           ; switch strategies available:
  7621                           ; Name         Instructions Cycles
  7622                           ; simple_byte           10     6 (average)
  7623                           ; direct_byte           15     9 (fixed)
  7624                           ; jumptable            263     9 (fixed)
  7625                           ;	Chosen strategy is simple_byte
  7626  0E61  3A01               	xorlw	1	; case 1
  7627  0E62  1903               	skipnz
  7628  0E63  2DF8               	goto	i1l3013
  7629  0E64  3A03               	xorlw	3	; case 2
  7630  0E65  1903               	skipnz
  7631  0E66  2E02               	goto	i1l3017
  7632  0E67  3A01               	xorlw	1	; case 3
  7633  0E68  1903               	skipnz
  7634  0E69  2E38               	goto	i1l3027
  7635  0E6A  2E5C               	goto	i1l3035
  7636  0E6B  0008               	return
  7637  0E6C                     __end_of_USBStdGetDscHandler:	
  7638                           
  7639                           	psect	text34
  7640  0042                     __ptext34:	
  7641 ;; *************** function _USBStdFeatureReqHandler *****************
  7642 ;; Defined at:
  7643 ;;		line 2754 in file "../lib/usb/src/usb_device.c"
  7644 ;; Parameters:    Size  Location     Type
  7645 ;;		None
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;  p               2   11[BANK0 ] PTR struct __BDT
  7648 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  7649 ;;  pUEP            2    8[BANK0 ] PTR unsigned char 
  7650 ;;		 -> UEP0(1), 
  7651 ;;  current_ep_d    1   10[BANK0 ] struct .
  7652 ;; Return value:  Size  Location     Type
  7653 ;;                  1    wreg      void 
  7654 ;; Registers used:
  7655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7656 ;; Tracked objects:
  7657 ;;		On entry : 0/0
  7658 ;;		On exit  : 0/0
  7659 ;;		Unchanged: 0/0
  7660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7662 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7663 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7664 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7665 ;;Total ram usage:        7 bytes
  7666 ;; Hardware stack levels used:    1
  7667 ;; Hardware stack levels required when called:    4
  7668 ;; This function calls:
  7669 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7670 ;; This function is called by:
  7671 ;;		_USBCheckStdRequest
  7672 ;; This function uses a non-reentrant model
  7673 ;;
  7674                           
  7675                           
  7676                           ;psect for function _USBStdFeatureReqHandler
  7677  0042                     _USBStdFeatureReqHandler:	
  7678                           
  7679                           ;usb_device.c: 2756: BDT_ENTRY *p;
  7680                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  7681                           ;usb_device.c: 2761: unsigned char* pUEP;
  7682                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  7683                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  7684                           
  7685                           ;incstack = 0
  7686                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7687  0042  0020               	movlb	0	; select bank0
  7688  0043  0352               	decf	82,w	;volatile
  7689  0044  1D03               	btfss	3,2
  7690  0045  285A               	goto	i1l3081
  7691  0046  0850               	movf	80,w	;volatile
  7692  0047  391F               	andlw	31
  7693  0048  3A00               	xorlw	0
  7694  0049  1D03               	skipz
  7695  004A  285A               	goto	i1l3081
  7696                           
  7697                           ;usb_device.c: 2801: {
  7698                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  7699  004B  0023               	movlb	3	; select bank3
  7700  004C  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  7701                           
  7702                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  7703  004D  3003               	movlw	3
  7704  004E  0020               	movlb	0	; select bank0
  7705  004F  0651               	xorwf	81,w	;volatile
  7706  0050  1D03               	btfss	3,2
  7707  0051  2858               	goto	i1l3079
  7708                           
  7709                           ;usb_device.c: 2804: RemoteWakeup = 1;
  7710  0052  3001               	movlw	1
  7711  0053  00E6               	movwf	??_USBStdFeatureReqHandler
  7712  0054  0866               	movf	??_USBStdFeatureReqHandler,w
  7713  0055  0023               	movlb	3	; select bank3
  7714  0056  00CF               	movwf	_RemoteWakeup^(0+384)	;volatile
  7715  0057  285A               	goto	i1l3081
  7716  0058                     i1l3079:	
  7717                           
  7718                           ;usb_device.c: 2805: else
  7719                           ;usb_device.c: 2806: RemoteWakeup = 0;
  7720  0058  0023               	movlb	3	; select bank3
  7721  0059  01CF               	clrf	_RemoteWakeup^(0+384)	;volatile
  7722  005A                     i1l3081:	
  7723                           
  7724                           ;usb_device.c: 2807: }
  7725                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  7726                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  7727                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  7728                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  7729  005A  0020               	movlb	0	; select bank0
  7730  005B  0852               	movf	82,w	;volatile
  7731  005C  1D03               	btfss	3,2
  7732  005D  0008               	return
  7733  005E  0850               	movf	80,w	;volatile
  7734  005F  391F               	andlw	31
  7735  0060  3A02               	xorlw	2
  7736  0061  1D03               	skipz
  7737  0062  0008               	return
  7738  0063  0854               	movf	84,w	;volatile
  7739  0064  390F               	andlw	15
  7740  0065  3A00               	xorlw	0
  7741  0066  1903               	skipnz
  7742  0067  0008               	return
  7743  0068  0854               	movf	84,w	;volatile
  7744  0069  390F               	andlw	15
  7745  006A  00E6               	movwf	??_USBStdFeatureReqHandler
  7746  006B  3003               	movlw	3
  7747  006C  0266               	subwf	??_USBStdFeatureReqHandler,w
  7748  006D  1803               	skipnc
  7749  006E  0008               	return
  7750  006F  3020               	movlw	32
  7751  0070  0022               	movlb	2	; select bank2
  7752  0071  066D               	xorwf	_USBDeviceState^(0+256),w	;volatile
  7753  0072  1D03               	btfss	3,2
  7754  0073  0008               	return
  7755                           
  7756                           ;usb_device.c: 2814: {
  7757                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  7758  0074  0023               	movlb	3	; select bank3
  7759  0075  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  7760                           
  7761                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  7762  0076  0020               	movlb	0	; select bank0
  7763  0077  1BD4               	btfsc	84,7	;volatile
  7764  0078  2888               	goto	i1l3095
  7765                           
  7766                           ;usb_device.c: 2821: {
  7767                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7768  0079  0854               	movf	84,w	;volatile
  7769  007A  390F               	andlw	15
  7770  007B  0709               	addwf	9,w
  7771  007C  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7772  007D  0086               	movwf	6
  7773  007E  3001               	movlw	1	; select bank3/4
  7774  007F  0087               	movwf	7
  7775  0080  3F40               	moviw [0]fsr1
  7776  0081  00EB               	movwf	USBStdFeatureReqHandler@p
  7777  0082  3F41               	moviw [1]fsr1
  7778  0083  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7779                           
  7780                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  7781  0084  0854               	movf	84,w	;volatile
  7782  0085  390F               	andlw	15
  7783  0086  3EC3               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7784  0087  2896               	goto	L6
  7785  0088                     i1l3095:	
  7786                           ;usb_device.c: 2824: }
  7787                           
  7788                           
  7789                           ;usb_device.c: 2825: else
  7790                           ;usb_device.c: 2826: {
  7791                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7792  0088  0854               	movf	84,w	;volatile
  7793  0089  390F               	andlw	15
  7794  008A  0709               	addwf	9,w
  7795  008B  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7796  008C  0086               	movwf	6
  7797  008D  3001               	movlw	1	; select bank3/4
  7798  008E  0087               	movwf	7
  7799  008F  3F40               	moviw [0]fsr1
  7800  0090  00EB               	movwf	USBStdFeatureReqHandler@p
  7801  0091  3F41               	moviw [1]fsr1
  7802  0092  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7803                           
  7804                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  7805  0093  0854               	movf	84,w	;volatile
  7806  0094  390F               	andlw	15
  7807  0095  3EC0               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7808  0096                     L6:	
  7809  0096  0086               	movwf	6
  7810  0097  3001               	movlw	1	; select bank3/4
  7811  0098  0087               	movwf	7
  7812  0099  0801               	movf	1,w
  7813  009A  00E6               	movwf	??_USBStdFeatureReqHandler
  7814  009B  0866               	movf	??_USBStdFeatureReqHandler,w
  7815  009C  00EA               	movwf	USBStdFeatureReqHandler@current_ep_data
  7816                           
  7817                           ;usb_device.c: 2829: }
  7818                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  7819  009D  186A               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  7820  009E  28A9               	goto	i1l3101
  7821                           
  7822                           ;usb_device.c: 2836: {
  7823                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  7824  009F  30FB               	movlw	251
  7825  00A0  00E6               	movwf	??_USBStdFeatureReqHandler
  7826  00A1  30FF               	movlw	255
  7827  00A2  00E7               	movwf	??_USBStdFeatureReqHandler+1
  7828  00A3  086B               	movf	USBStdFeatureReqHandler@p,w
  7829  00A4  0566               	andwf	??_USBStdFeatureReqHandler,w
  7830  00A5  00EB               	movwf	USBStdFeatureReqHandler@p
  7831  00A6  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7832  00A7  0567               	andwf	??_USBStdFeatureReqHandler+1,w
  7833  00A8  28AE               	goto	L7
  7834  00A9                     i1l3101:	
  7835                           ;usb_device.c: 2838: }
  7836                           
  7837                           
  7838                           ;usb_device.c: 2839: else
  7839                           ;usb_device.c: 2840: {
  7840                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  7841  00A9  3004               	movlw	4
  7842  00AA  046B               	iorwf	USBStdFeatureReqHandler@p,w
  7843  00AB  00EB               	movwf	USBStdFeatureReqHandler@p
  7844  00AC  3000               	movlw	0
  7845  00AD  046C               	iorwf	USBStdFeatureReqHandler@p+1,w
  7846  00AE                     L7:	
  7847  00AE  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7848                           
  7849                           ;usb_device.c: 2842: }
  7850                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  7851  00AF  1BD4               	btfsc	84,7	;volatile
  7852  00B0  28BD               	goto	i1l3107
  7853                           
  7854                           ;usb_device.c: 2848: {
  7855                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7856  00B1  0854               	movf	84,w	;volatile
  7857  00B2  390F               	andlw	15
  7858  00B3  0709               	addwf	9,w
  7859  00B4  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7860  00B5  0086               	movwf	6
  7861  00B6  3001               	movlw	1	; select bank3/4
  7862  00B7  0087               	movwf	7
  7863  00B8  086B               	movf	USBStdFeatureReqHandler@p,w
  7864  00B9  3FC0               	movwi [0]fsr1
  7865  00BA  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7866  00BB  3FC1               	movwi [1]fsr1
  7867                           
  7868                           ;usb_device.c: 2850: }
  7869  00BC  28C8               	goto	i1l3109
  7870  00BD                     i1l3107:	
  7871                           
  7872                           ;usb_device.c: 2851: else
  7873                           ;usb_device.c: 2852: {
  7874                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7875  00BD  0854               	movf	84,w	;volatile
  7876  00BE  390F               	andlw	15
  7877  00BF  0709               	addwf	9,w
  7878  00C0  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7879  00C1  0086               	movwf	6
  7880  00C2  3001               	movlw	1	; select bank3/4
  7881  00C3  0087               	movwf	7
  7882  00C4  086B               	movf	USBStdFeatureReqHandler@p,w
  7883  00C5  3FC0               	movwi [0]fsr1
  7884  00C6  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7885  00C7  3FC1               	movwi [1]fsr1
  7886  00C8                     i1l3109:	
  7887                           
  7888                           ;usb_device.c: 2854: }
  7889                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  7890  00C8  3003               	movlw	3
  7891  00C9  0651               	xorwf	81,w	;volatile
  7892  00CA  1D03               	btfss	3,2
  7893  00CB  28EA               	goto	i1l3123
  7894                           
  7895                           ;usb_device.c: 2858: {
  7896                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  7897  00CC  086B               	movf	USBStdFeatureReqHandler@p,w
  7898  00CD  0086               	movwf	6
  7899  00CE  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7900  00CF  0087               	movwf	7
  7901  00D0  1F81               	btfss	1,7
  7902  00D1  28DF               	goto	i1l3119
  7903                           
  7904                           ;usb_device.c: 2860: {
  7905                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  7906  00D2  1BD4               	btfsc	84,7	;volatile
  7907  00D3  28D8               	goto	i1l3117
  7908                           
  7909                           ;usb_device.c: 2864: {
  7910                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7911  00D4  0854               	movf	84,w	;volatile
  7912  00D5  390F               	andlw	15
  7913  00D6  3EC3               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7914  00D7  28DB               	goto	L8
  7915  00D8                     i1l3117:	
  7916                           ;usb_device.c: 2866: }
  7917                           
  7918                           
  7919                           ;usb_device.c: 2867: else
  7920                           ;usb_device.c: 2868: {
  7921                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7922  00D8  0854               	movf	84,w	;volatile
  7923  00D9  390F               	andlw	15
  7924  00DA  3EC0               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7925  00DB                     L8:	
  7926  00DB  0086               	movwf	6
  7927  00DC  3001               	movlw	1	; select bank3/4
  7928  00DD  0087               	movwf	7
  7929  00DE  1481               	bsf	1,1
  7930  00DF                     i1l3119:	
  7931                           
  7932                           ;usb_device.c: 2870: }
  7933                           ;usb_device.c: 2871: }
  7934                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  7935  00DF  086B               	movf	USBStdFeatureReqHandler@p,w
  7936  00E0  0086               	movwf	6
  7937  00E1  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7938  00E2  0087               	movwf	7
  7939  00E3  1501               	bsf	1,2
  7940                           
  7941                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  7942  00E4  086B               	movf	USBStdFeatureReqHandler@p,w
  7943  00E5  0086               	movwf	6
  7944  00E6  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7945  00E7  0087               	movwf	7
  7946  00E8  1781               	bsf	1,7
  7947                           
  7948                           ;usb_device.c: 2876: }
  7949  00E9  0008               	return
  7950  00EA                     i1l3123:	
  7951                           
  7952                           ;usb_device.c: 2877: else
  7953                           ;usb_device.c: 2878: {
  7954                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7955  00EA  3004               	movlw	4
  7956  00EB  066B               	xorwf	USBStdFeatureReqHandler@p,w
  7957  00EC  00EB               	movwf	USBStdFeatureReqHandler@p
  7958  00ED  3000               	movlw	0
  7959  00EE  066C               	xorwf	USBStdFeatureReqHandler@p+1,w
  7960  00EF  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7961                           
  7962                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  7963  00F0  086B               	movf	USBStdFeatureReqHandler@p,w
  7964  00F1  0086               	movwf	6
  7965  00F2  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7966  00F3  0087               	movwf	7
  7967  00F4  1F81               	btfss	1,7
  7968  00F5  2913               	goto	i1l3133
  7969                           
  7970                           ;usb_device.c: 2885: {
  7971                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  7972  00F6  307F               	movlw	127
  7973  00F7  00E6               	movwf	??_USBStdFeatureReqHandler
  7974  00F8  086B               	movf	USBStdFeatureReqHandler@p,w
  7975  00F9  0086               	movwf	6
  7976  00FA  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7977  00FB  0087               	movwf	7
  7978  00FC  0866               	movf	??_USBStdFeatureReqHandler,w
  7979  00FD  0581               	andwf	1,f
  7980                           
  7981                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  7982  00FE  086B               	movf	USBStdFeatureReqHandler@p,w
  7983  00FF  0086               	movwf	6
  7984  0100  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7985  0101  0087               	movwf	7
  7986  0102  1701               	bsf	1,6
  7987                           
  7988                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7989  0103  3000               	movlw	0
  7990  0104  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7991  0105  3005               	movlw	5
  7992  0106  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7993  0107  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7994  0108  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7995  0109  086B               	movf	USBStdFeatureReqHandler@p,w
  7996  010A  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7997  010B  3002               	movlw	2
  7998  010C  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7999  010D  3000               	movlw	0
  8000  010E  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  8001  010F  3189  21CE  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  8002                           
  8003                           ;usb_device.c: 2891: }
  8004  0112  2919               	goto	i1l3135
  8005  0113                     i1l3133:	
  8006                           
  8007                           ;usb_device.c: 2892: else
  8008                           ;usb_device.c: 2893: {
  8009                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  8010  0113  0020               	movlb	0	; select bank0
  8011  0114  086B               	movf	USBStdFeatureReqHandler@p,w
  8012  0115  0086               	movwf	6
  8013  0116  086C               	movf	USBStdFeatureReqHandler@p+1,w
  8014  0117  0087               	movwf	7
  8015  0118  1701               	bsf	1,6
  8016  0119                     i1l3135:	
  8017                           
  8018                           ;usb_device.c: 2896: }
  8019                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  8020  0119  3004               	movlw	4
  8021  011A  0020               	movlb	0	; select bank0
  8022  011B  066B               	xorwf	USBStdFeatureReqHandler@p,w
  8023  011C  00EB               	movwf	USBStdFeatureReqHandler@p
  8024  011D  3000               	movlw	0
  8025  011E  066C               	xorwf	USBStdFeatureReqHandler@p+1,w
  8026  011F  00EC               	movwf	USBStdFeatureReqHandler@p+1
  8027                           
  8028                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  8029  0120  18EA               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  8030  0121  2928               	goto	i1l419
  8031  0122  086B               	movf	USBStdFeatureReqHandler@p,w
  8032  0123  0086               	movwf	6
  8033  0124  086C               	movf	USBStdFeatureReqHandler@p+1,w
  8034  0125  0087               	movwf	7
  8035  0126  1F81               	btfss	1,7
  8036  0127  294D               	goto	i1l3147
  8037  0128                     i1l419:	
  8038                           
  8039                           ;usb_device.c: 2907: {
  8040                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  8041  0128  1BD4               	btfsc	84,7	;volatile
  8042  0129  292E               	goto	i1l3143
  8043                           
  8044                           ;usb_device.c: 2909: {
  8045                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  8046  012A  0854               	movf	84,w	;volatile
  8047  012B  390F               	andlw	15
  8048  012C  3EC3               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  8049  012D  2931               	goto	L9
  8050  012E                     i1l3143:	
  8051                           ;usb_device.c: 2911: }
  8052                           
  8053                           
  8054                           ;usb_device.c: 2912: else
  8055                           ;usb_device.c: 2913: {
  8056                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  8057  012E  0854               	movf	84,w	;volatile
  8058  012F  390F               	andlw	15
  8059  0130  3EC0               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  8060  0131                     L9:	
  8061  0131  0086               	movwf	6
  8062  0132  3001               	movlw	1	; select bank3/4
  8063  0133  0087               	movwf	7
  8064  0134  1081               	bcf	1,1
  8065                           
  8066                           ;usb_device.c: 2915: }
  8067                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  8068  0135  303B               	movlw	59
  8069  0136  00E6               	movwf	??_USBStdFeatureReqHandler
  8070  0137  086B               	movf	USBStdFeatureReqHandler@p,w
  8071  0138  0086               	movwf	6
  8072  0139  086C               	movf	USBStdFeatureReqHandler@p+1,w
  8073  013A  0087               	movwf	7
  8074  013B  0866               	movf	??_USBStdFeatureReqHandler,w
  8075  013C  0581               	andwf	1,f
  8076                           
  8077                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  8078  013D  3000               	movlw	0
  8079  013E  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  8080  013F  3005               	movlw	5
  8081  0140  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  8082  0141  086C               	movf	USBStdFeatureReqHandler@p+1,w
  8083  0142  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  8084  0143  086B               	movf	USBStdFeatureReqHandler@p,w
  8085  0144  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  8086  0145  3002               	movlw	2
  8087  0146  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  8088  0147  3000               	movlw	0
  8089  0148  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  8090  0149  3189  21CE  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  8091                           
  8092                           ;usb_device.c: 2921: }
  8093  014C  2956               	goto	i1l3149
  8094  014D                     i1l3147:	
  8095                           
  8096                           ;usb_device.c: 2922: else
  8097                           ;usb_device.c: 2923: {
  8098                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  8099  014D  303B               	movlw	59
  8100  014E  0020               	movlb	0	; select bank0
  8101  014F  00E6               	movwf	??_USBStdFeatureReqHandler
  8102  0150  086B               	movf	USBStdFeatureReqHandler@p,w
  8103  0151  0086               	movwf	6
  8104  0152  086C               	movf	USBStdFeatureReqHandler@p+1,w
  8105  0153  0087               	movwf	7
  8106  0154  0866               	movf	??_USBStdFeatureReqHandler,w
  8107  0155  0581               	andwf	1,f
  8108  0156                     i1l3149:	
  8109                           
  8110                           ;usb_device.c: 2926: }
  8111                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  8112  0156  0020               	movlb	0	; select bank0
  8113  0157  0854               	movf	84,w	;volatile
  8114  0158  390F               	andlw	15
  8115  0159  3E98               	addlw	152
  8116  015A  00E6               	movwf	??_USBStdFeatureReqHandler
  8117  015B  01E7               	clrf	??_USBStdFeatureReqHandler+1
  8118  015C  300E               	movlw	14
  8119  015D  3DE7               	addwfc	??_USBStdFeatureReqHandler+1,f
  8120  015E  0866               	movf	??_USBStdFeatureReqHandler,w
  8121  015F  00E8               	movwf	USBStdFeatureReqHandler@pUEP
  8122  0160  0867               	movf	??_USBStdFeatureReqHandler+1,w
  8123  0161  00E9               	movwf	USBStdFeatureReqHandler@pUEP+1
  8124                           
  8125                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  8126  0162  30FE               	movlw	254
  8127  0163  00E6               	movwf	??_USBStdFeatureReqHandler
  8128  0164  0868               	movf	USBStdFeatureReqHandler@pUEP,w
  8129  0165  0086               	movwf	6
  8130  0166  0869               	movf	USBStdFeatureReqHandler@pUEP+1,w
  8131  0167  0087               	movwf	7
  8132  0168  0866               	movf	??_USBStdFeatureReqHandler,w
  8133  0169  0581               	andwf	1,f
  8134  016A  0008               	return
  8135  016B                     __end_of_USBStdFeatureReqHandler:	
  8136                           
  8137                           	psect	text35
  8138  09CE                     __ptext35:	
  8139 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  8140 ;; Defined at:
  8141 ;;		line 51 in file "../src/usb_events.c"
  8142 ;; Parameters:    Size  Location     Type
  8143 ;;  event           2    0[BANK0 ] enum E2645
  8144 ;;  pdata           2    2[BANK0 ] PTR void 
  8145 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
  8146 ;;		 -> BDT(48), 
  8147 ;;  size            2    4[BANK0 ] unsigned int 
  8148 ;; Auto vars:     Size  Location     Type
  8149 ;;		None
  8150 ;; Return value:  Size  Location     Type
  8151 ;;                  1    wreg      unsigned char 
  8152 ;; Registers used:
  8153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8154 ;; Tracked objects:
  8155 ;;		On entry : 0/0
  8156 ;;		On exit  : 0/0
  8157 ;;		Unchanged: 0/0
  8158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8159 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8162 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8163 ;;Total ram usage:        6 bytes
  8164 ;; Hardware stack levels used:    1
  8165 ;; Hardware stack levels required when called:    3
  8166 ;; This function calls:
  8167 ;;		_USBCheckCDCRequest
  8168 ;;		i1_CDCInitEP
  8169 ;;		i1_SYSTEM_Initialize
  8170 ;; This function is called by:
  8171 ;;		_USBDeviceTasks
  8172 ;;		_USBStdSetCfgHandler
  8173 ;;		_USBSuspend
  8174 ;;		_USBWakeFromSuspend
  8175 ;;		_USBCtrlTrfSetupHandler
  8176 ;;		_USBCheckStdRequest
  8177 ;;		_USBStdFeatureReqHandler
  8178 ;; This function uses a non-reentrant model
  8179 ;;
  8180                           
  8181                           
  8182                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  8183  09CE                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  8184                           
  8185                           ;usb_events.c: 53: switch( (int) event )
  8186                           
  8187                           ;incstack = 0
  8188                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  8189  09CE  29DD               	goto	i1l2839
  8190  09CF                     i1l2829:	
  8191                           ;usb_events.c: 64: case EVENT_SUSPEND:
  8192                           
  8193                           ;usb_events.c: 62: break;
  8194                           
  8195                           ;usb_events.c: 58: case EVENT_SOF:
  8196                           
  8197                           ;usb_events.c: 56: break;
  8198                           
  8199                           ;usb_events.c: 54: {
  8200                           ;usb_events.c: 55: case EVENT_TRANSFER:
  8201                           
  8202                           
  8203                           ;usb_events.c: 74: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
  8204  09CF  3001               	movlw	1
  8205  09D0  3197  277A         	fcall	i1_SYSTEM_Initialize
  8206                           
  8207                           ;usb_events.c: 75: break;
  8208  09D2  0008               	return
  8209  09D3                     i1l2831:	
  8210                           ;usb_events.c: 77: case EVENT_RESUME:
  8211                           
  8212                           
  8213                           ;usb_events.c: 85: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
  8214  09D3  3002               	movlw	2
  8215  09D4  3197  277A         	fcall	i1_SYSTEM_Initialize
  8216                           
  8217                           ;usb_events.c: 86: break;
  8218  09D6  0008               	return
  8219  09D7                     i1l2833:	
  8220                           ;usb_events.c: 88: case EVENT_CONFIGURED:
  8221                           
  8222                           
  8223                           ;usb_events.c: 91: CDCInitEP();
  8224  09D7  3189  2161         	fcall	i1_CDCInitEP
  8225                           
  8226                           ;usb_events.c: 96: break;
  8227                           
  8228                           ;usb_events.c: 95: case EVENT_SET_DESCRIPTOR:
  8229                           
  8230                           ;usb_events.c: 93: break;
  8231  09D9  0008               	return
  8232  09DA                     i1l2835:	
  8233                           ;usb_events.c: 98: case EVENT_EP0_REQUEST:
  8234                           
  8235                           
  8236                           ;usb_events.c: 101: USBCheckCDCRequest();
  8237  09DA  318B  23E0         	fcall	_USBCheckCDCRequest
  8238                           
  8239                           ;usb_events.c: 112: }
  8240                           
  8241                           ;usb_events.c: 111: break;
  8242                           
  8243                           ;usb_events.c: 110: default:
  8244                           
  8245                           ;usb_events.c: 108: break;
  8246                           
  8247                           ;usb_events.c: 107: case EVENT_TRANSFER_TERMINATED:
  8248                           
  8249                           ;usb_events.c: 105: break;
  8250                           
  8251                           ;usb_events.c: 104: case EVENT_BUS_ERROR:
  8252                           
  8253                           ;usb_events.c: 102: break;
  8254  09DC  0008               	return
  8255  09DD                     i1l2839:	
  8256                           
  8257                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  8258                           ; Switch size 1, requested type "space"
  8259                           ; Number of cases is 2, Range of values is 0 to 127
  8260                           ; switch strategies available:
  8261                           ; Name         Instructions Cycles
  8262                           ; simple_byte            7     4 (average)
  8263                           ; direct_byte          262     6 (fixed)
  8264                           ; jumptable            260     6 (fixed)
  8265                           ;	Chosen strategy is simple_byte
  8266  09DD  0020               	movlb	0	; select bank0
  8267  09DE  0861               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  8268  09DF  3A00               	xorlw	0	; case 0
  8269  09E0  1903               	skipnz
  8270  09E1  29E6               	goto	i1l4837
  8271  09E2  3A7F               	xorlw	127	; case 127
  8272  09E3  1903               	skipnz
  8273  09E4  2A00               	goto	i1l4839
  8274  09E5  2A05               	goto	i1l35
  8275  09E6                     i1l4837:	
  8276                           
  8277                           ; Switch size 1, requested type "space"
  8278                           ; Number of cases is 8, Range of values is 1 to 117
  8279                           ; switch strategies available:
  8280                           ; Name         Instructions Cycles
  8281                           ; simple_byte           25    13 (average)
  8282                           ; direct_byte          243     9 (fixed)
  8283                           ; jumptable            263     9 (fixed)
  8284                           ;	Chosen strategy is simple_byte
  8285  09E6  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  8286  09E7  3A01               	xorlw	1	; case 1
  8287  09E8  1903               	skipnz
  8288  09E9  29D7               	goto	i1l2833
  8289  09EA  3A03               	xorlw	3	; case 2
  8290  09EB  1903               	skipnz
  8291  09EC  2A05               	goto	i1l35
  8292  09ED  3A01               	xorlw	1	; case 3
  8293  09EE  1903               	skipnz
  8294  09EF  29DA               	goto	i1l2835
  8295  09F0  3A06               	xorlw	6	; case 5
  8296  09F1  1903               	skipnz
  8297  09F2  2A05               	goto	i1l35
  8298  09F3  3A77               	xorlw	119	; case 114
  8299  09F4  1903               	skipnz
  8300  09F5  2A05               	goto	i1l35
  8301  09F6  3A01               	xorlw	1	; case 115
  8302  09F7  1903               	skipnz
  8303  09F8  2A05               	goto	i1l35
  8304  09F9  3A07               	xorlw	7	; case 116
  8305  09FA  1903               	skipnz
  8306  09FB  29D3               	goto	i1l2831
  8307  09FC  3A01               	xorlw	1	; case 117
  8308  09FD  1903               	skipnz
  8309  09FE  29CF               	goto	i1l2829
  8310  09FF  2A05               	goto	i1l35
  8311  0A00                     i1l4839:	
  8312                           
  8313                           ; Switch size 1, requested type "space"
  8314                           ; Number of cases is 1, Range of values is 255 to 255
  8315                           ; switch strategies available:
  8316                           ; Name         Instructions Cycles
  8317                           ; simple_byte            4     3 (average)
  8318                           ; direct_byte            7     5 (fixed)
  8319                           ; jumptable            263     9 (fixed)
  8320                           ;	Chosen strategy is simple_byte
  8321  0A00  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  8322  0A01  3AFF               	xorlw	255	; case 255
  8323  0A02  1903               	skipnz
  8324  0A03  2A05               	goto	i1l35
  8325  0A04  2A05               	goto	i1l35
  8326  0A05                     i1l35:	
  8327                           ;usb_events.c: 113: return 1;
  8328                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  8329                           
  8330  0A05  0008               	return
  8331  0A06                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  8332                           
  8333                           	psect	text36
  8334  177A                     __ptext36:	
  8335 ;; *************** function i1_SYSTEM_Initialize *****************
  8336 ;; Defined at:
  8337 ;;		line 82 in file "system.c"
  8338 ;; Parameters:    Size  Location     Type
  8339 ;;  state           1    wreg     enum E2598
  8340 ;; Auto vars:     Size  Location     Type
  8341 ;;  state           1    0[COMMON] enum E2598
  8342 ;; Return value:  Size  Location     Type
  8343 ;;                  1    wreg      void 
  8344 ;; Registers used:
  8345 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8346 ;; Tracked objects:
  8347 ;;		On entry : 0/0
  8348 ;;		On exit  : 0/0
  8349 ;;		Unchanged: 0/0
  8350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8352 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8354 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8355 ;;Total ram usage:        1 bytes
  8356 ;; Hardware stack levels used:    1
  8357 ;; This function calls:
  8358 ;;		Nothing
  8359 ;; This function is called by:
  8360 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8361 ;; This function uses a non-reentrant model
  8362 ;;
  8363                           
  8364                           
  8365                           ;psect for function i1_SYSTEM_Initialize
  8366  177A                     i1_SYSTEM_Initialize:	
  8367                           
  8368                           ;incstack = 0
  8369                           ; Regs used in i1_SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0]
  8370                           ;i1SYSTEM_Initialize@state stored from wreg
  8371  177A  00F0               	movwf	i1SYSTEM_Initialize@state
  8372                           
  8373                           ;system.c: 84: switch(state)
  8374  177B  2F83               	goto	i1l2825
  8375  177C                     i1l2821:	
  8376                           ;system.c: 85: {
  8377                           ;system.c: 86: case SYSTEM_STATE_USB_START:
  8378                           
  8379                           
  8380                           ;system.c: 90: OSCCON = 0xFC;
  8381  177C  30FC               	movlw	252
  8382  177D  0021               	movlb	1	; select bank1
  8383  177E  0099               	movwf	25	;volatile
  8384                           
  8385                           ;system.c: 91: ACTCON = 0x90;
  8386  177F  3090               	movlw	144
  8387  1780  0027               	movlb	7	; select bank7
  8388  1781  009B               	movwf	27	;volatile
  8389                           
  8390                           ;system.c: 102: }
  8391                           
  8392                           ;system.c: 101: break;
  8393                           
  8394                           ;system.c: 100: case SYSTEM_STATE_USB_RESUME:
  8395                           
  8396                           ;system.c: 98: break;
  8397                           
  8398                           ;system.c: 97: case SYSTEM_STATE_USB_SUSPEND:
  8399                           
  8400                           ;system.c: 95: break;
  8401  1782  0008               	return
  8402  1783                     i1l2825:	
  8403  1783  0870               	movf	i1SYSTEM_Initialize@state,w
  8404                           
  8405                           ; Switch size 1, requested type "space"
  8406                           ; Number of cases is 3, Range of values is 0 to 2
  8407                           ; switch strategies available:
  8408                           ; Name         Instructions Cycles
  8409                           ; simple_byte           10     6 (average)
  8410                           ; direct_byte           12     6 (fixed)
  8411                           ; jumptable            260     6 (fixed)
  8412                           ;	Chosen strategy is simple_byte
  8413  1784  3A00               	xorlw	0	; case 0
  8414  1785  1903               	skipnz
  8415  1786  2F7C               	goto	i1l2821
  8416  1787  3A01               	xorlw	1	; case 1
  8417  1788  1903               	skipnz
  8418  1789  2F8E               	goto	i1l565
  8419  178A  3A03               	xorlw	3	; case 2
  8420  178B  1903               	skipnz
  8421  178C  2F8E               	goto	i1l565
  8422  178D  2F8E               	goto	i1l565
  8423  178E                     i1l565:	
  8424  178E  0008               	return
  8425  178F                     __end_ofi1_SYSTEM_Initialize:	
  8426                           
  8427                           	psect	text37
  8428  0961                     __ptext37:	
  8429 ;; *************** function i1_CDCInitEP *****************
  8430 ;; Defined at:
  8431 ;;		line 294 in file "../lib/usb/src/usb_device_cdc.c"
  8432 ;; Parameters:    Size  Location     Type
  8433 ;;		None
  8434 ;; Auto vars:     Size  Location     Type
  8435 ;;		None
  8436 ;; Return value:  Size  Location     Type
  8437 ;;                  1    wreg      void 
  8438 ;; Registers used:
  8439 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8440 ;; Tracked objects:
  8441 ;;		On entry : 0/0
  8442 ;;		On exit  : 0/0
  8443 ;;		Unchanged: 0/0
  8444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8447 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8448 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8449 ;;Total ram usage:        1 bytes
  8450 ;; Hardware stack levels used:    1
  8451 ;; Hardware stack levels required when called:    2
  8452 ;; This function calls:
  8453 ;;		i1_USBEnableEndpoint
  8454 ;;		i1_USBTransferOnePacket
  8455 ;; This function is called by:
  8456 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8457 ;; This function uses a non-reentrant model
  8458 ;;
  8459                           
  8460                           
  8461                           ;psect for function i1_CDCInitEP
  8462  0961                     i1_CDCInitEP:	
  8463                           
  8464                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
  8465                           
  8466                           ;incstack = 0
  8467                           ; Regs used in i1_CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8468  0961  3000               	movlw	0
  8469  0962  0023               	movlb	3	; select bank3
  8470  0963  00E1               	movwf	(_line_coding+3)^(0+384)
  8471  0964  3000               	movlw	0
  8472  0965  00E0               	movwf	(_line_coding+2)^(0+384)
  8473  0966  304B               	movlw	75
  8474  0967  00DF               	movwf	(_line_coding+1)^(0+384)
  8475  0968  3000               	movlw	0
  8476  0969  00DE               	movwf	_line_coding^(0+384)
  8477                           
  8478                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  8479  096A  01E2               	clrf	(_line_coding^(0+384)+4)
  8480                           
  8481                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  8482  096B  01E3               	clrf	(_line_coding^(0+384)+5)
  8483                           
  8484                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  8485  096C  3008               	movlw	8
  8486  096D  00FD               	movwf	??i1_CDCInitEP
  8487  096E  087D               	movf	??i1_CDCInitEP,w
  8488  096F  00E4               	movwf	(_line_coding^(0+384)+6)
  8489                           
  8490                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  8491  0970  01D9               	clrf	_cdc_rx_len^(0+384)
  8492                           
  8493                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  8494  0971  301A               	movlw	26
  8495  0972  00FD               	movwf	??i1_CDCInitEP
  8496  0973  087D               	movf	??i1_CDCInitEP,w
  8497  0974  00F7               	movwf	i1USBEnableEndpoint@options
  8498  0975  3001               	movlw	1
  8499  0976  3188  2080  3189   	fcall	i1_USBEnableEndpoint
  8500                           
  8501                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  8502  0979  301E               	movlw	30
  8503  097A  00FD               	movwf	??i1_CDCInitEP
  8504  097B  087D               	movf	??i1_CDCInitEP,w
  8505  097C  00F7               	movwf	i1USBEnableEndpoint@options
  8506  097D  3002               	movlw	2
  8507  097E  3188  2080  3189   	fcall	i1_USBEnableEndpoint
  8508                           
  8509                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  8510  0981  01F0               	clrf	i1USBTransferOnePacket@dir
  8511  0982  3020               	movlw	32
  8512  0983  00F1               	movwf	i1USBTransferOnePacket@data
  8513  0984  3001               	movlw	1
  8514  0985  00F2               	movwf	i1USBTransferOnePacket@data+1
  8515  0986  3040               	movlw	64
  8516  0987  00FD               	movwf	??i1_CDCInitEP
  8517  0988  087D               	movf	??i1_CDCInitEP,w
  8518  0989  00F3               	movwf	i1USBTransferOnePacket@len
  8519  098A  3002               	movlw	2
  8520  098B  318E  266C         	fcall	i1_USBTransferOnePacket
  8521  098D  0871               	movf	?i1_USBTransferOnePacket+1,w
  8522  098E  0023               	movlb	3	; select bank3
  8523  098F  00C9               	movwf	(_CDCDataOutHandle+1)^(0+384)
  8524  0990  0870               	movf	?i1_USBTransferOnePacket,w
  8525  0991  00C8               	movwf	_CDCDataOutHandle^(0+384)
  8526                           
  8527                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  8528  0992  01C6               	clrf	_CDCDataInHandle^(0+384)
  8529  0993  01C7               	clrf	(_CDCDataInHandle+1)^(0+384)
  8530                           
  8531                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
  8532  0994  0021               	movlb	1	; select bank1
  8533  0995  01E2               	clrf	_cdc_trf_state^(0+128)
  8534  0996  0008               	return
  8535  0997                     __end_ofi1_CDCInitEP:	
  8536                           
  8537                           	psect	text38
  8538  0E6C                     __ptext38:	
  8539 ;; *************** function i1_USBTransferOnePacket *****************
  8540 ;; Defined at:
  8541 ;;		line 995 in file "../lib/usb/src/usb_device.c"
  8542 ;; Parameters:    Size  Location     Type
  8543 ;;  ep              1    wreg     unsigned char 
  8544 ;;  dir             1    0[COMMON] unsigned char 
  8545 ;;  data            2    1[COMMON] PTR unsigned char 
  8546 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  8547 ;;  len             1    3[COMMON] unsigned char 
  8548 ;; Auto vars:     Size  Location     Type
  8549 ;;  ep              1    8[COMMON] unsigned char 
  8550 ;;  USBTransferO    2    9[COMMON] PTR volatile struct __BD
  8551 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  8552 ;; Return value:  Size  Location     Type
  8553 ;;                  2    0[COMMON] PTR void 
  8554 ;; Registers used:
  8555 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8556 ;; Tracked objects:
  8557 ;;		On entry : 0/0
  8558 ;;		On exit  : 0/0
  8559 ;;		Unchanged: 0/0
  8560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8561 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8562 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8563 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8564 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8565 ;;Total ram usage:       11 bytes
  8566 ;; Hardware stack levels used:    1
  8567 ;; This function calls:
  8568 ;;		Nothing
  8569 ;; This function is called by:
  8570 ;;		i1_CDCInitEP
  8571 ;; This function uses a non-reentrant model
  8572 ;;
  8573                           
  8574                           
  8575                           ;psect for function i1_USBTransferOnePacket
  8576  0E6C                     i1_USBTransferOnePacket:	
  8577                           
  8578                           ;incstack = 0
  8579                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  8580                           ;i1USBTransferOnePacket@ep stored from wreg
  8581  0E6C  00F8               	movwf	i1USBTransferOnePacket@ep
  8582                           
  8583                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  8584                           ;usb_device.c: 1000: if(dir != 0)
  8585  0E6D  0870               	movf	i1USBTransferOnePacket@dir,w
  8586  0E6E  1903               	btfsc	3,2
  8587  0E6F  2E79               	goto	i1l2731
  8588                           
  8589                           ;usb_device.c: 1001: {
  8590                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  8591  0E70  3578               	lslf	i1USBTransferOnePacket@ep,w
  8592  0E71  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  8593  0E72  0086               	movwf	6
  8594  0E73  3001               	movlw	1	; select bank3/4
  8595  0E74  0087               	movwf	7
  8596  0E75  3F40               	moviw [0]fsr1
  8597  0E76  00F9               	movwf	i1USBTransferOnePacket@handle
  8598  0E77  3F41               	moviw [1]fsr1
  8599  0E78  2E81               	goto	L10
  8600  0E79                     i1l2731:	
  8601                           ;usb_device.c: 1004: }
  8602                           
  8603                           
  8604                           ;usb_device.c: 1005: else
  8605                           ;usb_device.c: 1006: {
  8606                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  8607  0E79  3578               	lslf	i1USBTransferOnePacket@ep,w
  8608  0E7A  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8609  0E7B  0086               	movwf	6
  8610  0E7C  3001               	movlw	1	; select bank3/4
  8611  0E7D  0087               	movwf	7
  8612  0E7E  3F40               	moviw [0]fsr1
  8613  0E7F  00F9               	movwf	i1USBTransferOnePacket@handle
  8614  0E80  3F41               	moviw [1]fsr1
  8615  0E81                     L10:	
  8616  0E81  00FA               	movwf	i1USBTransferOnePacket@handle+1
  8617                           
  8618                           ;usb_device.c: 1009: }
  8619                           ;usb_device.c: 1013: if(handle == 0)
  8620  0E82  0879               	movf	i1USBTransferOnePacket@handle,w
  8621  0E83  047A               	iorwf	i1USBTransferOnePacket@handle+1,w
  8622  0E84  1D03               	btfss	3,2
  8623  0E85  2E89               	goto	i1l2739
  8624                           
  8625                           ;usb_device.c: 1014: {
  8626                           ;usb_device.c: 1015: return 0;
  8627  0E86  01F0               	clrf	?i1_USBTransferOnePacket
  8628  0E87  01F1               	clrf	?i1_USBTransferOnePacket+1
  8629  0E88  0008               	return
  8630  0E89                     i1l2739:	
  8631                           
  8632                           ;usb_device.c: 1016: }
  8633                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  8634  0E89  30FF               	movlw	255
  8635  0E8A  0571               	andwf	i1USBTransferOnePacket@data,w
  8636  0E8B  00F4               	movwf	??i1_USBTransferOnePacket
  8637  0E8C  307F               	movlw	127
  8638  0E8D  0572               	andwf	i1USBTransferOnePacket@data+1,w
  8639  0E8E  00F5               	movwf	??i1_USBTransferOnePacket+1
  8640  0E8F  0879               	movf	i1USBTransferOnePacket@handle,w
  8641  0E90  0086               	movwf	6
  8642  0E91  087A               	movf	i1USBTransferOnePacket@handle+1,w
  8643  0E92  0087               	movwf	7
  8644  0E93  3142               	addfsr 1,2
  8645  0E94  0874               	movf	??i1_USBTransferOnePacket,w
  8646  0E95  3FC0               	movwi [0]fsr1
  8647  0E96  0875               	movf	??i1_USBTransferOnePacket+1,w
  8648  0E97  3FC1               	movwi [1]fsr1
  8649                           
  8650                           ;usb_device.c: 1030: handle->CNT = len;
  8651  0E98  0879               	movf	i1USBTransferOnePacket@handle,w
  8652  0E99  3E01               	addlw	1
  8653  0E9A  00F4               	movwf	??i1_USBTransferOnePacket
  8654  0E9B  3000               	movlw	0
  8655  0E9C  3D7A               	addwfc	i1USBTransferOnePacket@handle+1,w
  8656  0E9D  00F5               	movwf	??i1_USBTransferOnePacket+1
  8657  0E9E  0874               	movf	??i1_USBTransferOnePacket,w
  8658  0E9F  0086               	movwf	6
  8659  0EA0  0875               	movf	??i1_USBTransferOnePacket+1,w
  8660  0EA1  0087               	movwf	7
  8661  0EA2  0873               	movf	i1USBTransferOnePacket@len,w
  8662  0EA3  0081               	movwf	1
  8663                           
  8664                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  8665  0EA4  3040               	movlw	64
  8666  0EA5  00F4               	movwf	??i1_USBTransferOnePacket
  8667  0EA6  0879               	movf	i1USBTransferOnePacket@handle,w
  8668  0EA7  0086               	movwf	6
  8669  0EA8  087A               	movf	i1USBTransferOnePacket@handle+1,w
  8670  0EA9  0087               	movwf	7
  8671  0EAA  0874               	movf	??i1_USBTransferOnePacket,w
  8672  0EAB  0581               	andwf	1,f
  8673                           
  8674                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  8675  0EAC  0879               	movf	i1USBTransferOnePacket@handle,w
  8676  0EAD  0086               	movwf	6
  8677  0EAE  087A               	movf	i1USBTransferOnePacket@handle+1,w
  8678  0EAF  0087               	movwf	7
  8679  0EB0  1581               	bsf	1,3
  8680                           
  8681                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  8682  0EB1  0879               	movf	i1USBTransferOnePacket@handle,w
  8683  0EB2  0086               	movwf	6
  8684  0EB3  087A               	movf	i1USBTransferOnePacket@handle+1,w
  8685  0EB4  0087               	movwf	7
  8686  0EB5  1781               	bsf	1,7
  8687                           
  8688                           ;usb_device.c: 1036: if(dir != 0)
  8689  0EB6  0870               	movf	i1USBTransferOnePacket@dir,w
  8690  0EB7  1903               	btfsc	3,2
  8691  0EB8  2ED2               	goto	i1l2749
  8692                           
  8693                           ;usb_device.c: 1037: {
  8694                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  8695  0EB9  3578               	lslf	i1USBTransferOnePacket@ep,w
  8696  0EBA  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  8697  0EBB  0086               	movwf	6
  8698  0EBC  3001               	movlw	1	; select bank3/4
  8699  0EBD  0087               	movwf	7
  8700  0EBE  3F40               	moviw [0]fsr1
  8701  0EBF  00F4               	movwf	??i1_USBTransferOnePacket
  8702  0EC0  3F41               	moviw [1]fsr1
  8703  0EC1  00F5               	movwf	??i1_USBTransferOnePacket+1
  8704  0EC2  3004               	movlw	4
  8705  0EC3  0674               	xorwf	??i1_USBTransferOnePacket,w
  8706  0EC4  00F6               	movwf	??i1_USBTransferOnePacket+2
  8707  0EC5  3000               	movlw	0
  8708  0EC6  0675               	xorwf	??i1_USBTransferOnePacket+1,w
  8709  0EC7  00F7               	movwf	??i1_USBTransferOnePacket+3
  8710  0EC8  3578               	lslf	i1USBTransferOnePacket@ep,w
  8711  0EC9  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  8712  0ECA  0086               	movwf	6
  8713  0ECB  3001               	movlw	1	; select bank3/4
  8714  0ECC  0087               	movwf	7
  8715  0ECD  0876               	movf	??i1_USBTransferOnePacket+2,w
  8716  0ECE  3FC0               	movwi [0]fsr1
  8717  0ECF  0877               	movf	??i1_USBTransferOnePacket+3,w
  8718  0ED0  3FC1               	movwi [1]fsr1
  8719                           
  8720                           ;usb_device.c: 1040: }
  8721  0ED1  2EEA               	goto	i1l2751
  8722  0ED2                     i1l2749:	
  8723                           
  8724                           ;usb_device.c: 1041: else
  8725                           ;usb_device.c: 1042: {
  8726                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  8727  0ED2  3578               	lslf	i1USBTransferOnePacket@ep,w
  8728  0ED3  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8729  0ED4  0086               	movwf	6
  8730  0ED5  3001               	movlw	1	; select bank3/4
  8731  0ED6  0087               	movwf	7
  8732  0ED7  3F40               	moviw [0]fsr1
  8733  0ED8  00F4               	movwf	??i1_USBTransferOnePacket
  8734  0ED9  3F41               	moviw [1]fsr1
  8735  0EDA  00F5               	movwf	??i1_USBTransferOnePacket+1
  8736  0EDB  3004               	movlw	4
  8737  0EDC  0674               	xorwf	??i1_USBTransferOnePacket,w
  8738  0EDD  00F6               	movwf	??i1_USBTransferOnePacket+2
  8739  0EDE  3000               	movlw	0
  8740  0EDF  0675               	xorwf	??i1_USBTransferOnePacket+1,w
  8741  0EE0  00F7               	movwf	??i1_USBTransferOnePacket+3
  8742  0EE1  3578               	lslf	i1USBTransferOnePacket@ep,w
  8743  0EE2  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8744  0EE3  0086               	movwf	6
  8745  0EE4  3001               	movlw	1	; select bank3/4
  8746  0EE5  0087               	movwf	7
  8747  0EE6  0876               	movf	??i1_USBTransferOnePacket+2,w
  8748  0EE7  3FC0               	movwi [0]fsr1
  8749  0EE8  0877               	movf	??i1_USBTransferOnePacket+3,w
  8750  0EE9  3FC1               	movwi [1]fsr1
  8751  0EEA                     i1l2751:	
  8752                           
  8753                           ;usb_device.c: 1045: }
  8754                           ;usb_device.c: 1046: return (void*)handle;
  8755  0EEA  087A               	movf	i1USBTransferOnePacket@handle+1,w
  8756  0EEB  00F1               	movwf	?i1_USBTransferOnePacket+1
  8757  0EEC  0879               	movf	i1USBTransferOnePacket@handle,w
  8758  0EED  00F0               	movwf	?i1_USBTransferOnePacket
  8759  0EEE  0008               	return
  8760  0EEF                     __end_ofi1_USBTransferOnePacket:	
  8761                           
  8762                           	psect	text39
  8763  0880                     __ptext39:	
  8764 ;; *************** function i1_USBEnableEndpoint *****************
  8765 ;; Defined at:
  8766 ;;		line 878 in file "../lib/usb/src/usb_device.c"
  8767 ;; Parameters:    Size  Location     Type
  8768 ;;  ep              1    wreg     unsigned char 
  8769 ;;  options         1    7[COMMON] unsigned char 
  8770 ;; Auto vars:     Size  Location     Type
  8771 ;;  ep              1   12[COMMON] unsigned char 
  8772 ;;  USBEnableEnd    2   10[COMMON] PTR unsigned char 
  8773 ;;		 -> UEP0(1), 
  8774 ;; Return value:  Size  Location     Type
  8775 ;;                  1    wreg      void 
  8776 ;; Registers used:
  8777 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8778 ;; Tracked objects:
  8779 ;;		On entry : 0/0
  8780 ;;		On exit  : 0/0
  8781 ;;		Unchanged: 0/0
  8782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8783 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8784 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8785 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8786 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8787 ;;Total ram usage:        6 bytes
  8788 ;; Hardware stack levels used:    1
  8789 ;; Hardware stack levels required when called:    1
  8790 ;; This function calls:
  8791 ;;		i1_USBConfigureEndpoint
  8792 ;; This function is called by:
  8793 ;;		i1_CDCInitEP
  8794 ;; This function uses a non-reentrant model
  8795 ;;
  8796                           
  8797                           
  8798                           ;psect for function i1_USBEnableEndpoint
  8799  0880                     i1_USBEnableEndpoint:	
  8800                           
  8801                           ;incstack = 0
  8802                           ; Regs used in i1_USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8803                           ;i1USBEnableEndpoint@ep stored from wreg
  8804  0880  00FC               	movwf	i1USBEnableEndpoint@ep
  8805                           
  8806                           ;usb_device.c: 880: unsigned char* p;
  8807                           ;usb_device.c: 884: if(options & 0x04)
  8808  0881  1D77               	btfss	i1USBEnableEndpoint@options,2
  8809  0882  2888               	goto	i1l2719
  8810                           
  8811                           ;usb_device.c: 885: {
  8812                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  8813  0883  01F0               	clrf	i1USBConfigureEndpoint@direction
  8814  0884  087C               	movf	i1USBEnableEndpoint@ep,w
  8815  0885  318A  2245  3188   	fcall	i1_USBConfigureEndpoint
  8816  0888                     i1l2719:	
  8817                           
  8818                           ;usb_device.c: 887: }
  8819                           ;usb_device.c: 888: if(options & 0x02)
  8820  0888  1CF7               	btfss	i1USBEnableEndpoint@options,1
  8821  0889  288F               	goto	i1l2723
  8822                           
  8823                           ;usb_device.c: 889: {
  8824                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  8825  088A  01F0               	clrf	i1USBConfigureEndpoint@direction
  8826  088B  0AF0               	incf	i1USBConfigureEndpoint@direction,f
  8827  088C  087C               	movf	i1USBEnableEndpoint@ep,w
  8828  088D  318A  2245         	fcall	i1_USBConfigureEndpoint
  8829  088F                     i1l2723:	
  8830                           
  8831                           ;usb_device.c: 891: }
  8832                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  8833  088F  087C               	movf	i1USBEnableEndpoint@ep,w
  8834  0890  3E98               	addlw	152
  8835  0891  00F8               	movwf	??i1_USBEnableEndpoint
  8836  0892  01F9               	clrf	??i1_USBEnableEndpoint+1
  8837  0893  300E               	movlw	14
  8838  0894  3DF9               	addwfc	??i1_USBEnableEndpoint+1,f
  8839  0895  0878               	movf	??i1_USBEnableEndpoint,w
  8840  0896  00FA               	movwf	i1USBEnableEndpoint@p
  8841  0897  0879               	movf	??i1_USBEnableEndpoint+1,w
  8842  0898  00FB               	movwf	i1USBEnableEndpoint@p+1
  8843                           
  8844                           ;usb_device.c: 901: *p = options;
  8845  0899  087A               	movf	i1USBEnableEndpoint@p,w
  8846  089A  0086               	movwf	6
  8847  089B  087B               	movf	i1USBEnableEndpoint@p+1,w
  8848  089C  0087               	movwf	7
  8849  089D  0877               	movf	i1USBEnableEndpoint@options,w
  8850  089E  0081               	movwf	1
  8851  089F  0008               	return
  8852  08A0                     __end_ofi1_USBEnableEndpoint:	
  8853                           
  8854                           	psect	text40
  8855  0A45                     __ptext40:	
  8856 ;; *************** function i1_USBConfigureEndpoint *****************
  8857 ;; Defined at:
  8858 ;;		line 1543 in file "../lib/usb/src/usb_device.c"
  8859 ;; Parameters:    Size  Location     Type
  8860 ;;  EPNum           1    wreg     unsigned char 
  8861 ;;  direction       1    0[COMMON] unsigned char 
  8862 ;; Auto vars:     Size  Location     Type
  8863 ;;  EPNum           1    5[COMMON] unsigned char 
  8864 ;;  USBConfigure    1    6[COMMON] PTR volatile struct __BD
  8865 ;;		 -> BDT(48), 
  8866 ;; Return value:  Size  Location     Type
  8867 ;;                  1    wreg      void 
  8868 ;; Registers used:
  8869 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8870 ;; Tracked objects:
  8871 ;;		On entry : 0/0
  8872 ;;		On exit  : 0/0
  8873 ;;		Unchanged: 0/0
  8874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8875 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8876 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8877 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8878 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8879 ;;Total ram usage:        7 bytes
  8880 ;; Hardware stack levels used:    1
  8881 ;; This function calls:
  8882 ;;		Nothing
  8883 ;; This function is called by:
  8884 ;;		i1_USBEnableEndpoint
  8885 ;; This function uses a non-reentrant model
  8886 ;;
  8887                           
  8888                           
  8889                           ;psect for function i1_USBConfigureEndpoint
  8890  0A45                     i1_USBConfigureEndpoint:	
  8891                           
  8892                           ;incstack = 0
  8893                           ; Regs used in i1_USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  8894                           ;i1USBConfigureEndpoint@EPNum stored from wreg
  8895  0A45  00F5               	movwf	i1USBConfigureEndpoint@EPNum
  8896                           
  8897                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  8898                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  8899  0A46  3020               	movlw	32
  8900  0A47  00F1               	movwf	??i1_USBConfigureEndpoint
  8901  0A48  0871               	movf	??i1_USBConfigureEndpoint,w
  8902  0A49  00F6               	movwf	i1USBConfigureEndpoint@handle
  8903                           
  8904                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  8905  0A4A  0870               	movf	i1USBConfigureEndpoint@direction,w
  8906  0A4B  00F1               	movwf	??i1_USBConfigureEndpoint
  8907  0A4C  3001               	movlw	1
  8908  0A4D                     u188_25:	
  8909  0A4D  35F1               	lslf	??i1_USBConfigureEndpoint,f
  8910  0A4E  0B89               	decfsz	9,f
  8911  0A4F  2A4D               	goto	u188_25
  8912  0A50  0875               	movf	i1USBConfigureEndpoint@EPNum,w
  8913  0A51  00F2               	movwf	??i1_USBConfigureEndpoint+1
  8914  0A52  3001               	movlw	1
  8915  0A53                     u189_25:	
  8916  0A53  35F2               	lslf	??i1_USBConfigureEndpoint+1,f
  8917  0A54  3EFF               	addlw	-1
  8918  0A55  1D03               	skipz
  8919  0A56  2A53               	goto	u189_25
  8920  0A57  3572               	lslf	??i1_USBConfigureEndpoint+1,w
  8921  0A58  0771               	addwf	??i1_USBConfigureEndpoint,w
  8922  0A59  00F3               	movwf	??i1_USBConfigureEndpoint+2
  8923  0A5A  3001               	movlw	1
  8924  0A5B                     u190_25:	
  8925  0A5B  35F3               	lslf	??i1_USBConfigureEndpoint+2,f
  8926  0A5C  3EFF               	addlw	-1
  8927  0A5D  1D03               	skipz
  8928  0A5E  2A5B               	goto	u190_25
  8929  0A5F  3573               	lslf	??i1_USBConfigureEndpoint+2,w
  8930  0A60  00F4               	movwf	??i1_USBConfigureEndpoint+3
  8931  0A61  0874               	movf	??i1_USBConfigureEndpoint+3,w
  8932  0A62  07F6               	addwf	i1USBConfigureEndpoint@handle,f
  8933                           
  8934                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  8935  0A63  0876               	movf	i1USBConfigureEndpoint@handle,w
  8936  0A64  0086               	movwf	6
  8937  0A65  0187               	clrf	7
  8938  0A66  1381               	bcf	1,7
  8939                           
  8940                           ;usb_device.c: 1557: if(direction == 0)
  8941  0A67  0870               	movf	i1USBConfigureEndpoint@direction,w
  8942  0A68  1D03               	btfss	3,2
  8943  0A69  2A74               	goto	i1l2709
  8944                           
  8945                           ;usb_device.c: 1558: {
  8946                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  8947  0A6A  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
  8948  0A6B  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8949  0A6C  0086               	movwf	6
  8950  0A6D  3001               	movlw	1	; select bank3/4
  8951  0A6E  0087               	movwf	7
  8952  0A6F  0876               	movf	i1USBConfigureEndpoint@handle,w
  8953  0A70  3FC0               	movwi [0]fsr1
  8954  0A71  3000               	movlw	0
  8955  0A72  3FC1               	movwi [1]fsr1
  8956                           
  8957                           ;usb_device.c: 1560: }
  8958  0A73  2A7D               	goto	i1l2711
  8959  0A74                     i1l2709:	
  8960                           
  8961                           ;usb_device.c: 1561: else
  8962                           ;usb_device.c: 1562: {
  8963                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  8964  0A74  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
  8965  0A75  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  8966  0A76  0086               	movwf	6
  8967  0A77  3001               	movlw	1	; select bank3/4
  8968  0A78  0087               	movwf	7
  8969  0A79  0876               	movf	i1USBConfigureEndpoint@handle,w
  8970  0A7A  3FC0               	movwi [0]fsr1
  8971  0A7B  3000               	movlw	0
  8972  0A7C  3FC1               	movwi [1]fsr1
  8973  0A7D                     i1l2711:	
  8974                           
  8975                           ;usb_device.c: 1564: }
  8976                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  8977  0A7D  0876               	movf	i1USBConfigureEndpoint@handle,w
  8978  0A7E  0086               	movwf	6
  8979  0A7F  0187               	clrf	7
  8980  0A80  1301               	bcf	1,6
  8981                           
  8982                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  8983  0A81  0876               	movf	i1USBConfigureEndpoint@handle,w
  8984  0A82  3E04               	addlw	4
  8985  0A83  0086               	movwf	6
  8986  0A84  0187               	clrf	7
  8987  0A85  1701               	bsf	1,6
  8988  0A86  0008               	return
  8989  0A87                     __end_ofi1_USBConfigureEndpoint:	
  8990                           
  8991                           	psect	text41
  8992  0BE0                     __ptext41:	
  8993 ;; *************** function _USBCheckCDCRequest *****************
  8994 ;; Defined at:
  8995 ;;		line 147 in file "../lib/usb/src/usb_device_cdc.c"
  8996 ;; Parameters:    Size  Location     Type
  8997 ;;		None
  8998 ;; Auto vars:     Size  Location     Type
  8999 ;;		None
  9000 ;; Return value:  Size  Location     Type
  9001 ;;                  1    wreg      void 
  9002 ;; Registers used:
  9003 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9004 ;; Tracked objects:
  9005 ;;		On entry : 0/0
  9006 ;;		On exit  : 0/0
  9007 ;;		Unchanged: 0/0
  9008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9011 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9012 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9013 ;;Total ram usage:        1 bytes
  9014 ;; Hardware stack levels used:    1
  9015 ;; This function calls:
  9016 ;;		Nothing
  9017 ;; This function is called by:
  9018 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9019 ;; This function uses a non-reentrant model
  9020 ;;
  9021                           
  9022                           
  9023                           ;psect for function _USBCheckCDCRequest
  9024  0BE0                     _USBCheckCDCRequest:	
  9025                           
  9026                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
  9027                           
  9028                           ;incstack = 0
  9029                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
  9030  0BE0  0020               	movlb	0	; select bank0
  9031  0BE1  0850               	movf	80,w	;volatile
  9032  0BE2  391F               	andlw	31
  9033  0BE3  3A01               	xorlw	1
  9034  0BE4  1D03               	btfss	3,2
  9035  0BE5  0008               	return
  9036                           
  9037                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
  9038  0BE6  0E50               	swapf	80,w	;volatile
  9039  0BE7  0C89               	rrf	9,f
  9040  0BE8  3903               	andlw	3
  9041  0BE9  3A01               	xorlw	1
  9042  0BEA  1D03               	btfss	3,2
  9043  0BEB  0008               	return
  9044                           
  9045                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
  9046                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
  9047  0BEC  0854               	movf	84,w	;volatile
  9048  0BED  1903               	btfsc	3,2
  9049  0BEE  2C2C               	goto	i1l2799
  9050  0BEF  0354               	decf	84,w	;volatile
  9051  0BF0  1D03               	btfss	3,2
  9052  0BF1  0008               	return
  9053  0BF2  2C2C               	goto	i1l2799
  9054  0BF3                     i1l2769:	
  9055                           ;usb_device_cdc.c: 167: {
  9056                           ;usb_device_cdc.c: 169: case 0x00:
  9057                           
  9058                           ;usb_device_cdc.c: 166: switch(SetupPkt.bRequest)
  9059                           
  9060                           
  9061                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  9062  0BF3  302A               	movlw	low _dummy_encapsulated_cmd_response
  9063  0BF4  0023               	movlb	3	; select bank3
  9064  0BF5  00B3               	movwf	_inPipes^(0+384)	;volatile
  9065  0BF6  3002               	movlw	high _dummy_encapsulated_cmd_response
  9066  0BF7  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  9067                           
  9068                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
  9069  0BF8  3000               	movlw	0
  9070  0BF9  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  9071  0BFA  3008               	movlw	8
  9072  0BFB  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  9073                           
  9074                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9075  0BFC  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  9076                           
  9077                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
  9078  0BFD  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  9079                           
  9080                           ;usb_device_cdc.c: 175: break;
  9081  0BFE  0008               	return
  9082  0BFF                     i1l2777:	
  9083                           ;usb_device_cdc.c: 176: case 0x01:
  9084                           
  9085                           
  9086                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  9087  0BFF  302A               	movlw	low _dummy_encapsulated_cmd_response
  9088  0C00  0023               	movlb	3	; select bank3
  9089  0C01  00B3               	movwf	_inPipes^(0+384)	;volatile
  9090  0C02  3002               	movlw	high _dummy_encapsulated_cmd_response
  9091  0C03  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  9092                           
  9093                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
  9094  0C04  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  9095                           
  9096                           ;usb_device_cdc.c: 180: break;
  9097  0C05  0008               	return
  9098  0C06                     i1l2781:	
  9099                           ;usb_device_cdc.c: 184: case 0x20:
  9100                           
  9101                           
  9102                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
  9103  0C06  0020               	movlb	0	; select bank0
  9104  0C07  0857               	movf	87,w	;volatile
  9105  0C08  0023               	movlb	3	; select bank3
  9106  0C09  00A4               	movwf	((_outPipes+1)^(0+384)+3)	;volatile
  9107  0C0A  0020               	movlb	0	; select bank0
  9108  0C0B  0856               	movf	86,w	;volatile
  9109  0C0C  0023               	movlb	3	; select bank3
  9110  0C0D  00A3               	movwf	(_outPipes^(0+384)+3)	;volatile
  9111                           
  9112                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  9113  0C0E  30DE               	movlw	(low (_line_coding| (0+256)))& (0+255)
  9114  0C0F  00F0               	movwf	??_USBCheckCDCRequest
  9115  0C10  0870               	movf	??_USBCheckCDCRequest,w
  9116  0C11  00A0               	movwf	_outPipes^(0+384)	;volatile
  9117                           
  9118                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
  9119  0C12  01A5               	clrf	(low ((_outPipes| (0+256)+5)))^(0+128)	;volatile
  9120  0C13  01A6               	clrf	((low ((_outPipes| (0+256)+5))+1))^(0+128)	;volatile
  9121                           
  9122                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
  9123  0C14  17A2               	bsf	(_outPipes^(0+384)+2),7	;volatile
  9124                           
  9125                           ;usb_device_cdc.c: 189: break;
  9126  0C15  0008               	return
  9127  0C16                     i1l2787:	
  9128                           ;usb_device_cdc.c: 191: case 0x21:
  9129                           
  9130                           
  9131                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  9132  0C16  30DE               	movlw	low _line_coding
  9133  0C17  0023               	movlb	3	; select bank3
  9134  0C18  00B3               	movwf	_inPipes^(0+384)	;volatile
  9135  0C19  3001               	movlw	high _line_coding
  9136  0C1A  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  9137  0C1B  3000               	movlw	0
  9138  0C1C  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  9139  0C1D  3007               	movlw	7
  9140  0C1E  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  9141  0C1F  30C1               	movlw	193
  9142  0C20  00F0               	movwf	??_USBCheckCDCRequest
  9143  0C21  0870               	movf	??_USBCheckCDCRequest,w
  9144  0C22  00B5               	movwf	(_inPipes^(0+384)+2)	;volatile
  9145                           
  9146                           ;usb_device_cdc.c: 196: break;
  9147  0C23  0008               	return
  9148  0C24                     i1l2793:	
  9149                           ;usb_device_cdc.c: 198: case 0x22:
  9150                           
  9151                           
  9152                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  9153  0C24  0020               	movlb	0	; select bank0
  9154  0C25  0852               	movf	82,w	;volatile
  9155  0C26  00F0               	movwf	??_USBCheckCDCRequest
  9156  0C27  0870               	movf	??_USBCheckCDCRequest,w
  9157  0C28  0023               	movlb	3	; select bank3
  9158  0C29  00DB               	movwf	_control_signal_bitmap^(0+384)
  9159                           
  9160                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  9161  0C2A  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  9162                           
  9163                           ;usb_device_cdc.c: 258: }
  9164                           
  9165                           ;usb_device_cdc.c: 257: break;
  9166                           
  9167                           ;usb_device_cdc.c: 256: default:
  9168                           
  9169                           ;usb_device_cdc.c: 232: break;
  9170  0C2B  0008               	return
  9171  0C2C                     i1l2799:	
  9172  0C2C  0020               	movlb	0	; select bank0
  9173  0C2D  0851               	movf	81,w	;volatile
  9174                           
  9175                           ; Switch size 1, requested type "space"
  9176                           ; Number of cases is 5, Range of values is 0 to 34
  9177                           ; switch strategies available:
  9178                           ; Name         Instructions Cycles
  9179                           ; simple_byte           16     9 (average)
  9180                           ; direct_byte           76     6 (fixed)
  9181                           ; jumptable            260     6 (fixed)
  9182                           ;	Chosen strategy is simple_byte
  9183  0C2E  3A00               	xorlw	0	; case 0
  9184  0C2F  1903               	skipnz
  9185  0C30  2BF3               	goto	i1l2769
  9186  0C31  3A01               	xorlw	1	; case 1
  9187  0C32  1903               	skipnz
  9188  0C33  2BFF               	goto	i1l2777
  9189  0C34  3A21               	xorlw	33	; case 32
  9190  0C35  1903               	skipnz
  9191  0C36  2C06               	goto	i1l2781
  9192  0C37  3A01               	xorlw	1	; case 33
  9193  0C38  1903               	skipnz
  9194  0C39  2C16               	goto	i1l2787
  9195  0C3A  3A03               	xorlw	3	; case 34
  9196  0C3B  1903               	skipnz
  9197  0C3C  2C24               	goto	i1l2793
  9198  0C3D  2C3E               	goto	i1l479
  9199  0C3E                     i1l479:	
  9200  0C3E  0008               	return
  9201  0C3F                     __end_of_USBCheckCDCRequest:	
  9202                           
  9203                           	psect	text42
  9204  0997                     __ptext42:	
  9205 ;; *************** function _USBCtrlTrfOutHandler *****************
  9206 ;; Defined at:
  9207 ;;		line 2538 in file "../lib/usb/src/usb_device.c"
  9208 ;; Parameters:    Size  Location     Type
  9209 ;;		None
  9210 ;; Auto vars:     Size  Location     Type
  9211 ;;		None
  9212 ;; Return value:  Size  Location     Type
  9213 ;;                  1    wreg      void 
  9214 ;; Registers used:
  9215 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9216 ;; Tracked objects:
  9217 ;;		On entry : 0/0
  9218 ;;		On exit  : 0/0
  9219 ;;		Unchanged: 0/0
  9220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9223 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9224 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9225 ;;Total ram usage:        2 bytes
  9226 ;; Hardware stack levels used:    1
  9227 ;; Hardware stack levels required when called:    2
  9228 ;; This function calls:
  9229 ;;		_USBCtrlTrfRxService
  9230 ;; This function is called by:
  9231 ;;		_USBCtrlEPService
  9232 ;; This function uses a non-reentrant model
  9233 ;;
  9234                           
  9235                           
  9236                           ;psect for function _USBCtrlTrfOutHandler
  9237  0997                     _USBCtrlTrfOutHandler:	
  9238                           
  9239                           ;usb_device.c: 2540: if(controlTransferState == 2)
  9240                           
  9241                           ;incstack = 0
  9242                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9243  0997  3002               	movlw	2
  9244  0998  0021               	movlb	1	; select bank1
  9245  0999  0663               	xorwf	_controlTransferState^(0+128),w	;volatile
  9246  099A  1D03               	btfss	3,2
  9247  099B  299F               	goto	i1l3339
  9248                           
  9249                           ;usb_device.c: 2541: {
  9250                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  9251  099C  3185  25EF         	fcall	_USBCtrlTrfRxService
  9252                           
  9253                           ;usb_device.c: 2543: }
  9254  099E  0008               	return
  9255  099F                     i1l3339:	
  9256                           
  9257                           ;usb_device.c: 2544: else
  9258                           ;usb_device.c: 2545: {
  9259                           ;usb_device.c: 2548: controlTransferState = 0;
  9260  099F  0021               	movlb	1	; select bank1
  9261  09A0  01E3               	clrf	_controlTransferState^(0+128)	;volatile
  9262                           
  9263                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  9264  09A1  0023               	movlb	3	; select bank3
  9265  09A2  084E               	movf	_BothEP0OutUOWNsSet^(0+384),w	;volatile
  9266  09A3  1D03               	btfss	3,2
  9267  09A4  29CB               	goto	i1l3351
  9268                           
  9269                           ;usb_device.c: 2556: {
  9270                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
  9271  09A5  0021               	movlb	1	; select bank1
  9272  09A6  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9273  09A7  3E01               	addlw	1
  9274  09A8  00F6               	movwf	??_USBCtrlTrfOutHandler
  9275  09A9  3000               	movlw	0
  9276  09AA  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9277  09AB  00F7               	movwf	??_USBCtrlTrfOutHandler+1
  9278  09AC  0876               	movf	??_USBCtrlTrfOutHandler,w
  9279  09AD  0086               	movwf	6
  9280  09AE  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  9281  09AF  0087               	movwf	7
  9282  09B0  3008               	movlw	8
  9283  09B1  0081               	movwf	1
  9284                           
  9285                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9286  09B2  3050               	movlw	80
  9287  09B3  00F6               	movwf	??_USBCtrlTrfOutHandler
  9288  09B4  3000               	movlw	0
  9289  09B5  00F7               	movwf	??_USBCtrlTrfOutHandler+1
  9290  09B6  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9291  09B7  0086               	movwf	6
  9292  09B8  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9293  09B9  0087               	movwf	7
  9294  09BA  3142               	addfsr 1,2
  9295  09BB  0876               	movf	??_USBCtrlTrfOutHandler,w
  9296  09BC  3FC0               	movwi [0]fsr1
  9297  09BD  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  9298  09BE  3FC1               	movwi [1]fsr1
  9299                           
  9300                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9301  09BF  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9302  09C0  0086               	movwf	6
  9303  09C1  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9304  09C2  0087               	movwf	7
  9305  09C3  300C               	movlw	12
  9306  09C4  0081               	movwf	1
  9307                           
  9308                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9309  09C5  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9310  09C6  0086               	movwf	6
  9311  09C7  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9312  09C8  0087               	movwf	7
  9313  09C9  1781               	bsf	1,7
  9314                           
  9315                           ;usb_device.c: 2561: }
  9316  09CA  0008               	return
  9317  09CB                     i1l3351:	
  9318                           
  9319                           ;usb_device.c: 2562: else
  9320                           ;usb_device.c: 2563: {
  9321                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  9322  09CB  0023               	movlb	3	; select bank3
  9323  09CC  01CE               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  9324  09CD  0008               	return
  9325  09CE                     __end_of_USBCtrlTrfOutHandler:	
  9326                           
  9327                           	psect	text43
  9328  05EF                     __ptext43:	
  9329 ;; *************** function _USBCtrlTrfRxService *****************
  9330 ;; Defined at:
  9331 ;;		line 1852 in file "../lib/usb/src/usb_device.c"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;		None
  9334 ;; Auto vars:     Size  Location     Type
  9335 ;;  byteToRead      1    5[COMMON] unsigned char 
  9336 ;;  i               1    4[COMMON] unsigned char 
  9337 ;; Return value:  Size  Location     Type
  9338 ;;                  1    wreg      void 
  9339 ;; Registers used:
  9340 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9341 ;; Tracked objects:
  9342 ;;		On entry : 0/0
  9343 ;;		On exit  : 0/0
  9344 ;;		Unchanged: 0/0
  9345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9348 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9349 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9350 ;;Total ram usage:        4 bytes
  9351 ;; Hardware stack levels used:    1
  9352 ;; Hardware stack levels required when called:    1
  9353 ;; This function calls:
  9354 ;;		_USBCtrlEPAllowStatusStage
  9355 ;; This function is called by:
  9356 ;;		_USBCtrlTrfOutHandler
  9357 ;; This function uses a non-reentrant model
  9358 ;;
  9359                           
  9360                           
  9361                           ;psect for function _USBCtrlTrfRxService
  9362  05EF                     _USBCtrlTrfRxService:	
  9363                           
  9364                           ;usb_device.c: 1854: uint8_t byteToRead;
  9365                           ;usb_device.c: 1855: uint8_t i;
  9366                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  9367                           
  9368                           ;incstack = 0
  9369                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9370  05EF  0021               	movlb	1	; select bank1
  9371  05F0  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9372  05F1  0086               	movwf	6
  9373  05F2  0187               	clrf	7
  9374  05F3  3F41               	moviw [1]fsr1
  9375  05F4  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  9376                           
  9377                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  9378  05F5  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  9379  05F6  00F2               	movwf	??_USBCtrlTrfRxService
  9380  05F7  01F3               	clrf	??_USBCtrlTrfRxService+1
  9381  05F8  0873               	movf	??_USBCtrlTrfRxService+1,w
  9382  05F9  0023               	movlb	3	; select bank3
  9383  05FA  0224               	subwf	((_outPipes+1)^(0+384)+3),w	;volatile
  9384  05FB  1D03               	skipz
  9385  05FC  2DFF               	goto	u252_25
  9386  05FD  0872               	movf	??_USBCtrlTrfRxService,w
  9387  05FE  0223               	subwf	(_outPipes^(0+384)+3),w	;volatile
  9388  05FF                     u252_25:	
  9389  05FF  1803               	skipnc
  9390  0600  2E05               	goto	i1l286
  9391                           
  9392                           ;usb_device.c: 1866: {
  9393                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  9394  0601  0823               	movf	(_outPipes^(0+384)+3),w	;volatile
  9395  0602  00F2               	movwf	??_USBCtrlTrfRxService
  9396  0603  0872               	movf	??_USBCtrlTrfRxService,w
  9397  0604  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  9398  0605                     i1l286:	
  9399                           
  9400                           ;usb_device.c: 1868: }
  9401                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  9402  0605  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  9403  0606  00F2               	movwf	??_USBCtrlTrfRxService
  9404  0607  01F3               	clrf	??_USBCtrlTrfRxService+1
  9405  0608  0872               	movf	??_USBCtrlTrfRxService,w
  9406  0609  02A3               	subwf	(_outPipes^(0+384)+3),f	;volatile
  9407  060A  0873               	movf	??_USBCtrlTrfRxService+1,w
  9408  060B  3BA4               	subwfb	((_outPipes+1)^(0+384)+3),f	;volatile
  9409                           
  9410                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  9411  060C  01F4               	clrf	USBCtrlTrfRxService@i
  9412  060D                     i1l3223:	
  9413  060D  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  9414  060E  0274               	subwf	USBCtrlTrfRxService@i,w
  9415  060F  1803               	btfsc	3,0
  9416  0610  2E26               	goto	i1l3225
  9417                           
  9418                           ;usb_device.c: 1875: {
  9419                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  9420  0611  0874               	movf	USBCtrlTrfRxService@i,w
  9421  0612  3E58               	addlw	88
  9422  0613  0086               	movwf	6
  9423  0614  0187               	clrf	7
  9424  0615  0801               	movf	1,w
  9425  0616  00F2               	movwf	??_USBCtrlTrfRxService
  9426  0617  0820               	movf	_outPipes^(0+384),w	;volatile
  9427  0618  0086               	movwf	6
  9428  0619  3001               	movlw	1	; select bank2/3
  9429  061A  0087               	movwf	7
  9430  061B  0872               	movf	??_USBCtrlTrfRxService,w
  9431  061C  0081               	movwf	1
  9432  061D  3001               	movlw	1
  9433  061E  00F2               	movwf	??_USBCtrlTrfRxService
  9434  061F  0872               	movf	??_USBCtrlTrfRxService,w
  9435  0620  07A0               	addwf	_outPipes^(0+384),f	;volatile
  9436  0621  3001               	movlw	1
  9437  0622  00F2               	movwf	??_USBCtrlTrfRxService
  9438  0623  0872               	movf	??_USBCtrlTrfRxService,w
  9439  0624  07F4               	addwf	USBCtrlTrfRxService@i,f
  9440  0625  2E0D               	goto	i1l3223
  9441  0626                     i1l3225:	
  9442                           
  9443                           ;usb_device.c: 1877: }
  9444                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  9445  0626  0823               	movf	(_outPipes^(0+384)+3),w	;volatile
  9446  0627  0424               	iorwf	((_outPipes+1)^(0+384)+3),w	;volatile
  9447  0628  1903               	btfsc	3,2
  9448  0629  2E61               	goto	i1l3237
  9449                           
  9450                           ;usb_device.c: 1882: {
  9451                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  9452  062A  0021               	movlb	1	; select bank1
  9453  062B  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9454  062C  3E01               	addlw	1
  9455  062D  00F2               	movwf	??_USBCtrlTrfRxService
  9456  062E  3000               	movlw	0
  9457  062F  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9458  0630  00F3               	movwf	??_USBCtrlTrfRxService+1
  9459  0631  0872               	movf	??_USBCtrlTrfRxService,w
  9460  0632  0086               	movwf	6
  9461  0633  0873               	movf	??_USBCtrlTrfRxService+1,w
  9462  0634  0087               	movwf	7
  9463  0635  3008               	movlw	8
  9464  0636  0081               	movwf	1
  9465                           
  9466                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  9467  0637  3058               	movlw	88
  9468  0638  00F2               	movwf	??_USBCtrlTrfRxService
  9469  0639  3000               	movlw	0
  9470  063A  00F3               	movwf	??_USBCtrlTrfRxService+1
  9471  063B  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9472  063C  0086               	movwf	6
  9473  063D  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9474  063E  0087               	movwf	7
  9475  063F  3142               	addfsr 1,2
  9476  0640  0872               	movf	??_USBCtrlTrfRxService,w
  9477  0641  3FC0               	movwi [0]fsr1
  9478  0642  0873               	movf	??_USBCtrlTrfRxService+1,w
  9479  0643  3FC1               	movwi [1]fsr1
  9480                           
  9481                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  9482  0644  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9483  0645  0086               	movwf	6
  9484  0646  0187               	clrf	7
  9485  0647  1B01               	btfsc	1,6
  9486  0648  2E55               	goto	i1l3235
  9487                           
  9488                           ;usb_device.c: 1886: {
  9489                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9490  0649  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9491  064A  0086               	movwf	6
  9492  064B  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9493  064C  0087               	movwf	7
  9494  064D  3048               	movlw	72
  9495  064E  0081               	movwf	1
  9496                           
  9497                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9498  064F  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9499  0650  0086               	movwf	6
  9500  0651  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9501  0652  0087               	movwf	7
  9502  0653  1781               	bsf	1,7
  9503                           
  9504                           ;usb_device.c: 1889: }
  9505  0654  0008               	return
  9506  0655                     i1l3235:	
  9507                           
  9508                           ;usb_device.c: 1890: else
  9509                           ;usb_device.c: 1891: {
  9510                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  9511  0655  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9512  0656  0086               	movwf	6
  9513  0657  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9514  0658  0087               	movwf	7
  9515  0659  3008               	movlw	8
  9516  065A  0081               	movwf	1
  9517                           
  9518                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9519  065B  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9520  065C  0086               	movwf	6
  9521  065D  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9522  065E  0087               	movwf	7
  9523  065F  1781               	bsf	1,7
  9524                           
  9525                           ;usb_device.c: 1894: }
  9526                           ;usb_device.c: 1895: }
  9527  0660  0008               	return
  9528  0661                     i1l3237:	
  9529                           
  9530                           ;usb_device.c: 1896: else
  9531                           ;usb_device.c: 1897: {
  9532                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  9533  0661  0021               	movlb	1	; select bank1
  9534  0662  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9535  0663  3E01               	addlw	1
  9536  0664  00F2               	movwf	??_USBCtrlTrfRxService
  9537  0665  3000               	movlw	0
  9538  0666  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9539  0667  00F3               	movwf	??_USBCtrlTrfRxService+1
  9540  0668  0872               	movf	??_USBCtrlTrfRxService,w
  9541  0669  0086               	movwf	6
  9542  066A  0873               	movf	??_USBCtrlTrfRxService+1,w
  9543  066B  0087               	movwf	7
  9544  066C  3008               	movlw	8
  9545  066D  0081               	movwf	1
  9546                           
  9547                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9548  066E  3050               	movlw	80
  9549  066F  00F2               	movwf	??_USBCtrlTrfRxService
  9550  0670  3000               	movlw	0
  9551  0671  00F3               	movwf	??_USBCtrlTrfRxService+1
  9552  0672  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9553  0673  0086               	movwf	6
  9554  0674  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9555  0675  0087               	movwf	7
  9556  0676  3142               	addfsr 1,2
  9557  0677  0872               	movf	??_USBCtrlTrfRxService,w
  9558  0678  3FC0               	movwi [0]fsr1
  9559  0679  0873               	movf	??_USBCtrlTrfRxService+1,w
  9560  067A  3FC1               	movwi [1]fsr1
  9561                           
  9562                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9563  067B  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9564  067C  0086               	movwf	6
  9565  067D  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9566  067E  0087               	movwf	7
  9567  067F  3004               	movlw	4
  9568  0680  0081               	movwf	1
  9569                           
  9570                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9571  0681  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9572  0682  0086               	movwf	6
  9573  0683  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9574  0684  0087               	movwf	7
  9575  0685  1781               	bsf	1,7
  9576                           
  9577                           ;usb_device.c: 1915: {
  9578                           ;usb_device.c: 1921: outPipes[0].pFunc();
  9579  0686  0023               	movlb	3	; select bank3
  9580  0687  0825               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
  9581  0688  0826               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
  9582                           
  9583                           ;usb_device.c: 1926: }
  9584                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  9585  0689  13A2               	bcf	(_outPipes^(0+384)+2),7	;volatile
  9586                           
  9587                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  9588  068A  0853               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  9589  068B  1D03               	btfss	3,2
  9590  068C  0008               	return
  9591                           
  9592                           ;usb_device.c: 1942: {
  9593                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  9594  068D  318D  257B         	fcall	_USBCtrlEPAllowStatusStage
  9595  068F  0008               	return
  9596  0690                     __end_of_USBCtrlTrfRxService:	
  9597                           
  9598                           	psect	text44
  9599  0D7B                     __ptext44:	
  9600 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  9601 ;; Defined at:
  9602 ;;		line 1416 in file "../lib/usb/src/usb_device.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;		None
  9605 ;; Auto vars:     Size  Location     Type
  9606 ;;		None
  9607 ;; Return value:  Size  Location     Type
  9608 ;;                  1    wreg      void 
  9609 ;; Registers used:
  9610 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9611 ;; Tracked objects:
  9612 ;;		On entry : 0/0
  9613 ;;		On exit  : 0/0
  9614 ;;		Unchanged: 0/0
  9615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9618 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9619 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9620 ;;Total ram usage:        2 bytes
  9621 ;; Hardware stack levels used:    1
  9622 ;; This function calls:
  9623 ;;		Nothing
  9624 ;; This function is called by:
  9625 ;;		_USBDeviceTasks
  9626 ;;		_USBCtrlEPServiceComplete
  9627 ;;		_USBCtrlTrfRxService
  9628 ;; This function uses a non-reentrant model
  9629 ;;
  9630                           
  9631                           
  9632                           ;psect for function _USBCtrlEPAllowStatusStage
  9633  0D7B                     _USBCtrlEPAllowStatusStage:	
  9634                           
  9635                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  9636                           
  9637                           ;incstack = 0
  9638                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  9639  0D7B  0023               	movlb	3	; select bank3
  9640  0D7C  0854               	movf	_USBStatusStageEnabledFlag1^(0+384),w	;volatile
  9641  0D7D  1D03               	btfss	3,2
  9642  0D7E  0008               	return
  9643                           
  9644                           ;usb_device.c: 1424: {
  9645                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  9646  0D7F  3001               	movlw	1
  9647  0D80  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9648  0D81  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9649  0D82  00D4               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  9650                           
  9651                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  9652  0D83  0855               	movf	_USBStatusStageEnabledFlag2^(0+384),w	;volatile
  9653  0D84  1D03               	btfss	3,2
  9654  0D85  0008               	return
  9655                           
  9656                           ;usb_device.c: 1427: {
  9657                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  9658  0D86  3001               	movlw	1
  9659  0D87  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9660  0D88  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9661  0D89  00D5               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  9662                           
  9663                           ;usb_device.c: 1432: if(controlTransferState == 2)
  9664  0D8A  3002               	movlw	2
  9665  0D8B  0021               	movlb	1	; select bank1
  9666  0D8C  0663               	xorwf	_controlTransferState^(0+128),w	;volatile
  9667  0D8D  1D03               	btfss	3,2
  9668  0D8E  2DA2               	goto	i1l2913
  9669                           
  9670                           ;usb_device.c: 1433: {
  9671                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  9672  0D8F  0023               	movlb	3	; select bank3
  9673  0D90  0827               	movf	_pBDTEntryIn^(0+384),w
  9674  0D91  0086               	movwf	6
  9675  0D92  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9676  0D93  0087               	movwf	7
  9677  0D94  3141               	addfsr 1,1
  9678  0D95  0181               	clrf	1
  9679                           
  9680                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9681  0D96  0827               	movf	_pBDTEntryIn^(0+384),w
  9682  0D97  0086               	movwf	6
  9683  0D98  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9684  0D99  0087               	movwf	7
  9685  0D9A  3048               	movlw	72
  9686  0D9B  0081               	movwf	1
  9687                           
  9688                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9689  0D9C  0827               	movf	_pBDTEntryIn^(0+384),w
  9690  0D9D  0086               	movwf	6
  9691  0D9E  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9692  0D9F  0087               	movwf	7
  9693  0DA0  1781               	bsf	1,7
  9694                           
  9695                           ;usb_device.c: 1437: }
  9696  0DA1  0008               	return
  9697  0DA2                     i1l2913:	
  9698                           
  9699                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  9700  0DA2  0021               	movlb	1	; select bank1
  9701  0DA3  0363               	decf	_controlTransferState^(0+128),w	;volatile
  9702  0DA4  1D03               	btfss	3,2
  9703  0DA5  0008               	return
  9704                           
  9705                           ;usb_device.c: 1439: {
  9706                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  9707  0DA6  0023               	movlb	3	; select bank3
  9708  0DA7  01CE               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  9709                           
  9710                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
  9711  0DA8  3008               	movlw	8
  9712  0DA9  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9713  0DAA  0021               	movlb	1	; select bank1
  9714  0DAB  0A64               	incf	_pBDTEntryEP0OutCurrent^(0+128),w
  9715  0DAC  0086               	movwf	6
  9716  0DAD  0187               	clrf	7
  9717  0DAE  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9718  0DAF  0081               	movwf	1
  9719                           
  9720                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9721  0DB0  3050               	movlw	80
  9722  0DB1  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9723  0DB2  3000               	movlw	0
  9724  0DB3  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  9725  0DB4  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9726  0DB5  3E02               	addlw	2
  9727  0DB6  0086               	movwf	6
  9728  0DB7  0187               	clrf	7
  9729  0DB8  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9730  0DB9  3FC0               	movwi [0]fsr1
  9731  0DBA  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9732  0DBB  3FC1               	movwi [1]fsr1
  9733                           
  9734                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  9735  0DBC  3004               	movlw	4
  9736  0DBD  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9737  0DBE  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9738  0DBF  0086               	movwf	6
  9739  0DC0  0187               	clrf	7
  9740  0DC1  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9741  0DC2  0081               	movwf	1
  9742                           
  9743                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  9744  0DC3  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9745  0DC4  0086               	movwf	6
  9746  0DC5  0187               	clrf	7
  9747  0DC6  1781               	bsf	1,7
  9748                           
  9749                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  9750  0DC7  3001               	movlw	1
  9751  0DC8  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9752  0DC9  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9753  0DCA  0023               	movlb	3	; select bank3
  9754  0DCB  00CE               	movwf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  9755                           
  9756                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
  9757  0DCC  0021               	movlb	1	; select bank1
  9758  0DCD  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9759  0DCE  3E01               	addlw	1
  9760  0DCF  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9761  0DD0  3000               	movlw	0
  9762  0DD1  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9763  0DD2  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  9764  0DD3  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9765  0DD4  0086               	movwf	6
  9766  0DD5  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9767  0DD6  0087               	movwf	7
  9768  0DD7  3008               	movlw	8
  9769  0DD8  0081               	movwf	1
  9770                           
  9771                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9772  0DD9  3050               	movlw	80
  9773  0DDA  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9774  0DDB  3000               	movlw	0
  9775  0DDC  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  9776  0DDD  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9777  0DDE  0086               	movwf	6
  9778  0DDF  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9779  0DE0  0087               	movwf	7
  9780  0DE1  3142               	addfsr 1,2
  9781  0DE2  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9782  0DE3  3FC0               	movwi [0]fsr1
  9783  0DE4  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9784  0DE5  3FC1               	movwi [1]fsr1
  9785                           
  9786                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  9787  0DE6  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9788  0DE7  0086               	movwf	6
  9789  0DE8  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9790  0DE9  0087               	movwf	7
  9791  0DEA  3080               	movlw	128
  9792  0DEB  0081               	movwf	1
  9793  0DEC  0008               	return
  9794  0DED                     __end_of_USBCtrlEPAllowStatusStage:	
  9795                           
  9796                           	psect	text45
  9797  0D0B                     __ptext45:	
  9798 ;; *************** function _USBCtrlTrfInHandler *****************
  9799 ;; Defined at:
  9800 ;;		line 2592 in file "../lib/usb/src/usb_device.c"
  9801 ;; Parameters:    Size  Location     Type
  9802 ;;		None
  9803 ;; Auto vars:     Size  Location     Type
  9804 ;;  lastDTS         1    5[COMMON] unsigned char 
  9805 ;; Return value:  Size  Location     Type
  9806 ;;                  1    wreg      void 
  9807 ;; Registers used:
  9808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9809 ;; Tracked objects:
  9810 ;;		On entry : 0/0
  9811 ;;		On exit  : 0/0
  9812 ;;		Unchanged: 0/0
  9813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9815 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9816 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9817 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9818 ;;Total ram usage:        3 bytes
  9819 ;; Hardware stack levels used:    1
  9820 ;; Hardware stack levels required when called:    1
  9821 ;; This function calls:
  9822 ;;		_USBCtrlTrfTxService
  9823 ;; This function is called by:
  9824 ;;		_USBCtrlEPService
  9825 ;; This function uses a non-reentrant model
  9826 ;;
  9827                           
  9828                           
  9829                           ;psect for function _USBCtrlTrfInHandler
  9830  0D0B                     _USBCtrlTrfInHandler:	
  9831                           
  9832                           ;usb_device.c: 2594: uint8_t lastDTS;
  9833                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9834                           
  9835                           ;incstack = 0
  9836                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9837  0D0B  0023               	movlb	3	; select bank3
  9838  0D0C  0827               	movf	_pBDTEntryIn^(0+384),w
  9839  0D0D  0086               	movwf	6
  9840  0D0E  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9841  0D0F  0087               	movwf	7
  9842  0D10  3000               	movlw	0
  9843  0D11  1B01               	btfsc	1,6
  9844  0D12  3001               	movlw	1
  9845  0D13  00F5               	movwf	USBCtrlTrfInHandler@lastDTS
  9846                           
  9847                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  9848  0D14  3004               	movlw	4
  9849  0D15  0627               	xorwf	_pBDTEntryIn^(0+384),w
  9850  0D16  00A7               	movwf	_pBDTEntryIn^(0+384)
  9851  0D17  3000               	movlw	0
  9852  0D18  0628               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  9853  0D19  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  9854                           
  9855                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
  9856  0D1A  3008               	movlw	8
  9857  0D1B  0022               	movlb	2	; select bank2
  9858  0D1C  066D               	xorwf	_USBDeviceState^(0+256),w	;volatile
  9859  0D1D  1D03               	btfss	3,2
  9860  0D1E  2D2E               	goto	i1l3367
  9861                           
  9862                           ;usb_device.c: 2605: {
  9863                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
  9864  0D1F  0020               	movlb	0	; select bank0
  9865  0D20  0852               	movf	82,w	;volatile
  9866  0D21  397F               	andlw	127
  9867  0D22  003D               	movlb	29	; select bank29
  9868  0D23  0096               	movwf	22	;volatile
  9869                           
  9870                           ;usb_device.c: 2607: if(UADDR != 0u)
  9871  0D24  0816               	movf	22,w	;volatile
  9872  0D25  1903               	btfsc	3,2
  9873  0D26  2D29               	goto	i1l3365
  9874                           
  9875                           ;usb_device.c: 2608: {
  9876                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
  9877  0D27  3010               	movlw	16
  9878  0D28  2D2A               	goto	L11
  9879  0D29                     i1l3365:	
  9880                           ;usb_device.c: 2610: }
  9881                           
  9882                           
  9883                           ;usb_device.c: 2611: else
  9884                           ;usb_device.c: 2612: {
  9885                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
  9886  0D29  3004               	movlw	4
  9887  0D2A                     L11:	
  9888  0D2A  00F3               	movwf	??_USBCtrlTrfInHandler
  9889  0D2B  0873               	movf	??_USBCtrlTrfInHandler,w
  9890  0D2C  0022               	movlb	2	; select bank2
  9891  0D2D  00ED               	movwf	_USBDeviceState^(0+256)	;volatile
  9892  0D2E                     i1l3367:	
  9893                           
  9894                           ;usb_device.c: 2614: }
  9895                           ;usb_device.c: 2615: }
  9896                           ;usb_device.c: 2618: if(controlTransferState == 1)
  9897  0D2E  0021               	movlb	1	; select bank1
  9898  0D2F  0363               	decf	_controlTransferState^(0+128),w	;volatile
  9899  0D30  1D03               	btfss	3,2
  9900  0D31  2D72               	goto	i1l371
  9901                           
  9902                           ;usb_device.c: 2619: {
  9903                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  9904  0D32  3058               	movlw	88
  9905  0D33  00F3               	movwf	??_USBCtrlTrfInHandler
  9906  0D34  3000               	movlw	0
  9907  0D35  00F4               	movwf	??_USBCtrlTrfInHandler+1
  9908  0D36  0023               	movlb	3	; select bank3
  9909  0D37  0827               	movf	_pBDTEntryIn^(0+384),w
  9910  0D38  0086               	movwf	6
  9911  0D39  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9912  0D3A  0087               	movwf	7
  9913  0D3B  3142               	addfsr 1,2
  9914  0D3C  0873               	movf	??_USBCtrlTrfInHandler,w
  9915  0D3D  3FC0               	movwi [0]fsr1
  9916  0D3E  0874               	movf	??_USBCtrlTrfInHandler+1,w
  9917  0D3F  3FC1               	movwi [1]fsr1
  9918                           
  9919                           ;usb_device.c: 2621: USBCtrlTrfTxService();
  9920  0D40  318C  24A1  318D   	fcall	_USBCtrlTrfTxService
  9921                           
  9922                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
  9923  0D43  3002               	movlw	2
  9924  0D44  0022               	movlb	2	; select bank2
  9925  0D45  066E               	xorwf	_shortPacketStatus^(0+256),w	;volatile
  9926  0D46  1D03               	btfss	3,2
  9927  0D47  2D55               	goto	i1l3377
  9928                           
  9929                           ;usb_device.c: 2628: {
  9930                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
  9931  0D48  0023               	movlb	3	; select bank3
  9932  0D49  0827               	movf	_pBDTEntryIn^(0+384),w
  9933  0D4A  0086               	movwf	6
  9934  0D4B  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9935  0D4C  0087               	movwf	7
  9936  0D4D  3004               	movlw	4
  9937  0D4E  0081               	movwf	1
  9938                           
  9939                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9940  0D4F  0827               	movf	_pBDTEntryIn^(0+384),w
  9941  0D50  0086               	movwf	6
  9942  0D51  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9943  0D52  0087               	movwf	7
  9944  0D53  1781               	bsf	1,7
  9945                           
  9946                           ;usb_device.c: 2633: }
  9947  0D54  0008               	return
  9948  0D55                     i1l3377:	
  9949                           
  9950                           ;usb_device.c: 2634: else
  9951                           ;usb_device.c: 2635: {
  9952                           ;usb_device.c: 2636: if(lastDTS == 0)
  9953  0D55  0875               	movf	USBCtrlTrfInHandler@lastDTS,w
  9954  0D56  1D03               	btfss	3,2
  9955  0D57  2D65               	goto	i1l3381
  9956                           
  9957                           ;usb_device.c: 2637: {
  9958                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9959  0D58  0023               	movlb	3	; select bank3
  9960  0D59  0827               	movf	_pBDTEntryIn^(0+384),w
  9961  0D5A  0086               	movwf	6
  9962  0D5B  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9963  0D5C  0087               	movwf	7
  9964  0D5D  3048               	movlw	72
  9965  0D5E  0081               	movwf	1
  9966                           
  9967                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9968  0D5F  0827               	movf	_pBDTEntryIn^(0+384),w
  9969  0D60  0086               	movwf	6
  9970  0D61  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9971  0D62  0087               	movwf	7
  9972  0D63  1781               	bsf	1,7
  9973                           
  9974                           ;usb_device.c: 2640: }
  9975  0D64  0008               	return
  9976  0D65                     i1l3381:	
  9977                           
  9978                           ;usb_device.c: 2641: else
  9979                           ;usb_device.c: 2642: {
  9980                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  9981  0D65  0023               	movlb	3	; select bank3
  9982  0D66  0827               	movf	_pBDTEntryIn^(0+384),w
  9983  0D67  0086               	movwf	6
  9984  0D68  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9985  0D69  0087               	movwf	7
  9986  0D6A  3008               	movlw	8
  9987  0D6B  0081               	movwf	1
  9988                           
  9989                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9990  0D6C  0827               	movf	_pBDTEntryIn^(0+384),w
  9991  0D6D  0086               	movwf	6
  9992  0D6E  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9993  0D6F  0087               	movwf	7
  9994  0D70  1781               	bsf	1,7
  9995                           
  9996                           ;usb_device.c: 2645: }
  9997                           ;usb_device.c: 2646: }
  9998                           ;usb_device.c: 2647: }
  9999  0D71  0008               	return
 10000  0D72                     i1l371:	
 10001                           
 10002                           ;usb_device.c: 2648: else
 10003                           ;usb_device.c: 2649: {
 10004                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
 10005  0D72  0023               	movlb	3	; select bank3
 10006  0D73  1FA2               	btfss	(_outPipes^(0+384)+2),7	;volatile
 10007  0D74  2D78               	goto	i1l3385
 10008                           
 10009                           ;usb_device.c: 2656: {
 10010                           ;usb_device.c: 2657: outPipes[0].pFunc();
 10011  0D75  0825               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
 10012  0D76  0826               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
 10013                           
 10014                           ;usb_device.c: 2658: }
 10015                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 10016  0D77  13A2               	bcf	(_outPipes^(0+384)+2),7	;volatile
 10017  0D78                     i1l3385:	
 10018                           
 10019                           ;usb_device.c: 2660: }
 10020                           ;usb_device.c: 2662: controlTransferState = 0;
 10021  0D78  0021               	movlb	1	; select bank1
 10022  0D79  01E3               	clrf	_controlTransferState^(0+128)	;volatile
 10023  0D7A  0008               	return
 10024  0D7B                     __end_of_USBCtrlTrfInHandler:	
 10025                           
 10026                           	psect	text46
 10027  0CA1                     __ptext46:	
 10028 ;; *************** function _USBCtrlTrfTxService *****************
 10029 ;; Defined at:
 10030 ;;		line 1771 in file "../lib/usb/src/usb_device.c"
 10031 ;; Parameters:    Size  Location     Type
 10032 ;;		None
 10033 ;; Auto vars:     Size  Location     Type
 10034 ;;  byteToSend      1    2[COMMON] unsigned char 
 10035 ;; Return value:  Size  Location     Type
 10036 ;;                  1    wreg      void 
 10037 ;; Registers used:
 10038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 10039 ;; Tracked objects:
 10040 ;;		On entry : 0/0
 10041 ;;		On exit  : 0/0
 10042 ;;		Unchanged: 0/0
 10043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10045 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10046 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10047 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10048 ;;Total ram usage:        3 bytes
 10049 ;; Hardware stack levels used:    1
 10050 ;; This function calls:
 10051 ;;		Nothing
 10052 ;; This function is called by:
 10053 ;;		_USBCtrlEPAllowDataStage
 10054 ;;		_USBCtrlTrfInHandler
 10055 ;; This function uses a non-reentrant model
 10056 ;;
 10057                           
 10058                           
 10059                           ;psect for function _USBCtrlTrfTxService
 10060  0CA1                     _USBCtrlTrfTxService:	
 10061                           
 10062                           ;usb_device.c: 1773: uint8_t byteToSend;
 10063                           ;usb_device.c: 1777: byteToSend = 8;
 10064                           
 10065                           ;incstack = 0
 10066                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
 10067  0CA1  3008               	movlw	8
 10068  0CA2  00F0               	movwf	??_USBCtrlTrfTxService
 10069  0CA3  0870               	movf	??_USBCtrlTrfTxService,w
 10070  0CA4  00F2               	movwf	USBCtrlTrfTxService@byteToSend
 10071                           
 10072                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 10073  0CA5  3000               	movlw	0
 10074  0CA6  0023               	movlb	3	; select bank3
 10075  0CA7  0237               	subwf	((_inPipes+1)^(0+384)+3),w	;volatile
 10076  0CA8  3008               	movlw	8
 10077  0CA9  1903               	skipnz
 10078  0CAA  0236               	subwf	(_inPipes^(0+384)+3),w	;volatile
 10079  0CAB  1803               	skipnc
 10080  0CAC  2CBE               	goto	i1l271
 10081                           
 10082                           ;usb_device.c: 1779: {
 10083                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 10084  0CAD  0836               	movf	(_inPipes^(0+384)+3),w	;volatile
 10085  0CAE  00F0               	movwf	??_USBCtrlTrfTxService
 10086  0CAF  0870               	movf	??_USBCtrlTrfTxService,w
 10087  0CB0  00F2               	movwf	USBCtrlTrfTxService@byteToSend
 10088                           
 10089                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 10090  0CB1  0022               	movlb	2	; select bank2
 10091  0CB2  086E               	movf	_shortPacketStatus^(0+256),w	;volatile
 10092  0CB3  1D03               	btfss	3,2
 10093  0CB4  2CB7               	goto	i1l2857
 10094                           
 10095                           ;usb_device.c: 1788: {
 10096                           ;usb_device.c: 1789: shortPacketStatus = 1;
 10097  0CB5  3001               	movlw	1
 10098  0CB6  2CBB               	goto	L12
 10099  0CB7                     i1l2857:	
 10100                           ;usb_device.c: 1790: }
 10101                           
 10102                           
 10103                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 10104  0CB7  036E               	decf	_shortPacketStatus^(0+256),w	;volatile
 10105  0CB8  1D03               	btfss	3,2
 10106  0CB9  2CBE               	goto	i1l271
 10107                           
 10108                           ;usb_device.c: 1792: {
 10109                           ;usb_device.c: 1793: shortPacketStatus = 2;
 10110  0CBA  3002               	movlw	2
 10111  0CBB                     L12:	
 10112  0CBB  00F0               	movwf	??_USBCtrlTrfTxService
 10113  0CBC  0870               	movf	??_USBCtrlTrfTxService,w
 10114  0CBD  00EE               	movwf	_shortPacketStatus^(0+256)	;volatile
 10115  0CBE                     i1l271:	
 10116                           
 10117                           ;usb_device.c: 1794: }
 10118                           ;usb_device.c: 1795: }
 10119                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 10120  0CBE  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10121  0CBF  00F0               	movwf	??_USBCtrlTrfTxService
 10122  0CC0  01F1               	clrf	??_USBCtrlTrfTxService+1
 10123  0CC1  0870               	movf	??_USBCtrlTrfTxService,w
 10124  0CC2  0023               	movlb	3	; select bank3
 10125  0CC3  02B6               	subwf	(_inPipes^(0+384)+3),f	;volatile
 10126  0CC4  0871               	movf	??_USBCtrlTrfTxService+1,w
 10127  0CC5  3BB7               	subwfb	((_inPipes+1)^(0+384)+3),f	;volatile
 10128                           
 10129                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 10130  0CC6  0827               	movf	_pBDTEntryIn^(0+384),w
 10131  0CC7  3E01               	addlw	1
 10132  0CC8  00F0               	movwf	??_USBCtrlTrfTxService
 10133  0CC9  3000               	movlw	0
 10134  0CCA  3D28               	addwfc	(_pBDTEntryIn+1)^(0+384),w
 10135  0CCB  00F1               	movwf	??_USBCtrlTrfTxService+1
 10136  0CCC  0870               	movf	??_USBCtrlTrfTxService,w
 10137  0CCD  0086               	movwf	6
 10138  0CCE  0871               	movf	??_USBCtrlTrfTxService+1,w
 10139  0CCF  0087               	movwf	7
 10140  0CD0  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10141  0CD1  0081               	movwf	1
 10142                           
 10143                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 10144  0CD2  3058               	movlw	88
 10145  0CD3  00F0               	movwf	??_USBCtrlTrfTxService
 10146  0CD4  0870               	movf	??_USBCtrlTrfTxService,w
 10147  0CD5  00DD               	movwf	_pDst^(0+384)
 10148                           
 10149                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 10150  0CD6  1C35               	btfss	(_inPipes^(0+384)+2),0	;volatile
 10151  0CD7  2CEE               	goto	i1l2877
 10152  0CD8  2D07               	goto	i1l2887
 10153  0CD9                     i1l2869:	
 10154                           ;usb_device.c: 1810: {
 10155                           ;usb_device.c: 1811: while(byteToSend)
 10156                           
 10157                           
 10158                           ;usb_device.c: 1812: {
 10159                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 10160  0CD9  0833               	movf	_inPipes^(0+384),w	;volatile
 10161  0CDA  0084               	movwf	4
 10162  0CDB  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
 10163  0CDC  0085               	movwf	5
 10164  0CDD  0800               	movf	0,w	;code access
 10165  0CDE  00F0               	movwf	??_USBCtrlTrfTxService
 10166  0CDF  085D               	movf	_pDst^(0+384),w
 10167  0CE0  0086               	movwf	6
 10168  0CE1  0187               	clrf	7
 10169  0CE2  0870               	movf	??_USBCtrlTrfTxService,w
 10170  0CE3  0081               	movwf	1
 10171  0CE4  3001               	movlw	1
 10172  0CE5  07B3               	addwf	_inPipes^(0+384),f	;volatile
 10173  0CE6  3000               	movlw	0
 10174  0CE7  3DB4               	addwfc	(_inPipes+1)^(0+384),f	;volatile
 10175  0CE8  3001               	movlw	1
 10176  0CE9  00F0               	movwf	??_USBCtrlTrfTxService
 10177  0CEA  0870               	movf	??_USBCtrlTrfTxService,w
 10178  0CEB  07DD               	addwf	_pDst^(0+384),f
 10179                           
 10180                           ;usb_device.c: 1814: byteToSend--;
 10181  0CEC  3001               	movlw	1
 10182  0CED  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
 10183  0CEE                     i1l2877:	
 10184  0CEE  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10185  0CEF  1903               	btfsc	3,2
 10186  0CF0  0008               	return
 10187  0CF1  2CD9               	goto	i1l2869
 10188  0CF2                     i1l2879:	
 10189                           ;usb_device.c: 1817: else
 10190                           ;usb_device.c: 1818: {
 10191                           ;usb_device.c: 1819: while(byteToSend)
 10192                           
 10193                           ;usb_device.c: 1815: }
 10194                           ;usb_device.c: 1816: }
 10195                           
 10196                           
 10197                           ;usb_device.c: 1820: {
 10198                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 10199  0CF2  0833               	movf	_inPipes^(0+384),w	;volatile
 10200  0CF3  0084               	movwf	4
 10201  0CF4  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
 10202  0CF5  0085               	movwf	5
 10203  0CF6  0800               	movf	0,w	;code access
 10204  0CF7  00F0               	movwf	??_USBCtrlTrfTxService
 10205  0CF8  085D               	movf	_pDst^(0+384),w
 10206  0CF9  0086               	movwf	6
 10207  0CFA  0187               	clrf	7
 10208  0CFB  0870               	movf	??_USBCtrlTrfTxService,w
 10209  0CFC  0081               	movwf	1
 10210  0CFD  3001               	movlw	1
 10211  0CFE  07B3               	addwf	_inPipes^(0+384),f	;volatile
 10212  0CFF  3000               	movlw	0
 10213  0D00  3DB4               	addwfc	(_inPipes+1)^(0+384),f	;volatile
 10214  0D01  3001               	movlw	1
 10215  0D02  00F0               	movwf	??_USBCtrlTrfTxService
 10216  0D03  0870               	movf	??_USBCtrlTrfTxService,w
 10217  0D04  07DD               	addwf	_pDst^(0+384),f
 10218                           
 10219                           ;usb_device.c: 1822: byteToSend--;
 10220  0D05  3001               	movlw	1
 10221  0D06  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
 10222  0D07                     i1l2887:	
 10223  0D07  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10224  0D08  1903               	btfsc	3,2
 10225  0D09  0008               	return
 10226  0D0A  2CF2               	goto	i1l2879
 10227  0D0B                     __end_of_USBCtrlTrfTxService:	
 10228  007E                     btemp	set	126	;btemp
 10229  007E                     int$flags	set	126
 10230  007E                     wtemp	set	126
 10231  007E                     wtemp0	set	126
 10232  0080                     wtemp1	set	128
 10233  0082                     wtemp2	set	130
 10234  0084                     wtemp3	set	132
 10235  0086                     wtemp4	set	134
 10236  0088                     wtemp5	set	136
 10237  007F                     wtemp6	set	127
 10238  007E                     ttemp	set	126
 10239  007E                     ttemp0	set	126
 10240  0081                     ttemp1	set	129
 10241  0084                     ttemp2	set	132
 10242  0087                     ttemp3	set	135
 10243  007F                     ttemp4	set	127
 10244  007E                     ltemp	set	126
 10245  007E                     ltemp0	set	126
 10246  0082                     ltemp1	set	130
 10247  0086                     ltemp2	set	134
 10248  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    201
    Data        0
    BSS         226
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            16     16      16
    BANK1            16      6      12
    BANK2            16     13      16
    BANK3            80      8      79
    BANK4            80      6      24
    BANK5            80      0      64
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 4096
		 -> cdc_data_tx(BANK1[64]), cdc_data_rx(BANK2[64]), CtrlTrfData(BANK0[8]), RAM(DATA[4096]), 
		 -> SetupPkt(BANK0[8]), NULL(NULL[0]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 8
		 -> SetupPkt(BANK0[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK2[1]), NULL(NULL[0]), 
		 -> BDT(BANK0[48]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    ReadPayload@data	PTR unsigned char  size(1) Largest target is 3
		 -> main@podatak(BANK4[3]), 

    WriteAddress@addr	PTR unsigned char  size(1) Largest target is 5
		 -> nRF_Setup@RXTX_ADDR(BANK3[5]), 

    putUSBUSART@data	PTR unsigned char  size(1) Largest target is 3
		 -> main@podatak(BANK4[3]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S1367_POINTER$wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S1367_POINTER$bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S1367_POINTER$wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S1367_POINTER$bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(BANK0[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK1[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    S249$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S239$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S239$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S215$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S215$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S215$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S215$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _SYS_InterruptHigh in COMMON

    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USER_USB_CALLBACK_EVENT_HANDLER->i1_CDCInitEP
    i1_CDCInitEP->i1_USBEnableEndpoint
    i1_USBEnableEndpoint->i1_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    None.

Critical Paths under _SYS_InterruptHigh in BANK0

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService

Critical Paths under _main in BANK2

    _nRF_Setup->_WriteAddress
    _WriteRegister->_SPI_transfer
    _WriteCommand->_SPI_transfer
    _WriteAddress->_SPI_transfer
    _ReadRegister->_SPI_transfer
    _ReadPayload->_SPI_transfer
    _CDCTxService->_USBTransferOnePacket
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_nRF_Setup

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   10013
                                              5 BANK3      3     3      0
                                              0 BANK4      6     6      0
                          _CDCInitEP
                       _CDCTxService
                        _ReadPayload
                       _ReadRegister
                           _SPI_init
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                      _WriteRegister
                          _nRF_Setup
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (1) _putUSBUSART                                          3     2      1     205
                                              0 BANK2      3     2      1
 ---------------------------------------------------------------------------------
 (1) _nRF_Setup                                            8     8      0    1988
                                              7 BANK2      2     2      0
                                              0 BANK3      5     5      0
                       _WriteAddress
                       _WriteCommand
                      _WriteRegister
 ---------------------------------------------------------------------------------
 (2) _WriteRegister                                        2     1      1    1341
                                              1 BANK2      2     1      1
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (2) _WriteCommand                                         1     1      0      62
                                              1 BANK2      1     1      0
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (2) _WriteAddress                                         6     4      2     400
                                              1 BANK2      6     4      2
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        5     5      0     396
                                              0 BANK2      5     5      0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      1     1      0       0
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      31
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadRegister                                         4     4      0     130
                                              1 BANK2      4     4      0
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (1) _ReadPayload                                          5     4      1     265
                                              1 BANK2      5     4      1
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _SPI_transfer                                         1     1      0      31
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CDCTxService                                         3     3      0    2294
                                             11 BANK2      1     1      0
                                              0 BANK3      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _CDCInitEP                                            1     1      0    3045
                                              0 BANK3      1     1      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _USBTransferOnePacket                                11     7      4    2093
                                              0 BANK2     11     7      4
 ---------------------------------------------------------------------------------
 (2) _USBEnableEndpoint                                    6     5      1     952
                                              7 BANK2      6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBConfigureEndpoint                                 7     6      1     524
                                              0 BANK2      7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _SYS_InterruptHigh                                    1     1      0   27385
                                              5 BANK1      1     1      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (5) _USBDeviceTasks                                       3     3      0   27385
                                             15 BANK0      1     1      0
                                              3 BANK1      2     2      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i1_USBDeviceInit
 ---------------------------------------------------------------------------------
 (6) i1_USBDeviceInit                                      5     5      0     272
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (6) _USBWakeFromSuspend                                   1     1      0    3649
                                              6 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBSuspend                                           1     1      0    3649
                                              6 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBStallHandler                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _USBIncrement1msInternalTimers                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPService                                     3     3      0   16120
                                              0 BANK1      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfSetupHandler                               1     1      0   15891
                                             14 BANK0      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPServiceComplete                             2     2      0      92
                                              5 COMMON     2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              3 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (8) _USBCheckStdRequest                                   1     1      0   12150
                                             13 BANK0      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBStdSetCfgHandler                                  5     5      0    4335
                                              6 BANK0      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (10) _memset                                              8     2      6     526
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (9) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (9) _USBStdGetDscHandler                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (9) _USBStdFeatureReqHandler                              7     7      0    4120
                                              6 BANK0      7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    3649
                                              0 BANK0      6     0      6
                 _USBCheckCDCRequest
                        i1_CDCInitEP
                i1_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (7) i1_SYSTEM_Initialize                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_CDCInitEP                                          1     1      0     935
                                             13 COMMON     1     1      0
                i1_USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (8) i1_USBTransferOnePacket                              11     7      4     454
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (8) i1_USBEnableEndpoint                                  6     5      1     481
                                              7 COMMON     6     5      1
             i1_USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (9) i1_USBConfigureEndpoint                               7     6      1     274
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (7) _USBCheckCDCRequest                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfOutHandler                                 2     2      0     114
                                              6 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfRxService                                  4     4      0     114
                                              2 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfInHandler                                  3     3      0     115
                                              3 COMMON     3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfTxService                                 3     3      0      92
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDCInitEP
     _USBEnableEndpoint
       _USBConfigureEndpoint
     _USBTransferOnePacket
   _CDCTxService
     _USBTransferOnePacket
   _ReadPayload
     _SPI_transfer
   _ReadRegister
     _SPI_transfer
   _SPI_init
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
   _WriteRegister
     _SPI_transfer
   _nRF_Setup
     _WriteAddress
       _SPI_transfer
     _WriteCommand
       _SPI_transfer
     _WriteRegister
       _SPI_transfer
   _putUSBUSART

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_SYSTEM_Initialize
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             i1_CDCInitEP
               i1_USBEnableEndpoint
                 i1_USBConfigureEndpoint
               i1_USBTransferOnePacket
             i1_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           i1_CDCInitEP
             i1_USBEnableEndpoint
               i1_USBConfigureEndpoint
             i1_USBTransferOnePacket
           i1_SYSTEM_Initialize
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       i1_CDCInitEP
         i1_USBEnableEndpoint
           i1_USBConfigureEndpoint
         i1_USBTransferOnePacket
       i1_SYSTEM_Initialize
     i1_USBDeviceInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               10     10      10       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10      6       C       7       75.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               10      D      10       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      8      4F      11       98.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      6      18      13       30.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     121      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     121      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Jun 30 12:33:14 2017

                              _USB_SD_Ptr 0252                                         pc 0002  
                             __CFG_CP$OFF 0000                               _SSPSTATbits 0214  
                           _USBDeviceInit 03E3                        __size_of_CDCInitEP 003F  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0060      USER_USB_CALLBACK_EVENT_HANDLER@pdata 0062  
                                     l233 0856                                       l173 042A  
             __end_of_USBStdGetDscHandler 0E6C                                       l565 17CF  
                                     l655 0932                                       l673 0956  
                                     _BDT 0020                                       l696 1776  
                                     _UIE 0E92                                       _UIR 0E90  
                              _USBSuspend 0861                     __size_of_WriteAddress 002B  
                    USBStdSetCfgHandler@i 006A                      USBStdSetCfgHandler@p 0067  
             __end_ofi1_SYSTEM_Initialize 178F                              __CFG_BORV$LO 0000  
                                     wreg 0009                            _USBDeviceTasks 016B  
                          _USBDeviceState 016D                     ??_USBCtrlTrfRxService 0072  
                   __size_of_WriteCommand 0009                  USBEnableEndpoint@options 0167  
                            __CFG_LVP$OFF 0000                     __size_of_SPI_transfer 0009  
              USBConfigureEndpoint@handle 0166                                      l4301 08C9  
                                    l4305 08D1                                      l4321 0F0D  
                                    l4313 0EFD                                      l4331 0F56  
                                    l4333 0F6E                                      l4413 0411  
                                    l4405 0404                                      l4501 0843  
                                    l4511 032B                                      l4425 042F  
                                    l4353 0915                                      l4531 035E  
                                    l4363 17BC                                      l4285 07E0  
                                    l4525 0354                                      l4453 0476  
                                    l4287 07E9                                      l4543 037C  
                                    l4551 0397                                      l4519 0335  
                                    l4367 17C3                                      l4447 0452  
                                    l4553 039B                                      l4561 03B6  
                                    l4713 057E                                      l4571 03C8  
                                    l4563 03B9                                      l4573 03E0  
                                    l4637 093E                                      l4397 03F3  
                                    l4569 03C2                                      l4489 085B  
                                    l4729 05AD                                      l4747 05EB  
                                    l4739 05D7                                      u4207 0FFA  
                                    u4217 095C                                      u3715 07B9  
                                    u4187 05C0                                      u3725 07BF  
                                    u4197 05D0                                      u3735 07C7  
                                    u3815 091E                                      i1l35 0A05  
                                    u3855 0414                     ??_USBCtrlTrfTxService 0070  
                                    _UCFG 0E91                                      _UEP0 0E98  
                                    _UEP1 0E99                                      _UEIE 0E97  
                                    _UEIR 0E93                                      _UCON 0E8E  
                            ?i1_CDCInitEP 0070                              __CFG_WRT$OFF 0000  
                         _CDCDataInHandle 01C6    USBStdFeatureReqHandler@current_ep_data 006A  
                                    _pDst 01DD                               main@podatak 0234  
                                    _main 0549                                      fsr0h 0005  
                                    fsr1h 0007                                      fsr0l 0004  
                                    indf0 0000                                      indf1 0001  
                             _BaudRateGen 01B8                                      fsr1l 0006  
                         _USBDeviceAttach 0845                                      btemp 007E  
                                    ltemp 007E                                      start 0012  
                                    ttemp 007E                               main@status1 0237  
                             main@status2 0232                                      wtemp 007E  
                           __CFG_IESO$OFF 0000                __end_of_USBCheckStdRequest 0CA1  
                  ??_USBCtrlTrfOutHandler 0076                       __CFG_PLLEN$DISABLED 0000  
                           __CFG_MCLRE$ON 0000                 ??_USBStdFeatureReqHandler 0066  
                           ??_ReadPayload 0162                  ??_USBStdGetStatusHandler 0070  
                          ?_USBDeviceInit 0070                              _WriteAddress 090A  
                             _writeBuffer 0320                                     ?_main 0070  
                           ?_ReadRegister 0070                              _WriteCommand 07F3  
              i1USBEnableEndpoint@options 0077                             __CFG_WDTE$OFF 0000  
       __size_of_USBCtrlEPServiceComplete 0092                    __end_of_USBDeviceTasks 0252  
               ?_USBCtrlEPServiceComplete 0070                                     i1l323 0B33  
                                   i1l173 04E0                                     i1l326 0B77  
                                   i1l190 01CB                                     i1l271 0CBE  
                                   i1l327 0B3C                                     i1l328 0B3F  
                                   i1l184 018E                                     i1l258 06D8  
                                   i1l194 01F6                                     i1l371 0D72  
                                   i1l419 0128                                     i1l195 024F  
                                   i1l196 01FF                          SPI_transfer@data 0160  
                                   i1l286 0605                                     i1l383 0CA0  
                                   i1l385 0C47                                     i1l394 0C7A  
                                   i1l565 178E                                     i1l479 0C3E  
                                   _UADDR 0E96                              _SPI_transfer 1771  
                                   _USTAT 0E8F                    __size_of_WriteRegister 000F  
      __size_of_USBCtrlEPAllowStatusStage 0072                            __CFG_FCMEN$OFF 0000  
         __end_of_USBCtrlEPAllowDataStage 0BE0                                     _sd000 0317  
                                   _sd001 029D                                     _sd002 02D1  
          ?_USBIncrement1msInternalTimers 0070                            __CFG_BOREN$OFF 0000  
                                   ltemp0 007E                          __end_of_SPI_init 17B9  
                                   ltemp1 0082                                     ltemp2 0086  
                                   ltemp3 0080                         __end_of_CDCInitEP 0A45  
                                   ttemp0 007E                                     ttemp1 0081  
                                   ttemp2 0084                                     ttemp3 0087  
                                   ttemp4 007F                                     status 0003  
                                   wtemp0 007E                                     wtemp1 0080  
                                   wtemp2 0082                                     wtemp3 0084  
                                   wtemp4 0086                                     wtemp5 0088  
                                   wtemp6 007F                           putUSBUSART@data 0162  
            __size_of_USBStdSetCfgHandler 008E                           __initialization 0014  
                            __end_of_main 05EF                     _control_signal_bitmap 01DB  
                          __CFG_LPBOR$OFF 0000                            ??_ReadRegister 0161  
               __size_of_USBCtrlEPService 0054                                    ??_main 01EC  
                         ?_USBDeviceTasks 0070                       __end_of_ReadPayload 0961  
                             ?_USBSuspend 0070                       __CFG_USBLSCLK$48MHz 0000  
                         i1_USBDeviceInit 049B                              _cdc_mem_type 01D8  
                 __end_of_USBDeviceAttach 0861                          _CDCDataOutHandle 01C8  
                                  _ACTCON 039B                                    i1S4835 0800  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                    SYSTEM_Initialize@state 0160  
                   __size_of_CDCTxService 00C8                                    i1l3101 00A9  
                                  i1l3013 0DF8                                    i1l3005 079A  
                                  i1l3033 0E59                                    i1l3025 0E35  
                                  i1l3017 0E02                                    i1l3123 00EA  
                                  i1l3107 00BD                                    i1l3035 0E5C  
                                  i1l3027 0E38                                    i1l3051 0B4F  
                                  i1l3133 0113                                    i1l3117 00D8  
                                  i1l3109 00C8                                    i1l3061 0B6B  
                                  i1l3223 060D                                    i1l3143 012E  
                                  i1l3135 0119                                    i1l3119 00DF  
                                  i1l3039 0E5F                                    i1l3225 0626  
                                  i1l3081 005A                                    i1l3235 0655  
                                  i1l3147 014D                                    i1l3163 06A2  
                                  i1l3403 08B4                                    i1l3237 0661  
                                  i1l3149 0156                                    i1l3261 0C56  
                                  i1l3405 08BD                                    i1l3351 09CB  
                                  i1l2711 0A7D                                    i1l3095 0088  
                                  i1l3079 0058                                    i1l3271 0C67  
                                  i1l3167 06A6                                    i1l3273 0C6A  
                                  i1l3257 0C50                                    i1l3185 06E7  
                                  i1l3193 06F0                                    i1l3339 099F  
                                  i1l2723 088F                                    i1l2731 0E79  
                                  i1l3283 0C87                                    i1l3259 0C53  
                                  i1l3435 0903                                    i1l3381 0D65  
                                  i1l3365 0D29                                    i1l2709 0A74  
                                  i1l2821 177C                                    i1l3269 0C64  
                                  i1l3437 0905                                    i1l3367 0D2E  
                                  i1l2719 0888                                    i1l2751 0EEA  
                                  i1l2831 09D3                                    i1l3287 0C95  
                                  i1l3455 0B21                                    i1l3551 04C7  
                                  i1l3543 04BB                                    i1l3535 04AA  
                                  i1l3385 0D78                                    i1l3377 0D55  
                                  i1l2913 0DA2                                    i1l2825 1783  
                                  i1l2833 09D7                                    i1l3457 0B24  
                                  i1l2739 0E89                                    i1l2835 09DA  
                                  i1l3563 04E5                                    i1l2781 0C06  
                                  i1l2749 0ED2                                    i1l2829 09CF  
                                  i1l3821 0245                                    i1l3813 021D  
                                  i1l2839 09DD                                    i1l3591 0526  
                                  i1l3743 0188                                    i1l3735 017B  
                                  i1l2857 0CB7                                    i1l2793 0C24  
                                  i1l2777 0BFF                                    i1l2769 0BF3  
                                  i1l2945 0BB1                                    i1l3585 0502  
                                  i1l2787 0C16                                    i1l3819 0236  
                                  i1l3763 01A7                                    i1l2869 0CD9  
                                  i1l2877 0CEE                                    i1l2973 073F  
                                  i1l2965 072E                                    i1l2949 0BC4  
                                  i1l3757 01A1                                    i1l2879 0CF2  
                                  i1l2887 0D07                                    i1l2799 0C2C  
                                  i1l2895 17D4                                    i1l2983 0755  
                                  i1l3793 01EE                                    i1l3785 01D8  
                                  i1l3769 01BC                                    i1l3779 01D1  
                                  i1l4837 09E6                                    i1l2989 0769  
                                  u213_25 0BBB                                    i1l4839 0A00  
                                  u252_25 05FF                                    u190_25 0A5B  
                                  u291_25 04CA                                    u188_25 0A4D  
                                  u189_25 0A53                                    u278_25 0AEA  
                                  _OSCCON 0099                             CDCTxService@i 01E7  
                                  _SSPBUF 0211              i1USBTransferOnePacket@handle 0079  
                           _WriteRegister 081C                            __CFG_PWRTE$OFF 0000  
                       _shortPacketStatus 016E                           USBDeviceTasks@i 006F  
             USBStdFeatureReqHandler@pUEP 0068                  USBTransferOnePacket@data 0161  
              USBCtrlTrfInHandler@lastDTS 0075                           ??_USBDeviceInit 0160  
                            ?_putUSBUSART 0160                         _USBEnableEndpoint 08C0  
         __size_of_USBStdGetStatusHandler 0055                                    _memset 17D0  
                    i1USBEnableEndpoint@p 007A                        ?_USBEnableEndpoint 0167  
           __size_of_USBTransferOnePacket 0084                              _CDCTxService 031B  
                     ??_USBEnableEndpoint 0168                        __size_of_nRF_Setup 008D  
            i1USBConfigureEndpoint@handle 0076                               _CtrlTrfData 0058  
                            ReadPayload@i 0165                      _controlTransferState 00E3  
                       _SYSTEM_Initialize 17B9                   __end_of__initialization 003E  
              i1USBTransferOnePacket@data 0071                      __size_ofi1_CDCInitEP 0036  
                      ?_SYSTEM_Initialize 0070                            ?_WriteRegister 0161  
                __size_of_USBStallHandler 0027                       __size_of_USBSuspend 001F  
                        WriteRegister@reg 0162                          WriteRegister@val 0161  
                    i1USBDeviceInit@i_821 0073                            __pcstackCOMMON 0070  
               __end_of_USBEnableEndpoint 08E3                             __end_of_sd000 031B  
                           __end_of_sd001 02D1                             __end_of_sd002 0305  
                     ??_SYSTEM_Initialize 0160          __size_of_USBCtrlEPAllowDataStage 005C  
                             _ReadPayload 0935             __size_of_USBConfigureEndpoint 0043  
                 __end_ofi1_USBDeviceInit 0549               __end_of_USBCtrlTrfInHandler 0D7B  
                               ?_SPI_init 0070                                _cdc_notice 0220  
                              _cdc_rx_len 01D9                                _cdc_tx_len 01DA  
                ??_USBCtrlTrfSetupHandler 006E                   _USBTicksSinceSuspendEnd 01D7  
                        ?_USBDeviceAttach 0070                 __end_of_SYSTEM_Initialize 17D0  
                  _USBStdGetStatusHandler 0B2F                                __pbssBANK1 00E0  
                              __pbssBANK2 016D                                __pbssBANK3 01A0  
                              __pbssBANK4 0220                                __pbssBANK5 02A0  
                              __pbssBANK6 0320                      __end_of_ReadRegister 17A4  
             __size_of_USBWakeFromSuspend 0020                               _pBDTEntryIn 01A7  
                         WriteAddress@reg 0164                           WriteAddress@num 0161  
        __end_of_USBCtrlEPServiceComplete 0722               __size_of_USBCheckCDCRequest 005F  
                              __pmaintext 0549                      USBCtrlTrfRxService@i 0074  
                       __end_of_nRF_Setup 1000                           __CFG_PLLMULT$3x 0000  
                              __pintentry 0004              __size_ofi1_USBEnableEndpoint 0020  
                                 ?_memset 0070                                _device_dsc 0305  
                        _USBCtrlEPService 0ADB                                _ep_data_in 01C0  
                              ??_SPI_init 0160               __end_of_USBCtrlTrfRxService 0690  
                      _USBCheckStdRequest 0C3F                         _configDescriptor1 025A  
             __end_of_USBCtrlTrfTxService 0D0B                                   u280_2m0 0B1A  
                     _USBStdSetCfgHandler 0722                       ?_USBCheckStdRequest 0070  
            __size_of_USBStdGetDscHandler 007F                                   _UIEbits 0E92  
                                 _UIRbits 0E90              __size_ofi1_SYSTEM_Initialize 0015  
                         ??_WriteRegister 0162                             _cdc_trf_state 00E2  
                ??i1_USBTransferOnePacket 0074                                   _pCDCDst 01CA  
                                 _pCDCSrc 01CC           ??_USBIncrement1msInternalTimers 0070  
                    ?_USBStdSetCfgHandler 0070                                 _CDCInitEP 0A06  
              __size_of_USBEnableEndpoint 0023                                _readBuffer 02A0  
                    ??_USBCheckStdRequest 006D             __size_of_USBCtrlTrfOutHandler 0037  
                        ??_USBDeviceTasks 00E9                         ??_USBStallHandler 0070  
                         __CFG_STVREN$OFF 0000                          ?i1_USBDeviceInit 0070  
                    __size_of_putUSBUSART 001A                           __size_of_memset 0018  
               __end_of_configDescriptor1 029D                                   __ptext1 082B  
                                 __ptext2 0F73                                   __ptext3 081C  
                                 __ptext4 07F3                                   __ptext5 090A  
                                 __ptext6 03E3                                   __ptext7 0845  
                                 __ptext8 17B9                                   __ptext9 17A4  
                                 _inPipes 01B3               _USBDeferOUTDataStagePackets 01D2  
                            ??_USBSuspend 0066                     i1USBEnableEndpoint@ep 007C  
                      __end_of_USB_CD_Ptr 025A                __size_of_SYSTEM_Initialize 0017  
         __size_of_USBCtrlTrfSetupHandler 0054                                   clrloop0 176C  
                ??i1_USBConfigureEndpoint 0071                      end_of_initialization 003E  
                      __end_of_USB_SD_Ptr 0258                       _pBDTEntryEP0OutNext 00E0  
                                 memset@c 0072                                   memset@n 0074  
                                 memset@p 0076                           _USB1msTickCount 01BC  
         _dummy_encapsulated_cmd_response 022A                  ?_USBStdFeatureReqHandler 0070  
                   ??_USBStdSetCfgHandler 0066                                ?_CDCInitEP 0070  
                      __end_of_USBSuspend 0880                   _USBCtrlEPAllowDataStage 0B84  
                            __pstringtext 0252                  _USBCtrlEPServiceComplete 0690  
              _USBStatusStageEnabledFlag1 01D4                _USBStatusStageEnabledFlag2 01D5  
                      USBEnableEndpoint@p 016A                          __CFG_FOSC$INTOSC 0000  
                               _TRISAbits 008C                                 _TRISBbits 008D  
                               _TRISCbits 008E                        _BothEP0OutUOWNsSet 01CE  
               USBStdSetCfgHandler@i_1174 0069                     __size_of_ReadRegister 0015  
               USBConfigureEndpoint@EPNum 0165                ?_USBCtrlEPAllowStatusStage 0070  
     USER_USB_CALLBACK_EVENT_HANDLER@size 0064                                 _USTATcopy 00E5  
                i1USBTransferOnePacket@ep 0078              __end_of_USBTransferOnePacket 0F73  
         __size_ofi1_USBTransferOnePacket 0083                       WriteCommand@command 0161  
                       putUSBUSART@length 0160                        USBDeviceInit@i_821 0163  
                  _USBCtrlTrfSetupHandler 0A87                              ?_ReadPayload 0161  
                   __end_of_USBDeviceInit 049B     __end_of_USBIncrement1msInternalTimers 1800  
  __size_of_USBIncrement1msInternalTimers 0018             _USBIncrement1msInternalTimers 17E8  
                          __end_of_memset 17E8                              _ReadRegister 178F  
                       _USBBusIsSuspended 01D0                       start_initialization 0014  
                       __size_of_SPI_init 0015                   ?_USBStdGetStatusHandler 0070  
           USBCtrlTrfRxService@byteToRead 0075                               _cdc_data_rx 0120  
                             _cdc_data_tx 00A0              __end_of_USBConfigureEndpoint 07F3  
         __end_of_USBStdFeatureReqHandler 016B                       i1_USBEnableEndpoint 0880  
         __size_ofi1_USBConfigureEndpoint 0042                             ??i1_CDCInitEP 007D  
       __end_of_USBCtrlEPAllowStatusStage 0DED                             WriteAddress@i 0165  
                __end_of_USBCtrlEPService 0B2F                 ??_USBCtrlEPAllowDataStage 0073  
                             ??_CDCInitEP 01E7                            USBDeviceInit@i 0164  
                          USBDeviceInit@p 0161                    _pBDTEntryEP0OutCurrent 00E4  
                 USBTransferOnePacket@dir 0160                   USBTransferOnePacket@len 0163  
             i1USBConfigureEndpoint@EPNum 0075                       _USBStdGetDscHandler 0DED  
                    ?i1_USBEnableEndpoint 0077                             ?_WriteAddress 0161  
                                ??_memset 0076                       i1_SYSTEM_Initialize 177A  
                               _nRF_Setup 0F73                             ?_WriteCommand 0070  
                  i1_USBTransferOnePacket 0E6C                             ?_SPI_transfer 0070  
                  _USBActiveConfiguration 016F            __end_of_USBStdGetStatusHandler 0B84  
               i1USBTransferOnePacket@dir 0070                 i1USBTransferOnePacket@len 0073  
                               ___latbits 0002                             __pcstackBANK0 0060  
                           __pcstackBANK1 00E6                             __pcstackBANK2 0160  
                           __pcstackBANK3 01E7              __size_of_USBCtrlTrfInHandler 0070  
                           __pcstackBANK4 0232                      ?_USBStdGetDscHandler 0070  
                    ?i1_SYSTEM_Initialize 0070                __end_of_USBWakeFromSuspend 08C0  
                        WriteAddress@addr 0162                           _USBStallHandler 08E3  
                            _pBDTEntryOut 01AD                __end_of_USBCheckCDCRequest 0C3F  
                __size_of_USBDeviceAttach 001C                       __end_ofi1_CDCInitEP 0997  
                          ??_WriteAddress 0163                     ??i1_USBEnableEndpoint 0078  
                  i1_USBConfigureEndpoint 0A45                            ??_WriteCommand 0161  
                              ?_nRF_Setup 0070                                 __pswtext1 0800  
                          ??_SPI_transfer 0160                      _USBTransferOnePacket 0EEF  
            __end_of_USBCtrlTrfOutHandler 09CE                     ??_USBStdGetDscHandler 0070  
                             _ep_data_out 01C3              __size_of_USBCtrlTrfRxService 00A1  
           USBConfigureEndpoint@direction 0160                     ??i1_SYSTEM_Initialize 0070  
            __size_of_USBCtrlTrfTxService 006A                                  _LATAbits 010C  
                                _LATCbits 010E                     __end_of_WriteRegister 082B  
              ??_USBCtrlEPServiceComplete 0075                                 clear_ram0 176B  
                                _PIE2bits 0092                                  _PIR2bits 0012  
                           ??_putUSBUSART 0161                                  _UEP0bits 0E98  
              _USBDeferINDataStagePackets 01D1               __size_of_USBCheckStdRequest 0062  
                                _UCONbits 0E8E                      _USBConfigureEndpoint 07B0  
        __size_of_USBStdFeatureReqHandler 0129                      __size_of_ReadPayload 002C  
                   ?_USBTransferOnePacket 0160                                  _SPI_init 17A4  
                       _SYS_InterruptHigh 0004                             ?_CDCTxService 0070  
                            _RemoteWakeup 01CF                        ?_SYS_InterruptHigh 0070  
                __size_ofi1_USBDeviceInit 00AE                        nRF_Setup@RXTX_ADDR 01E7  
                 __end_of_USBStallHandler 090A               ??_USBCtrlEPAllowStatusStage 0070  
             __end_of_USBStdSetCfgHandler 07B0                               i1_CDCInitEP 0961  
                     ??_SYS_InterruptHigh 00EB                        __end_of_device_dsc 0317  
                 ?_USBCtrlTrfSetupHandler 0070                   USBStdGetStatusHandler@p 0071  
                  USBTransferOnePacket@ep 0168                                  _SetupPkt 0050  
                   ?_USBConfigureEndpoint 0160                         ??_USBDeviceAttach 0160  
                       ReadRegister@temp1 0164                               ??_nRF_Setup 0167  
               __end_of_SYS_InterruptHigh 0012                       __end_of_putUSBUSART 0845  
                             _line_coding 01DE                            ??_CDCTxService 016B  
                 __size_of_USBDeviceTasks 00E7                                  __ptext10 178F  
                                __ptext11 0935                                  __ptext20 049B  
                                __ptext12 1771                                  __ptext21 08A0  
                                __ptext13 031B                                  __ptext30 0722  
                                __ptext22 0861                                  __ptext14 0A06  
                                __ptext31 17D0                                  __ptext23 08E3  
                                __ptext15 0EEF                                  __ptext40 0A45  
                                __ptext32 0B2F                                  __ptext24 17E8  
                                __ptext16 08C0                                  __ptext41 0BE0  
                                __ptext33 0DED                                  __ptext25 0ADB  
                                __ptext17 07B0                                  __ptext42 0997  
                                __ptext34 0042                                  __ptext26 0A87  
                                __ptext43 05EF                                  __ptext35 09CE  
                                __ptext27 0690                                  __ptext19 016B  
                                __ptext44 0D7B                                  __ptext36 177A  
                                __ptext28 0B84                                  __ptext45 0D0B  
                                __ptext37 0961                                  __ptext29 0C3F  
                                __ptext46 0CA1                                  __ptext38 0E6C  
                                __ptext39 0880                      __end_of_WriteAddress 0935  
                    __end_of_WriteCommand 07FC            __end_of_USBCtrlTrfSetupHandler 0ADB  
                           __size_of_main 00A6                         ?_USBCtrlEPService 0070  
         i1USBConfigureEndpoint@direction 0070                      __end_of_SPI_transfer 177A  
                      ??_USBCtrlEPService 00E6                       _USBCtrlTrfInHandler 0D0B  
                                _outPipes 01A0                      _USBCtrlTrfOutHandler 0997  
                                int$flags 007E                   ?i1_USBTransferOnePacket 0070  
               _USBCtrlEPAllowStatusStage 0D7B                                  main@pom2 0233  
                  ??_USBTransferOnePacket 0164                 _USBDeferStatusStagePacket 01D3  
                CDCTxService@byte_to_send 01E8                          i1USBDeviceInit@i 0074  
                        i1USBDeviceInit@p 0071                                _INTCONbits 000B  
                i1SYSTEM_Initialize@state 0070                      ?_USBCtrlTrfInHandler 0070  
           USBCtrlTrfTxService@byteToSend 0072                                  memset@p1 0070  
                        ?_USBStallHandler 0070                  USBStdFeatureReqHandler@p 006B  
                        ReadRegister@temp 0163                                  intlevel1 0000  
                  __size_of_USBDeviceInit 00B8   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0A06  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 0038          ?_USER_USB_CALLBACK_EVENT_HANDLER 0060  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 007E           _USER_USB_CALLBACK_EVENT_HANDLER 09CE  
                       ??i1_USBDeviceInit 0070                         __CFG_CLKOUTEN$OFF 0000  
                 ?i1_USBConfigureEndpoint 0070            __end_ofi1_USBTransferOnePacket 0EEF  
                  ??_USBConfigureEndpoint 0161                     ?_USBCtrlTrfOutHandler 0070  
                             _putUSBUSART 082B                      __CFG_CPUDIV$NOCLKDIV 0000  
                     _USBCtrlTrfRxService 05EF                        _USBWakeFromSuspend 08A0  
                         ReadPayload@data 0161                   _USBStdFeatureReqHandler 0042  
                      _USBCheckCDCRequest 0BE0                       _USBCtrlTrfTxService 0CA1  
              __size_of_SYS_InterruptHigh 000E                           ReadRegister@reg 0162  
                     ?_USBWakeFromSuspend 0070                     ??_USBCtrlTrfInHandler 0073  
                   _USBAlternateInterface 01E5                       ?_USBCheckCDCRequest 0070  
                             _SSPCON1bits 0215                       USBEnableEndpoint@ep 016C  
                         _endpoint_number 01DC                      ?_USBCtrlTrfRxService 0070  
                          ReadPayload@num 0164                  ?_USBCtrlEPAllowDataStage 0070  
                    ?_USBCtrlTrfTxService 0070              _USBStatusStageTimeoutCounter 01D6  
          __end_ofi1_USBConfigureEndpoint 0A87                      ??_USBWakeFromSuspend 0066  
             __end_ofi1_USBEnableEndpoint 08A0                USBTransferOnePacket@handle 0169  
                    __end_of_CDCTxService 03E3                      ??_USBCheckCDCRequest 0070  
                              _USB_CD_Ptr 0258  
