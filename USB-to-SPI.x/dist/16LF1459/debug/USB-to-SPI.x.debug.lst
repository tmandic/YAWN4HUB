

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Jun 09 17:22:02 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16LF1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    10                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    11                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	swtext1,local,class=CONST,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,delta=2
    67                           	dabs	1,0x20,48,_BDT
    68                           	dabs	1,0x58,8,_CtrlTrfData
    69                           	dabs	1,0x50,8,_SetupPkt
    70                           	dabs	1,0xA0,64,_cdc_data_tx
    71                           	dabs	1,0x120,64,_cdc_data_rx
    72                           	dabs	1,0x7E,2
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  0111                     	;# 
   120  0112                     	;# 
   121  0113                     	;# 
   122  0114                     	;# 
   123  0115                     	;# 
   124  0116                     	;# 
   125  0117                     	;# 
   126  0118                     	;# 
   127  0119                     	;# 
   128  011D                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  018E                     	;# 
   132  0191                     	;# 
   133  0191                     	;# 
   134  0192                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0194                     	;# 
   138  0195                     	;# 
   139  0196                     	;# 
   140  0199                     	;# 
   141  019A                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019C                     	;# 
   145  019D                     	;# 
   146  019E                     	;# 
   147  019F                     	;# 
   148  020C                     	;# 
   149  020D                     	;# 
   150  0211                     	;# 
   151  0211                     	;# 
   152  0212                     	;# 
   153  0212                     	;# 
   154  0213                     	;# 
   155  0213                     	;# 
   156  0214                     	;# 
   157  0214                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0216                     	;# 
   162  0216                     	;# 
   163  0217                     	;# 
   164  0217                     	;# 
   165  0391                     	;# 
   166  0392                     	;# 
   167  0393                     	;# 
   168  0394                     	;# 
   169  0395                     	;# 
   170  0396                     	;# 
   171  039A                     	;# 
   172  039B                     	;# 
   173  0611                     	;# 
   174  0612                     	;# 
   175  0613                     	;# 
   176  0613                     	;# 
   177  0614                     	;# 
   178  0615                     	;# 
   179  0616                     	;# 
   180  0616                     	;# 
   181  0691                     	;# 
   182  0692                     	;# 
   183  0693                     	;# 
   184  0694                     	;# 
   185  0695                     	;# 
   186  0E8E                     	;# 
   187  0E8F                     	;# 
   188  0E90                     	;# 
   189  0E91                     	;# 
   190  0E92                     	;# 
   191  0E93                     	;# 
   192  0E94                     	;# 
   193  0E94                     	;# 
   194  0E95                     	;# 
   195  0E96                     	;# 
   196  0E97                     	;# 
   197  0E98                     	;# 
   198  0E99                     	;# 
   199  0E9A                     	;# 
   200  0E9B                     	;# 
   201  0E9C                     	;# 
   202  0E9D                     	;# 
   203  0E9E                     	;# 
   204  0E9F                     	;# 
   205  0FE4                     	;# 
   206  0FE5                     	;# 
   207  0FE6                     	;# 
   208  0FE7                     	;# 
   209  0FE8                     	;# 
   210  0FE9                     	;# 
   211  0FEA                     	;# 
   212  0FEB                     	;# 
   213  0FED                     	;# 
   214  0FEE                     	;# 
   215  0FEF                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  008C                     	;# 
   243  008D                     	;# 
   244  008E                     	;# 
   245  0091                     	;# 
   246  0092                     	;# 
   247  0095                     	;# 
   248  0096                     	;# 
   249  0097                     	;# 
   250  0098                     	;# 
   251  0099                     	;# 
   252  009A                     	;# 
   253  009B                     	;# 
   254  009B                     	;# 
   255  009C                     	;# 
   256  009D                     	;# 
   257  009E                     	;# 
   258  009F                     	;# 
   259  010C                     	;# 
   260  010D                     	;# 
   261  010E                     	;# 
   262  0111                     	;# 
   263  0112                     	;# 
   264  0113                     	;# 
   265  0114                     	;# 
   266  0115                     	;# 
   267  0116                     	;# 
   268  0117                     	;# 
   269  0118                     	;# 
   270  0119                     	;# 
   271  011D                     	;# 
   272  018C                     	;# 
   273  018D                     	;# 
   274  018E                     	;# 
   275  0191                     	;# 
   276  0191                     	;# 
   277  0192                     	;# 
   278  0193                     	;# 
   279  0193                     	;# 
   280  0194                     	;# 
   281  0195                     	;# 
   282  0196                     	;# 
   283  0199                     	;# 
   284  019A                     	;# 
   285  019B                     	;# 
   286  019B                     	;# 
   287  019C                     	;# 
   288  019D                     	;# 
   289  019E                     	;# 
   290  019F                     	;# 
   291  020C                     	;# 
   292  020D                     	;# 
   293  0211                     	;# 
   294  0211                     	;# 
   295  0212                     	;# 
   296  0212                     	;# 
   297  0213                     	;# 
   298  0213                     	;# 
   299  0214                     	;# 
   300  0214                     	;# 
   301  0215                     	;# 
   302  0215                     	;# 
   303  0215                     	;# 
   304  0216                     	;# 
   305  0216                     	;# 
   306  0217                     	;# 
   307  0217                     	;# 
   308  0391                     	;# 
   309  0392                     	;# 
   310  0393                     	;# 
   311  0394                     	;# 
   312  0395                     	;# 
   313  0396                     	;# 
   314  039A                     	;# 
   315  039B                     	;# 
   316  0611                     	;# 
   317  0612                     	;# 
   318  0613                     	;# 
   319  0613                     	;# 
   320  0614                     	;# 
   321  0615                     	;# 
   322  0616                     	;# 
   323  0616                     	;# 
   324  0691                     	;# 
   325  0692                     	;# 
   326  0693                     	;# 
   327  0694                     	;# 
   328  0695                     	;# 
   329  0E8E                     	;# 
   330  0E8F                     	;# 
   331  0E90                     	;# 
   332  0E91                     	;# 
   333  0E92                     	;# 
   334  0E93                     	;# 
   335  0E94                     	;# 
   336  0E94                     	;# 
   337  0E95                     	;# 
   338  0E96                     	;# 
   339  0E97                     	;# 
   340  0E98                     	;# 
   341  0E99                     	;# 
   342  0E9A                     	;# 
   343  0E9B                     	;# 
   344  0E9C                     	;# 
   345  0E9D                     	;# 
   346  0E9E                     	;# 
   347  0E9F                     	;# 
   348  0FE4                     	;# 
   349  0FE5                     	;# 
   350  0FE6                     	;# 
   351  0FE7                     	;# 
   352  0FE8                     	;# 
   353  0FE9                     	;# 
   354  0FEA                     	;# 
   355  0FEB                     	;# 
   356  0FED                     	;# 
   357  0FEE                     	;# 
   358  0FEF                     	;# 
   359  0000                     	;# 
   360  0001                     	;# 
   361  0002                     	;# 
   362  0003                     	;# 
   363  0004                     	;# 
   364  0005                     	;# 
   365  0006                     	;# 
   366  0007                     	;# 
   367  0008                     	;# 
   368  0009                     	;# 
   369  000A                     	;# 
   370  000B                     	;# 
   371  000C                     	;# 
   372  000D                     	;# 
   373  000E                     	;# 
   374  0011                     	;# 
   375  0012                     	;# 
   376  0015                     	;# 
   377  0016                     	;# 
   378  0016                     	;# 
   379  0017                     	;# 
   380  0018                     	;# 
   381  0019                     	;# 
   382  001A                     	;# 
   383  001B                     	;# 
   384  001C                     	;# 
   385  008C                     	;# 
   386  008D                     	;# 
   387  008E                     	;# 
   388  0091                     	;# 
   389  0092                     	;# 
   390  0095                     	;# 
   391  0096                     	;# 
   392  0097                     	;# 
   393  0098                     	;# 
   394  0099                     	;# 
   395  009A                     	;# 
   396  009B                     	;# 
   397  009B                     	;# 
   398  009C                     	;# 
   399  009D                     	;# 
   400  009E                     	;# 
   401  009F                     	;# 
   402  010C                     	;# 
   403  010D                     	;# 
   404  010E                     	;# 
   405  0111                     	;# 
   406  0112                     	;# 
   407  0113                     	;# 
   408  0114                     	;# 
   409  0115                     	;# 
   410  0116                     	;# 
   411  0117                     	;# 
   412  0118                     	;# 
   413  0119                     	;# 
   414  011D                     	;# 
   415  018C                     	;# 
   416  018D                     	;# 
   417  018E                     	;# 
   418  0191                     	;# 
   419  0191                     	;# 
   420  0192                     	;# 
   421  0193                     	;# 
   422  0193                     	;# 
   423  0194                     	;# 
   424  0195                     	;# 
   425  0196                     	;# 
   426  0199                     	;# 
   427  019A                     	;# 
   428  019B                     	;# 
   429  019B                     	;# 
   430  019C                     	;# 
   431  019D                     	;# 
   432  019E                     	;# 
   433  019F                     	;# 
   434  020C                     	;# 
   435  020D                     	;# 
   436  0211                     	;# 
   437  0211                     	;# 
   438  0212                     	;# 
   439  0212                     	;# 
   440  0213                     	;# 
   441  0213                     	;# 
   442  0214                     	;# 
   443  0214                     	;# 
   444  0215                     	;# 
   445  0215                     	;# 
   446  0215                     	;# 
   447  0216                     	;# 
   448  0216                     	;# 
   449  0217                     	;# 
   450  0217                     	;# 
   451  0391                     	;# 
   452  0392                     	;# 
   453  0393                     	;# 
   454  0394                     	;# 
   455  0395                     	;# 
   456  0396                     	;# 
   457  039A                     	;# 
   458  039B                     	;# 
   459  0611                     	;# 
   460  0612                     	;# 
   461  0613                     	;# 
   462  0613                     	;# 
   463  0614                     	;# 
   464  0615                     	;# 
   465  0616                     	;# 
   466  0616                     	;# 
   467  0691                     	;# 
   468  0692                     	;# 
   469  0693                     	;# 
   470  0694                     	;# 
   471  0695                     	;# 
   472  0E8E                     	;# 
   473  0E8F                     	;# 
   474  0E90                     	;# 
   475  0E91                     	;# 
   476  0E92                     	;# 
   477  0E93                     	;# 
   478  0E94                     	;# 
   479  0E94                     	;# 
   480  0E95                     	;# 
   481  0E96                     	;# 
   482  0E97                     	;# 
   483  0E98                     	;# 
   484  0E99                     	;# 
   485  0E9A                     	;# 
   486  0E9B                     	;# 
   487  0E9C                     	;# 
   488  0E9D                     	;# 
   489  0E9E                     	;# 
   490  0E9F                     	;# 
   491  0FE4                     	;# 
   492  0FE5                     	;# 
   493  0FE6                     	;# 
   494  0FE7                     	;# 
   495  0FE8                     	;# 
   496  0FE9                     	;# 
   497  0FEA                     	;# 
   498  0FEB                     	;# 
   499  0FED                     	;# 
   500  0FEE                     	;# 
   501  0FEF                     	;# 
   502  0000                     	;# 
   503  0001                     	;# 
   504  0002                     	;# 
   505  0003                     	;# 
   506  0004                     	;# 
   507  0005                     	;# 
   508  0006                     	;# 
   509  0007                     	;# 
   510  0008                     	;# 
   511  0009                     	;# 
   512  000A                     	;# 
   513  000B                     	;# 
   514  000C                     	;# 
   515  000D                     	;# 
   516  000E                     	;# 
   517  0011                     	;# 
   518  0012                     	;# 
   519  0015                     	;# 
   520  0016                     	;# 
   521  0016                     	;# 
   522  0017                     	;# 
   523  0018                     	;# 
   524  0019                     	;# 
   525  001A                     	;# 
   526  001B                     	;# 
   527  001C                     	;# 
   528  008C                     	;# 
   529  008D                     	;# 
   530  008E                     	;# 
   531  0091                     	;# 
   532  0092                     	;# 
   533  0095                     	;# 
   534  0096                     	;# 
   535  0097                     	;# 
   536  0098                     	;# 
   537  0099                     	;# 
   538  009A                     	;# 
   539  009B                     	;# 
   540  009B                     	;# 
   541  009C                     	;# 
   542  009D                     	;# 
   543  009E                     	;# 
   544  009F                     	;# 
   545  010C                     	;# 
   546  010D                     	;# 
   547  010E                     	;# 
   548  0111                     	;# 
   549  0112                     	;# 
   550  0113                     	;# 
   551  0114                     	;# 
   552  0115                     	;# 
   553  0116                     	;# 
   554  0117                     	;# 
   555  0118                     	;# 
   556  0119                     	;# 
   557  011D                     	;# 
   558  018C                     	;# 
   559  018D                     	;# 
   560  018E                     	;# 
   561  0191                     	;# 
   562  0191                     	;# 
   563  0192                     	;# 
   564  0193                     	;# 
   565  0193                     	;# 
   566  0194                     	;# 
   567  0195                     	;# 
   568  0196                     	;# 
   569  0199                     	;# 
   570  019A                     	;# 
   571  019B                     	;# 
   572  019B                     	;# 
   573  019C                     	;# 
   574  019D                     	;# 
   575  019E                     	;# 
   576  019F                     	;# 
   577  020C                     	;# 
   578  020D                     	;# 
   579  0211                     	;# 
   580  0211                     	;# 
   581  0212                     	;# 
   582  0212                     	;# 
   583  0213                     	;# 
   584  0213                     	;# 
   585  0214                     	;# 
   586  0214                     	;# 
   587  0215                     	;# 
   588  0215                     	;# 
   589  0215                     	;# 
   590  0216                     	;# 
   591  0216                     	;# 
   592  0217                     	;# 
   593  0217                     	;# 
   594  0391                     	;# 
   595  0392                     	;# 
   596  0393                     	;# 
   597  0394                     	;# 
   598  0395                     	;# 
   599  0396                     	;# 
   600  039A                     	;# 
   601  039B                     	;# 
   602  0611                     	;# 
   603  0612                     	;# 
   604  0613                     	;# 
   605  0613                     	;# 
   606  0614                     	;# 
   607  0615                     	;# 
   608  0616                     	;# 
   609  0616                     	;# 
   610  0691                     	;# 
   611  0692                     	;# 
   612  0693                     	;# 
   613  0694                     	;# 
   614  0695                     	;# 
   615  0E8E                     	;# 
   616  0E8F                     	;# 
   617  0E90                     	;# 
   618  0E91                     	;# 
   619  0E92                     	;# 
   620  0E93                     	;# 
   621  0E94                     	;# 
   622  0E94                     	;# 
   623  0E95                     	;# 
   624  0E96                     	;# 
   625  0E97                     	;# 
   626  0E98                     	;# 
   627  0E99                     	;# 
   628  0E9A                     	;# 
   629  0E9B                     	;# 
   630  0E9C                     	;# 
   631  0E9D                     	;# 
   632  0E9E                     	;# 
   633  0E9F                     	;# 
   634  0FE4                     	;# 
   635  0FE5                     	;# 
   636  0FE6                     	;# 
   637  0FE7                     	;# 
   638  0FE8                     	;# 
   639  0FE9                     	;# 
   640  0FEA                     	;# 
   641  0FEB                     	;# 
   642  0FED                     	;# 
   643  0FEE                     	;# 
   644  0FEF                     	;# 
   645  0000                     	;# 
   646  0001                     	;# 
   647  0002                     	;# 
   648  0003                     	;# 
   649  0004                     	;# 
   650  0005                     	;# 
   651  0006                     	;# 
   652  0007                     	;# 
   653  0008                     	;# 
   654  0009                     	;# 
   655  000A                     	;# 
   656  000B                     	;# 
   657  000C                     	;# 
   658  000D                     	;# 
   659  000E                     	;# 
   660  0011                     	;# 
   661  0012                     	;# 
   662  0015                     	;# 
   663  0016                     	;# 
   664  0016                     	;# 
   665  0017                     	;# 
   666  0018                     	;# 
   667  0019                     	;# 
   668  001A                     	;# 
   669  001B                     	;# 
   670  001C                     	;# 
   671  008C                     	;# 
   672  008D                     	;# 
   673  008E                     	;# 
   674  0091                     	;# 
   675  0092                     	;# 
   676  0095                     	;# 
   677  0096                     	;# 
   678  0097                     	;# 
   679  0098                     	;# 
   680  0099                     	;# 
   681  009A                     	;# 
   682  009B                     	;# 
   683  009B                     	;# 
   684  009C                     	;# 
   685  009D                     	;# 
   686  009E                     	;# 
   687  009F                     	;# 
   688  010C                     	;# 
   689  010D                     	;# 
   690  010E                     	;# 
   691  0111                     	;# 
   692  0112                     	;# 
   693  0113                     	;# 
   694  0114                     	;# 
   695  0115                     	;# 
   696  0116                     	;# 
   697  0117                     	;# 
   698  0118                     	;# 
   699  0119                     	;# 
   700  011D                     	;# 
   701  018C                     	;# 
   702  018D                     	;# 
   703  018E                     	;# 
   704  0191                     	;# 
   705  0191                     	;# 
   706  0192                     	;# 
   707  0193                     	;# 
   708  0193                     	;# 
   709  0194                     	;# 
   710  0195                     	;# 
   711  0196                     	;# 
   712  0199                     	;# 
   713  019A                     	;# 
   714  019B                     	;# 
   715  019B                     	;# 
   716  019C                     	;# 
   717  019D                     	;# 
   718  019E                     	;# 
   719  019F                     	;# 
   720  020C                     	;# 
   721  020D                     	;# 
   722  0211                     	;# 
   723  0211                     	;# 
   724  0212                     	;# 
   725  0212                     	;# 
   726  0213                     	;# 
   727  0213                     	;# 
   728  0214                     	;# 
   729  0214                     	;# 
   730  0215                     	;# 
   731  0215                     	;# 
   732  0215                     	;# 
   733  0216                     	;# 
   734  0216                     	;# 
   735  0217                     	;# 
   736  0217                     	;# 
   737  0391                     	;# 
   738  0392                     	;# 
   739  0393                     	;# 
   740  0394                     	;# 
   741  0395                     	;# 
   742  0396                     	;# 
   743  039A                     	;# 
   744  039B                     	;# 
   745  0611                     	;# 
   746  0612                     	;# 
   747  0613                     	;# 
   748  0613                     	;# 
   749  0614                     	;# 
   750  0615                     	;# 
   751  0616                     	;# 
   752  0616                     	;# 
   753  0691                     	;# 
   754  0692                     	;# 
   755  0693                     	;# 
   756  0694                     	;# 
   757  0695                     	;# 
   758  0E8E                     	;# 
   759  0E8F                     	;# 
   760  0E90                     	;# 
   761  0E91                     	;# 
   762  0E92                     	;# 
   763  0E93                     	;# 
   764  0E94                     	;# 
   765  0E94                     	;# 
   766  0E95                     	;# 
   767  0E96                     	;# 
   768  0E97                     	;# 
   769  0E98                     	;# 
   770  0E99                     	;# 
   771  0E9A                     	;# 
   772  0E9B                     	;# 
   773  0E9C                     	;# 
   774  0E9D                     	;# 
   775  0E9E                     	;# 
   776  0E9F                     	;# 
   777  0FE4                     	;# 
   778  0FE5                     	;# 
   779  0FE6                     	;# 
   780  0FE7                     	;# 
   781  0FE8                     	;# 
   782  0FE9                     	;# 
   783  0FEA                     	;# 
   784  0FEB                     	;# 
   785  0FED                     	;# 
   786  0FEE                     	;# 
   787  0FEF                     	;# 
   788  0000                     	;# 
   789  0001                     	;# 
   790  0002                     	;# 
   791  0003                     	;# 
   792  0004                     	;# 
   793  0005                     	;# 
   794  0006                     	;# 
   795  0007                     	;# 
   796  0008                     	;# 
   797  0009                     	;# 
   798  000A                     	;# 
   799  000B                     	;# 
   800  000C                     	;# 
   801  000D                     	;# 
   802  000E                     	;# 
   803  0011                     	;# 
   804  0012                     	;# 
   805  0015                     	;# 
   806  0016                     	;# 
   807  0016                     	;# 
   808  0017                     	;# 
   809  0018                     	;# 
   810  0019                     	;# 
   811  001A                     	;# 
   812  001B                     	;# 
   813  001C                     	;# 
   814  008C                     	;# 
   815  008D                     	;# 
   816  008E                     	;# 
   817  0091                     	;# 
   818  0092                     	;# 
   819  0095                     	;# 
   820  0096                     	;# 
   821  0097                     	;# 
   822  0098                     	;# 
   823  0099                     	;# 
   824  009A                     	;# 
   825  009B                     	;# 
   826  009B                     	;# 
   827  009C                     	;# 
   828  009D                     	;# 
   829  009E                     	;# 
   830  009F                     	;# 
   831  010C                     	;# 
   832  010D                     	;# 
   833  010E                     	;# 
   834  0111                     	;# 
   835  0112                     	;# 
   836  0113                     	;# 
   837  0114                     	;# 
   838  0115                     	;# 
   839  0116                     	;# 
   840  0117                     	;# 
   841  0118                     	;# 
   842  0119                     	;# 
   843  011D                     	;# 
   844  018C                     	;# 
   845  018D                     	;# 
   846  018E                     	;# 
   847  0191                     	;# 
   848  0191                     	;# 
   849  0192                     	;# 
   850  0193                     	;# 
   851  0193                     	;# 
   852  0194                     	;# 
   853  0195                     	;# 
   854  0196                     	;# 
   855  0199                     	;# 
   856  019A                     	;# 
   857  019B                     	;# 
   858  019B                     	;# 
   859  019C                     	;# 
   860  019D                     	;# 
   861  019E                     	;# 
   862  019F                     	;# 
   863  020C                     	;# 
   864  020D                     	;# 
   865  0211                     	;# 
   866  0211                     	;# 
   867  0212                     	;# 
   868  0212                     	;# 
   869  0213                     	;# 
   870  0213                     	;# 
   871  0214                     	;# 
   872  0214                     	;# 
   873  0215                     	;# 
   874  0215                     	;# 
   875  0215                     	;# 
   876  0216                     	;# 
   877  0216                     	;# 
   878  0217                     	;# 
   879  0217                     	;# 
   880  0391                     	;# 
   881  0392                     	;# 
   882  0393                     	;# 
   883  0394                     	;# 
   884  0395                     	;# 
   885  0396                     	;# 
   886  039A                     	;# 
   887  039B                     	;# 
   888  0611                     	;# 
   889  0612                     	;# 
   890  0613                     	;# 
   891  0613                     	;# 
   892  0614                     	;# 
   893  0615                     	;# 
   894  0616                     	;# 
   895  0616                     	;# 
   896  0691                     	;# 
   897  0692                     	;# 
   898  0693                     	;# 
   899  0694                     	;# 
   900  0695                     	;# 
   901  0E8E                     	;# 
   902  0E8F                     	;# 
   903  0E90                     	;# 
   904  0E91                     	;# 
   905  0E92                     	;# 
   906  0E93                     	;# 
   907  0E94                     	;# 
   908  0E94                     	;# 
   909  0E95                     	;# 
   910  0E96                     	;# 
   911  0E97                     	;# 
   912  0E98                     	;# 
   913  0E99                     	;# 
   914  0E9A                     	;# 
   915  0E9B                     	;# 
   916  0E9C                     	;# 
   917  0E9D                     	;# 
   918  0E9E                     	;# 
   919  0E9F                     	;# 
   920  0FE4                     	;# 
   921  0FE5                     	;# 
   922  0FE6                     	;# 
   923  0FE7                     	;# 
   924  0FE8                     	;# 
   925  0FE9                     	;# 
   926  0FEA                     	;# 
   927  0FEB                     	;# 
   928  0FED                     	;# 
   929  0FEE                     	;# 
   930  0FEF                     	;# 
   931  0000                     	;# 
   932  0001                     	;# 
   933  0002                     	;# 
   934  0003                     	;# 
   935  0004                     	;# 
   936  0005                     	;# 
   937  0006                     	;# 
   938  0007                     	;# 
   939  0008                     	;# 
   940  0009                     	;# 
   941  000A                     	;# 
   942  000B                     	;# 
   943  000C                     	;# 
   944  000D                     	;# 
   945  000E                     	;# 
   946  0011                     	;# 
   947  0012                     	;# 
   948  0015                     	;# 
   949  0016                     	;# 
   950  0016                     	;# 
   951  0017                     	;# 
   952  0018                     	;# 
   953  0019                     	;# 
   954  001A                     	;# 
   955  001B                     	;# 
   956  001C                     	;# 
   957  008C                     	;# 
   958  008D                     	;# 
   959  008E                     	;# 
   960  0091                     	;# 
   961  0092                     	;# 
   962  0095                     	;# 
   963  0096                     	;# 
   964  0097                     	;# 
   965  0098                     	;# 
   966  0099                     	;# 
   967  009A                     	;# 
   968  009B                     	;# 
   969  009B                     	;# 
   970  009C                     	;# 
   971  009D                     	;# 
   972  009E                     	;# 
   973  009F                     	;# 
   974  010C                     	;# 
   975  010D                     	;# 
   976  010E                     	;# 
   977  0111                     	;# 
   978  0112                     	;# 
   979  0113                     	;# 
   980  0114                     	;# 
   981  0115                     	;# 
   982  0116                     	;# 
   983  0117                     	;# 
   984  0118                     	;# 
   985  0119                     	;# 
   986  011D                     	;# 
   987  018C                     	;# 
   988  018D                     	;# 
   989  018E                     	;# 
   990  0191                     	;# 
   991  0191                     	;# 
   992  0192                     	;# 
   993  0193                     	;# 
   994  0193                     	;# 
   995  0194                     	;# 
   996  0195                     	;# 
   997  0196                     	;# 
   998  0199                     	;# 
   999  019A                     	;# 
  1000  019B                     	;# 
  1001  019B                     	;# 
  1002  019C                     	;# 
  1003  019D                     	;# 
  1004  019E                     	;# 
  1005  019F                     	;# 
  1006  020C                     	;# 
  1007  020D                     	;# 
  1008  0211                     	;# 
  1009  0211                     	;# 
  1010  0212                     	;# 
  1011  0212                     	;# 
  1012  0213                     	;# 
  1013  0213                     	;# 
  1014  0214                     	;# 
  1015  0214                     	;# 
  1016  0215                     	;# 
  1017  0215                     	;# 
  1018  0215                     	;# 
  1019  0216                     	;# 
  1020  0216                     	;# 
  1021  0217                     	;# 
  1022  0217                     	;# 
  1023  0391                     	;# 
  1024  0392                     	;# 
  1025  0393                     	;# 
  1026  0394                     	;# 
  1027  0395                     	;# 
  1028  0396                     	;# 
  1029  039A                     	;# 
  1030  039B                     	;# 
  1031  0611                     	;# 
  1032  0612                     	;# 
  1033  0613                     	;# 
  1034  0613                     	;# 
  1035  0614                     	;# 
  1036  0615                     	;# 
  1037  0616                     	;# 
  1038  0616                     	;# 
  1039  0691                     	;# 
  1040  0692                     	;# 
  1041  0693                     	;# 
  1042  0694                     	;# 
  1043  0695                     	;# 
  1044  0E8E                     	;# 
  1045  0E8F                     	;# 
  1046  0E90                     	;# 
  1047  0E91                     	;# 
  1048  0E92                     	;# 
  1049  0E93                     	;# 
  1050  0E94                     	;# 
  1051  0E94                     	;# 
  1052  0E95                     	;# 
  1053  0E96                     	;# 
  1054  0E97                     	;# 
  1055  0E98                     	;# 
  1056  0E99                     	;# 
  1057  0E9A                     	;# 
  1058  0E9B                     	;# 
  1059  0E9C                     	;# 
  1060  0E9D                     	;# 
  1061  0E9E                     	;# 
  1062  0E9F                     	;# 
  1063  0FE4                     	;# 
  1064  0FE5                     	;# 
  1065  0FE6                     	;# 
  1066  0FE7                     	;# 
  1067  0FE8                     	;# 
  1068  0FE9                     	;# 
  1069  0FEA                     	;# 
  1070  0FEB                     	;# 
  1071  0FED                     	;# 
  1072  0FEE                     	;# 
  1073  0FEF                     	;# 
  1074  0000                     	;# 
  1075  0001                     	;# 
  1076  0002                     	;# 
  1077  0003                     	;# 
  1078  0004                     	;# 
  1079  0005                     	;# 
  1080  0006                     	;# 
  1081  0007                     	;# 
  1082  0008                     	;# 
  1083  0009                     	;# 
  1084  000A                     	;# 
  1085  000B                     	;# 
  1086  000C                     	;# 
  1087  000D                     	;# 
  1088  000E                     	;# 
  1089  0011                     	;# 
  1090  0012                     	;# 
  1091  0015                     	;# 
  1092  0016                     	;# 
  1093  0016                     	;# 
  1094  0017                     	;# 
  1095  0018                     	;# 
  1096  0019                     	;# 
  1097  001A                     	;# 
  1098  001B                     	;# 
  1099  001C                     	;# 
  1100  008C                     	;# 
  1101  008D                     	;# 
  1102  008E                     	;# 
  1103  0091                     	;# 
  1104  0092                     	;# 
  1105  0095                     	;# 
  1106  0096                     	;# 
  1107  0097                     	;# 
  1108  0098                     	;# 
  1109  0099                     	;# 
  1110  009A                     	;# 
  1111  009B                     	;# 
  1112  009B                     	;# 
  1113  009C                     	;# 
  1114  009D                     	;# 
  1115  009E                     	;# 
  1116  009F                     	;# 
  1117  010C                     	;# 
  1118  010D                     	;# 
  1119  010E                     	;# 
  1120  0111                     	;# 
  1121  0112                     	;# 
  1122  0113                     	;# 
  1123  0114                     	;# 
  1124  0115                     	;# 
  1125  0116                     	;# 
  1126  0117                     	;# 
  1127  0118                     	;# 
  1128  0119                     	;# 
  1129  011D                     	;# 
  1130  018C                     	;# 
  1131  018D                     	;# 
  1132  018E                     	;# 
  1133  0191                     	;# 
  1134  0191                     	;# 
  1135  0192                     	;# 
  1136  0193                     	;# 
  1137  0193                     	;# 
  1138  0194                     	;# 
  1139  0195                     	;# 
  1140  0196                     	;# 
  1141  0199                     	;# 
  1142  019A                     	;# 
  1143  019B                     	;# 
  1144  019B                     	;# 
  1145  019C                     	;# 
  1146  019D                     	;# 
  1147  019E                     	;# 
  1148  019F                     	;# 
  1149  020C                     	;# 
  1150  020D                     	;# 
  1151  0211                     	;# 
  1152  0211                     	;# 
  1153  0212                     	;# 
  1154  0212                     	;# 
  1155  0213                     	;# 
  1156  0213                     	;# 
  1157  0214                     	;# 
  1158  0214                     	;# 
  1159  0215                     	;# 
  1160  0215                     	;# 
  1161  0215                     	;# 
  1162  0216                     	;# 
  1163  0216                     	;# 
  1164  0217                     	;# 
  1165  0217                     	;# 
  1166  0391                     	;# 
  1167  0392                     	;# 
  1168  0393                     	;# 
  1169  0394                     	;# 
  1170  0395                     	;# 
  1171  0396                     	;# 
  1172  039A                     	;# 
  1173  039B                     	;# 
  1174  0611                     	;# 
  1175  0612                     	;# 
  1176  0613                     	;# 
  1177  0613                     	;# 
  1178  0614                     	;# 
  1179  0615                     	;# 
  1180  0616                     	;# 
  1181  0616                     	;# 
  1182  0691                     	;# 
  1183  0692                     	;# 
  1184  0693                     	;# 
  1185  0694                     	;# 
  1186  0695                     	;# 
  1187  0E8E                     	;# 
  1188  0E8F                     	;# 
  1189  0E90                     	;# 
  1190  0E91                     	;# 
  1191  0E92                     	;# 
  1192  0E93                     	;# 
  1193  0E94                     	;# 
  1194  0E94                     	;# 
  1195  0E95                     	;# 
  1196  0E96                     	;# 
  1197  0E97                     	;# 
  1198  0E98                     	;# 
  1199  0E99                     	;# 
  1200  0E9A                     	;# 
  1201  0E9B                     	;# 
  1202  0E9C                     	;# 
  1203  0E9D                     	;# 
  1204  0E9E                     	;# 
  1205  0E9F                     	;# 
  1206  0FE4                     	;# 
  1207  0FE5                     	;# 
  1208  0FE6                     	;# 
  1209  0FE7                     	;# 
  1210  0FE8                     	;# 
  1211  0FE9                     	;# 
  1212  0FEA                     	;# 
  1213  0FEB                     	;# 
  1214  0FED                     	;# 
  1215  0FEE                     	;# 
  1216  0FEF                     	;# 
  1217                           
  1218                           	psect	stringtext
  1219  0251                     __pstringtext:	
  1220  0251                     _USB_SD_Ptr:	
  1221  0251  3416               	retlw	low (_sd000| (0+32768))
  1222  0252  3483               	retlw	high (_sd000| (0+32768))
  1223  0253  349C               	retlw	low (_sd001| (0+32768))
  1224  0254  3482               	retlw	high (_sd001| (0+32768))
  1225  0255  34D0               	retlw	low (_sd002| (0+32768))
  1226  0256  3482               	retlw	high (_sd002| (0+32768))
  1227  0257                     __end_of_USB_SD_Ptr:	
  1228  0257                     _USB_CD_Ptr:	
  1229  0257  3459               	retlw	low (_configDescriptor1| (0+32768))
  1230  0258  3482               	retlw	high (_configDescriptor1| (0+32768))
  1231  0259                     __end_of_USB_CD_Ptr:	
  1232  0259                     _configDescriptor1:	
  1233  0259  3409               	retlw	9
  1234  025A  3402               	retlw	2
  1235  025B  3443               	retlw	67
  1236  025C  3400               	retlw	0
  1237  025D  3402               	retlw	2
  1238  025E  3401               	retlw	1
  1239  025F  3400               	retlw	0
  1240  0260  34C0               	retlw	192
  1241  0261  3432               	retlw	50
  1242  0262  3409               	retlw	9
  1243  0263  3404               	retlw	4
  1244  0264  3400               	retlw	0
  1245  0265  3400               	retlw	0
  1246  0266  3401               	retlw	1
  1247  0267  3402               	retlw	2
  1248  0268  3402               	retlw	2
  1249  0269  3401               	retlw	1
  1250  026A  3400               	retlw	0
  1251  026B  3405               	retlw	5
  1252  026C  3424               	retlw	36
  1253  026D  3400               	retlw	0
  1254  026E  3410               	retlw	16
  1255  026F  3401               	retlw	1
  1256  0270  3404               	retlw	4
  1257  0271  3424               	retlw	36
  1258  0272  3402               	retlw	2
  1259  0273  3402               	retlw	2
  1260  0274  3405               	retlw	5
  1261  0275  3424               	retlw	36
  1262  0276  3406               	retlw	6
  1263  0277  3400               	retlw	0
  1264  0278  3401               	retlw	1
  1265  0279  3405               	retlw	5
  1266  027A  3424               	retlw	36
  1267  027B  3401               	retlw	1
  1268  027C  3400               	retlw	0
  1269  027D  3401               	retlw	1
  1270  027E  3407               	retlw	7
  1271  027F  3405               	retlw	5
  1272  0280  3481               	retlw	129
  1273  0281  3403               	retlw	3
  1274  0282  3408               	retlw	8
  1275  0283  3400               	retlw	0
  1276  0284  3402               	retlw	2
  1277  0285  3409               	retlw	9
  1278  0286  3404               	retlw	4
  1279  0287  3401               	retlw	1
  1280  0288  3400               	retlw	0
  1281  0289  3402               	retlw	2
  1282  028A  340A               	retlw	10
  1283  028B  3400               	retlw	0
  1284  028C  3400               	retlw	0
  1285  028D  3400               	retlw	0
  1286  028E  3407               	retlw	7
  1287  028F  3405               	retlw	5
  1288  0290  3402               	retlw	2
  1289  0291  3402               	retlw	2
  1290  0292  3440               	retlw	64
  1291  0293  3400               	retlw	0
  1292  0294  3400               	retlw	0
  1293  0295  3407               	retlw	7
  1294  0296  3405               	retlw	5
  1295  0297  3482               	retlw	130
  1296  0298  3402               	retlw	2
  1297  0299  3440               	retlw	64
  1298  029A  3400               	retlw	0
  1299  029B  3400               	retlw	0
  1300  029C                     __end_of_configDescriptor1:	
  1301  029C                     _sd001:	
  1302  029C  3434               	retlw	52
  1303  029D  3403               	retlw	3
  1304  029E  344D               	retlw	77
  1305  029F  3400               	retlw	0
  1306  02A0  3469               	retlw	105
  1307  02A1  3400               	retlw	0
  1308  02A2  3463               	retlw	99
  1309  02A3  3400               	retlw	0
  1310  02A4  3472               	retlw	114
  1311  02A5  3400               	retlw	0
  1312  02A6  346F               	retlw	111
  1313  02A7  3400               	retlw	0
  1314  02A8  3463               	retlw	99
  1315  02A9  3400               	retlw	0
  1316  02AA  3468               	retlw	104
  1317  02AB  3400               	retlw	0
  1318  02AC  3469               	retlw	105
  1319  02AD  3400               	retlw	0
  1320  02AE  3470               	retlw	112
  1321  02AF  3400               	retlw	0
  1322  02B0  3420               	retlw	32
  1323  02B1  3400               	retlw	0
  1324  02B2  3454               	retlw	84
  1325  02B3  3400               	retlw	0
  1326  02B4  3465               	retlw	101
  1327  02B5  3400               	retlw	0
  1328  02B6  3463               	retlw	99
  1329  02B7  3400               	retlw	0
  1330  02B8  3468               	retlw	104
  1331  02B9  3400               	retlw	0
  1332  02BA  346E               	retlw	110
  1333  02BB  3400               	retlw	0
  1334  02BC  346F               	retlw	111
  1335  02BD  3400               	retlw	0
  1336  02BE  346C               	retlw	108
  1337  02BF  3400               	retlw	0
  1338  02C0  346F               	retlw	111
  1339  02C1  3400               	retlw	0
  1340  02C2  3467               	retlw	103
  1341  02C3  3400               	retlw	0
  1342  02C4  3479               	retlw	121
  1343  02C5  3400               	retlw	0
  1344  02C6  3420               	retlw	32
  1345  02C7  3400               	retlw	0
  1346  02C8  3449               	retlw	73
  1347  02C9  3400               	retlw	0
  1348  02CA  346E               	retlw	110
  1349  02CB  3400               	retlw	0
  1350  02CC  3463               	retlw	99
  1351  02CD  3400               	retlw	0
  1352  02CE  342E               	retlw	46
  1353  02CF  3400               	retlw	0
  1354  02D0                     __end_of_sd001:	
  1355  02D0                     _sd002:	
  1356  02D0  3434               	retlw	52
  1357  02D1  3403               	retlw	3
  1358  02D2  3443               	retlw	67
  1359  02D3  3400               	retlw	0
  1360  02D4  3444               	retlw	68
  1361  02D5  3400               	retlw	0
  1362  02D6  3443               	retlw	67
  1363  02D7  3400               	retlw	0
  1364  02D8  3420               	retlw	32
  1365  02D9  3400               	retlw	0
  1366  02DA  3452               	retlw	82
  1367  02DB  3400               	retlw	0
  1368  02DC  3453               	retlw	83
  1369  02DD  3400               	retlw	0
  1370  02DE  342D               	retlw	45
  1371  02DF  3400               	retlw	0
  1372  02E0  3432               	retlw	50
  1373  02E1  3400               	retlw	0
  1374  02E2  3433               	retlw	51
  1375  02E3  3400               	retlw	0
  1376  02E4  3432               	retlw	50
  1377  02E5  3400               	retlw	0
  1378  02E6  3420               	retlw	32
  1379  02E7  3400               	retlw	0
  1380  02E8  3445               	retlw	69
  1381  02E9  3400               	retlw	0
  1382  02EA  346D               	retlw	109
  1383  02EB  3400               	retlw	0
  1384  02EC  3475               	retlw	117
  1385  02ED  3400               	retlw	0
  1386  02EE  346C               	retlw	108
  1387  02EF  3400               	retlw	0
  1388  02F0  3461               	retlw	97
  1389  02F1  3400               	retlw	0
  1390  02F2  3474               	retlw	116
  1391  02F3  3400               	retlw	0
  1392  02F4  3469               	retlw	105
  1393  02F5  3400               	retlw	0
  1394  02F6  346F               	retlw	111
  1395  02F7  3400               	retlw	0
  1396  02F8  346E               	retlw	110
  1397  02F9  3400               	retlw	0
  1398  02FA  3420               	retlw	32
  1399  02FB  3400               	retlw	0
  1400  02FC  3444               	retlw	68
  1401  02FD  3400               	retlw	0
  1402  02FE  3465               	retlw	101
  1403  02FF  3400               	retlw	0
  1404  0300  346D               	retlw	109
  1405  0301  3400               	retlw	0
  1406  0302  346F               	retlw	111
  1407  0303  3400               	retlw	0
  1408  0304                     __end_of_sd002:	
  1409  0304                     _device_dsc:	
  1410  0304  3412               	retlw	18
  1411  0305  3401               	retlw	1
  1412  0306  3400               	retlw	0
  1413  0307  3402               	retlw	2
  1414  0308  3402               	retlw	2
  1415  0309  3400               	retlw	0
  1416  030A  3400               	retlw	0
  1417  030B  3408               	retlw	8
  1418  030C  34D8               	retlw	216
  1419  030D  3404               	retlw	4
  1420  030E  340A               	retlw	10
  1421  030F  3400               	retlw	0
  1422  0310  3400               	retlw	0
  1423  0311  3401               	retlw	1
  1424  0312  3401               	retlw	1
  1425  0313  3402               	retlw	2
  1426  0314  3400               	retlw	0
  1427  0315  3401               	retlw	1
  1428  0316                     __end_of_device_dsc:	
  1429  0316                     _sd000:	
  1430  0316  3404               	retlw	4
  1431  0317  3403               	retlw	3
  1432  0318  3409               	retlw	9
  1433  0319  3404               	retlw	4
  1434  031A                     __end_of_sd000:	
  1435  000B                     _INTCONbits	set	11
  1436  0012                     _PIR2bits	set	18
  1437  0099                     _OSCCON	set	153
  1438  0092                     _PIE2bits	set	146
  1439  008C                     _TRISAbits	set	140
  1440  008D                     _TRISBbits	set	141
  1441  008E                     _TRISCbits	set	142
  1442  010C                     _LATAbits	set	268
  1443  010E                     _LATCbits	set	270
  1444  018C                     _ANSELA	set	396
  1445  018D                     _ANSELB	set	397
  1446  018E                     _ANSELC	set	398
  1447  0211                     _SSPBUF	set	529
  1448  0215                     _SSPCON1bits	set	533
  1449  0214                     _SSPSTATbits	set	532
  1450  039B                     _ACTCON	set	923
  1451  0E96                     _UADDR	set	3734
  1452  0E91                     _UCFG	set	3729
  1453  0E8E                     _UCON	set	3726
  1454  0E8E                     _UCONbits	set	3726
  1455  0E97                     _UEIE	set	3735
  1456  0E93                     _UEIR	set	3731
  1457  0E98                     _UEP0bits	set	3736
  1458  0E92                     _UIE	set	3730
  1459  0E92                     _UIEbits	set	3730
  1460  0E90                     _UIR	set	3728
  1461  0E90                     _UIRbits	set	3728
  1462  0E8F                     _USTAT	set	3727
  1463  0E98                     _UEP0	set	3736
  1464  0E99                     _UEP1	set	3737
  1465                           
  1466                           ; #config settings
  1467  0000                     
  1468                           	psect	cinit
  1469  0014                     start_initialization:	
  1470  0014                     __initialization:	
  1471                           
  1472                           ; Clear objects allocated to BANK1
  1473  0014  0021               	movlb	1	; select bank1
  1474  0015  01E0               	clrf	__pbssBANK1& (0+127)
  1475  0016  01E1               	clrf	(__pbssBANK1+1)& (0+127)
  1476  0017  01E2               	clrf	(__pbssBANK1+2)& (0+127)
  1477  0018  01E3               	clrf	(__pbssBANK1+3)& (0+127)
  1478  0019  01E4               	clrf	(__pbssBANK1+4)& (0+127)
  1479  001A  01E5               	clrf	(__pbssBANK1+5)& (0+127)
  1480                           
  1481                           ; Clear objects allocated to BANK2
  1482  001B  0022               	movlb	2	; select bank2
  1483  001C  01EB               	clrf	__pbssBANK2& (0+127)
  1484  001D  01EC               	clrf	(__pbssBANK2+1)& (0+127)
  1485  001E  01ED               	clrf	(__pbssBANK2+2)& (0+127)
  1486  001F  01EE               	clrf	(__pbssBANK2+3)& (0+127)
  1487  0020  01EF               	clrf	(__pbssBANK2+4)& (0+127)
  1488                           
  1489                           ; Clear objects allocated to BANK3
  1490  0021  30A0               	movlw	low __pbssBANK3
  1491  0022  0084               	movwf	4
  1492  0023  3001               	movlw	high __pbssBANK3
  1493  0024  0085               	movwf	5
  1494  0025  3045               	movlw	69
  1495  0026  3197  2783  3180   	fcall	clear_ram0
  1496                           
  1497                           ; Clear objects allocated to BANK4
  1498  0029  3020               	movlw	low __pbssBANK4
  1499  002A  0084               	movwf	4
  1500  002B  3002               	movlw	high __pbssBANK4
  1501  002C  0085               	movwf	5
  1502  002D  3012               	movlw	18
  1503  002E  3197  2783  3180   	fcall	clear_ram0
  1504                           
  1505                           ; Clear objects allocated to BANK5
  1506  0031  30A0               	movlw	low __pbssBANK5
  1507  0032  0084               	movwf	4
  1508  0033  3002               	movlw	high __pbssBANK5
  1509  0034  0085               	movwf	5
  1510  0035  3040               	movlw	64
  1511  0036  3197  2783  3180   	fcall	clear_ram0
  1512                           
  1513                           ; Clear objects allocated to BANK6
  1514  0039  3020               	movlw	low __pbssBANK6
  1515  003A  0084               	movwf	4
  1516  003B  3003               	movlw	high __pbssBANK6
  1517  003C  0085               	movwf	5
  1518  003D  3040               	movlw	64
  1519  003E  3197  2783         	fcall	clear_ram0
  1520  0040                     end_of_initialization:	
  1521                           ;End of C runtime variable initialization code
  1522                           
  1523  0040                     __end_of__initialization:	
  1524  0040  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1525  0041  0020               	movlb	0
  1526  0042  3185  2DD2         	ljmp	_main	;jump to C main() function
  1527                           
  1528                           	psect	bssBANK1
  1529  00E0                     __pbssBANK1:	
  1530  00E0                     _pBDTEntryEP0OutNext:	
  1531  00E0                     	ds	2
  1532  00E2                     _USBDeviceState:	
  1533  00E2                     	ds	1
  1534  00E3                     _controlTransferState:	
  1535  00E3                     	ds	1
  1536  00E4                     _pBDTEntryEP0OutCurrent:	
  1537  00E4                     	ds	1
  1538  00E5                     _USTATcopy:	
  1539  00E5                     	ds	1
  1540                           
  1541                           	psect	bssBANK2
  1542  016B                     __pbssBANK2:	
  1543  016B                     _inPipes:	
  1544  016B                     	ds	5
  1545                           
  1546                           	psect	bssBANK3
  1547  01A0                     __pbssBANK3:	
  1548  01A0                     _outPipes:	
  1549  01A0                     	ds	7
  1550  01A7                     _pBDTEntryIn:	
  1551  01A7                     	ds	6
  1552  01AD                     _pBDTEntryOut:	
  1553  01AD                     	ds	6
  1554  01B3                     _BaudRateGen:	
  1555  01B3                     	ds	4
  1556  01B7                     _USB1msTickCount:	
  1557  01B7                     	ds	4
  1558  01BB                     _ep_data_in:	
  1559  01BB                     	ds	3
  1560  01BE                     _ep_data_out:	
  1561  01BE                     	ds	3
  1562  01C1                     _CDCDataInHandle:	
  1563  01C1                     	ds	2
  1564  01C3                     _CDCDataOutHandle:	
  1565  01C3                     	ds	2
  1566  01C5                     _pCDCDst:	
  1567  01C5                     	ds	2
  1568  01C7                     _pCDCSrc:	
  1569  01C7                     	ds	2
  1570  01C9                     _BothEP0OutUOWNsSet:	
  1571  01C9                     	ds	1
  1572  01CA                     _RemoteWakeup:	
  1573  01CA                     	ds	1
  1574  01CB                     _USBBusIsSuspended:	
  1575  01CB                     	ds	1
  1576  01CC                     _USBDeferINDataStagePackets:	
  1577  01CC                     	ds	1
  1578  01CD                     _USBDeferOUTDataStagePackets:	
  1579  01CD                     	ds	1
  1580  01CE                     _USBDeferStatusStagePacket:	
  1581  01CE                     	ds	1
  1582  01CF                     _USBStatusStageEnabledFlag1:	
  1583  01CF                     	ds	1
  1584  01D0                     _USBStatusStageEnabledFlag2:	
  1585  01D0                     	ds	1
  1586  01D1                     _USBStatusStageTimeoutCounter:	
  1587  01D1                     	ds	1
  1588  01D2                     _USBTicksSinceSuspendEnd:	
  1589  01D2                     	ds	1
  1590  01D3                     _cdc_mem_type:	
  1591  01D3                     	ds	1
  1592  01D4                     _cdc_rx_len:	
  1593  01D4                     	ds	1
  1594  01D5                     _cdc_trf_state:	
  1595  01D5                     	ds	1
  1596  01D6                     _cdc_tx_len:	
  1597  01D6                     	ds	1
  1598  01D7                     _control_signal_bitmap:	
  1599  01D7                     	ds	1
  1600  01D8                     _endpoint_number:	
  1601  01D8                     	ds	1
  1602  01D9                     _pDst:	
  1603  01D9                     	ds	1
  1604  01DA                     _shortPacketStatus:	
  1605  01DA                     	ds	1
  1606  01DB                     _line_coding:	
  1607  01DB                     	ds	7
  1608  01E2                     _USBAlternateInterface:	
  1609  01E2                     	ds	2
  1610  01E4                     _USBActiveConfiguration:	
  1611  01E4                     	ds	1
  1612                           
  1613                           	psect	bssBANK4
  1614  0220                     __pbssBANK4:	
  1615  0220                     _cdc_notice:	
  1616  0220                     	ds	10
  1617  022A                     _dummy_encapsulated_cmd_response:	
  1618  022A                     	ds	8
  1619                           
  1620                           	psect	bssBANK5
  1621  02A0                     __pbssBANK5:	
  1622  02A0                     _readBuffer:	
  1623  02A0                     	ds	64
  1624                           
  1625                           	psect	bssBANK6
  1626  0320                     __pbssBANK6:	
  1627  0320                     _writeBuffer:	
  1628  0320                     	ds	64
  1629                           
  1630                           	psect	clrtext
  1631  1783                     clear_ram0:	
  1632                           ;	Called with FSR0 containing the base address, and
  1633                           ;	WREG with the size to clear
  1634                           
  1635  1783  0064               	clrwdt	;clear the watchdog before getting into this loop
  1636  1784                     clrloop0:	
  1637  1784  0180               	clrf	0	;clear RAM location pointed to by FSR
  1638  1785  3101               	addfsr 0,1
  1639  1786  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1640  1787  2F84               	goto	clrloop0	;have we reached the end yet?
  1641  1788  3400               	retlw	0	;all done for this memory range, return
  1642                           
  1643                           	psect	cstackBANK4
  1644  0232                     __pcstackBANK4:	
  1645  0232                     main@status2:	
  1646                           
  1647                           ; 1 bytes @ 0x0
  1648  0232                     	ds	1
  1649  0233                     main@pom2:	
  1650                           
  1651                           ; 1 bytes @ 0x1
  1652  0233                     	ds	1
  1653  0234                     main@nino1:	
  1654                           
  1655                           ; 1 bytes @ 0x2
  1656  0234                     	ds	1
  1657  0235                     main@nino2:	
  1658                           
  1659                           ; 1 bytes @ 0x3
  1660  0235                     	ds	1
  1661  0236                     main@status1:	
  1662                           
  1663                           ; 1 bytes @ 0x4
  1664  0236                     	ds	1
  1665  0237                     main@podatak:	
  1666                           
  1667                           ; 2 bytes @ 0x5
  1668  0237                     	ds	2
  1669                           
  1670                           	psect	cstackBANK3
  1671  01E5                     __pcstackBANK3:	
  1672  01E5                     ??_CDCTxService:	
  1673  01E5                     USBEnableEndpoint@p:	
  1674                           ; 1 bytes @ 0x0
  1675                           
  1676  01E5                     nRF_Setup@RXTX_ADDR:	
  1677                           ; 2 bytes @ 0x0
  1678                           
  1679                           
  1680                           ; 5 bytes @ 0x0
  1681  01E5                     	ds	1
  1682  01E6                     CDCTxService@i:	
  1683                           
  1684                           ; 1 bytes @ 0x1
  1685  01E6                     	ds	1
  1686  01E7                     USBEnableEndpoint@ep:	
  1687  01E7                     CDCTxService@byte_to_send:	
  1688                           ; 1 bytes @ 0x2
  1689                           
  1690                           
  1691                           ; 1 bytes @ 0x2
  1692  01E7                     	ds	1
  1693  01E8                     ??_CDCInitEP:	
  1694                           
  1695                           ; 1 bytes @ 0x3
  1696  01E8                     	ds	2
  1697  01EA                     ??_main:	
  1698                           
  1699                           ; 1 bytes @ 0x5
  1700  01EA                     	ds	1
  1701                           
  1702                           	psect	cstackBANK2
  1703  0160                     __pcstackBANK2:	
  1704  0160                     ??_SYSTEM_Initialize:	
  1705  0160                     ?_USBConfigureEndpoint:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708  0160                     ??_SPI_init:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711  0160                     ??_SPI_transfer:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714  0160                     ??_USBDeviceInit:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717  0160                     ??_USBDeviceAttach:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720  0160                     ?_putUSBUSART:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723  0160                     ?_USBTransferOnePacket:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726  0160                     USBTransferOnePacket@dir:	
  1727                           ; 2 bytes @ 0x0
  1728                           
  1729  0160                     USBConfigureEndpoint@direction:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732  0160                     putUSBUSART@length:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735  0160                     SYSTEM_Initialize@state:	
  1736                           ; 1 bytes @ 0x0
  1737                           
  1738  0160                     SPI_transfer@data:	
  1739                           ; 1 bytes @ 0x0
  1740                           
  1741                           
  1742                           ; 1 bytes @ 0x0
  1743  0160                     	ds	1
  1744  0161                     ??_USBConfigureEndpoint:	
  1745  0161                     ??_ReadRegister:	
  1746                           ; 1 bytes @ 0x1
  1747                           
  1748  0161                     ?_WriteRegister:	
  1749                           ; 1 bytes @ 0x1
  1750                           
  1751  0161                     ?_ReadPayload:	
  1752                           ; 1 bytes @ 0x1
  1753                           
  1754  0161                     ?_WriteAddress:	
  1755                           ; 1 bytes @ 0x1
  1756                           
  1757  0161                     ??_WriteCommand:	
  1758                           ; 1 bytes @ 0x1
  1759                           
  1760  0161                     ??_putUSBUSART:	
  1761                           ; 1 bytes @ 0x1
  1762                           
  1763  0161                     WriteRegister@val:	
  1764                           ; 1 bytes @ 0x1
  1765                           
  1766  0161                     WriteAddress@num:	
  1767                           ; 1 bytes @ 0x1
  1768                           
  1769  0161                     WriteCommand@command:	
  1770                           ; 1 bytes @ 0x1
  1771                           
  1772  0161                     ReadPayload@data:	
  1773                           ; 1 bytes @ 0x1
  1774                           
  1775  0161                     USBDeviceInit@p:	
  1776                           ; 1 bytes @ 0x1
  1777                           
  1778  0161                     USBTransferOnePacket@data:	
  1779                           ; 2 bytes @ 0x1
  1780                           
  1781                           
  1782                           ; 2 bytes @ 0x1
  1783  0161                     	ds	1
  1784  0162                     ??_WriteRegister:	
  1785  0162                     ??_ReadPayload:	
  1786                           ; 1 bytes @ 0x2
  1787                           
  1788  0162                     putUSBUSART@data:	
  1789                           ; 1 bytes @ 0x2
  1790                           
  1791  0162                     WriteRegister@reg:	
  1792                           ; 1 bytes @ 0x2
  1793                           
  1794  0162                     WriteAddress@addr:	
  1795                           ; 1 bytes @ 0x2
  1796                           
  1797  0162                     ReadRegister@reg:	
  1798                           ; 1 bytes @ 0x2
  1799                           
  1800                           
  1801                           ; 1 bytes @ 0x2
  1802  0162                     	ds	1
  1803  0163                     ??_WriteAddress:	
  1804  0163                     USBDeviceInit@i_821:	
  1805                           ; 1 bytes @ 0x3
  1806                           
  1807  0163                     USBTransferOnePacket@len:	
  1808                           ; 1 bytes @ 0x3
  1809                           
  1810  0163                     ReadRegister@temp:	
  1811                           ; 1 bytes @ 0x3
  1812                           
  1813                           
  1814                           ; 1 bytes @ 0x3
  1815  0163                     	ds	1
  1816  0164                     ??_USBTransferOnePacket:	
  1817  0164                     USBDeviceInit@i:	
  1818                           ; 1 bytes @ 0x4
  1819                           
  1820  0164                     WriteAddress@reg:	
  1821                           ; 1 bytes @ 0x4
  1822                           
  1823  0164                     ReadRegister@temp1:	
  1824                           ; 1 bytes @ 0x4
  1825                           
  1826  0164                     ReadPayload@num:	
  1827                           ; 1 bytes @ 0x4
  1828                           
  1829                           
  1830                           ; 1 bytes @ 0x4
  1831  0164                     	ds	1
  1832  0165                     USBConfigureEndpoint@EPNum:	
  1833  0165                     ReadPayload@i:	
  1834                           ; 1 bytes @ 0x5
  1835                           
  1836  0165                     WriteAddress@i:	
  1837                           ; 1 bytes @ 0x5
  1838                           
  1839                           
  1840                           ; 2 bytes @ 0x5
  1841  0165                     	ds	1
  1842  0166                     USBConfigureEndpoint@handle:	
  1843                           
  1844                           ; 1 bytes @ 0x6
  1845  0166                     	ds	1
  1846  0167                     ??_nRF_Setup:	
  1847  0167                     ?_USBEnableEndpoint:	
  1848                           ; 1 bytes @ 0x7
  1849                           
  1850  0167                     USBEnableEndpoint@options:	
  1851                           ; 1 bytes @ 0x7
  1852                           
  1853                           
  1854                           ; 1 bytes @ 0x7
  1855  0167                     	ds	1
  1856  0168                     ??_USBEnableEndpoint:	
  1857  0168                     USBTransferOnePacket@ep:	
  1858                           ; 1 bytes @ 0x8
  1859                           
  1860                           
  1861                           ; 1 bytes @ 0x8
  1862  0168                     	ds	1
  1863  0169                     USBTransferOnePacket@handle:	
  1864                           
  1865                           ; 2 bytes @ 0x9
  1866  0169                     	ds	2
  1867                           
  1868                           	psect	cstackBANK1
  1869  00E6                     __pcstackBANK1:	
  1870  00E6                     ??_USBCtrlEPService:	
  1871                           
  1872                           ; 1 bytes @ 0x0
  1873  00E6                     	ds	3
  1874  00E9                     ??_USBDeviceTasks:	
  1875                           
  1876                           ; 1 bytes @ 0x3
  1877  00E9                     	ds	2
  1878  00EB                     ??_SYS_InterruptHigh:	
  1879                           
  1880                           ; 1 bytes @ 0x5
  1881  00EB                     	ds	1
  1882                           
  1883                           	psect	cstackCOMMON
  1884  0070                     __pcstackCOMMON:	
  1885  0070                     ?_SYSTEM_Initialize:	
  1886  0070                     ?_CDCInitEP:	
  1887                           ; 1 bytes @ 0x0
  1888                           
  1889  0070                     ?_USBCheckCDCRequest:	
  1890                           ; 1 bytes @ 0x0
  1891                           
  1892  0070                     ??_USBCheckCDCRequest:	
  1893                           ; 1 bytes @ 0x0
  1894                           
  1895  0070                     ?_USBWakeFromSuspend:	
  1896                           ; 1 bytes @ 0x0
  1897                           
  1898  0070                     ?_USBSuspend:	
  1899                           ; 1 bytes @ 0x0
  1900                           
  1901  0070                     ?_USBIncrement1msInternalTimers:	
  1902                           ; 1 bytes @ 0x0
  1903                           
  1904  0070                     ??_USBIncrement1msInternalTimers:	
  1905                           ; 1 bytes @ 0x0
  1906                           
  1907  0070                     ?_USBCtrlEPAllowStatusStage:	
  1908                           ; 1 bytes @ 0x0
  1909                           
  1910  0070                     ??_USBCtrlEPAllowStatusStage:	
  1911                           ; 1 bytes @ 0x0
  1912                           
  1913  0070                     ?_USBStallHandler:	
  1914                           ; 1 bytes @ 0x0
  1915                           
  1916  0070                     ??_USBStallHandler:	
  1917                           ; 1 bytes @ 0x0
  1918                           
  1919  0070                     ?_USBCtrlEPService:	
  1920                           ; 1 bytes @ 0x0
  1921                           
  1922  0070                     ?_USBCtrlTrfTxService:	
  1923                           ; 1 bytes @ 0x0
  1924                           
  1925  0070                     ??_USBCtrlTrfTxService:	
  1926                           ; 1 bytes @ 0x0
  1927                           
  1928  0070                     ?_USBCtrlTrfSetupHandler:	
  1929                           ; 1 bytes @ 0x0
  1930                           
  1931  0070                     ?_USBCtrlTrfOutHandler:	
  1932                           ; 1 bytes @ 0x0
  1933                           
  1934  0070                     ?_USBCtrlTrfInHandler:	
  1935                           ; 1 bytes @ 0x0
  1936                           
  1937  0070                     ?_USBCheckStdRequest:	
  1938                           ; 1 bytes @ 0x0
  1939                           
  1940  0070                     ?_USBStdFeatureReqHandler:	
  1941                           ; 1 bytes @ 0x0
  1942                           
  1943  0070                     ?_SPI_init:	
  1944                           ; 1 bytes @ 0x0
  1945                           
  1946  0070                     ?_ReadRegister:	
  1947                           ; 1 bytes @ 0x0
  1948                           
  1949  0070                     ?_WriteCommand:	
  1950                           ; 1 bytes @ 0x0
  1951                           
  1952  0070                     ?_SPI_transfer:	
  1953                           ; 1 bytes @ 0x0
  1954                           
  1955  0070                     ?_USBDeviceInit:	
  1956                           ; 1 bytes @ 0x0
  1957                           
  1958  0070                     ?_USBDeviceTasks:	
  1959                           ; 1 bytes @ 0x0
  1960                           
  1961  0070                     ?_USBDeviceAttach:	
  1962                           ; 1 bytes @ 0x0
  1963                           
  1964  0070                     ?_USBCtrlEPAllowDataStage:	
  1965                           ; 1 bytes @ 0x0
  1966                           
  1967  0070                     ?_USBCtrlEPServiceComplete:	
  1968                           ; 1 bytes @ 0x0
  1969                           
  1970  0070                     ?_USBCtrlTrfRxService:	
  1971                           ; 1 bytes @ 0x0
  1972                           
  1973  0070                     ?_USBStdSetCfgHandler:	
  1974                           ; 1 bytes @ 0x0
  1975                           
  1976  0070                     ?_USBStdGetDscHandler:	
  1977                           ; 1 bytes @ 0x0
  1978                           
  1979  0070                     ??_USBStdGetDscHandler:	
  1980                           ; 1 bytes @ 0x0
  1981                           
  1982  0070                     ?_USBStdGetStatusHandler:	
  1983                           ; 1 bytes @ 0x0
  1984                           
  1985  0070                     ??_USBStdGetStatusHandler:	
  1986                           ; 1 bytes @ 0x0
  1987                           
  1988  0070                     ?_CDCTxService:	
  1989                           ; 1 bytes @ 0x0
  1990                           
  1991  0070                     ?_SYS_InterruptHigh:	
  1992                           ; 1 bytes @ 0x0
  1993                           
  1994  0070                     ?_main:	
  1995                           ; 1 bytes @ 0x0
  1996                           
  1997  0070                     ?i1_USBDeviceInit:	
  1998                           ; 1 bytes @ 0x0
  1999                           
  2000  0070                     ??i1_USBDeviceInit:	
  2001                           ; 1 bytes @ 0x0
  2002                           
  2003  0070                     ?i1_USBConfigureEndpoint:	
  2004                           ; 1 bytes @ 0x0
  2005                           
  2006  0070                     ?i1_CDCInitEP:	
  2007                           ; 1 bytes @ 0x0
  2008                           
  2009  0070                     ?i1_SYSTEM_Initialize:	
  2010                           ; 1 bytes @ 0x0
  2011                           
  2012  0070                     ??i1_SYSTEM_Initialize:	
  2013                           ; 1 bytes @ 0x0
  2014                           
  2015  0070                     ?_memset:	
  2016                           ; 1 bytes @ 0x0
  2017                           
  2018  0070                     ?_nRF_Setup:	
  2019                           ; 2 bytes @ 0x0
  2020                           
  2021  0070                     ?i1_USBTransferOnePacket:	
  2022                           ; 2 bytes @ 0x0
  2023                           
  2024  0070                     i1USBTransferOnePacket@dir:	
  2025                           ; 2 bytes @ 0x0
  2026                           
  2027  0070                     i1USBConfigureEndpoint@direction:	
  2028                           ; 1 bytes @ 0x0
  2029                           
  2030  0070                     i1SYSTEM_Initialize@state:	
  2031                           ; 1 bytes @ 0x0
  2032                           
  2033  0070                     memset@p1:	
  2034                           ; 1 bytes @ 0x0
  2035                           
  2036                           
  2037                           ; 2 bytes @ 0x0
  2038  0070                     	ds	1
  2039  0071                     ??i1_USBConfigureEndpoint:	
  2040  0071                     USBStdGetStatusHandler@p:	
  2041                           ; 1 bytes @ 0x1
  2042                           
  2043  0071                     i1USBDeviceInit@p:	
  2044                           ; 2 bytes @ 0x1
  2045                           
  2046  0071                     i1USBTransferOnePacket@data:	
  2047                           ; 2 bytes @ 0x1
  2048                           
  2049                           
  2050                           ; 2 bytes @ 0x1
  2051  0071                     	ds	1
  2052  0072                     ??_USBCtrlTrfRxService:	
  2053  0072                     USBCtrlTrfTxService@byteToSend:	
  2054                           ; 1 bytes @ 0x2
  2055                           
  2056  0072                     memset@c:	
  2057                           ; 1 bytes @ 0x2
  2058                           
  2059                           
  2060                           ; 2 bytes @ 0x2
  2061  0072                     	ds	1
  2062  0073                     ??_USBCtrlTrfInHandler:	
  2063  0073                     ??_USBCtrlEPAllowDataStage:	
  2064                           ; 1 bytes @ 0x3
  2065                           
  2066  0073                     i1USBDeviceInit@i_821:	
  2067                           ; 1 bytes @ 0x3
  2068                           
  2069  0073                     i1USBTransferOnePacket@len:	
  2070                           ; 1 bytes @ 0x3
  2071                           
  2072                           
  2073                           ; 1 bytes @ 0x3
  2074  0073                     	ds	1
  2075  0074                     ??i1_USBTransferOnePacket:	
  2076  0074                     USBCtrlTrfRxService@i:	
  2077                           ; 1 bytes @ 0x4
  2078                           
  2079  0074                     i1USBDeviceInit@i:	
  2080                           ; 1 bytes @ 0x4
  2081                           
  2082  0074                     memset@n:	
  2083                           ; 1 bytes @ 0x4
  2084                           
  2085                           
  2086                           ; 2 bytes @ 0x4
  2087  0074                     	ds	1
  2088  0075                     ??_USBCtrlEPServiceComplete:	
  2089  0075                     USBCtrlTrfRxService@byteToRead:	
  2090                           ; 1 bytes @ 0x5
  2091                           
  2092  0075                     USBCtrlTrfInHandler@lastDTS:	
  2093                           ; 1 bytes @ 0x5
  2094                           
  2095  0075                     i1USBConfigureEndpoint@EPNum:	
  2096                           ; 1 bytes @ 0x5
  2097                           
  2098                           
  2099                           ; 1 bytes @ 0x5
  2100  0075                     	ds	1
  2101  0076                     ??_memset:	
  2102  0076                     ??_USBCtrlTrfOutHandler:	
  2103                           ; 1 bytes @ 0x6
  2104                           
  2105  0076                     i1USBConfigureEndpoint@handle:	
  2106                           ; 1 bytes @ 0x6
  2107                           
  2108  0076                     memset@p:	
  2109                           ; 1 bytes @ 0x6
  2110                           
  2111                           
  2112                           ; 2 bytes @ 0x6
  2113  0076                     	ds	1
  2114  0077                     ?i1_USBEnableEndpoint:	
  2115  0077                     i1USBEnableEndpoint@options:	
  2116                           ; 1 bytes @ 0x7
  2117                           
  2118                           
  2119                           ; 1 bytes @ 0x7
  2120  0077                     	ds	1
  2121  0078                     ??i1_USBEnableEndpoint:	
  2122  0078                     i1USBTransferOnePacket@ep:	
  2123                           ; 1 bytes @ 0x8
  2124                           
  2125                           
  2126                           ; 1 bytes @ 0x8
  2127  0078                     	ds	1
  2128  0079                     i1USBTransferOnePacket@handle:	
  2129                           
  2130                           ; 2 bytes @ 0x9
  2131  0079                     	ds	1
  2132  007A                     i1USBEnableEndpoint@p:	
  2133                           
  2134                           ; 2 bytes @ 0xA
  2135  007A                     	ds	2
  2136  007C                     i1USBEnableEndpoint@ep:	
  2137                           
  2138                           ; 1 bytes @ 0xC
  2139  007C                     	ds	1
  2140  007D                     ??i1_CDCInitEP:	
  2141                           
  2142                           ; 1 bytes @ 0xD
  2143  007D                     	ds	1
  2144  007E                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2145                           
  2146                           	psect	cstackBANK0
  2147  0060                     __pcstackBANK0:	
  2148                           ; 1 bytes @ 0xE
  2149                           
  2150  0060                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  2151  0060                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  2152                           ; 1 bytes @ 0x0
  2153                           
  2154                           
  2155                           ; 2 bytes @ 0x0
  2156  0060                     	ds	2
  2157  0062                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2158                           
  2159                           ; 2 bytes @ 0x2
  2160  0062                     	ds	2
  2161  0064                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2162                           
  2163                           ; 2 bytes @ 0x4
  2164  0064                     	ds	2
  2165  0066                     ??_USBWakeFromSuspend:	
  2166  0066                     ??_USBSuspend:	
  2167                           ; 1 bytes @ 0x6
  2168                           
  2169  0066                     ??_USBStdFeatureReqHandler:	
  2170                           ; 1 bytes @ 0x6
  2171                           
  2172  0066                     ??_USBStdSetCfgHandler:	
  2173                           ; 1 bytes @ 0x6
  2174                           
  2175                           
  2176                           ; 1 bytes @ 0x6
  2177  0066                     	ds	1
  2178  0067                     USBStdSetCfgHandler@p:	
  2179                           
  2180                           ; 2 bytes @ 0x7
  2181  0067                     	ds	1
  2182  0068                     USBStdFeatureReqHandler@pUEP:	
  2183                           
  2184                           ; 2 bytes @ 0x8
  2185  0068                     	ds	1
  2186  0069                     USBStdSetCfgHandler@i_1174:	
  2187                           
  2188                           ; 1 bytes @ 0x9
  2189  0069                     	ds	1
  2190  006A                     USBStdSetCfgHandler@i:	
  2191  006A                     USBStdFeatureReqHandler@current_ep_data:	
  2192                           ; 1 bytes @ 0xA
  2193                           
  2194                           
  2195                           ; 1 bytes @ 0xA
  2196  006A                     	ds	1
  2197  006B                     USBStdFeatureReqHandler@p:	
  2198                           
  2199                           ; 2 bytes @ 0xB
  2200  006B                     	ds	2
  2201  006D                     ??_USBCheckStdRequest:	
  2202                           
  2203                           ; 1 bytes @ 0xD
  2204  006D                     	ds	1
  2205  006E                     ??_USBCtrlTrfSetupHandler:	
  2206                           
  2207                           ; 1 bytes @ 0xE
  2208  006E                     	ds	1
  2209  006F                     USBDeviceTasks@i:	
  2210                           
  2211                           ; 1 bytes @ 0xF
  2212  006F                     	ds	1
  2213                           
  2214                           	psect	maintext
  2215  05D2                     __pmaintext:	
  2216 ;;
  2217 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2218 ;;
  2219 ;; *************** function _main *****************
  2220 ;; Defined at:
  2221 ;;		line 21 in file "../src/main.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;		None
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;  nino2           1    3[BANK4 ] unsigned char 
  2226 ;;  nino1           1    2[BANK4 ] unsigned char 
  2227 ;;  podatak         2    5[BANK4 ] unsigned char [2]
  2228 ;;  status1         1    4[BANK4 ] unsigned char 
  2229 ;;  pom2            1    1[BANK4 ] unsigned char 
  2230 ;;  status2         1    0[BANK4 ] unsigned char 
  2231 ;;  pom             1    0        unsigned char 
  2232 ;;  fifostatus      1    0        unsigned char 
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2237 ;; Tracked objects:
  2238 ;;		On entry : B1F/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2243 ;;      Locals:         0       0       0       0       0       7       0       0       0       0       0       0       
      +0       0
  2244 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  2245 ;;      Totals:         0       0       0       0       1       7       0       0       0       0       0       0       
      +0       0
  2246 ;;Total ram usage:        8 bytes
  2247 ;; Hardware stack levels required when called:   13
  2248 ;; This function calls:
  2249 ;;		_CDCInitEP
  2250 ;;		_CDCTxService
  2251 ;;		_ReadPayload
  2252 ;;		_ReadRegister
  2253 ;;		_SPI_init
  2254 ;;		_SYSTEM_Initialize
  2255 ;;		_USBDeviceAttach
  2256 ;;		_USBDeviceInit
  2257 ;;		_WriteRegister
  2258 ;;		_nRF_Setup
  2259 ;;		_putUSBUSART
  2260 ;; This function is called by:
  2261 ;;		Startup code after reset
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           
  2266                           ;psect for function _main
  2267  05D2                     _main:	
  2268                           
  2269                           ;main.c: 24: uint8_t status1;
  2270                           ;main.c: 25: uint8_t status2;
  2271                           ;main.c: 26: uint8_t fifostatus;
  2272                           ;main.c: 27: uint8_t podatak[2];
  2273                           ;main.c: 28: uint8_t pom;
  2274                           ;main.c: 29: uint8_t pom2=0x40;
  2275                           
  2276                           ;incstack = 0
  2277                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2278  05D2  3040               	movlw	64
  2279  05D3  0023               	movlb	3	; select bank3
  2280  05D4  00EA               	movwf	??_main^(0+384)
  2281  05D5  086A               	movf	??_main^(0+384),w
  2282  05D6  0024               	movlb	4	; select bank4
  2283  05D7  00B3               	movwf	main@pom2^(0+512)
  2284                           
  2285                           ;main.c: 31: TRISCbits.TRISC4 = 0;
  2286  05D8  0021               	movlb	1	; select bank1
  2287  05D9  120E               	bcf	14,4	;volatile
  2288                           
  2289                           ;main.c: 34: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  2290  05DA  3000               	movlw	0
  2291  05DB  3197  27E9  3185   	fcall	_SYSTEM_Initialize
  2292                           
  2293                           ;main.c: 35: ANSELA=0;
  2294  05DE  0023               	movlb	3	; select bank3
  2295  05DF  018C               	clrf	12	;volatile
  2296                           
  2297                           ;main.c: 36: ANSELB=0;
  2298  05E0  018D               	clrf	13	;volatile
  2299                           
  2300                           ;main.c: 37: ANSELC=0;
  2301  05E1  018E               	clrf	14	;volatile
  2302                           
  2303                           ;main.c: 38: USBDeviceInit();
  2304  05E2  3183  231A  3185   	fcall	_USBDeviceInit
  2305                           
  2306                           ;main.c: 39: USBDeviceAttach();
  2307  05E5  3188  2068  3185   	fcall	_USBDeviceAttach
  2308                           
  2309                           ;main.c: 40: CDCInitEP();
  2310  05E8  318A  2231  3185   	fcall	_CDCInitEP
  2311                           
  2312                           ;main.c: 41: {line_coding.dwDTERate=1200;};
  2313  05EB  3000               	movlw	0
  2314  05EC  0023               	movlb	3	; select bank3
  2315  05ED  00DE               	movwf	(_line_coding+3)^(0+384)
  2316  05EE  3000               	movlw	0
  2317  05EF  00DD               	movwf	(_line_coding+2)^(0+384)
  2318  05F0  3004               	movlw	4
  2319  05F1  00DC               	movwf	(_line_coding+1)^(0+384)
  2320  05F2  30B0               	movlw	176
  2321  05F3  00DB               	movwf	_line_coding^(0+384)
  2322                           
  2323                           ;main.c: 44: SPI_init();
  2324  05F4  3197  27D4  3185   	fcall	_SPI_init
  2325                           
  2326                           ;main.c: 45: nRF_Setup();
  2327  05F7  318F  2773  3185   	fcall	_nRF_Setup
  2328                           
  2329                           ;main.c: 54: status1 = ReadRegister(0x00);
  2330  05FA  3000               	movlw	0
  2331  05FB  3197  27BF  3185   	fcall	_ReadRegister
  2332  05FE  0023               	movlb	3	; select bank3
  2333  05FF  00EA               	movwf	??_main^(0+384)
  2334  0600  086A               	movf	??_main^(0+384),w
  2335  0601  0024               	movlb	4	; select bank4
  2336  0602  00B6               	movwf	main@status1^(0+512)
  2337                           
  2338                           ;main.c: 55: podatak[0]=0;
  2339  0603  01B7               	clrf	main@podatak^(0+512)
  2340  0604                     l4693:	
  2341                           ;main.c: 56: while(1){
  2342                           
  2343                           
  2344                           ;main.c: 61: status1 = ReadRegister(0x07);
  2345  0604  3007               	movlw	7
  2346  0605  3197  27BF  3185   	fcall	_ReadRegister
  2347  0608  0023               	movlb	3	; select bank3
  2348  0609  00EA               	movwf	??_main^(0+384)
  2349  060A  086A               	movf	??_main^(0+384),w
  2350  060B  0024               	movlb	4	; select bank4
  2351  060C  00B6               	movwf	main@status1^(0+512)
  2352                           
  2353                           ;main.c: 62: status2 = ReadRegister(0x00);
  2354  060D  3000               	movlw	0
  2355  060E  3197  27BF  3185   	fcall	_ReadRegister
  2356  0611  0023               	movlb	3	; select bank3
  2357  0612  00EA               	movwf	??_main^(0+384)
  2358  0613  086A               	movf	??_main^(0+384),w
  2359  0614  0024               	movlb	4	; select bank4
  2360  0615  00B2               	movwf	main@status2^(0+512)
  2361                           
  2362                           ;main.c: 63: podatak[0]=0;
  2363  0616  01B7               	clrf	main@podatak^(0+512)
  2364                           
  2365                           ;main.c: 64: podatak[1]=0;
  2366  0617  01B8               	clrf	(main@podatak^(0+512)+1)
  2367                           
  2368                           ;main.c: 65: if (status1 & (1<<6)) {
  2369  0618  1F36               	btfss	main@status1^(0+512),6
  2370  0619  2E50               	goto	l4717
  2371                           
  2372                           ;main.c: 71: WriteRegister(0x07,(status1 | 0x40));
  2373  061A  0836               	movf	main@status1^(0+512),w
  2374  061B  3840               	iorlw	64
  2375  061C  0023               	movlb	3	; select bank3
  2376  061D  00EA               	movwf	??_main^(0+384)
  2377  061E  086A               	movf	??_main^(0+384),w
  2378  061F  0022               	movlb	2	; select bank2
  2379  0620  00E1               	movwf	WriteRegister@val^(0+256)
  2380  0621  3007               	movlw	7
  2381  0622  3197  279B  3185   	fcall	_WriteRegister
  2382                           
  2383                           ;main.c: 73: if (status1 & (1<<5)) {
  2384  0625  0024               	movlb	4	; select bank4
  2385  0626  1EB6               	btfss	main@status1^(0+512),5
  2386  0627  2E33               	goto	l4709
  2387                           
  2388                           ;main.c: 74: WriteRegister(0x07,(status1 | 0x20));
  2389  0628  0836               	movf	main@status1^(0+512),w
  2390  0629  3820               	iorlw	32
  2391  062A  0023               	movlb	3	; select bank3
  2392  062B  00EA               	movwf	??_main^(0+384)
  2393  062C  086A               	movf	??_main^(0+384),w
  2394  062D  0022               	movlb	2	; select bank2
  2395  062E  00E1               	movwf	WriteRegister@val^(0+256)
  2396  062F  3007               	movlw	7
  2397  0630  3197  279B  3185   	fcall	_WriteRegister
  2398  0633                     l4709:	
  2399                           
  2400                           ;main.c: 75: }
  2401                           ;main.c: 77: ReadPayload(2, podatak);
  2402  0633  3037               	movlw	(low (main@podatak| (0+512)))& (0+255)
  2403  0634  0023               	movlb	3	; select bank3
  2404  0635  00EA               	movwf	??_main^(0+384)
  2405  0636  086A               	movf	??_main^(0+384),w
  2406  0637  0022               	movlb	2	; select bank2
  2407  0638  00E1               	movwf	ReadPayload@data^(0+256)
  2408  0639  3002               	movlw	2
  2409  063A  3189  2161  3185   	fcall	_ReadPayload
  2410                           
  2411                           ;main.c: 79: uint8_t nino1 = podatak[0];
  2412  063D  0024               	movlb	4	; select bank4
  2413  063E  0837               	movf	main@podatak^(0+512),w
  2414  063F  0023               	movlb	3	; select bank3
  2415  0640  00EA               	movwf	??_main^(0+384)
  2416  0641  086A               	movf	??_main^(0+384),w
  2417  0642  0024               	movlb	4	; select bank4
  2418  0643  00B4               	movwf	main@nino1^(0+512)
  2419                           
  2420                           ;main.c: 80: uint8_t nino2 = podatak[1];
  2421  0644  0838               	movf	(main@podatak^(0+512)+1),w
  2422  0645  0023               	movlb	3	; select bank3
  2423  0646  00EA               	movwf	??_main^(0+384)
  2424  0647  086A               	movf	??_main^(0+384),w
  2425  0648  0024               	movlb	4	; select bank4
  2426  0649  00B5               	movwf	main@nino2^(0+512)
  2427                           
  2428                           ;main.c: 83: nino2 =5;
  2429  064A  3005               	movlw	5
  2430  064B  0023               	movlb	3	; select bank3
  2431  064C  00EA               	movwf	??_main^(0+384)
  2432  064D  086A               	movf	??_main^(0+384),w
  2433  064E  0024               	movlb	4	; select bank4
  2434  064F  00B5               	movwf	main@nino2^(0+512)
  2435  0650                     l4717:	
  2436                           
  2437                           ;main.c: 84: }
  2438                           ;main.c: 86: if( (cdc_trf_state == 0) == 1){
  2439  0650  0023               	movlb	3	; select bank3
  2440  0651  0855               	movf	_cdc_trf_state^(0+384),w
  2441  0652  1D03               	btfss	3,2
  2442  0653  2E64               	goto	l4725
  2443                           
  2444                           ;main.c: 87: if(podatak[0]!=0 | podatak[1]!=0)
  2445  0654  0024               	movlb	4	; select bank4
  2446  0655  0837               	movf	main@podatak^(0+512),w
  2447  0656  1903               	btfsc	3,2
  2448  0657  0838               	movf	(main@podatak^(0+512)+1),w
  2449  0658  1903               	btfsc	3,2
  2450  0659  2E64               	goto	l4725
  2451                           
  2452                           ;main.c: 88: putUSBUSART(podatak,2);
  2453  065A  3002               	movlw	2
  2454  065B  0023               	movlb	3	; select bank3
  2455  065C  00EA               	movwf	??_main^(0+384)
  2456  065D  086A               	movf	??_main^(0+384),w
  2457  065E  0022               	movlb	2	; select bank2
  2458  065F  00E0               	movwf	putUSBUSART@length^(0+256)
  2459  0660  3037               	movlw	(low (main@podatak| (0+512)))& (0+255)
  2460  0661  3188  204D  3185   	fcall	_putUSBUSART
  2461  0664                     l4725:	
  2462                           
  2463                           ;main.c: 90: }
  2464                           ;main.c: 91: CDCTxService();
  2465  0664  3183  23D2  3185   	fcall	_CDCTxService
  2466  0667  2E04               	goto	l4693
  2467  0668                     __end_of_main:	
  2468                           
  2469                           	psect	text1
  2470  084D                     __ptext1:	
  2471 ;; *************** function _putUSBUSART *****************
  2472 ;; Defined at:
  2473 ;;		line 556 in file "../lib/usb/src/usb_device_cdc.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;  data            1    wreg     PTR unsigned char 
  2476 ;;		 -> main@podatak(2), 
  2477 ;;  length          1    0[BANK2 ] unsigned char 
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;  data            1    2[BANK2 ] PTR unsigned char 
  2480 ;;		 -> main@podatak(2), 
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  1    wreg      void 
  2483 ;; Registers used:
  2484 ;;		wreg, status,2, status,0
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2490 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2491 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2492 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2493 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  2494 ;;Total ram usage:        3 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; Hardware stack levels required when called:   10
  2497 ;; This function calls:
  2498 ;;		Nothing
  2499 ;; This function is called by:
  2500 ;;		_main
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           
  2505                           ;psect for function _putUSBUSART
  2506  084D                     _putUSBUSART:	
  2507                           
  2508                           ;incstack = 0
  2509                           ; Regs used in _putUSBUSART: [wreg+status,2+status,0]
  2510                           ;putUSBUSART@data stored from wreg
  2511  084D  0022               	movlb	2	; select bank2
  2512  084E  00E2               	movwf	putUSBUSART@data^(0+256)
  2513                           
  2514                           ;usb_device_cdc.c: 581: {PIE2bits.USBIE = 0;};
  2515  084F  0021               	movlb	1	; select bank1
  2516  0850  1112               	bcf	18,2	;volatile
  2517                           
  2518                           ;usb_device_cdc.c: 582: if(cdc_trf_state == 0)
  2519  0851  0023               	movlb	3	; select bank3
  2520  0852  0855               	movf	_cdc_trf_state^(0+384),w
  2521  0853  1D03               	btfss	3,2
  2522  0854  2865               	goto	l4485
  2523                           
  2524                           ;usb_device_cdc.c: 583: {
  2525                           ;usb_device_cdc.c: 584: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  2526  0855  0022               	movlb	2	; select bank2
  2527  0856  0862               	movf	putUSBUSART@data^(0+256),w
  2528  0857  00E1               	movwf	??_putUSBUSART^(0+256)
  2529  0858  0861               	movf	??_putUSBUSART^(0+256),w
  2530  0859  0023               	movlb	3	; select bank3
  2531  085A  00C7               	movwf	_pCDCSrc^(0+384)
  2532  085B  0022               	movlb	2	; select bank2
  2533  085C  0860               	movf	putUSBUSART@length^(0+256),w
  2534  085D  00E1               	movwf	??_putUSBUSART^(0+256)
  2535  085E  0861               	movf	??_putUSBUSART^(0+256),w
  2536  085F  0023               	movlb	3	; select bank3
  2537  0860  00D6               	movwf	_cdc_tx_len^(0+384)
  2538  0861  01D3               	clrf	_cdc_mem_type^(0+384)
  2539  0862  0AD3               	incf	_cdc_mem_type^(0+384),f
  2540  0863  01D5               	clrf	_cdc_trf_state^(0+384)
  2541  0864  0AD5               	incf	_cdc_trf_state^(0+384),f
  2542  0865                     l4485:	
  2543                           
  2544                           ;usb_device_cdc.c: 585: }
  2545                           ;usb_device_cdc.c: 586: {PIE2bits.USBIE = 1;};
  2546  0865  0021               	movlb	1	; select bank1
  2547  0866  1512               	bsf	18,2	;volatile
  2548  0867  0008               	return
  2549  0868                     __end_of_putUSBUSART:	
  2550                           
  2551                           	psect	text2
  2552  0F73                     __ptext2:	
  2553 ;; *************** function _nRF_Setup *****************
  2554 ;; Defined at:
  2555 ;;		line 15 in file "nRF24L01P.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;		None
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;  RXTX_ADDR       5    0[BANK3 ] unsigned char [5]
  2560 ;;  status          1    0        unsigned char 
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  2  590[None  ] int 
  2563 ;; Registers used:
  2564 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2571 ;;      Locals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0
  2572 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2573 ;;      Totals:         0       0       0       2       5       0       0       0       0       0       0       0       
      +0       0
  2574 ;;Total ram usage:        7 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; Hardware stack levels required when called:   12
  2577 ;; This function calls:
  2578 ;;		_WriteAddress
  2579 ;;		_WriteCommand
  2580 ;;		_WriteRegister
  2581 ;; This function is called by:
  2582 ;;		_main
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           
  2587                           ;psect for function _nRF_Setup
  2588  0F73                     _nRF_Setup:	
  2589                           
  2590                           ;nRF24L01P.c: 18: uint8_t RXTX_ADDR[5];
  2591                           ;nRF24L01P.c: 19: RXTX_ADDR[4] = 0xAB;
  2592                           
  2593                           ;incstack = 0
  2594                           ; Regs used in _nRF_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2595  0F73  30AB               	movlw	171
  2596  0F74  0022               	movlb	2	; select bank2
  2597  0F75  00E7               	movwf	??_nRF_Setup^(0+256)
  2598  0F76  0867               	movf	??_nRF_Setup^(0+256),w
  2599  0F77  0023               	movlb	3	; select bank3
  2600  0F78  00E9               	movwf	(nRF_Setup@RXTX_ADDR^(0+384)+4)
  2601                           
  2602                           ;nRF24L01P.c: 20: RXTX_ADDR[3] = 0xAC;
  2603  0F79  30AC               	movlw	172
  2604  0F7A  0022               	movlb	2	; select bank2
  2605  0F7B  00E7               	movwf	??_nRF_Setup^(0+256)
  2606  0F7C  0867               	movf	??_nRF_Setup^(0+256),w
  2607  0F7D  0023               	movlb	3	; select bank3
  2608  0F7E  00E8               	movwf	(nRF_Setup@RXTX_ADDR^(0+384)+3)
  2609                           
  2610                           ;nRF24L01P.c: 21: RXTX_ADDR[2] = 0xAD;
  2611  0F7F  30AD               	movlw	173
  2612  0F80  0022               	movlb	2	; select bank2
  2613  0F81  00E7               	movwf	??_nRF_Setup^(0+256)
  2614  0F82  0867               	movf	??_nRF_Setup^(0+256),w
  2615  0F83  0023               	movlb	3	; select bank3
  2616  0F84  00E7               	movwf	(nRF_Setup@RXTX_ADDR^(0+384)+2)
  2617                           
  2618                           ;nRF24L01P.c: 22: RXTX_ADDR[1] = 0xAE;
  2619  0F85  30AE               	movlw	174
  2620  0F86  0022               	movlb	2	; select bank2
  2621  0F87  00E7               	movwf	??_nRF_Setup^(0+256)
  2622  0F88  0867               	movf	??_nRF_Setup^(0+256),w
  2623  0F89  0023               	movlb	3	; select bank3
  2624  0F8A  00E6               	movwf	(nRF_Setup@RXTX_ADDR^(0+384)+1)
  2625                           
  2626                           ;nRF24L01P.c: 23: RXTX_ADDR[0] = 0xAF;
  2627  0F8B  30AF               	movlw	175
  2628  0F8C  0022               	movlb	2	; select bank2
  2629  0F8D  00E7               	movwf	??_nRF_Setup^(0+256)
  2630  0F8E  0867               	movf	??_nRF_Setup^(0+256),w
  2631  0F8F  0023               	movlb	3	; select bank3
  2632  0F90  00E5               	movwf	nRF_Setup@RXTX_ADDR^(0+384)
  2633                           
  2634                           ;nRF24L01P.c: 25: LATAbits.LATA4 = 1;
  2635  0F91  0022               	movlb	2	; select bank2
  2636  0F92  160C               	bsf	12,4	;volatile
  2637                           
  2638                           ;nRF24L01P.c: 26: uint8_t status;
  2639                           ;nRF24L01P.c: 32: WriteRegister(0x01, 0x01);
  2640  0F93  01E1               	clrf	WriteRegister@val^(0+256)
  2641  0F94  0AE1               	incf	WriteRegister@val^(0+256),f
  2642  0F95  3001               	movlw	1
  2643  0F96  3197  279B  318F   	fcall	_WriteRegister
  2644                           
  2645                           ;nRF24L01P.c: 35: WriteRegister(0x02, 0x01);
  2646  0F99  0022               	movlb	2	; select bank2
  2647  0F9A  01E1               	clrf	WriteRegister@val^(0+256)
  2648  0F9B  0AE1               	incf	WriteRegister@val^(0+256),f
  2649  0F9C  3002               	movlw	2
  2650  0F9D  3197  279B  318F   	fcall	_WriteRegister
  2651                           
  2652                           ;nRF24L01P.c: 37: WriteRegister(0x03, 0x03);
  2653  0FA0  3003               	movlw	3
  2654  0FA1  0022               	movlb	2	; select bank2
  2655  0FA2  00E7               	movwf	??_nRF_Setup^(0+256)
  2656  0FA3  0867               	movf	??_nRF_Setup^(0+256),w
  2657  0FA4  00E1               	movwf	WriteRegister@val^(0+256)
  2658  0FA5  3003               	movlw	3
  2659  0FA6  3197  279B  318F   	fcall	_WriteRegister
  2660                           
  2661                           ;nRF24L01P.c: 43: WriteRegister(0x04, 0x2F);
  2662  0FA9  302F               	movlw	47
  2663  0FAA  0022               	movlb	2	; select bank2
  2664  0FAB  00E7               	movwf	??_nRF_Setup^(0+256)
  2665  0FAC  0867               	movf	??_nRF_Setup^(0+256),w
  2666  0FAD  00E1               	movwf	WriteRegister@val^(0+256)
  2667  0FAE  3004               	movlw	4
  2668  0FAF  3197  279B  318F   	fcall	_WriteRegister
  2669                           
  2670                           ;nRF24L01P.c: 46: WriteRegister(0x05, 0x14);
  2671  0FB2  3014               	movlw	20
  2672  0FB3  0022               	movlb	2	; select bank2
  2673  0FB4  00E7               	movwf	??_nRF_Setup^(0+256)
  2674  0FB5  0867               	movf	??_nRF_Setup^(0+256),w
  2675  0FB6  00E1               	movwf	WriteRegister@val^(0+256)
  2676  0FB7  3005               	movlw	5
  2677  0FB8  3197  279B  318F   	fcall	_WriteRegister
  2678                           
  2679                           ;nRF24L01P.c: 48: WriteRegister(0x06, 0x06);
  2680  0FBB  3006               	movlw	6
  2681  0FBC  0022               	movlb	2	; select bank2
  2682  0FBD  00E7               	movwf	??_nRF_Setup^(0+256)
  2683  0FBE  0867               	movf	??_nRF_Setup^(0+256),w
  2684  0FBF  00E1               	movwf	WriteRegister@val^(0+256)
  2685  0FC0  3006               	movlw	6
  2686  0FC1  3197  279B  318F   	fcall	_WriteRegister
  2687                           
  2688                           ;nRF24L01P.c: 53: WriteRegister(0x11, 0x02);
  2689  0FC4  3002               	movlw	2
  2690  0FC5  0022               	movlb	2	; select bank2
  2691  0FC6  00E7               	movwf	??_nRF_Setup^(0+256)
  2692  0FC7  0867               	movf	??_nRF_Setup^(0+256),w
  2693  0FC8  00E1               	movwf	WriteRegister@val^(0+256)
  2694  0FC9  3011               	movlw	17
  2695  0FCA  3197  279B  318F   	fcall	_WriteRegister
  2696                           
  2697                           ;nRF24L01P.c: 54: WriteRegister(0x00,0x7B);
  2698  0FCD  307B               	movlw	123
  2699  0FCE  0022               	movlb	2	; select bank2
  2700  0FCF  00E7               	movwf	??_nRF_Setup^(0+256)
  2701  0FD0  0867               	movf	??_nRF_Setup^(0+256),w
  2702  0FD1  00E1               	movwf	WriteRegister@val^(0+256)
  2703  0FD2  3000               	movlw	0
  2704  0FD3  3197  279B  318F   	fcall	_WriteRegister
  2705                           
  2706                           ;nRF24L01P.c: 55: WriteRegister(0x07,0x70);
  2707  0FD6  3070               	movlw	112
  2708  0FD7  0022               	movlb	2	; select bank2
  2709  0FD8  00E7               	movwf	??_nRF_Setup^(0+256)
  2710  0FD9  0867               	movf	??_nRF_Setup^(0+256),w
  2711  0FDA  00E1               	movwf	WriteRegister@val^(0+256)
  2712  0FDB  3007               	movlw	7
  2713  0FDC  3197  279B  318F   	fcall	_WriteRegister
  2714                           
  2715                           ;nRF24L01P.c: 56: WriteAddress(0x0A, 5, RXTX_ADDR);
  2716  0FDF  3005               	movlw	5
  2717  0FE0  0022               	movlb	2	; select bank2
  2718  0FE1  00E7               	movwf	??_nRF_Setup^(0+256)
  2719  0FE2  0867               	movf	??_nRF_Setup^(0+256),w
  2720  0FE3  00E1               	movwf	WriteAddress@num^(0+256)
  2721  0FE4  30E5               	movlw	(low (nRF_Setup@RXTX_ADDR| (0+256)))& (0+255)
  2722  0FE5  00E8               	movwf	(??_nRF_Setup+1)^(0+256)
  2723  0FE6  0868               	movf	(??_nRF_Setup+1)^(0+256),w
  2724  0FE7  00E2               	movwf	WriteAddress@addr^(0+256)
  2725  0FE8  300A               	movlw	10
  2726  0FE9  3189  2136  318F   	fcall	_WriteAddress
  2727                           
  2728                           ;nRF24L01P.c: 71: WriteCommand(0xE2);
  2729  0FEC  30E2               	movlw	226
  2730  0FED  3197  2792  318F   	fcall	_WriteCommand
  2731                           
  2732                           ;nRF24L01P.c: 72: WriteCommand(0xE1);
  2733  0FF0  30E1               	movlw	225
  2734  0FF1  3197  2792  318F   	fcall	_WriteCommand
  2735                           
  2736                           ;nRF24L01P.c: 73: LATAbits.LATA4 = 1;
  2737  0FF4  0022               	movlb	2	; select bank2
  2738  0FF5  160C               	bsf	12,4	;volatile
  2739                           
  2740                           ;nRF24L01P.c: 74: _delay((unsigned long)((230)*(48000000L/4000000.0)));
  2741  0FF6  3004               	movlw	4
  2742  0FF7  00E8               	movwf	(??_nRF_Setup^(0+256)+1)
  2743  0FF8  3094               	movlw	148
  2744  0FF9  00E7               	movwf	??_nRF_Setup^(0+256)
  2745  0FFA                     u4187:	
  2746  0FFA  0BE7               	decfsz	??_nRF_Setup^(0+256),f
  2747  0FFB  2FFA               	goto	u4187
  2748  0FFC  0BE8               	decfsz	(??_nRF_Setup^(0+256)+1),f
  2749  0FFD  2FFA               	goto	u4187
  2750  0FFE  0000               	nop
  2751  0FFF  0008               	return
  2752  1000                     __end_of_nRF_Setup:	
  2753                           
  2754                           	psect	text3
  2755  179B                     __ptext3:	
  2756 ;; *************** function _WriteRegister *****************
  2757 ;; Defined at:
  2758 ;;		line 84 in file "nRF24L01P.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;  reg             1    wreg     unsigned char 
  2761 ;;  val             1    1[BANK2 ] unsigned char 
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;  reg             1    2[BANK2 ] unsigned char 
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  1    wreg      void 
  2766 ;; Registers used:
  2767 ;;		wreg, status,2, status,0, pclath, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2773 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2774 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2776 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2777 ;;Total ram usage:        2 bytes
  2778 ;; Hardware stack levels used:    1
  2779 ;; Hardware stack levels required when called:   11
  2780 ;; This function calls:
  2781 ;;		_SPI_transfer
  2782 ;; This function is called by:
  2783 ;;		_main
  2784 ;;		_nRF_Setup
  2785 ;;		_FlushTXRX
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           
  2790                           ;psect for function _WriteRegister
  2791  179B                     _WriteRegister:	
  2792                           
  2793                           ;incstack = 0
  2794                           ; Regs used in _WriteRegister: [wreg+status,2+status,0+pclath+cstack]
  2795                           ;WriteRegister@reg stored from wreg
  2796  179B  0022               	movlb	2	; select bank2
  2797  179C  00E2               	movwf	WriteRegister@reg^(0+256)
  2798                           
  2799                           ;nRF24L01P.c: 86: LATCbits.LATC6 = 0;
  2800  179D  130E               	bcf	14,6	;volatile
  2801                           
  2802                           ;nRF24L01P.c: 88: SPI_transfer(0x20 | reg);
  2803  179E  0862               	movf	WriteRegister@reg^(0+256),w
  2804  179F  3820               	iorlw	32
  2805  17A0  3197  2789  3197   	fcall	_SPI_transfer
  2806                           
  2807                           ;nRF24L01P.c: 89: SPI_transfer(val);
  2808  17A3  0022               	movlb	2	; select bank2
  2809  17A4  0861               	movf	WriteRegister@val^(0+256),w
  2810  17A5  3197  2789         	fcall	_SPI_transfer
  2811                           
  2812                           ;nRF24L01P.c: 90: LATCbits.LATC6 = 1;
  2813  17A7  0022               	movlb	2	; select bank2
  2814  17A8  170E               	bsf	14,6	;volatile
  2815  17A9  0008               	return
  2816  17AA                     __end_of_WriteRegister:	
  2817                           
  2818                           	psect	text4
  2819  1792                     __ptext4:	
  2820 ;; *************** function _WriteCommand *****************
  2821 ;; Defined at:
  2822 ;;		line 130 in file "nRF24L01P.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;  command         1    wreg     unsigned char 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  command         1    1[BANK2 ] unsigned char 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg, status,2, status,0, pclath, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2837 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2839 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2840 ;;Total ram usage:        1 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:   11
  2843 ;; This function calls:
  2844 ;;		_SPI_transfer
  2845 ;; This function is called by:
  2846 ;;		_nRF_Setup
  2847 ;;		_FlushTXRX
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           
  2852                           ;psect for function _WriteCommand
  2853  1792                     _WriteCommand:	
  2854                           
  2855                           ;incstack = 0
  2856                           ; Regs used in _WriteCommand: [wreg+status,2+status,0+pclath+cstack]
  2857                           ;WriteCommand@command stored from wreg
  2858  1792  0022               	movlb	2	; select bank2
  2859  1793  00E1               	movwf	WriteCommand@command^(0+256)
  2860                           
  2861                           ;nRF24L01P.c: 132: LATCbits.LATC6 = 0;
  2862  1794  130E               	bcf	14,6	;volatile
  2863                           
  2864                           ;nRF24L01P.c: 133: SPI_transfer(command);
  2865  1795  0861               	movf	WriteCommand@command^(0+256),w
  2866  1796  3197  2789         	fcall	_SPI_transfer
  2867                           
  2868                           ;nRF24L01P.c: 134: LATCbits.LATC6 = 1;
  2869  1798  0022               	movlb	2	; select bank2
  2870  1799  170E               	bsf	14,6	;volatile
  2871  179A  0008               	return
  2872  179B                     __end_of_WriteCommand:	
  2873                           
  2874                           	psect	text5
  2875  0936                     __ptext5:	
  2876 ;; *************** function _WriteAddress *****************
  2877 ;; Defined at:
  2878 ;;		line 106 in file "nRF24L01P.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;  reg             1    wreg     unsigned char 
  2881 ;;  num             1    1[BANK2 ] unsigned char 
  2882 ;;  addr            1    2[BANK2 ] PTR unsigned char 
  2883 ;;		 -> nRF_Setup@RXTX_ADDR(5), 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  reg             1    4[BANK2 ] unsigned char 
  2886 ;;  i               2    5[BANK2 ] int 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      void 
  2889 ;; Registers used:
  2890 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2896 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  2897 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  2898 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2899 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  2900 ;;Total ram usage:        6 bytes
  2901 ;; Hardware stack levels used:    1
  2902 ;; Hardware stack levels required when called:   11
  2903 ;; This function calls:
  2904 ;;		_SPI_transfer
  2905 ;; This function is called by:
  2906 ;;		_nRF_Setup
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           
  2911                           ;psect for function _WriteAddress
  2912  0936                     _WriteAddress:	
  2913                           
  2914                           ;incstack = 0
  2915                           ; Regs used in _WriteAddress: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2916                           ;WriteAddress@reg stored from wreg
  2917  0936  0022               	movlb	2	; select bank2
  2918  0937  00E4               	movwf	WriteAddress@reg^(0+256)
  2919                           
  2920                           ;nRF24L01P.c: 108: LATCbits.LATC6 = 0;
  2921  0938  130E               	bcf	14,6	;volatile
  2922                           
  2923                           ;nRF24L01P.c: 109: SPI_transfer(0x20 | reg);
  2924  0939  0864               	movf	WriteAddress@reg^(0+256),w
  2925  093A  3820               	iorlw	32
  2926  093B  3197  2789  3189   	fcall	_SPI_transfer
  2927                           
  2928                           ;nRF24L01P.c: 110: for (int i=0; i<num; i++)
  2929  093E  0022               	movlb	2	; select bank2
  2930  093F  01E5               	clrf	WriteAddress@i^(0+256)
  2931  0940  01E6               	clrf	(WriteAddress@i+1)^(0+256)
  2932  0941                     l4337:	
  2933  0941  0866               	movf	(WriteAddress@i+1)^(0+256),w
  2934  0942  3A80               	xorlw	128
  2935  0943  00E3               	movwf	??_WriteAddress^(0+256)
  2936  0944  3080               	movlw	128
  2937  0945  0263               	subwf	??_WriteAddress^(0+256),w
  2938  0946  1D03               	skipz
  2939  0947  294A               	goto	u3815
  2940  0948  0861               	movf	WriteAddress@num^(0+256),w
  2941  0949  0265               	subwf	WriteAddress@i^(0+256),w
  2942  094A                     u3815:	
  2943  094A  1803               	btfsc	3,0
  2944  094B  295E               	goto	l651
  2945                           
  2946                           ;nRF24L01P.c: 111: SPI_transfer(addr[i]);
  2947  094C  0022               	movlb	2	; select bank2
  2948  094D  0865               	movf	WriteAddress@i^(0+256),w
  2949  094E  0762               	addwf	WriteAddress@addr^(0+256),w
  2950  094F  00E3               	movwf	??_WriteAddress^(0+256)
  2951  0950  0863               	movf	??_WriteAddress^(0+256),w
  2952  0951  0086               	movwf	6
  2953  0952  3001               	movlw	1	; select bank2/3
  2954  0953  0087               	movwf	7
  2955  0954  0801               	movf	1,w
  2956  0955  3197  2789  3189   	fcall	_SPI_transfer
  2957  0958  3001               	movlw	1
  2958  0959  0022               	movlb	2	; select bank2
  2959  095A  07E5               	addwf	WriteAddress@i^(0+256),f
  2960  095B  3000               	movlw	0
  2961  095C  3DE6               	addwfc	(WriteAddress@i+1)^(0+256),f
  2962  095D  2941               	goto	l4337
  2963  095E                     l651:	
  2964                           
  2965                           ;nRF24L01P.c: 112: LATCbits.LATC6 = 1;
  2966  095E  0022               	movlb	2	; select bank2
  2967  095F  170E               	bsf	14,6	;volatile
  2968  0960  0008               	return
  2969  0961                     __end_of_WriteAddress:	
  2970                           
  2971                           	psect	text6
  2972  031A                     __ptext6:	
  2973 ;; *************** function _USBDeviceInit *****************
  2974 ;; Defined at:
  2975 ;;		line 277 in file "../lib/usb/src/usb_device.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;		None
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  p               2    1[BANK2 ] PTR unsigned char 
  2980 ;;		 -> UEP1(1), 
  2981 ;;  i               1    3[BANK2 ] unsigned char 
  2982 ;;  i               1    4[BANK2 ] unsigned char 
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      void 
  2985 ;; Registers used:
  2986 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2993 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2994 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  2995 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  2996 ;;Total ram usage:        5 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; Hardware stack levels required when called:   10
  2999 ;; This function calls:
  3000 ;;		Nothing
  3001 ;; This function is called by:
  3002 ;;		_main
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           
  3007                           ;psect for function _USBDeviceInit
  3008  031A                     _USBDeviceInit:	
  3009                           
  3010                           ;usb_device.c: 279: uint8_t i;
  3011                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  3012                           
  3013                           ;incstack = 0
  3014                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  3015  031A  0021               	movlb	1	; select bank1
  3016  031B  1112               	bcf	18,2	;volatile
  3017                           
  3018                           ;usb_device.c: 285: ;
  3019                           ;usb_device.c: 288: {UEIR = 0;};
  3020  031C  003D               	movlb	29	; select bank29
  3021  031D  0193               	clrf	19	;volatile
  3022                           
  3023                           ;usb_device.c: 291: {UIR = 0;};
  3024  031E  0190               	clrf	16	;volatile
  3025                           
  3026                           ;usb_device.c: 294: UEP0 = 0;
  3027  031F  0198               	clrf	24	;volatile
  3028                           
  3029                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  3030  0320  300E               	movlw	14
  3031  0321  0022               	movlb	2	; select bank2
  3032  0322  00E2               	movwf	(USBDeviceInit@p+1)^(0+256)
  3033  0323  3099               	movlw	153
  3034  0324  00E1               	movwf	USBDeviceInit@p^(0+256)
  3035  0325  01E3               	clrf	USBDeviceInit@i_821^(0+256)
  3036  0326  3002               	movlw	2
  3037  0327  0263               	subwf	USBDeviceInit@i_821^(0+256),w
  3038  0328  1803               	btfsc	3,0
  3039  0329  2B3B               	goto	l4389
  3040  032A                     l4381:	
  3041  032A  0861               	movf	USBDeviceInit@p^(0+256),w
  3042  032B  0086               	movwf	6
  3043  032C  0862               	movf	(USBDeviceInit@p+1)^(0+256),w
  3044  032D  0087               	movwf	7
  3045  032E  0181               	clrf	1
  3046  032F  3001               	movlw	1
  3047  0330  07E1               	addwf	USBDeviceInit@p^(0+256),f
  3048  0331  3000               	movlw	0
  3049  0332  3DE2               	addwfc	(USBDeviceInit@p+1)^(0+256),f
  3050  0333  3001               	movlw	1
  3051  0334  00E0               	movwf	??_USBDeviceInit^(0+256)
  3052  0335  0860               	movf	??_USBDeviceInit^(0+256),w
  3053  0336  07E3               	addwf	USBDeviceInit@i_821^(0+256),f
  3054  0337  3002               	movlw	2
  3055  0338  0263               	subwf	USBDeviceInit@i_821^(0+256),w
  3056  0339  1C03               	skipc
  3057  033A  2B2A               	goto	l4381
  3058  033B                     l4389:	
  3059                           
  3060                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  3061  033B  3016               	movlw	22
  3062  033C  003D               	movlb	29	; select bank29
  3063  033D  0091               	movwf	17	;volatile
  3064  033E  309F               	movlw	159
  3065  033F  0097               	movwf	23	;volatile
  3066  0340  307B               	movlw	123
  3067  0341  0092               	movwf	18	;volatile
  3068                           
  3069                           ;usb_device.c: 301: ;
  3070                           ;usb_device.c: 304: ;
  3071                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  3072  0342  0022               	movlb	2	; select bank2
  3073  0343  01E4               	clrf	USBDeviceInit@i^(0+256)
  3074  0344  300C               	movlw	12
  3075  0345  0264               	subwf	USBDeviceInit@i^(0+256),w
  3076  0346  1803               	btfsc	3,0
  3077  0347  2B61               	goto	l173
  3078  0348                     l4397:	
  3079                           
  3080                           ;usb_device.c: 308: {
  3081                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  3082  0348  0864               	movf	USBDeviceInit@i^(0+256),w
  3083  0349  00E0               	movwf	??_USBDeviceInit^(0+256)
  3084  034A  3001               	movlw	1
  3085  034B                     u3855:	
  3086  034B  35E0               	lslf	??_USBDeviceInit^(0+256),f
  3087  034C  3EFF               	addlw	-1
  3088  034D  1D03               	skipz
  3089  034E  2B4B               	goto	u3855
  3090  034F  3560               	lslf	??_USBDeviceInit^(0+256),w
  3091  0350  3E20               	addlw	32
  3092  0351  0086               	movwf	6
  3093  0352  0187               	clrf	7
  3094  0353  3000               	movlw	0
  3095  0354  3FC0               	movwi [0]fsr1
  3096  0355  3000               	movlw	0
  3097  0356  3FC1               	movwi [1]fsr1
  3098  0357  3FC2               	movwi [2]fsr1
  3099  0358  3FC3               	movwi [3]fsr1
  3100  0359  3001               	movlw	1
  3101  035A  00E0               	movwf	??_USBDeviceInit^(0+256)
  3102  035B  0860               	movf	??_USBDeviceInit^(0+256),w
  3103  035C  07E4               	addwf	USBDeviceInit@i^(0+256),f
  3104  035D  300C               	movlw	12
  3105  035E  0264               	subwf	USBDeviceInit@i^(0+256),w
  3106  035F  1C03               	skipc
  3107  0360  2B48               	goto	l4397
  3108  0361                     l173:	
  3109                           
  3110                           ;usb_device.c: 310: }
  3111                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  3112  0361  003D               	movlb	29	; select bank29
  3113  0362  170E               	bsf	14,6	;volatile
  3114                           
  3115                           ;usb_device.c: 316: UADDR = 0x00;
  3116  0363  0196               	clrf	22	;volatile
  3117                           
  3118                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  3119  0364  120E               	bcf	14,4	;volatile
  3120                           
  3121                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  3122  0365  130E               	bcf	14,6	;volatile
  3123  0366                     l4409:	
  3124                           ;usb_device.c: 325: do
  3125                           
  3126                           
  3127                           ;usb_device.c: 326: {
  3128                           ;usb_device.c: 327: (UIR &= 0xF7);
  3129  0366  30F7               	movlw	247
  3130  0367  0022               	movlb	2	; select bank2
  3131  0368  00E0               	movwf	??_USBDeviceInit^(0+256)
  3132  0369  0860               	movf	??_USBDeviceInit^(0+256),w
  3133  036A  003D               	movlb	29	; select bank29
  3134  036B  0590               	andwf	16,f	;volatile
  3135                           
  3136                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  3137  036C  0022               	movlb	2	; select bank2
  3138  036D  01ED               	clrf	(_inPipes^(0+256)+2)	;volatile
  3139                           
  3140                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  3141  036E  0023               	movlb	3	; select bank3
  3142  036F  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  3143                           
  3144                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  3145  0370  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  3146  0371  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  3147                           
  3148                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  3149  0372  003D               	movlb	29	; select bank29
  3150  0373  1990               	btfsc	16,3	;volatile
  3151  0374  2B66               	goto	l4409
  3152                           
  3153                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  3154  0375  3001               	movlw	1
  3155  0376  0022               	movlb	2	; select bank2
  3156  0377  00E0               	movwf	??_USBDeviceInit^(0+256)
  3157  0378  0860               	movf	??_USBDeviceInit^(0+256),w
  3158  0379  0023               	movlb	3	; select bank3
  3159  037A  00CF               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  3160                           
  3161                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  3162  037B  3001               	movlw	1
  3163  037C  0022               	movlb	2	; select bank2
  3164  037D  00E0               	movwf	??_USBDeviceInit^(0+256)
  3165  037E  0860               	movf	??_USBDeviceInit^(0+256),w
  3166  037F  0023               	movlb	3	; select bank3
  3167  0380  00D0               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  3168                           
  3169                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  3170  0381  01CC               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  3171                           
  3172                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  3173  0382  01CD               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  3174                           
  3175                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  3176  0383  01CB               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  3177                           
  3178                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  3179  0384  0022               	movlb	2	; select bank2
  3180  0385  01E4               	clrf	USBDeviceInit@i^(0+256)
  3181  0386  3003               	movlw	3
  3182  0387  0264               	subwf	USBDeviceInit@i^(0+256),w
  3183  0388  1803               	btfsc	3,0
  3184  0389  2BAE               	goto	l4437
  3185  038A                     l4431:	
  3186                           
  3187                           ;usb_device.c: 346: {
  3188                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  3189  038A  3564               	lslf	USBDeviceInit@i^(0+256),w
  3190  038B  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  3191  038C  0086               	movwf	6
  3192  038D  3001               	movlw	1	; select bank3/4
  3193  038E  0087               	movwf	7
  3194  038F  3000               	movlw	0
  3195  0390  3FC0               	movwi [0]fsr1
  3196  0391  3FC1               	movwi [1]fsr1
  3197                           
  3198                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  3199  0392  3564               	lslf	USBDeviceInit@i^(0+256),w
  3200  0393  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  3201  0394  0086               	movwf	6
  3202  0395  3001               	movlw	1	; select bank3/4
  3203  0396  0087               	movwf	7
  3204  0397  3000               	movlw	0
  3205  0398  3FC0               	movwi [0]fsr1
  3206  0399  3FC1               	movwi [1]fsr1
  3207                           
  3208                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  3209  039A  0864               	movf	USBDeviceInit@i^(0+256),w
  3210  039B  3EBB               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  3211  039C  0086               	movwf	6
  3212  039D  3001               	movlw	1	; select bank3/4
  3213  039E  0087               	movwf	7
  3214  039F  0181               	clrf	1
  3215                           
  3216                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  3217  03A0  0864               	movf	USBDeviceInit@i^(0+256),w
  3218  03A1  3EBE               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  3219  03A2  0086               	movwf	6
  3220  03A3  3001               	movlw	1	; select bank3/4
  3221  03A4  0087               	movwf	7
  3222  03A5  0181               	clrf	1
  3223  03A6  3001               	movlw	1
  3224  03A7  00E0               	movwf	??_USBDeviceInit^(0+256)
  3225  03A8  0860               	movf	??_USBDeviceInit^(0+256),w
  3226  03A9  07E4               	addwf	USBDeviceInit@i^(0+256),f
  3227  03AA  3003               	movlw	3
  3228  03AB  0264               	subwf	USBDeviceInit@i^(0+256),w
  3229  03AC  1C03               	skipc
  3230  03AD  2B8A               	goto	l4431
  3231  03AE                     l4437:	
  3232                           
  3233                           ;usb_device.c: 351: }
  3234                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  3235  03AE  3028               	movlw	40
  3236  03AF  0023               	movlb	3	; select bank3
  3237  03B0  00A7               	movwf	_pBDTEntryIn^(0+384)
  3238  03B1  3000               	movlw	0
  3239  03B2  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  3240                           
  3241                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  3242  03B3  3016               	movlw	22
  3243  03B4  003D               	movlb	29	; select bank29
  3244  03B5  0098               	movwf	24	;volatile
  3245                           
  3246                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3247  03B6  3000               	movlw	0
  3248  03B7  0020               	movlb	0	; select bank0
  3249  03B8  00A3               	movwf	35	;volatile
  3250  03B9  3050               	movlw	80
  3251  03BA  00A2               	movwf	34	;volatile
  3252                           
  3253                           ;usb_device.c: 359: BDT[0].CNT = 8;
  3254  03BB  3008               	movlw	8
  3255  03BC  00A1               	movwf	33	;volatile
  3256                           
  3257                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  3258  03BD  3004               	movlw	4
  3259  03BE  0022               	movlb	2	; select bank2
  3260  03BF  00E0               	movwf	??_USBDeviceInit^(0+256)
  3261  03C0  0860               	movf	??_USBDeviceInit^(0+256),w
  3262  03C1  0020               	movlb	0	; select bank0
  3263  03C2  00A0               	movwf	32	;volatile
  3264                           
  3265                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  3266  03C3  17A0               	bsf	32,7	;volatile
  3267                           
  3268                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  3269  03C4  0023               	movlb	3	; select bank3
  3270  03C5  01E4               	clrf	_USBActiveConfiguration^(0+384)	;volatile
  3271                           
  3272                           ;usb_device.c: 366: USB1msTickCount = 0;
  3273  03C6  3000               	movlw	0
  3274  03C7  00BA               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
  3275  03C8  3000               	movlw	0
  3276  03C9  00B9               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
  3277  03CA  3000               	movlw	0
  3278  03CB  00B8               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
  3279  03CC  3000               	movlw	0
  3280  03CD  00B7               	movwf	_USB1msTickCount^(0+384)	;volatile
  3281                           
  3282                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  3283  03CE  01D2               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  3284                           
  3285                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  3286  03CF  0021               	movlb	1	; select bank1
  3287  03D0  01E2               	clrf	_USBDeviceState^(0+128)	;volatile
  3288  03D1  0008               	return
  3289  03D2                     __end_of_USBDeviceInit:	
  3290                           
  3291                           	psect	text7
  3292  0868                     __ptext7:	
  3293 ;; *************** function _USBDeviceAttach *****************
  3294 ;; Defined at:
  3295 ;;		line 1352 in file "../lib/usb/src/usb_device.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;		None
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2, status,0
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3311 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3312 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3313 ;;Total ram usage:        1 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; Hardware stack levels required when called:   10
  3316 ;; This function calls:
  3317 ;;		Nothing
  3318 ;; This function is called by:
  3319 ;;		_main
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           
  3324                           ;psect for function _USBDeviceAttach
  3325  0868                     _USBDeviceAttach:	
  3326                           
  3327                           ;usb_device.c: 1356: {
  3328                           ;usb_device.c: 1357: if(1 == 1)
  3329                           
  3330                           ;incstack = 0
  3331                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  3332  0868  0021               	movlb	1	; select bank1
  3333  0869  0862               	movf	_USBDeviceState^(0+128),w	;volatile
  3334  086A  1D03               	btfss	3,2
  3335  086B  0008               	return
  3336                           
  3337                           ;usb_device.c: 1358: {
  3338                           ;usb_device.c: 1360: UCON = 0;
  3339  086C  003D               	movlb	29	; select bank29
  3340  086D  018E               	clrf	14	;volatile
  3341                           
  3342                           ;usb_device.c: 1363: UIE = 0;
  3343  086E  0192               	clrf	18	;volatile
  3344                           
  3345                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  3346  086F  3016               	movlw	22
  3347  0870  0091               	movwf	17	;volatile
  3348  0871  309F               	movlw	159
  3349  0872  0097               	movwf	23	;volatile
  3350  0873  307B               	movlw	123
  3351  0874  0092               	movwf	18	;volatile
  3352                           
  3353                           ;usb_device.c: 1369: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  3354  0875  0021               	movlb	1	; select bank1
  3355  0876  1512               	bsf	18,2	;volatile
  3356  0877  170B               	bsf	11,6	;volatile
  3357  0878  178B               	bsf	11,7	;volatile
  3358  0879                     l233:	
  3359                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  3360                           
  3361  0879  003D               	movlb	29	; select bank29
  3362  087A  198E               	btfsc	14,3	;volatile
  3363  087B  287E               	goto	l4473
  3364  087C  158E               	bsf	14,3	;volatile
  3365  087D  2879               	goto	l233
  3366  087E                     l4473:	
  3367                           
  3368                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  3369  087E  3001               	movlw	1
  3370  087F  0022               	movlb	2	; select bank2
  3371  0880  00E0               	movwf	??_USBDeviceAttach^(0+256)
  3372  0881  0860               	movf	??_USBDeviceAttach^(0+256),w
  3373  0882  0021               	movlb	1	; select bank1
  3374  0883  00E2               	movwf	_USBDeviceState^(0+128)	;volatile
  3375  0884  0008               	return
  3376  0885                     __end_of_USBDeviceAttach:	
  3377                           
  3378                           	psect	text8
  3379  17E9                     __ptext8:	
  3380 ;; *************** function _SYSTEM_Initialize *****************
  3381 ;; Defined at:
  3382 ;;		line 82 in file "system.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  state           1    wreg     enum E2598
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;  state           1    0[BANK2 ] enum E2598
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      void 
  3389 ;; Registers used:
  3390 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3397 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3399 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3400 ;;Total ram usage:        1 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:   10
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_main
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           
  3411                           ;psect for function _SYSTEM_Initialize
  3412  17E9                     _SYSTEM_Initialize:	
  3413                           
  3414                           ;incstack = 0
  3415                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0]
  3416                           ;SYSTEM_Initialize@state stored from wreg
  3417  17E9  0022               	movlb	2	; select bank2
  3418  17EA  00E0               	movwf	SYSTEM_Initialize@state^(0+256)
  3419                           
  3420                           ;system.c: 84: switch(state)
  3421  17EB  2FF3               	goto	l4351
  3422  17EC                     l4347:	
  3423                           ;system.c: 85: {
  3424                           ;system.c: 86: case SYSTEM_STATE_USB_START:
  3425                           
  3426                           
  3427                           ;system.c: 90: OSCCON = 0xFC;
  3428  17EC  30FC               	movlw	252
  3429  17ED  0021               	movlb	1	; select bank1
  3430  17EE  0099               	movwf	25	;volatile
  3431                           
  3432                           ;system.c: 91: ACTCON = 0x90;
  3433  17EF  3090               	movlw	144
  3434  17F0  0027               	movlb	7	; select bank7
  3435  17F1  009B               	movwf	27	;volatile
  3436                           
  3437                           ;system.c: 102: }
  3438                           
  3439                           ;system.c: 101: break;
  3440                           
  3441                           ;system.c: 100: case SYSTEM_STATE_USB_RESUME:
  3442                           
  3443                           ;system.c: 98: break;
  3444                           
  3445                           ;system.c: 97: case SYSTEM_STATE_USB_SUSPEND:
  3446                           
  3447                           ;system.c: 95: break;
  3448  17F2  0008               	return
  3449  17F3                     l4351:	
  3450  17F3  0022               	movlb	2	; select bank2
  3451  17F4  0860               	movf	SYSTEM_Initialize@state^(0+256),w
  3452                           
  3453                           ; Switch size 1, requested type "space"
  3454                           ; Number of cases is 3, Range of values is 0 to 2
  3455                           ; switch strategies available:
  3456                           ; Name         Instructions Cycles
  3457                           ; simple_byte           10     6 (average)
  3458                           ; direct_byte           12     6 (fixed)
  3459                           ; jumptable            260     6 (fixed)
  3460                           ;	Chosen strategy is simple_byte
  3461  17F5  3A00               	xorlw	0	; case 0
  3462  17F6  1903               	skipnz
  3463  17F7  2FEC               	goto	l4347
  3464  17F8  3A01               	xorlw	1	; case 1
  3465  17F9  1903               	skipnz
  3466  17FA  2FFF               	goto	l565
  3467  17FB  3A03               	xorlw	3	; case 2
  3468  17FC  1903               	skipnz
  3469  17FD  2FFF               	goto	l565
  3470  17FE  2FFF               	goto	l565
  3471  17FF                     l565:	
  3472  17FF  0008               	return
  3473  1800                     __end_of_SYSTEM_Initialize:	
  3474                           
  3475                           	psect	text9
  3476  17D4                     __ptext9:	
  3477 ;; *************** function _SPI_init *****************
  3478 ;; Defined at:
  3479 ;;		line 13 in file "spi.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;		None
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;		None
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		wreg, status,2, status,0
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3497 ;;Total ram usage:        0 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; Hardware stack levels required when called:   10
  3500 ;; This function calls:
  3501 ;;		Nothing
  3502 ;; This function is called by:
  3503 ;;		_main
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507                           
  3508                           ;psect for function _SPI_init
  3509  17D4                     _SPI_init:	
  3510                           
  3511                           ;spi.c: 15: SSPCON1bits.SSPEN = 0;
  3512                           
  3513                           ;incstack = 0
  3514                           ; Regs used in _SPI_init: [wreg+status,2+status,0]
  3515  17D4  0024               	movlb	4	; select bank4
  3516  17D5  1295               	bcf	21,5	;volatile
  3517                           
  3518                           ;spi.c: 19: TRISBbits.TRISB6 = 0;
  3519  17D6  0021               	movlb	1	; select bank1
  3520  17D7  130D               	bcf	13,6	;volatile
  3521                           
  3522                           ;spi.c: 20: TRISBbits.TRISB4 = 1;
  3523  17D8  160D               	bsf	13,4	;volatile
  3524                           
  3525                           ;spi.c: 21: TRISCbits.TRISC7 = 0;
  3526  17D9  138E               	bcf	14,7	;volatile
  3527                           
  3528                           ;spi.c: 22: TRISCbits.TRISC6 = 0;
  3529  17DA  130E               	bcf	14,6	;volatile
  3530                           
  3531                           ;spi.c: 23: TRISAbits.TRISA4 = 0;
  3532  17DB  120C               	bcf	12,4	;volatile
  3533                           
  3534                           ;spi.c: 25: LATCbits.LATC6 = 1;
  3535  17DC  0022               	movlb	2	; select bank2
  3536  17DD  170E               	bsf	14,6	;volatile
  3537                           
  3538                           ;spi.c: 26: LATAbits.LATA4 = 0;
  3539  17DE  120C               	bcf	12,4	;volatile
  3540                           
  3541                           ;spi.c: 29: SSPSTATbits.CKE = 1;
  3542  17DF  0024               	movlb	4	; select bank4
  3543  17E0  1714               	bsf	20,6	;volatile
  3544                           
  3545                           ;spi.c: 31: SSPCON1bits.CKP = 0;
  3546  17E1  1215               	bcf	21,4	;volatile
  3547                           
  3548                           ;spi.c: 33: SSPSTATbits.SMP = 0;
  3549  17E2  1394               	bcf	20,7	;volatile
  3550                           
  3551                           ;spi.c: 39: SSPCON1bits.SSPM = 0b0010;
  3552  17E3  0815               	movf	21,w	;volatile
  3553  17E4  39F0               	andlw	-16
  3554  17E5  3802               	iorlw	2
  3555  17E6  0095               	movwf	21	;volatile
  3556                           
  3557                           ;spi.c: 40: SSPCON1bits.SSPEN = 1;
  3558  17E7  1695               	bsf	21,5	;volatile
  3559  17E8  0008               	return
  3560  17E9                     __end_of_SPI_init:	
  3561                           
  3562                           	psect	text10
  3563  17BF                     __ptext10:	
  3564 ;; *************** function _ReadRegister *****************
  3565 ;; Defined at:
  3566 ;;		line 115 in file "nRF24L01P.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;  reg             1    wreg     unsigned char 
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;  reg             1    2[BANK2 ] unsigned char 
  3571 ;;  temp1           1    4[BANK2 ] unsigned char 
  3572 ;;  temp            1    3[BANK2 ] unsigned char 
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  1    wreg      unsigned char 
  3575 ;; Registers used:
  3576 ;;		wreg, status,2, status,0, pclath, cstack
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3583 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3584 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3585 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3586 ;;Total ram usage:        4 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:   11
  3589 ;; This function calls:
  3590 ;;		_SPI_transfer
  3591 ;; This function is called by:
  3592 ;;		_main
  3593 ;;		_WriteRegisterCHK
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           
  3598                           ;psect for function _ReadRegister
  3599  17BF                     _ReadRegister:	
  3600                           
  3601                           ;incstack = 0
  3602                           ; Regs used in _ReadRegister: [wreg+status,2+status,0+pclath+cstack]
  3603                           ;ReadRegister@reg stored from wreg
  3604  17BF  0022               	movlb	2	; select bank2
  3605  17C0  00E2               	movwf	ReadRegister@reg^(0+256)
  3606                           
  3607                           ;nRF24L01P.c: 117: uint8_t temp;
  3608                           ;nRF24L01P.c: 118: uint8_t temp1;
  3609                           ;nRF24L01P.c: 120: LATCbits.LATC6 = 0;
  3610  17C1  130E               	bcf	14,6	;volatile
  3611                           
  3612                           ;nRF24L01P.c: 121: temp = 0x00 | reg;
  3613  17C2  0862               	movf	ReadRegister@reg^(0+256),w
  3614  17C3  00E1               	movwf	??_ReadRegister^(0+256)
  3615  17C4  0861               	movf	??_ReadRegister^(0+256),w
  3616  17C5  00E3               	movwf	ReadRegister@temp^(0+256)
  3617                           
  3618                           ;nRF24L01P.c: 122: SPI_transfer(temp);
  3619  17C6  0863               	movf	ReadRegister@temp^(0+256),w
  3620  17C7  3197  2789  3197   	fcall	_SPI_transfer
  3621                           
  3622                           ;nRF24L01P.c: 124: temp1= SPI_transfer(0xFF);
  3623  17CA  30FF               	movlw	255
  3624  17CB  3197  2789         	fcall	_SPI_transfer
  3625  17CD  0022               	movlb	2	; select bank2
  3626  17CE  00E1               	movwf	??_ReadRegister^(0+256)
  3627  17CF  0861               	movf	??_ReadRegister^(0+256),w
  3628  17D0  00E4               	movwf	ReadRegister@temp1^(0+256)
  3629                           
  3630                           ;nRF24L01P.c: 125: LATCbits.LATC6 = 1;
  3631  17D1  170E               	bsf	14,6	;volatile
  3632                           
  3633                           ;nRF24L01P.c: 127: return temp1;
  3634  17D2  0864               	movf	ReadRegister@temp1^(0+256),w
  3635  17D3  0008               	return
  3636  17D4                     __end_of_ReadRegister:	
  3637                           
  3638                           	psect	text11
  3639  0961                     __ptext11:	
  3640 ;; *************** function _ReadPayload *****************
  3641 ;; Defined at:
  3642 ;;		line 150 in file "nRF24L01P.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  num             1    wreg     unsigned char 
  3645 ;;  data            1    1[BANK2 ] PTR unsigned char 
  3646 ;;		 -> main@podatak(2), 
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;  num             1    4[BANK2 ] unsigned char 
  3649 ;;  i               1    5[BANK2 ] unsigned char 
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  1    wreg      void 
  3652 ;; Registers used:
  3653 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3659 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3660 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3661 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3662 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  3663 ;;Total ram usage:        5 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:   11
  3666 ;; This function calls:
  3667 ;;		_SPI_transfer
  3668 ;; This function is called by:
  3669 ;;		_main
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           
  3674                           ;psect for function _ReadPayload
  3675  0961                     _ReadPayload:	
  3676                           
  3677                           ;incstack = 0
  3678                           ; Regs used in _ReadPayload: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3679                           ;ReadPayload@num stored from wreg
  3680  0961  0022               	movlb	2	; select bank2
  3681  0962  00E4               	movwf	ReadPayload@num^(0+256)
  3682                           
  3683                           ;nRF24L01P.c: 152: LATCbits.LATC6 = 0;
  3684  0963  130E               	bcf	14,6	;volatile
  3685                           
  3686                           ;nRF24L01P.c: 154: SPI_transfer(0x61);
  3687  0964  3061               	movlw	97
  3688  0965  3197  2789  3189   	fcall	_SPI_transfer
  3689                           
  3690                           ;nRF24L01P.c: 155: for(uint8_t i=0; i<num; i++)
  3691  0968  0022               	movlb	2	; select bank2
  3692  0969  01E5               	clrf	ReadPayload@i^(0+256)
  3693  096A                     l4621:	
  3694  096A  0864               	movf	ReadPayload@num^(0+256),w
  3695  096B  0265               	subwf	ReadPayload@i^(0+256),w
  3696  096C  1803               	btfsc	3,0
  3697  096D  2982               	goto	l669
  3698                           
  3699                           ;nRF24L01P.c: 156: {
  3700                           ;nRF24L01P.c: 157: data[i]=SPI_transfer(0xFF);
  3701  096E  30FF               	movlw	255
  3702  096F  3197  2789  3189   	fcall	_SPI_transfer
  3703  0972  0022               	movlb	2	; select bank2
  3704  0973  00E2               	movwf	??_ReadPayload^(0+256)
  3705  0974  0865               	movf	ReadPayload@i^(0+256),w
  3706  0975  0761               	addwf	ReadPayload@data^(0+256),w
  3707  0976  00E3               	movwf	(??_ReadPayload+1)^(0+256)
  3708  0977  0863               	movf	(??_ReadPayload+1)^(0+256),w
  3709  0978  0086               	movwf	6
  3710  0979  3002               	movlw	2	; select bank4/5
  3711  097A  0087               	movwf	7
  3712  097B  0862               	movf	??_ReadPayload^(0+256),w
  3713  097C  0081               	movwf	1
  3714  097D  3001               	movlw	1
  3715  097E  00E2               	movwf	??_ReadPayload^(0+256)
  3716  097F  0862               	movf	??_ReadPayload^(0+256),w
  3717  0980  07E5               	addwf	ReadPayload@i^(0+256),f
  3718  0981  296A               	goto	l4621
  3719  0982                     l669:	
  3720                           
  3721                           ;nRF24L01P.c: 158: }
  3722                           ;nRF24L01P.c: 159: LATCbits.LATC6=1;
  3723  0982  170E               	bsf	14,6	;volatile
  3724                           
  3725                           ;nRF24L01P.c: 160: LATAbits.LATA4=1;
  3726  0983  160C               	bsf	12,4	;volatile
  3727                           
  3728                           ;nRF24L01P.c: 161: _delay((unsigned long)((10)*(48000000L/4000.0)));
  3729  0984  309C               	movlw	156
  3730  0985  00E3               	movwf	(??_ReadPayload^(0+256)+1)
  3731  0986  30D7               	movlw	215
  3732  0987  00E2               	movwf	??_ReadPayload^(0+256)
  3733  0988                     u4197:	
  3734  0988  0BE2               	decfsz	??_ReadPayload^(0+256),f
  3735  0989  2988               	goto	u4197
  3736  098A  0BE3               	decfsz	(??_ReadPayload^(0+256)+1),f
  3737  098B  2988               	goto	u4197
  3738  098C  0008               	return
  3739  098D                     __end_of_ReadPayload:	
  3740                           
  3741                           	psect	text12
  3742  1789                     __ptext12:	
  3743 ;; *************** function _SPI_transfer *****************
  3744 ;; Defined at:
  3745 ;;		line 44 in file "spi.c"
  3746 ;; Parameters:    Size  Location     Type
  3747 ;;  data            1    wreg     unsigned char 
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;  data            1    0[BANK2 ] unsigned char 
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  1    wreg      unsigned char 
  3752 ;; Registers used:
  3753 ;;		wreg
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3760 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3762 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  3763 ;;Total ram usage:        1 bytes
  3764 ;; Hardware stack levels used:    1
  3765 ;; Hardware stack levels required when called:   10
  3766 ;; This function calls:
  3767 ;;		Nothing
  3768 ;; This function is called by:
  3769 ;;		_WriteRegister
  3770 ;;		_WriteAddress
  3771 ;;		_ReadRegister
  3772 ;;		_WriteCommand
  3773 ;;		_ReadPayload
  3774 ;;		_WriteRegisterCHK
  3775 ;;		_WritePayload
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           
  3780                           ;psect for function _SPI_transfer
  3781  1789                     _SPI_transfer:	
  3782                           
  3783                           ;incstack = 0
  3784                           ; Regs used in _SPI_transfer: [wreg]
  3785                           ;SPI_transfer@data stored from wreg
  3786  1789  0022               	movlb	2	; select bank2
  3787  178A  00E0               	movwf	SPI_transfer@data^(0+256)
  3788                           
  3789                           ;spi.c: 46: SSPBUF = data;
  3790  178B  0860               	movf	SPI_transfer@data^(0+256),w
  3791  178C  0024               	movlb	4	; select bank4
  3792  178D  0091               	movwf	17	;volatile
  3793  178E                     l692:	
  3794                           ;spi.c: 47: while (!SSPSTATbits.BF);
  3795                           
  3796  178E  1C14               	btfss	20,0	;volatile
  3797  178F  2F8E               	goto	l692
  3798                           
  3799                           ;spi.c: 49: return SSPBUF;
  3800  1790  0811               	movf	17,w	;volatile
  3801  1791  0008               	return
  3802  1792                     __end_of_SPI_transfer:	
  3803                           
  3804                           	psect	text13
  3805  03D2                     __ptext13:	
  3806 ;; *************** function _CDCTxService *****************
  3807 ;; Defined at:
  3808 ;;		line 836 in file "../lib/usb/src/usb_device_cdc.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;		None
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;  byte_to_send    1    2[BANK3 ] unsigned char 
  3813 ;;  i               1    1[BANK3 ] unsigned char 
  3814 ;; Return value:  Size  Location     Type
  3815 ;;                  1    wreg      void 
  3816 ;; Registers used:
  3817 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3824 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  3825 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  3826 ;;      Totals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0
  3827 ;;Total ram usage:        3 bytes
  3828 ;; Hardware stack levels used:    1
  3829 ;; Hardware stack levels required when called:   11
  3830 ;; This function calls:
  3831 ;;		_USBTransferOnePacket
  3832 ;; This function is called by:
  3833 ;;		_main
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           
  3838                           ;psect for function _CDCTxService
  3839  03D2                     _CDCTxService:	
  3840                           
  3841                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;
  3842                           ;usb_device_cdc.c: 839: uint8_t i;
  3843                           ;usb_device_cdc.c: 841: {PIE2bits.USBIE = 0;};
  3844                           
  3845                           ;incstack = 0
  3846                           ; Regs used in _CDCTxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3847  03D2  0021               	movlb	1	; select bank1
  3848  03D3  1112               	bcf	18,2	;volatile
  3849                           
  3850                           ;usb_device_cdc.c: 843: {};
  3851                           ;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
  3852  03D4  0023               	movlb	3	; select bank3
  3853  03D5  0841               	movf	_CDCDataInHandle^(0+384),w
  3854  03D6  0442               	iorwf	(_CDCDataInHandle+1)^(0+384),w
  3855  03D7  1903               	btfsc	3,2
  3856  03D8  2BE2               	goto	l4495
  3857  03D9  0841               	movf	_CDCDataInHandle^(0+384),w
  3858  03DA  0086               	movwf	6
  3859  03DB  0842               	movf	(_CDCDataInHandle+1)^(0+384),w
  3860  03DC  0087               	movwf	7
  3861  03DD  1F81               	btfss	1,7
  3862  03DE  2BE2               	goto	l4495
  3863                           
  3864                           ;usb_device_cdc.c: 846: {
  3865                           ;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  3866  03DF  0021               	movlb	1	; select bank1
  3867  03E0  1512               	bsf	18,2	;volatile
  3868                           
  3869                           ;usb_device_cdc.c: 848: return;
  3870  03E1  0008               	return
  3871  03E2                     l4495:	
  3872                           
  3873                           ;usb_device_cdc.c: 849: }
  3874                           ;usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  3875  03E2  3003               	movlw	3
  3876  03E3  0023               	movlb	3	; select bank3
  3877  03E4  0655               	xorwf	_cdc_trf_state^(0+384),w
  3878  03E5  1903               	btfsc	3,2
  3879                           
  3880                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  3881  03E6  01D5               	clrf	_cdc_trf_state^(0+384)
  3882                           
  3883                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  3884  03E7  0855               	movf	_cdc_trf_state^(0+384),w
  3885  03E8  1D03               	btfss	3,2
  3886  03E9  2BED               	goto	l4503
  3887                           
  3888                           ;usb_device_cdc.c: 863: {
  3889                           ;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  3890  03EA  0021               	movlb	1	; select bank1
  3891  03EB  1512               	bsf	18,2	;volatile
  3892                           
  3893                           ;usb_device_cdc.c: 865: return;
  3894  03EC  0008               	return
  3895  03ED                     l4503:	
  3896                           
  3897                           ;usb_device_cdc.c: 866: }
  3898                           ;usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  3899  03ED  3002               	movlw	2
  3900  03EE  0023               	movlb	3	; select bank3
  3901  03EF  0655               	xorwf	_cdc_trf_state^(0+384),w
  3902  03F0  1D03               	btfss	3,2
  3903  03F1  2C0B               	goto	l4509
  3904                           
  3905                           ;usb_device_cdc.c: 872: {
  3906                           ;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  3907  03F2  0022               	movlb	2	; select bank2
  3908  03F3  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  3909  03F4  0AE0               	incf	USBTransferOnePacket@dir^(0+256),f
  3910  03F5  3000               	movlw	0
  3911  03F6  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  3912  03F7  3000               	movlw	0
  3913  03F8  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  3914  03F9  01E3               	clrf	USBTransferOnePacket@len^(0+256)
  3915  03FA  3002               	movlw	2
  3916  03FB  318E  26EF  3183   	fcall	_USBTransferOnePacket
  3917  03FE  0022               	movlb	2	; select bank2
  3918  03FF  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  3919  0400  0023               	movlb	3	; select bank3
  3920  0401  00C2               	movwf	(_CDCDataInHandle+1)^(0+384)
  3921  0402  0022               	movlb	2	; select bank2
  3922  0403  0860               	movf	?_USBTransferOnePacket^(0+256),w
  3923  0404  0023               	movlb	3	; select bank3
  3924  0405  00C1               	movwf	_CDCDataInHandle^(0+384)
  3925                           
  3926                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  3927  0406  3003               	movlw	3
  3928  0407  00E5               	movwf	??_CDCTxService^(0+384)
  3929  0408  0865               	movf	??_CDCTxService^(0+384),w
  3930  0409  00D5               	movwf	_cdc_trf_state^(0+384)
  3931                           
  3932                           ;usb_device_cdc.c: 876: }
  3933  040A  2C80               	goto	l4557
  3934  040B                     l4509:	
  3935                           
  3936                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  3937  040B  0355               	decf	_cdc_trf_state^(0+384),w
  3938  040C  1D03               	btfss	3,2
  3939  040D  2C80               	goto	l4557
  3940                           
  3941                           ;usb_device_cdc.c: 878: {
  3942                           ;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  3943  040E  3041               	movlw	65
  3944  040F  0256               	subwf	_cdc_tx_len^(0+384),w
  3945  0410  1C03               	skipc
  3946  0411  2C14               	goto	l4515
  3947                           
  3948                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  3949  0412  3040               	movlw	64
  3950  0413  2C15               	goto	L1
  3951  0414                     l4515:	
  3952                           
  3953                           ;usb_device_cdc.c: 884: else
  3954                           ;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  3955  0414  0856               	movf	_cdc_tx_len^(0+384),w
  3956  0415                     L1:	
  3957  0415  00E5               	movwf	??_CDCTxService^(0+384)
  3958  0416  0865               	movf	??_CDCTxService^(0+384),w
  3959  0417  00E7               	movwf	CDCTxService@byte_to_send^(0+384)
  3960                           
  3961                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  3962  0418  0367               	decf	CDCTxService@byte_to_send^(0+384),w
  3963  0419  3AFF               	xorlw	255
  3964  041A  0756               	addwf	_cdc_tx_len^(0+384),w
  3965  041B  00E5               	movwf	??_CDCTxService^(0+384)
  3966  041C  0865               	movf	??_CDCTxService^(0+384),w
  3967  041D  00D6               	movwf	_cdc_tx_len^(0+384)
  3968                           
  3969                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  3970  041E  30A0               	movlw	160
  3971  041F  00E5               	movwf	??_CDCTxService^(0+384)
  3972  0420  0865               	movf	??_CDCTxService^(0+384),w
  3973  0421  00C5               	movwf	_pCDCDst^(0+384)
  3974                           
  3975                           ;usb_device_cdc.c: 894: i = byte_to_send;
  3976  0422  0867               	movf	CDCTxService@byte_to_send^(0+384),w
  3977  0423  00E5               	movwf	??_CDCTxService^(0+384)
  3978  0424  0865               	movf	??_CDCTxService^(0+384),w
  3979  0425  00E6               	movwf	CDCTxService@i^(0+384)
  3980                           
  3981                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  3982  0426  0853               	movf	_cdc_mem_type^(0+384),w
  3983  0427  1903               	btfsc	3,2
  3984  0428  2C3F               	goto	l4535
  3985  0429  2C58               	goto	l4545
  3986  042A                     l4527:	
  3987                           ;usb_device_cdc.c: 896: {
  3988                           ;usb_device_cdc.c: 897: while(i)
  3989                           
  3990                           
  3991                           ;usb_device_cdc.c: 898: {
  3992                           ;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  3993  042A  0847               	movf	_pCDCSrc^(0+384),w
  3994  042B  0086               	movwf	6
  3995  042C  3002               	movlw	2	; select bank4/5
  3996  042D  0087               	movwf	7
  3997  042E  0801               	movf	1,w
  3998  042F  00E5               	movwf	??_CDCTxService^(0+384)
  3999  0430  0845               	movf	_pCDCDst^(0+384),w
  4000  0431  0086               	movwf	6
  4001  0432  0187               	clrf	7
  4002  0433  0865               	movf	??_CDCTxService^(0+384),w
  4003  0434  0081               	movwf	1
  4004                           
  4005                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  4006  0435  3001               	movlw	1
  4007  0436  00E5               	movwf	??_CDCTxService^(0+384)
  4008  0437  0865               	movf	??_CDCTxService^(0+384),w
  4009  0438  07C5               	addwf	_pCDCDst^(0+384),f
  4010                           
  4011                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  4012  0439  3001               	movlw	1
  4013  043A  00E5               	movwf	??_CDCTxService^(0+384)
  4014  043B  0865               	movf	??_CDCTxService^(0+384),w
  4015  043C  07C7               	addwf	_pCDCSrc^(0+384),f
  4016                           
  4017                           ;usb_device_cdc.c: 902: i--;
  4018  043D  3001               	movlw	1
  4019  043E  02E6               	subwf	CDCTxService@i^(0+384),f
  4020  043F                     l4535:	
  4021  043F  0866               	movf	CDCTxService@i^(0+384),w
  4022  0440  1903               	btfsc	3,2
  4023  0441  2C5B               	goto	l4547
  4024  0442  2C2A               	goto	l4527
  4025  0443                     l4537:	
  4026                           ;usb_device_cdc.c: 905: else
  4027                           ;usb_device_cdc.c: 906: {
  4028                           ;usb_device_cdc.c: 907: while(i)
  4029                           
  4030                           ;usb_device_cdc.c: 903: }
  4031                           ;usb_device_cdc.c: 904: }
  4032                           
  4033                           
  4034                           ;usb_device_cdc.c: 908: {
  4035                           ;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  4036  0443  0847               	movf	_pCDCSrc^(0+384),w
  4037  0444  0086               	movwf	6
  4038  0445  3002               	movlw	2	; select bank4/5
  4039  0446  0087               	movwf	7
  4040  0447  0801               	movf	1,w
  4041  0448  00E5               	movwf	??_CDCTxService^(0+384)
  4042  0449  0845               	movf	_pCDCDst^(0+384),w
  4043  044A  0086               	movwf	6
  4044  044B  0187               	clrf	7
  4045  044C  0865               	movf	??_CDCTxService^(0+384),w
  4046  044D  0081               	movwf	1
  4047                           
  4048                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  4049  044E  3001               	movlw	1
  4050  044F  00E5               	movwf	??_CDCTxService^(0+384)
  4051  0450  0865               	movf	??_CDCTxService^(0+384),w
  4052  0451  07C5               	addwf	_pCDCDst^(0+384),f
  4053                           
  4054                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  4055  0452  3001               	movlw	1
  4056  0453  00E5               	movwf	??_CDCTxService^(0+384)
  4057  0454  0865               	movf	??_CDCTxService^(0+384),w
  4058  0455  07C7               	addwf	_pCDCSrc^(0+384),f
  4059                           
  4060                           ;usb_device_cdc.c: 912: i--;
  4061  0456  3001               	movlw	1
  4062  0457  02E6               	subwf	CDCTxService@i^(0+384),f
  4063  0458                     l4545:	
  4064  0458  0866               	movf	CDCTxService@i^(0+384),w
  4065  0459  1D03               	btfss	3,2
  4066  045A  2C43               	goto	l4537
  4067  045B                     l4547:	
  4068                           
  4069                           ;usb_device_cdc.c: 913: }
  4070                           ;usb_device_cdc.c: 914: }
  4071                           ;usb_device_cdc.c: 920: if(cdc_tx_len == 0)
  4072  045B  0856               	movf	_cdc_tx_len^(0+384),w
  4073  045C  1D03               	btfss	3,2
  4074  045D  2C68               	goto	l4555
  4075                           
  4076                           ;usb_device_cdc.c: 921: {
  4077                           ;usb_device_cdc.c: 922: if(byte_to_send == 64)
  4078  045E  3040               	movlw	64
  4079  045F  0667               	xorwf	CDCTxService@byte_to_send^(0+384),w
  4080  0460  1D03               	btfss	3,2
  4081  0461  2C64               	goto	l4553
  4082                           
  4083                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  4084  0462  3002               	movlw	2
  4085  0463  2C65               	goto	L2
  4086  0464                     l4553:	
  4087                           
  4088                           ;usb_device_cdc.c: 924: else
  4089                           ;usb_device_cdc.c: 925: cdc_trf_state = 3;
  4090  0464  3003               	movlw	3
  4091  0465                     L2:	
  4092  0465  00E5               	movwf	??_CDCTxService^(0+384)
  4093  0466  0865               	movf	??_CDCTxService^(0+384),w
  4094  0467  00D5               	movwf	_cdc_trf_state^(0+384)
  4095  0468                     l4555:	
  4096                           
  4097                           ;usb_device_cdc.c: 926: }
  4098                           ;usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  4099  0468  0022               	movlb	2	; select bank2
  4100  0469  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  4101  046A  0AE0               	incf	USBTransferOnePacket@dir^(0+256),f
  4102  046B  30A0               	movlw	160
  4103  046C  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  4104  046D  3000               	movlw	0
  4105  046E  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  4106  046F  0023               	movlb	3	; select bank3
  4107  0470  0867               	movf	CDCTxService@byte_to_send^(0+384),w
  4108  0471  00E5               	movwf	??_CDCTxService^(0+384)
  4109  0472  0865               	movf	??_CDCTxService^(0+384),w
  4110  0473  0022               	movlb	2	; select bank2
  4111  0474  00E3               	movwf	USBTransferOnePacket@len^(0+256)
  4112  0475  3002               	movlw	2
  4113  0476  318E  26EF         	fcall	_USBTransferOnePacket
  4114  0478  0022               	movlb	2	; select bank2
  4115  0479  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  4116  047A  0023               	movlb	3	; select bank3
  4117  047B  00C2               	movwf	(_CDCDataInHandle+1)^(0+384)
  4118  047C  0022               	movlb	2	; select bank2
  4119  047D  0860               	movf	?_USBTransferOnePacket^(0+256),w
  4120  047E  0023               	movlb	3	; select bank3
  4121  047F  00C1               	movwf	_CDCDataInHandle^(0+384)
  4122  0480                     l4557:	
  4123                           
  4124                           ;usb_device_cdc.c: 929: }
  4125                           ;usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  4126  0480  0021               	movlb	1	; select bank1
  4127  0481  1512               	bsf	18,2	;volatile
  4128  0482  0008               	return
  4129  0483                     __end_of_CDCTxService:	
  4130                           
  4131                           	psect	text14
  4132  0A31                     __ptext14:	
  4133 ;; *************** function _CDCInitEP *****************
  4134 ;; Defined at:
  4135 ;;		line 294 in file "../lib/usb/src/usb_device_cdc.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4151 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4152 ;;      Totals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0
  4153 ;;Total ram usage:        1 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:   12
  4156 ;; This function calls:
  4157 ;;		_USBEnableEndpoint
  4158 ;;		_USBTransferOnePacket
  4159 ;; This function is called by:
  4160 ;;		_main
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           
  4165                           ;psect for function _CDCInitEP
  4166  0A31                     _CDCInitEP:	
  4167                           
  4168                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
  4169                           
  4170                           ;incstack = 0
  4171                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4172  0A31  3000               	movlw	0
  4173  0A32  0023               	movlb	3	; select bank3
  4174  0A33  00DE               	movwf	(_line_coding+3)^(0+384)
  4175  0A34  3000               	movlw	0
  4176  0A35  00DD               	movwf	(_line_coding+2)^(0+384)
  4177  0A36  304B               	movlw	75
  4178  0A37  00DC               	movwf	(_line_coding+1)^(0+384)
  4179  0A38  3000               	movlw	0
  4180  0A39  00DB               	movwf	_line_coding^(0+384)
  4181                           
  4182                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  4183  0A3A  01DF               	clrf	(_line_coding^(0+384)+4)
  4184                           
  4185                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  4186  0A3B  01E0               	clrf	(_line_coding^(0+384)+5)
  4187                           
  4188                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  4189  0A3C  3008               	movlw	8
  4190  0A3D  00E8               	movwf	??_CDCInitEP^(0+384)
  4191  0A3E  0868               	movf	??_CDCInitEP^(0+384),w
  4192  0A3F  00E1               	movwf	(_line_coding^(0+384)+6)
  4193                           
  4194                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  4195  0A40  01D4               	clrf	_cdc_rx_len^(0+384)
  4196                           
  4197                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  4198  0A41  301A               	movlw	26
  4199  0A42  00E8               	movwf	??_CDCInitEP^(0+384)
  4200  0A43  0868               	movf	??_CDCInitEP^(0+384),w
  4201  0A44  0022               	movlb	2	; select bank2
  4202  0A45  00E7               	movwf	USBEnableEndpoint@options^(0+256)
  4203  0A46  3001               	movlw	1
  4204  0A47  3189  210B  318A   	fcall	_USBEnableEndpoint
  4205                           
  4206                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  4207  0A4A  301E               	movlw	30
  4208  0A4B  0023               	movlb	3	; select bank3
  4209  0A4C  00E8               	movwf	??_CDCInitEP^(0+384)
  4210  0A4D  0868               	movf	??_CDCInitEP^(0+384),w
  4211  0A4E  0022               	movlb	2	; select bank2
  4212  0A4F  00E7               	movwf	USBEnableEndpoint@options^(0+256)
  4213  0A50  3002               	movlw	2
  4214  0A51  3189  210B  318A   	fcall	_USBEnableEndpoint
  4215                           
  4216                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  4217  0A54  0022               	movlb	2	; select bank2
  4218  0A55  01E0               	clrf	USBTransferOnePacket@dir^(0+256)
  4219  0A56  3020               	movlw	32
  4220  0A57  00E1               	movwf	USBTransferOnePacket@data^(0+256)
  4221  0A58  3001               	movlw	1
  4222  0A59  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+256)
  4223  0A5A  3040               	movlw	64
  4224  0A5B  0023               	movlb	3	; select bank3
  4225  0A5C  00E8               	movwf	??_CDCInitEP^(0+384)
  4226  0A5D  0868               	movf	??_CDCInitEP^(0+384),w
  4227  0A5E  0022               	movlb	2	; select bank2
  4228  0A5F  00E3               	movwf	USBTransferOnePacket@len^(0+256)
  4229  0A60  3002               	movlw	2
  4230  0A61  318E  26EF         	fcall	_USBTransferOnePacket
  4231  0A63  0022               	movlb	2	; select bank2
  4232  0A64  0861               	movf	(?_USBTransferOnePacket+1)^(0+256),w
  4233  0A65  0023               	movlb	3	; select bank3
  4234  0A66  00C4               	movwf	(_CDCDataOutHandle+1)^(0+384)
  4235  0A67  0022               	movlb	2	; select bank2
  4236  0A68  0860               	movf	?_USBTransferOnePacket^(0+256),w
  4237  0A69  0023               	movlb	3	; select bank3
  4238  0A6A  00C3               	movwf	_CDCDataOutHandle^(0+384)
  4239                           
  4240                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  4241  0A6B  01C1               	clrf	_CDCDataInHandle^(0+384)
  4242  0A6C  01C2               	clrf	(_CDCDataInHandle+1)^(0+384)
  4243                           
  4244                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
  4245  0A6D  01D5               	clrf	_cdc_trf_state^(0+384)
  4246  0A6E  0008               	return
  4247  0A6F                     __end_of_CDCInitEP:	
  4248                           
  4249                           	psect	text15
  4250  0EEF                     __ptext15:	
  4251 ;; *************** function _USBTransferOnePacket *****************
  4252 ;; Defined at:
  4253 ;;		line 995 in file "../lib/usb/src/usb_device.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  ep              1    wreg     unsigned char 
  4256 ;;  dir             1    0[BANK2 ] unsigned char 
  4257 ;;  data            2    1[BANK2 ] PTR unsigned char 
  4258 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  4259 ;;  len             1    3[BANK2 ] unsigned char 
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;  ep              1    8[BANK2 ] unsigned char 
  4262 ;;  handle          2    9[BANK2 ] PTR volatile struct __BD
  4263 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  2    0[BANK2 ] PTR void 
  4266 ;; Registers used:
  4267 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4273 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4274 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  4275 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4276 ;;      Totals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0
  4277 ;;Total ram usage:       11 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; Hardware stack levels required when called:   10
  4280 ;; This function calls:
  4281 ;;		Nothing
  4282 ;; This function is called by:
  4283 ;;		_CDCInitEP
  4284 ;;		_CDCTxService
  4285 ;;		_USBCDCEventHandler
  4286 ;;		_getsUSBUSART
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           
  4291                           ;psect for function _USBTransferOnePacket
  4292  0EEF                     _USBTransferOnePacket:	
  4293                           
  4294                           ;incstack = 0
  4295                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  4296                           ;USBTransferOnePacket@ep stored from wreg
  4297  0EEF  0022               	movlb	2	; select bank2
  4298  0EF0  00E8               	movwf	USBTransferOnePacket@ep^(0+256)
  4299                           
  4300                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  4301                           ;usb_device.c: 1000: if(dir != 0)
  4302  0EF1  0860               	movf	USBTransferOnePacket@dir^(0+256),w
  4303  0EF2  1903               	btfsc	3,2
  4304  0EF3  2EFD               	goto	l4297
  4305                           
  4306                           ;usb_device.c: 1001: {
  4307                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  4308  0EF4  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  4309  0EF5  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  4310  0EF6  0086               	movwf	6
  4311  0EF7  3001               	movlw	1	; select bank3/4
  4312  0EF8  0087               	movwf	7
  4313  0EF9  3F40               	moviw [0]fsr1
  4314  0EFA  00E9               	movwf	USBTransferOnePacket@handle^(0+256)
  4315  0EFB  3F41               	moviw [1]fsr1
  4316  0EFC  2F05               	goto	L3
  4317  0EFD                     l4297:	
  4318                           ;usb_device.c: 1004: }
  4319                           
  4320                           
  4321                           ;usb_device.c: 1005: else
  4322                           ;usb_device.c: 1006: {
  4323                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  4324  0EFD  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  4325  0EFE  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4326  0EFF  0086               	movwf	6
  4327  0F00  3001               	movlw	1	; select bank3/4
  4328  0F01  0087               	movwf	7
  4329  0F02  3F40               	moviw [0]fsr1
  4330  0F03  00E9               	movwf	USBTransferOnePacket@handle^(0+256)
  4331  0F04  3F41               	moviw [1]fsr1
  4332  0F05                     L3:	
  4333  0F05  00EA               	movwf	(USBTransferOnePacket@handle+1)^(0+256)
  4334                           
  4335                           ;usb_device.c: 1009: }
  4336                           ;usb_device.c: 1013: if(handle == 0)
  4337  0F06  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  4338  0F07  046A               	iorwf	(USBTransferOnePacket@handle+1)^(0+256),w
  4339  0F08  1D03               	btfss	3,2
  4340  0F09  2F0D               	goto	l4305
  4341                           
  4342                           ;usb_device.c: 1014: {
  4343                           ;usb_device.c: 1015: return 0;
  4344  0F0A  01E0               	clrf	?_USBTransferOnePacket^(0+256)
  4345  0F0B  01E1               	clrf	(?_USBTransferOnePacket+1)^(0+256)
  4346  0F0C  0008               	return
  4347  0F0D                     l4305:	
  4348                           
  4349                           ;usb_device.c: 1016: }
  4350                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  4351  0F0D  30FF               	movlw	255
  4352  0F0E  0561               	andwf	USBTransferOnePacket@data^(0+256),w
  4353  0F0F  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4354  0F10  307F               	movlw	127
  4355  0F11  0562               	andwf	(USBTransferOnePacket@data+1)^(0+256),w
  4356  0F12  00E5               	movwf	(??_USBTransferOnePacket+1)^(0+256)
  4357  0F13  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  4358  0F14  0086               	movwf	6
  4359  0F15  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  4360  0F16  0087               	movwf	7
  4361  0F17  3142               	addfsr 1,2
  4362  0F18  0864               	movf	??_USBTransferOnePacket^(0+256),w
  4363  0F19  3FC0               	movwi [0]fsr1
  4364  0F1A  0865               	movf	(??_USBTransferOnePacket^(0+256)+1),w
  4365  0F1B  3FC1               	movwi [1]fsr1
  4366                           
  4367                           ;usb_device.c: 1030: handle->CNT = len;
  4368  0F1C  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  4369  0F1D  3E01               	addlw	1
  4370  0F1E  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4371  0F1F  3000               	movlw	0
  4372  0F20  3D6A               	addwfc	(USBTransferOnePacket@handle+1)^(0+256),w
  4373  0F21  00E5               	movwf	(??_USBTransferOnePacket+1)^(0+256)
  4374  0F22  0864               	movf	??_USBTransferOnePacket^(0+256),w
  4375  0F23  0086               	movwf	6
  4376  0F24  0865               	movf	(??_USBTransferOnePacket+1)^(0+256),w
  4377  0F25  0087               	movwf	7
  4378  0F26  0863               	movf	USBTransferOnePacket@len^(0+256),w
  4379  0F27  0081               	movwf	1
  4380                           
  4381                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  4382  0F28  3040               	movlw	64
  4383  0F29  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4384  0F2A  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  4385  0F2B  0086               	movwf	6
  4386  0F2C  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  4387  0F2D  0087               	movwf	7
  4388  0F2E  0864               	movf	??_USBTransferOnePacket^(0+256),w
  4389  0F2F  0581               	andwf	1,f
  4390                           
  4391                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  4392  0F30  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  4393  0F31  0086               	movwf	6
  4394  0F32  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  4395  0F33  0087               	movwf	7
  4396  0F34  1581               	bsf	1,3
  4397                           
  4398                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  4399  0F35  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  4400  0F36  0086               	movwf	6
  4401  0F37  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  4402  0F38  0087               	movwf	7
  4403  0F39  1781               	bsf	1,7
  4404                           
  4405                           ;usb_device.c: 1036: if(dir != 0)
  4406  0F3A  0860               	movf	USBTransferOnePacket@dir^(0+256),w
  4407  0F3B  1903               	btfsc	3,2
  4408  0F3C  2F56               	goto	l4315
  4409                           
  4410                           ;usb_device.c: 1037: {
  4411                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  4412  0F3D  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  4413  0F3E  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  4414  0F3F  0086               	movwf	6
  4415  0F40  3001               	movlw	1	; select bank3/4
  4416  0F41  0087               	movwf	7
  4417  0F42  3F40               	moviw [0]fsr1
  4418  0F43  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4419  0F44  3F41               	moviw [1]fsr1
  4420  0F45  00E5               	movwf	(??_USBTransferOnePacket^(0+256)+1)
  4421  0F46  3004               	movlw	4
  4422  0F47  0664               	xorwf	??_USBTransferOnePacket^(0+256),w
  4423  0F48  00E6               	movwf	(??_USBTransferOnePacket+2)^(0+256)
  4424  0F49  3000               	movlw	0
  4425  0F4A  0665               	xorwf	(??_USBTransferOnePacket+1)^(0+256),w
  4426  0F4B  00E7               	movwf	(??_USBTransferOnePacket+3)^(0+256)
  4427  0F4C  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  4428  0F4D  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  4429  0F4E  0086               	movwf	6
  4430  0F4F  3001               	movlw	1	; select bank3/4
  4431  0F50  0087               	movwf	7
  4432  0F51  0866               	movf	(??_USBTransferOnePacket+2)^(0+256),w
  4433  0F52  3FC0               	movwi [0]fsr1
  4434  0F53  0867               	movf	(??_USBTransferOnePacket+3)^(0+256),w
  4435  0F54  3FC1               	movwi [1]fsr1
  4436                           
  4437                           ;usb_device.c: 1040: }
  4438  0F55  2F6E               	goto	l4317
  4439  0F56                     l4315:	
  4440                           
  4441                           ;usb_device.c: 1041: else
  4442                           ;usb_device.c: 1042: {
  4443                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  4444  0F56  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  4445  0F57  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4446  0F58  0086               	movwf	6
  4447  0F59  3001               	movlw	1	; select bank3/4
  4448  0F5A  0087               	movwf	7
  4449  0F5B  3F40               	moviw [0]fsr1
  4450  0F5C  00E4               	movwf	??_USBTransferOnePacket^(0+256)
  4451  0F5D  3F41               	moviw [1]fsr1
  4452  0F5E  00E5               	movwf	(??_USBTransferOnePacket^(0+256)+1)
  4453  0F5F  3004               	movlw	4
  4454  0F60  0664               	xorwf	??_USBTransferOnePacket^(0+256),w
  4455  0F61  00E6               	movwf	(??_USBTransferOnePacket+2)^(0+256)
  4456  0F62  3000               	movlw	0
  4457  0F63  0665               	xorwf	(??_USBTransferOnePacket+1)^(0+256),w
  4458  0F64  00E7               	movwf	(??_USBTransferOnePacket+3)^(0+256)
  4459  0F65  3568               	lslf	USBTransferOnePacket@ep^(0+256),w
  4460  0F66  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4461  0F67  0086               	movwf	6
  4462  0F68  3001               	movlw	1	; select bank3/4
  4463  0F69  0087               	movwf	7
  4464  0F6A  0866               	movf	(??_USBTransferOnePacket+2)^(0+256),w
  4465  0F6B  3FC0               	movwi [0]fsr1
  4466  0F6C  0867               	movf	(??_USBTransferOnePacket+3)^(0+256),w
  4467  0F6D  3FC1               	movwi [1]fsr1
  4468  0F6E                     l4317:	
  4469                           
  4470                           ;usb_device.c: 1045: }
  4471                           ;usb_device.c: 1046: return (void*)handle;
  4472  0F6E  086A               	movf	(USBTransferOnePacket@handle+1)^(0+256),w
  4473  0F6F  00E1               	movwf	(?_USBTransferOnePacket+1)^(0+256)
  4474  0F70  0869               	movf	USBTransferOnePacket@handle^(0+256),w
  4475  0F71  00E0               	movwf	?_USBTransferOnePacket^(0+256)
  4476  0F72  0008               	return
  4477  0F73                     __end_of_USBTransferOnePacket:	
  4478                           
  4479                           	psect	text16
  4480  090B                     __ptext16:	
  4481 ;; *************** function _USBEnableEndpoint *****************
  4482 ;; Defined at:
  4483 ;;		line 878 in file "../lib/usb/src/usb_device.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  ep              1    wreg     unsigned char 
  4486 ;;  options         1    7[BANK2 ] unsigned char 
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;  ep              1    2[BANK3 ] unsigned char 
  4489 ;;  p               2    0[BANK3 ] PTR unsigned char 
  4490 ;;		 -> UEP0(1), 
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  1    wreg      void 
  4493 ;; Registers used:
  4494 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4500 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4501 ;;      Locals:         0       0       0       0       3       0       0       0       0       0       0       0       
      +0       0
  4502 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4503 ;;      Totals:         0       0       0       3       3       0       0       0       0       0       0       0       
      +0       0
  4504 ;;Total ram usage:        6 bytes
  4505 ;; Hardware stack levels used:    1
  4506 ;; Hardware stack levels required when called:   11
  4507 ;; This function calls:
  4508 ;;		_USBConfigureEndpoint
  4509 ;; This function is called by:
  4510 ;;		_CDCInitEP
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           
  4515                           ;psect for function _USBEnableEndpoint
  4516  090B                     _USBEnableEndpoint:	
  4517                           
  4518                           ;incstack = 0
  4519                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4520                           ;USBEnableEndpoint@ep stored from wreg
  4521  090B  0023               	movlb	3	; select bank3
  4522  090C  00E7               	movwf	USBEnableEndpoint@ep^(0+384)
  4523                           
  4524                           ;usb_device.c: 880: unsigned char* p;
  4525                           ;usb_device.c: 884: if(options & 0x04)
  4526  090D  0022               	movlb	2	; select bank2
  4527  090E  1D67               	btfss	USBEnableEndpoint@options^(0+256),2
  4528  090F  2916               	goto	l4285
  4529                           
  4530                           ;usb_device.c: 885: {
  4531                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  4532  0910  01E0               	clrf	USBConfigureEndpoint@direction^(0+256)
  4533  0911  0023               	movlb	3	; select bank3
  4534  0912  0867               	movf	USBEnableEndpoint@ep^(0+384),w
  4535  0913  318A  22B1  3189   	fcall	_USBConfigureEndpoint
  4536  0916                     l4285:	
  4537                           
  4538                           ;usb_device.c: 887: }
  4539                           ;usb_device.c: 888: if(options & 0x02)
  4540  0916  0022               	movlb	2	; select bank2
  4541  0917  1CE7               	btfss	USBEnableEndpoint@options^(0+256),1
  4542  0918  291F               	goto	l4289
  4543                           
  4544                           ;usb_device.c: 889: {
  4545                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  4546  0919  01E0               	clrf	USBConfigureEndpoint@direction^(0+256)
  4547  091A  0AE0               	incf	USBConfigureEndpoint@direction^(0+256),f
  4548  091B  0023               	movlb	3	; select bank3
  4549  091C  0867               	movf	USBEnableEndpoint@ep^(0+384),w
  4550  091D  318A  22B1         	fcall	_USBConfigureEndpoint
  4551  091F                     l4289:	
  4552                           
  4553                           ;usb_device.c: 891: }
  4554                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  4555  091F  0023               	movlb	3	; select bank3
  4556  0920  0867               	movf	USBEnableEndpoint@ep^(0+384),w
  4557  0921  3E98               	addlw	152
  4558  0922  0022               	movlb	2	; select bank2
  4559  0923  00E8               	movwf	??_USBEnableEndpoint^(0+256)
  4560  0924  01E9               	clrf	(??_USBEnableEndpoint^(0+256)+1)
  4561  0925  300E               	movlw	14
  4562  0926  3DE9               	addwfc	(??_USBEnableEndpoint^(0+256)+1),f
  4563  0927  0868               	movf	??_USBEnableEndpoint^(0+256),w
  4564  0928  0023               	movlb	3	; select bank3
  4565  0929  00E5               	movwf	USBEnableEndpoint@p^(0+384)
  4566  092A  0022               	movlb	2	; select bank2
  4567  092B  0869               	movf	(??_USBEnableEndpoint+1)^(0+256),w
  4568  092C  0023               	movlb	3	; select bank3
  4569  092D  00E6               	movwf	(USBEnableEndpoint@p+1)^(0+384)
  4570                           
  4571                           ;usb_device.c: 901: *p = options;
  4572  092E  0865               	movf	USBEnableEndpoint@p^(0+384),w
  4573  092F  0086               	movwf	6
  4574  0930  0866               	movf	(USBEnableEndpoint@p+1)^(0+384),w
  4575  0931  0087               	movwf	7
  4576  0932  0022               	movlb	2	; select bank2
  4577  0933  0867               	movf	USBEnableEndpoint@options^(0+256),w
  4578  0934  0081               	movwf	1
  4579  0935  0008               	return
  4580  0936                     __end_of_USBEnableEndpoint:	
  4581                           
  4582                           	psect	text17
  4583  0AB1                     __ptext17:	
  4584 ;; *************** function _USBConfigureEndpoint *****************
  4585 ;; Defined at:
  4586 ;;		line 1543 in file "../lib/usb/src/usb_device.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;  EPNum           1    wreg     unsigned char 
  4589 ;;  direction       1    0[BANK2 ] unsigned char 
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;  EPNum           1    5[BANK2 ] unsigned char 
  4592 ;;  handle          1    6[BANK2 ] PTR volatile struct __BD
  4593 ;;		 -> BDT(48), 
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      void 
  4596 ;; Registers used:
  4597 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4603 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  4604 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4605 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4606 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0
  4607 ;;Total ram usage:        7 bytes
  4608 ;; Hardware stack levels used:    1
  4609 ;; Hardware stack levels required when called:   10
  4610 ;; This function calls:
  4611 ;;		Nothing
  4612 ;; This function is called by:
  4613 ;;		_USBEnableEndpoint
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           
  4618                           ;psect for function _USBConfigureEndpoint
  4619  0AB1                     _USBConfigureEndpoint:	
  4620                           
  4621                           ;incstack = 0
  4622                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  4623                           ;USBConfigureEndpoint@EPNum stored from wreg
  4624  0AB1  0022               	movlb	2	; select bank2
  4625  0AB2  00E5               	movwf	USBConfigureEndpoint@EPNum^(0+256)
  4626                           
  4627                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  4628                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  4629  0AB3  3020               	movlw	32
  4630  0AB4  00E1               	movwf	??_USBConfigureEndpoint^(0+256)
  4631  0AB5  0861               	movf	??_USBConfigureEndpoint^(0+256),w
  4632  0AB6  00E6               	movwf	USBConfigureEndpoint@handle^(0+256)
  4633                           
  4634                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  4635  0AB7  0860               	movf	USBConfigureEndpoint@direction^(0+256),w
  4636  0AB8  00E1               	movwf	??_USBConfigureEndpoint^(0+256)
  4637  0AB9  3001               	movlw	1
  4638  0ABA                     u3715:	
  4639  0ABA  35E1               	lslf	??_USBConfigureEndpoint^(0+256),f
  4640  0ABB  0B89               	decfsz	9,f
  4641  0ABC  2ABA               	goto	u3715
  4642  0ABD  0865               	movf	USBConfigureEndpoint@EPNum^(0+256),w
  4643  0ABE  00E2               	movwf	(??_USBConfigureEndpoint+1)^(0+256)
  4644  0ABF  3001               	movlw	1
  4645  0AC0                     u3725:	
  4646  0AC0  35E2               	lslf	(??_USBConfigureEndpoint+1)^(0+256),f
  4647  0AC1  3EFF               	addlw	-1
  4648  0AC2  1D03               	skipz
  4649  0AC3  2AC0               	goto	u3725
  4650  0AC4  3562               	lslf	(??_USBConfigureEndpoint+1)^(0+256),w
  4651  0AC5  0761               	addwf	??_USBConfigureEndpoint^(0+256),w
  4652  0AC6  00E3               	movwf	(??_USBConfigureEndpoint+2)^(0+256)
  4653  0AC7  3001               	movlw	1
  4654  0AC8                     u3735:	
  4655  0AC8  35E3               	lslf	(??_USBConfigureEndpoint+2)^(0+256),f
  4656  0AC9  3EFF               	addlw	-1
  4657  0ACA  1D03               	skipz
  4658  0ACB  2AC8               	goto	u3735
  4659  0ACC  3563               	lslf	(??_USBConfigureEndpoint+2)^(0+256),w
  4660  0ACD  00E4               	movwf	(??_USBConfigureEndpoint+3)^(0+256)
  4661  0ACE  0864               	movf	(??_USBConfigureEndpoint+3)^(0+256),w
  4662  0ACF  07E6               	addwf	USBConfigureEndpoint@handle^(0+256),f
  4663                           
  4664                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  4665  0AD0  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  4666  0AD1  0086               	movwf	6
  4667  0AD2  0187               	clrf	7
  4668  0AD3  1381               	bcf	1,7
  4669                           
  4670                           ;usb_device.c: 1557: if(direction == 0)
  4671  0AD4  0860               	movf	USBConfigureEndpoint@direction^(0+256),w
  4672  0AD5  1D03               	btfss	3,2
  4673  0AD6  2AE1               	goto	l4269
  4674                           
  4675                           ;usb_device.c: 1558: {
  4676                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  4677  0AD7  3565               	lslf	USBConfigureEndpoint@EPNum^(0+256),w
  4678  0AD8  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  4679  0AD9  0086               	movwf	6
  4680  0ADA  3001               	movlw	1	; select bank3/4
  4681  0ADB  0087               	movwf	7
  4682  0ADC  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  4683  0ADD  3FC0               	movwi [0]fsr1
  4684  0ADE  3000               	movlw	0
  4685  0ADF  3FC1               	movwi [1]fsr1
  4686                           
  4687                           ;usb_device.c: 1560: }
  4688  0AE0  2AEA               	goto	l4271
  4689  0AE1                     l4269:	
  4690                           
  4691                           ;usb_device.c: 1561: else
  4692                           ;usb_device.c: 1562: {
  4693                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  4694  0AE1  3565               	lslf	USBConfigureEndpoint@EPNum^(0+256),w
  4695  0AE2  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  4696  0AE3  0086               	movwf	6
  4697  0AE4  3001               	movlw	1	; select bank3/4
  4698  0AE5  0087               	movwf	7
  4699  0AE6  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  4700  0AE7  3FC0               	movwi [0]fsr1
  4701  0AE8  3000               	movlw	0
  4702  0AE9  3FC1               	movwi [1]fsr1
  4703  0AEA                     l4271:	
  4704                           
  4705                           ;usb_device.c: 1564: }
  4706                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  4707  0AEA  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  4708  0AEB  0086               	movwf	6
  4709  0AEC  0187               	clrf	7
  4710  0AED  1301               	bcf	1,6
  4711                           
  4712                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  4713  0AEE  0866               	movf	USBConfigureEndpoint@handle^(0+256),w
  4714  0AEF  3E04               	addlw	4
  4715  0AF0  0086               	movwf	6
  4716  0AF1  0187               	clrf	7
  4717  0AF2  1701               	bsf	1,6
  4718  0AF3  0008               	return
  4719  0AF4                     __end_of_USBConfigureEndpoint:	
  4720                           
  4721                           	psect	intentry
  4722  0004                     __pintentry:	
  4723 ;; *************** function _SYS_InterruptHigh *****************
  4724 ;; Defined at:
  4725 ;;		line 105 in file "system.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;		None
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;		None
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      void 
  4732 ;; Registers used:
  4733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4741 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4742 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4743 ;;Total ram usage:        1 bytes
  4744 ;; Hardware stack levels used:    1
  4745 ;; Hardware stack levels required when called:    9
  4746 ;; This function calls:
  4747 ;;		_USBDeviceTasks
  4748 ;; This function is called by:
  4749 ;;		Interrupt level 1
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753  0004                     _SYS_InterruptHigh:	
  4754                           
  4755                           ;incstack = 0
  4756  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4757                           
  4758                           ; Regs used in _SYS_InterruptHigh: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4759  0005  3180               	pagesel	$
  4760  0006  0020               	movlb	0	; select bank0
  4761  0007  087F               	movf	127,w
  4762  0008  0021               	movlb	1	; select bank1
  4763  0009  00EB               	movwf	??_SYS_InterruptHigh^(0+128)
  4764                           
  4765                           ;system.c: 108: USBDeviceTasks();
  4766  000A  3181  216D         	fcall	_USBDeviceTasks
  4767  000C  0021               	movlb	1	; select bank1
  4768  000D  086B               	movf	??_SYS_InterruptHigh^(0+128),w
  4769  000E  0020               	movlb	0	; select bank0
  4770  000F  00FF               	movwf	127
  4771  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4772  0011  0009               	retfie
  4773  0012                     __end_of_SYS_InterruptHigh:	
  4774                           
  4775                           	psect	text19
  4776  016D                     __ptext19:	
  4777 ;; *************** function _USBDeviceTasks *****************
  4778 ;; Defined at:
  4779 ;;		line 477 in file "../lib/usb/src/usb_device.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;		None
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;  i               1   15[BANK0 ] unsigned char 
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  1    wreg      void 
  4786 ;; Registers used:
  4787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4794 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4795 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4796 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4797 ;;Total ram usage:        3 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:    8
  4800 ;; This function calls:
  4801 ;;		_USBCtrlEPAllowStatusStage
  4802 ;;		_USBCtrlEPService
  4803 ;;		_USBIncrement1msInternalTimers
  4804 ;;		_USBStallHandler
  4805 ;;		_USBSuspend
  4806 ;;		_USBWakeFromSuspend
  4807 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4808 ;;		i1_USBDeviceInit
  4809 ;; This function is called by:
  4810 ;;		_SYS_InterruptHigh
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           
  4815                           ;psect for function _USBDeviceTasks
  4816  016D                     _USBDeviceTasks:	
  4817                           
  4818                           ;usb_device.c: 479: uint8_t i;
  4819                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  4820                           
  4821                           ;incstack = 0
  4822                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4823  016D  0021               	movlb	1	; select bank1
  4824  016E  0362               	decf	_USBDeviceState^(0+128),w	;volatile
  4825  016F  1D03               	btfss	3,2
  4826  0170  297C               	goto	i1l3725
  4827                           
  4828                           ;usb_device.c: 591: {
  4829                           ;usb_device.c: 601: if(!UCONbits.SE0)
  4830  0171  003D               	movlb	29	; select bank29
  4831  0172  1A8E               	btfsc	14,5	;volatile
  4832  0173  297C               	goto	i1l3725
  4833                           
  4834                           ;usb_device.c: 602: {
  4835                           ;usb_device.c: 608: {UIR = 0;};
  4836  0174  0190               	clrf	16	;volatile
  4837                           
  4838                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  4839  0175  1412               	bsf	18,0	;volatile
  4840                           
  4841                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  4842  0176  1612               	bsf	18,4	;volatile
  4843                           
  4844                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  4845  0177  3002               	movlw	2
  4846  0178  0021               	movlb	1	; select bank1
  4847  0179  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4848  017A  0869               	movf	??_USBDeviceTasks^(0+128),w
  4849  017B  00E2               	movwf	_USBDeviceState^(0+128)	;volatile
  4850  017C                     i1l3725:	
  4851                           
  4852                           ;usb_device.c: 617: }
  4853                           ;usb_device.c: 618: }
  4854                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  4855  017C  003D               	movlb	29	; select bank29
  4856  017D  1910               	btfsc	16,2	;volatile
  4857  017E  1D12               	btfss	18,2	;volatile
  4858  017F  2989               	goto	i1l3733
  4859                           
  4860                           ;usb_device.c: 635: {
  4861                           ;usb_device.c: 636: (UIR &= 0xFB);
  4862  0180  30FB               	movlw	251
  4863  0181  0021               	movlb	1	; select bank1
  4864  0182  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4865  0183  0869               	movf	??_USBDeviceTasks^(0+128),w
  4866  0184  003D               	movlb	29	; select bank29
  4867  0185  0590               	andwf	16,f	;volatile
  4868                           
  4869                           ;usb_device.c: 640: USBWakeFromSuspend();
  4870  0186  3188  20C4  3181   	fcall	_USBWakeFromSuspend
  4871  0189                     i1l3733:	
  4872                           
  4873                           ;usb_device.c: 642: }
  4874                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  4875  0189  003D               	movlb	29	; select bank29
  4876  018A  1C8E               	btfss	14,1	;volatile
  4877  018B  298F               	goto	i1l184
  4878                           
  4879                           ;usb_device.c: 648: {
  4880                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
  4881  018C  0020               	movlb	0	; select bank0
  4882  018D  1112               	bcf	18,2	;volatile
  4883                           
  4884                           ;usb_device.c: 650: return;
  4885  018E  0008               	return
  4886  018F                     i1l184:	
  4887                           
  4888                           ;usb_device.c: 651: }
  4889                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  4890  018F  1810               	btfsc	16,0	;volatile
  4891  0190  1C12               	btfss	18,0	;volatile
  4892  0191  29A0               	goto	i1l3747
  4893                           
  4894                           ;usb_device.c: 664: {
  4895                           ;usb_device.c: 665: USBDeviceInit();
  4896  0192  3184  2483  3181   	fcall	i1_USBDeviceInit
  4897                           
  4898                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  4899  0195  0021               	movlb	1	; select bank1
  4900  0196  1512               	bsf	18,2	;volatile
  4901                           
  4902                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  4903  0197  3004               	movlw	4
  4904  0198  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4905  0199  0869               	movf	??_USBDeviceTasks^(0+128),w
  4906  019A  00E2               	movwf	_USBDeviceState^(0+128)	;volatile
  4907                           
  4908                           ;usb_device.c: 681: (UIR &= 0xFE);
  4909  019B  30FE               	movlw	254
  4910  019C  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4911  019D  0869               	movf	??_USBDeviceTasks^(0+128),w
  4912  019E  003D               	movlb	29	; select bank29
  4913  019F  0590               	andwf	16,f	;volatile
  4914  01A0                     i1l3747:	
  4915                           
  4916                           ;usb_device.c: 682: }
  4917                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  4918  01A0  1A10               	btfsc	16,4	;volatile
  4919  01A1  1E12               	btfss	18,4	;volatile
  4920  01A2  29A6               	goto	i1l3753
  4921                           
  4922                           ;usb_device.c: 688: {
  4923                           ;usb_device.c: 694: USBSuspend();
  4924  01A3  3188  2085  3181   	fcall	_USBSuspend
  4925  01A6                     i1l3753:	
  4926                           
  4927                           ;usb_device.c: 696: }
  4928                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  4929  01A6  003D               	movlb	29	; select bank29
  4930  01A7  1F10               	btfss	16,6	;volatile
  4931  01A8  29D0               	goto	i1l3769
  4932                           
  4933                           ;usb_device.c: 709: {
  4934                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  4935  01A9  1F12               	btfss	18,6	;volatile
  4936  01AA  29BB               	goto	i1l3759
  4937                           
  4938                           ;usb_device.c: 712: {
  4939                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  4940  01AB  3073               	movlw	115
  4941  01AC  0020               	movlb	0	; select bank0
  4942  01AD  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  4943  01AE  3000               	movlw	0
  4944  01AF  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  4945  01B0  3000               	movlw	0
  4946  01B1  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  4947  01B2  3000               	movlw	0
  4948  01B3  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  4949  01B4  3001               	movlw	1
  4950  01B5  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  4951  01B6  3000               	movlw	0
  4952  01B7  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  4953  01B8  3189  21F9  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  4954  01BB                     i1l3759:	
  4955                           
  4956                           ;usb_device.c: 714: }
  4957                           ;usb_device.c: 715: (UIR &= 0xBF);
  4958  01BB  30BF               	movlw	191
  4959  01BC  0021               	movlb	1	; select bank1
  4960  01BD  00E9               	movwf	??_USBDeviceTasks^(0+128)
  4961  01BE  0869               	movf	??_USBDeviceTasks^(0+128),w
  4962  01BF  003D               	movlb	29	; select bank29
  4963  01C0  0590               	andwf	16,f	;volatile
  4964                           
  4965                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  4966  01C1  3188  2035  3181   	fcall	_USBIncrement1msInternalTimers
  4967                           
  4968                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  4969  01C4  0023               	movlb	3	; select bank3
  4970  01C5  0851               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  4971  01C6  1903               	btfsc	3,2
  4972  01C7  29CA               	goto	i1l190
  4973                           
  4974                           ;usb_device.c: 736: {
  4975                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  4976  01C8  3001               	movlw	1
  4977  01C9  02D1               	subwf	_USBStatusStageTimeoutCounter^(0+384),f	;volatile
  4978  01CA                     i1l190:	
  4979                           
  4980                           ;usb_device.c: 738: }
  4981                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  4982  01CA  0851               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  4983  01CB  1D03               	btfss	3,2
  4984  01CC  29D0               	goto	i1l3769
  4985                           
  4986                           ;usb_device.c: 745: {
  4987                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  4988  01CD  318D  257B  3181   	fcall	_USBCtrlEPAllowStatusStage
  4989  01D0                     i1l3769:	
  4990                           
  4991                           ;usb_device.c: 747: }
  4992                           ;usb_device.c: 749: }
  4993                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  4994  01D0  003D               	movlb	29	; select bank29
  4995  01D1  1A90               	btfsc	16,5	;volatile
  4996  01D2  1E92               	btfss	18,5	;volatile
  4997  01D3  29D7               	goto	i1l3775
  4998                           
  4999                           ;usb_device.c: 752: {
  5000                           ;usb_device.c: 753: USBStallHandler();
  5001  01D4  3188  20E4  3181   	fcall	_USBStallHandler
  5002  01D7                     i1l3775:	
  5003                           
  5004                           ;usb_device.c: 754: }
  5005                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  5006  01D7  003D               	movlb	29	; select bank29
  5007  01D8  1890               	btfsc	16,1	;volatile
  5008  01D9  1C92               	btfss	18,1	;volatile
  5009  01DA  29ED               	goto	i1l3783
  5010                           
  5011                           ;usb_device.c: 757: {
  5012                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  5013  01DB  30FF               	movlw	255
  5014  01DC  0020               	movlb	0	; select bank0
  5015  01DD  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5016  01DE  307F               	movlw	127
  5017  01DF  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5018  01E0  3000               	movlw	0
  5019  01E1  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5020  01E2  3000               	movlw	0
  5021  01E3  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5022  01E4  3001               	movlw	1
  5023  01E5  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5024  01E6  3000               	movlw	0
  5025  01E7  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5026  01E8  3189  21F9  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5027                           
  5028                           ;usb_device.c: 759: {UEIR = 0;};
  5029  01EB  003D               	movlb	29	; select bank29
  5030  01EC  0193               	clrf	19	;volatile
  5031  01ED                     i1l3783:	
  5032                           
  5033                           ;usb_device.c: 767: }
  5034                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  5035  01ED  3004               	movlw	4
  5036  01EE  0021               	movlb	1	; select bank1
  5037  01EF  0262               	subwf	_USBDeviceState^(0+128),w	;volatile
  5038  01F0  1803               	skipnc
  5039  01F1  29F5               	goto	i1l194
  5040                           
  5041                           ;usb_device.c: 775: {
  5042                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  5043  01F2  0020               	movlb	0	; select bank0
  5044  01F3  1112               	bcf	18,2	;volatile
  5045                           
  5046                           ;usb_device.c: 777: return;
  5047  01F4  0008               	return
  5048  01F5                     i1l194:	
  5049                           
  5050                           ;usb_device.c: 778: }
  5051                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  5052  01F5  003D               	movlb	29	; select bank29
  5053  01F6  1D92               	btfss	18,3	;volatile
  5054  01F7  2A4E               	goto	i1l195
  5055                           
  5056                           ;usb_device.c: 784: {
  5057                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  5058  01F8  0020               	movlb	0	; select bank0
  5059  01F9  01EF               	clrf	USBDeviceTasks@i
  5060  01FA  3004               	movlw	4
  5061  01FB  026F               	subwf	USBDeviceTasks@i,w
  5062  01FC  1803               	btfsc	3,0
  5063  01FD  2A4E               	goto	i1l195
  5064  01FE                     i1l196:	
  5065                           
  5066                           ;usb_device.c: 786: {
  5067                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  5068  01FE  003D               	movlb	29	; select bank29
  5069  01FF  1D90               	btfss	16,3	;volatile
  5070  0200  2A4E               	goto	i1l195
  5071                           
  5072                           ;usb_device.c: 788: {
  5073                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  5074  0201  080F               	movf	15,w	;volatile
  5075  0202  0021               	movlb	1	; select bank1
  5076  0203  00E9               	movwf	??_USBDeviceTasks^(0+128)
  5077  0204  0869               	movf	??_USBDeviceTasks^(0+128),w
  5078  0205  00E5               	movwf	_USTATcopy^(0+128)	;volatile
  5079                           
  5080                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  5081  0206  0C65               	rrf	_USTATcopy^(0+128),w	;volatile
  5082  0207  00E9               	movwf	??_USBDeviceTasks^(0+128)
  5083  0208  0CE9               	rrf	??_USBDeviceTasks^(0+128),f
  5084  0209  0C69               	rrf	??_USBDeviceTasks^(0+128),w
  5085  020A  390F               	andlw	15
  5086  020B  00EA               	movwf	(??_USBDeviceTasks+1)^(0+128)
  5087  020C  086A               	movf	(??_USBDeviceTasks+1)^(0+128),w
  5088  020D  0023               	movlb	3	; select bank3
  5089  020E  00D8               	movwf	_endpoint_number^(0+384)	;volatile
  5090                           
  5091                           ;usb_device.c: 793: (UIR &= 0xF7);
  5092  020F  30F7               	movlw	247
  5093  0210  0021               	movlb	1	; select bank1
  5094  0211  00E9               	movwf	??_USBDeviceTasks^(0+128)
  5095  0212  0869               	movf	??_USBDeviceTasks^(0+128),w
  5096  0213  003D               	movlb	29	; select bank29
  5097  0214  0590               	andwf	16,f	;volatile
  5098                           
  5099                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  5100  0215  0021               	movlb	1	; select bank1
  5101  0216  1965               	btfsc	_USTATcopy^(0+128),2	;volatile
  5102  0217  2A1C               	goto	i1l3803
  5103                           
  5104                           ;usb_device.c: 799: {
  5105                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  5106  0218  0023               	movlb	3	; select bank3
  5107  0219  0858               	movf	_endpoint_number^(0+384),w	;volatile
  5108  021A  3EBE               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5109  021B  2A1F               	goto	L4
  5110  021C                     i1l3803:	
  5111                           ;usb_device.c: 801: }
  5112                           
  5113                           
  5114                           ;usb_device.c: 802: else
  5115                           ;usb_device.c: 803: {
  5116                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  5117  021C  0023               	movlb	3	; select bank3
  5118  021D  0858               	movf	_endpoint_number^(0+384),w	;volatile
  5119  021E  3EBB               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5120  021F                     L4:	
  5121  021F  0086               	movwf	6
  5122  0220  3001               	movlw	1	; select bank3/4
  5123  0221  0087               	movwf	7
  5124  0222  0801               	movf	1,w
  5125  0223  3901               	andlw	1
  5126  0224  0021               	movlb	1	; select bank1
  5127  0225  00E9               	movwf	??_USBDeviceTasks^(0+128)
  5128  0226  3001               	movlw	1
  5129  0227  06E9               	xorwf	??_USBDeviceTasks^(0+128),f
  5130  0228  0801               	movf	1,w
  5131  0229  0669               	xorwf	??_USBDeviceTasks^(0+128),w
  5132  022A  39FE               	andlw	-2
  5133  022B  0669               	xorwf	??_USBDeviceTasks^(0+128),w
  5134  022C  0081               	movwf	1
  5135                           
  5136                           ;usb_device.c: 805: }
  5137                           ;usb_device.c: 810: if(endpoint_number == 0)
  5138  022D  0023               	movlb	3	; select bank3
  5139  022E  0858               	movf	_endpoint_number^(0+384),w	;volatile
  5140  022F  1D03               	btfss	3,2
  5141  0230  2A35               	goto	i1l3809
  5142                           
  5143                           ;usb_device.c: 811: {
  5144                           ;usb_device.c: 812: USBCtrlEPService();
  5145  0231  318B  2348  3181   	fcall	_USBCtrlEPService
  5146                           
  5147                           ;usb_device.c: 813: }
  5148  0234  2A44               	goto	i1l3811
  5149  0235                     i1l3809:	
  5150                           
  5151                           ;usb_device.c: 814: else
  5152                           ;usb_device.c: 815: {
  5153                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  5154  0235  3072               	movlw	114
  5155  0236  0020               	movlb	0	; select bank0
  5156  0237  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5157  0238  3000               	movlw	0
  5158  0239  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5159  023A  30E5               	movlw	low _USTATcopy
  5160  023B  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5161  023C  3000               	movlw	high _USTATcopy
  5162  023D  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5163  023E  3000               	movlw	0
  5164  023F  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5165  0240  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5166  0241  3189  21F9  3181   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5167  0244                     i1l3811:	
  5168                           ;usb_device.c: 819: else
  5169                           ;usb_device.c: 820: {
  5170                           ;usb_device.c: 821: break;
  5171                           
  5172                           ;usb_device.c: 817: }
  5173                           ;usb_device.c: 818: }
  5174                           
  5175  0244  3001               	movlw	1
  5176  0245  0021               	movlb	1	; select bank1
  5177  0246  00E9               	movwf	??_USBDeviceTasks^(0+128)
  5178  0247  0869               	movf	??_USBDeviceTasks^(0+128),w
  5179  0248  0020               	movlb	0	; select bank0
  5180  0249  07EF               	addwf	USBDeviceTasks@i,f
  5181  024A  3004               	movlw	4
  5182  024B  026F               	subwf	USBDeviceTasks@i,w
  5183  024C  1C03               	skipc
  5184  024D  29FE               	goto	i1l196
  5185  024E                     i1l195:	
  5186                           
  5187                           ;usb_device.c: 822: }
  5188                           ;usb_device.c: 823: }
  5189                           ;usb_device.c: 824: }
  5190                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  5191  024E  0020               	movlb	0	; select bank0
  5192  024F  1112               	bcf	18,2	;volatile
  5193  0250  0008               	return
  5194  0251                     __end_of_USBDeviceTasks:	
  5195                           
  5196                           	psect	text20
  5197  0483                     __ptext20:	
  5198 ;; *************** function i1_USBDeviceInit *****************
  5199 ;; Defined at:
  5200 ;;		line 277 in file "../lib/usb/src/usb_device.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;		None
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;  USBDeviceIni    2    1[COMMON] PTR unsigned char 
  5205 ;;		 -> UEP1(1), 
  5206 ;;  USBDeviceIni    1    4[COMMON] unsigned char 
  5207 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  1    wreg      void 
  5210 ;; Registers used:
  5211 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5218 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5220 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5221 ;;Total ram usage:        5 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; This function calls:
  5224 ;;		Nothing
  5225 ;; This function is called by:
  5226 ;;		_USBDeviceTasks
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           
  5231                           ;psect for function i1_USBDeviceInit
  5232  0483                     i1_USBDeviceInit:	
  5233                           
  5234                           ;usb_device.c: 279: uint8_t i;
  5235                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  5236                           
  5237                           ;incstack = 0
  5238                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  5239  0483  0021               	movlb	1	; select bank1
  5240  0484  1112               	bcf	18,2	;volatile
  5241                           
  5242                           ;usb_device.c: 285: ;
  5243                           ;usb_device.c: 288: {UEIR = 0;};
  5244  0485  003D               	movlb	29	; select bank29
  5245  0486  0193               	clrf	19	;volatile
  5246                           
  5247                           ;usb_device.c: 291: {UIR = 0;};
  5248  0487  0190               	clrf	16	;volatile
  5249                           
  5250                           ;usb_device.c: 294: UEP0 = 0;
  5251  0488  0198               	clrf	24	;volatile
  5252                           
  5253                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  5254  0489  300E               	movlw	14
  5255  048A  00F2               	movwf	i1USBDeviceInit@p+1
  5256  048B  3099               	movlw	153
  5257  048C  00F1               	movwf	i1USBDeviceInit@p
  5258  048D  01F3               	clrf	i1USBDeviceInit@i_821
  5259  048E  3002               	movlw	2
  5260  048F  0273               	subwf	i1USBDeviceInit@i_821,w
  5261  0490  1803               	btfsc	3,0
  5262  0491  2CA3               	goto	i1l3533
  5263  0492                     i1l3525:	
  5264  0492  0871               	movf	i1USBDeviceInit@p,w
  5265  0493  0086               	movwf	6
  5266  0494  0872               	movf	i1USBDeviceInit@p+1,w
  5267  0495  0087               	movwf	7
  5268  0496  0181               	clrf	1
  5269  0497  3001               	movlw	1
  5270  0498  07F1               	addwf	i1USBDeviceInit@p,f
  5271  0499  3000               	movlw	0
  5272  049A  3DF2               	addwfc	i1USBDeviceInit@p+1,f
  5273  049B  3001               	movlw	1
  5274  049C  00F0               	movwf	??i1_USBDeviceInit
  5275  049D  0870               	movf	??i1_USBDeviceInit,w
  5276  049E  07F3               	addwf	i1USBDeviceInit@i_821,f
  5277  049F  3002               	movlw	2
  5278  04A0  0273               	subwf	i1USBDeviceInit@i_821,w
  5279  04A1  1C03               	skipc
  5280  04A2  2C92               	goto	i1l3525
  5281  04A3                     i1l3533:	
  5282                           
  5283                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  5284  04A3  3016               	movlw	22
  5285  04A4  003D               	movlb	29	; select bank29
  5286  04A5  0091               	movwf	17	;volatile
  5287  04A6  309F               	movlw	159
  5288  04A7  0097               	movwf	23	;volatile
  5289  04A8  307B               	movlw	123
  5290  04A9  0092               	movwf	18	;volatile
  5291                           
  5292                           ;usb_device.c: 301: ;
  5293                           ;usb_device.c: 304: ;
  5294                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  5295  04AA  01F4               	clrf	i1USBDeviceInit@i
  5296  04AB  300C               	movlw	12
  5297  04AC  0274               	subwf	i1USBDeviceInit@i,w
  5298  04AD  1803               	btfsc	3,0
  5299  04AE  2CC8               	goto	i1l173
  5300  04AF                     i1l3541:	
  5301                           
  5302                           ;usb_device.c: 308: {
  5303                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  5304  04AF  0874               	movf	i1USBDeviceInit@i,w
  5305  04B0  00F0               	movwf	??i1_USBDeviceInit
  5306  04B1  3001               	movlw	1
  5307  04B2                     u291_25:	
  5308  04B2  35F0               	lslf	??i1_USBDeviceInit,f
  5309  04B3  3EFF               	addlw	-1
  5310  04B4  1D03               	skipz
  5311  04B5  2CB2               	goto	u291_25
  5312  04B6  3570               	lslf	??i1_USBDeviceInit,w
  5313  04B7  3E20               	addlw	32
  5314  04B8  0086               	movwf	6
  5315  04B9  0187               	clrf	7
  5316  04BA  3000               	movlw	0
  5317  04BB  3FC0               	movwi [0]fsr1
  5318  04BC  3000               	movlw	0
  5319  04BD  3FC1               	movwi [1]fsr1
  5320  04BE  3FC2               	movwi [2]fsr1
  5321  04BF  3FC3               	movwi [3]fsr1
  5322  04C0  3001               	movlw	1
  5323  04C1  00F0               	movwf	??i1_USBDeviceInit
  5324  04C2  0870               	movf	??i1_USBDeviceInit,w
  5325  04C3  07F4               	addwf	i1USBDeviceInit@i,f
  5326  04C4  300C               	movlw	12
  5327  04C5  0274               	subwf	i1USBDeviceInit@i,w
  5328  04C6  1C03               	skipc
  5329  04C7  2CAF               	goto	i1l3541
  5330  04C8                     i1l173:	
  5331                           
  5332                           ;usb_device.c: 310: }
  5333                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  5334  04C8  003D               	movlb	29	; select bank29
  5335  04C9  170E               	bsf	14,6	;volatile
  5336                           
  5337                           ;usb_device.c: 316: UADDR = 0x00;
  5338  04CA  0196               	clrf	22	;volatile
  5339                           
  5340                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  5341  04CB  120E               	bcf	14,4	;volatile
  5342                           
  5343                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  5344  04CC  130E               	bcf	14,6	;volatile
  5345  04CD                     i1l3553:	
  5346                           ;usb_device.c: 325: do
  5347                           
  5348                           
  5349                           ;usb_device.c: 326: {
  5350                           ;usb_device.c: 327: (UIR &= 0xF7);
  5351  04CD  30F7               	movlw	247
  5352  04CE  00F0               	movwf	??i1_USBDeviceInit
  5353  04CF  0870               	movf	??i1_USBDeviceInit,w
  5354  04D0  0590               	andwf	16,f	;volatile
  5355                           
  5356                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  5357  04D1  0022               	movlb	2	; select bank2
  5358  04D2  01ED               	clrf	(_inPipes^(0+256)+2)	;volatile
  5359                           
  5360                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  5361  04D3  0023               	movlb	3	; select bank3
  5362  04D4  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  5363                           
  5364                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  5365  04D5  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  5366  04D6  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  5367                           
  5368                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  5369  04D7  003D               	movlb	29	; select bank29
  5370  04D8  1990               	btfsc	16,3	;volatile
  5371  04D9  2CCD               	goto	i1l3553
  5372                           
  5373                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  5374  04DA  3001               	movlw	1
  5375  04DB  00F0               	movwf	??i1_USBDeviceInit
  5376  04DC  0870               	movf	??i1_USBDeviceInit,w
  5377  04DD  0023               	movlb	3	; select bank3
  5378  04DE  00CF               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5379                           
  5380                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  5381  04DF  3001               	movlw	1
  5382  04E0  00F0               	movwf	??i1_USBDeviceInit
  5383  04E1  0870               	movf	??i1_USBDeviceInit,w
  5384  04E2  00D0               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5385                           
  5386                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  5387  04E3  01CC               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  5388                           
  5389                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  5390  04E4  01CD               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  5391                           
  5392                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  5393  04E5  01CB               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  5394                           
  5395                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  5396  04E6  01F4               	clrf	i1USBDeviceInit@i
  5397  04E7  3003               	movlw	3
  5398  04E8  0274               	subwf	i1USBDeviceInit@i,w
  5399  04E9  1803               	btfsc	3,0
  5400  04EA  2D0F               	goto	i1l3581
  5401  04EB                     i1l3575:	
  5402                           
  5403                           ;usb_device.c: 346: {
  5404                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  5405  04EB  3574               	lslf	i1USBDeviceInit@i,w
  5406  04EC  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  5407  04ED  0086               	movwf	6
  5408  04EE  3001               	movlw	1	; select bank3/4
  5409  04EF  0087               	movwf	7
  5410  04F0  3000               	movlw	0
  5411  04F1  3FC0               	movwi [0]fsr1
  5412  04F2  3FC1               	movwi [1]fsr1
  5413                           
  5414                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  5415  04F3  3574               	lslf	i1USBDeviceInit@i,w
  5416  04F4  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5417  04F5  0086               	movwf	6
  5418  04F6  3001               	movlw	1	; select bank3/4
  5419  04F7  0087               	movwf	7
  5420  04F8  3000               	movlw	0
  5421  04F9  3FC0               	movwi [0]fsr1
  5422  04FA  3FC1               	movwi [1]fsr1
  5423                           
  5424                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  5425  04FB  0874               	movf	i1USBDeviceInit@i,w
  5426  04FC  3EBB               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5427  04FD  0086               	movwf	6
  5428  04FE  3001               	movlw	1	; select bank3/4
  5429  04FF  0087               	movwf	7
  5430  0500  0181               	clrf	1
  5431                           
  5432                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  5433  0501  0874               	movf	i1USBDeviceInit@i,w
  5434  0502  3EBE               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5435  0503  0086               	movwf	6
  5436  0504  3001               	movlw	1	; select bank3/4
  5437  0505  0087               	movwf	7
  5438  0506  0181               	clrf	1
  5439  0507  3001               	movlw	1
  5440  0508  00F0               	movwf	??i1_USBDeviceInit
  5441  0509  0870               	movf	??i1_USBDeviceInit,w
  5442  050A  07F4               	addwf	i1USBDeviceInit@i,f
  5443  050B  3003               	movlw	3
  5444  050C  0274               	subwf	i1USBDeviceInit@i,w
  5445  050D  1C03               	skipc
  5446  050E  2CEB               	goto	i1l3575
  5447  050F                     i1l3581:	
  5448                           
  5449                           ;usb_device.c: 351: }
  5450                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5451  050F  3028               	movlw	40
  5452  0510  0023               	movlb	3	; select bank3
  5453  0511  00A7               	movwf	_pBDTEntryIn^(0+384)
  5454  0512  3000               	movlw	0
  5455  0513  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  5456                           
  5457                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  5458  0514  3016               	movlw	22
  5459  0515  003D               	movlb	29	; select bank29
  5460  0516  0098               	movwf	24	;volatile
  5461                           
  5462                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5463  0517  3000               	movlw	0
  5464  0518  0020               	movlb	0	; select bank0
  5465  0519  00A3               	movwf	35	;volatile
  5466  051A  3050               	movlw	80
  5467  051B  00A2               	movwf	34	;volatile
  5468                           
  5469                           ;usb_device.c: 359: BDT[0].CNT = 8;
  5470  051C  3008               	movlw	8
  5471  051D  00A1               	movwf	33	;volatile
  5472                           
  5473                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  5474  051E  3004               	movlw	4
  5475  051F  00F0               	movwf	??i1_USBDeviceInit
  5476  0520  0870               	movf	??i1_USBDeviceInit,w
  5477  0521  00A0               	movwf	32	;volatile
  5478                           
  5479                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  5480  0522  17A0               	bsf	32,7	;volatile
  5481                           
  5482                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  5483  0523  0023               	movlb	3	; select bank3
  5484  0524  01E4               	clrf	_USBActiveConfiguration^(0+384)	;volatile
  5485                           
  5486                           ;usb_device.c: 366: USB1msTickCount = 0;
  5487  0525  3000               	movlw	0
  5488  0526  00BA               	movwf	(_USB1msTickCount+3)^(0+384)	;volatile
  5489  0527  3000               	movlw	0
  5490  0528  00B9               	movwf	(_USB1msTickCount+2)^(0+384)	;volatile
  5491  0529  3000               	movlw	0
  5492  052A  00B8               	movwf	(_USB1msTickCount+1)^(0+384)	;volatile
  5493  052B  3000               	movlw	0
  5494  052C  00B7               	movwf	_USB1msTickCount^(0+384)	;volatile
  5495                           
  5496                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  5497  052D  01D2               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5498                           
  5499                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  5500  052E  0021               	movlb	1	; select bank1
  5501  052F  01E2               	clrf	_USBDeviceState^(0+128)	;volatile
  5502  0530  0008               	return
  5503  0531                     __end_ofi1_USBDeviceInit:	
  5504                           
  5505                           	psect	text21
  5506  08C4                     __ptext21:	
  5507 ;; *************** function _USBWakeFromSuspend *****************
  5508 ;; Defined at:
  5509 ;;		line 2303 in file "../lib/usb/src/usb_device.c"
  5510 ;; Parameters:    Size  Location     Type
  5511 ;;		None
  5512 ;; Auto vars:     Size  Location     Type
  5513 ;;		None
  5514 ;; Return value:  Size  Location     Type
  5515 ;;                  1    wreg      void 
  5516 ;; Registers used:
  5517 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5518 ;; Tracked objects:
  5519 ;;		On entry : 0/0
  5520 ;;		On exit  : 0/0
  5521 ;;		Unchanged: 0/0
  5522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5525 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5526 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5527 ;;Total ram usage:        1 bytes
  5528 ;; Hardware stack levels used:    1
  5529 ;; Hardware stack levels required when called:    4
  5530 ;; This function calls:
  5531 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5532 ;; This function is called by:
  5533 ;;		_USBDeviceTasks
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           
  5538                           ;psect for function _USBWakeFromSuspend
  5539  08C4                     _USBWakeFromSuspend:	
  5540                           
  5541                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  5542                           
  5543                           ;incstack = 0
  5544                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5545  08C4  0023               	movlb	3	; select bank3
  5546  08C5  01CB               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  5547                           
  5548                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  5549  08C6  3074               	movlw	116
  5550  08C7  0020               	movlb	0	; select bank0
  5551  08C8  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5552  08C9  3000               	movlw	0
  5553  08CA  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5554  08CB  3000               	movlw	0
  5555  08CC  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5556  08CD  3000               	movlw	0
  5557  08CE  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5558  08CF  3000               	movlw	0
  5559  08D0  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5560  08D1  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5561  08D2  3189  21F9  3188   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5562                           
  5563                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  5564  08D5  003D               	movlb	29	; select bank29
  5565  08D6  108E               	bcf	14,1	;volatile
  5566                           
  5567                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  5568  08D7  1112               	bcf	18,2	;volatile
  5569  08D8                     i1l3393:	
  5570                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  5571                           
  5572  08D8  1D10               	btfss	16,2	;volatile
  5573  08D9  28E1               	goto	i1l3395
  5574                           
  5575                           ;usb_device.c: 2343: {
  5576                           ;usb_device.c: 2344: (UIR &= 0xFB);
  5577  08DA  30FB               	movlw	251
  5578  08DB  0020               	movlb	0	; select bank0
  5579  08DC  00E6               	movwf	??_USBWakeFromSuspend
  5580  08DD  0866               	movf	??_USBWakeFromSuspend,w
  5581  08DE  003D               	movlb	29	; select bank29
  5582  08DF  0590               	andwf	16,f	;volatile
  5583  08E0  28D8               	goto	i1l3393
  5584  08E1                     i1l3395:	
  5585                           
  5586                           ;usb_device.c: 2345: }
  5587                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  5588  08E1  0023               	movlb	3	; select bank3
  5589  08E2  01D2               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5590  08E3  0008               	return
  5591  08E4                     __end_of_USBWakeFromSuspend:	
  5592                           
  5593                           	psect	text22
  5594  0885                     __ptext22:	
  5595 ;; *************** function _USBSuspend *****************
  5596 ;; Defined at:
  5597 ;;		line 2245 in file "../lib/usb/src/usb_device.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;		None
  5600 ;; Auto vars:     Size  Location     Type
  5601 ;;		None
  5602 ;; Return value:  Size  Location     Type
  5603 ;;                  1    wreg      void 
  5604 ;; Registers used:
  5605 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5606 ;; Tracked objects:
  5607 ;;		On entry : 0/0
  5608 ;;		On exit  : 0/0
  5609 ;;		Unchanged: 0/0
  5610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5613 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5614 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5615 ;;Total ram usage:        1 bytes
  5616 ;; Hardware stack levels used:    1
  5617 ;; Hardware stack levels required when called:    4
  5618 ;; This function calls:
  5619 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5620 ;; This function is called by:
  5621 ;;		_USBDeviceTasks
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625                           
  5626                           ;psect for function _USBSuspend
  5627  0885                     _USBSuspend:	
  5628                           
  5629                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  5630                           
  5631                           ;incstack = 0
  5632                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5633  0885  003D               	movlb	29	; select bank29
  5634  0886  1512               	bsf	18,2	;volatile
  5635                           
  5636                           ;usb_device.c: 2271: (UIR &= 0xEF);
  5637  0887  30EF               	movlw	239
  5638  0888  0020               	movlb	0	; select bank0
  5639  0889  00E6               	movwf	??_USBSuspend
  5640  088A  0866               	movf	??_USBSuspend,w
  5641  088B  003D               	movlb	29	; select bank29
  5642  088C  0590               	andwf	16,f	;volatile
  5643                           
  5644                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  5645  088D  148E               	bsf	14,1	;volatile
  5646                           
  5647                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  5648  088E  3001               	movlw	1
  5649  088F  0020               	movlb	0	; select bank0
  5650  0890  00E6               	movwf	??_USBSuspend
  5651  0891  0866               	movf	??_USBSuspend,w
  5652  0892  0023               	movlb	3	; select bank3
  5653  0893  00CB               	movwf	_USBBusIsSuspended^(0+384)	;volatile
  5654                           
  5655                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  5656  0894  01D2               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5657                           
  5658                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  5659  0895  3075               	movlw	117
  5660  0896  0020               	movlb	0	; select bank0
  5661  0897  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5662  0898  3000               	movlw	0
  5663  0899  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5664  089A  3000               	movlw	0
  5665  089B  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5666  089C  3000               	movlw	0
  5667  089D  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5668  089E  3000               	movlw	0
  5669  089F  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5670  08A0  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5671  08A1  3189  21F9         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5672  08A3  0008               	return
  5673  08A4                     __end_of_USBSuspend:	
  5674                           
  5675                           	psect	text23
  5676  08E4                     __ptext23:	
  5677 ;; *************** function _USBStallHandler *****************
  5678 ;; Defined at:
  5679 ;;		line 2202 in file "../lib/usb/src/usb_device.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;		None
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;		None
  5684 ;; Return value:  Size  Location     Type
  5685 ;;                  1    wreg      void 
  5686 ;; Registers used:
  5687 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5695 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5696 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5697 ;;Total ram usage:        1 bytes
  5698 ;; Hardware stack levels used:    1
  5699 ;; This function calls:
  5700 ;;		Nothing
  5701 ;; This function is called by:
  5702 ;;		_USBDeviceTasks
  5703 ;; This function uses a non-reentrant model
  5704 ;;
  5705                           
  5706                           
  5707                           ;psect for function _USBStallHandler
  5708  08E4                     _USBStallHandler:	
  5709                           
  5710                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  5711                           
  5712                           ;incstack = 0
  5713                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  5714  08E4  003D               	movlb	29	; select bank29
  5715  08E5  1C18               	btfss	24,0	;volatile
  5716  08E6  2906               	goto	i1l3427
  5717                           
  5718                           ;usb_device.c: 2215: {
  5719                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  5720  08E7  0021               	movlb	1	; select bank1
  5721  08E8  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5722  08E9  0086               	movwf	6
  5723  08EA  0187               	clrf	7
  5724  08EB  3080               	movlw	128
  5725  08EC  0601               	xorwf	1,w
  5726  08ED  1D03               	btfss	3,2
  5727  08EE  2904               	goto	i1l3425
  5728  08EF  0023               	movlb	3	; select bank3
  5729  08F0  0827               	movf	_pBDTEntryIn^(0+384),w
  5730  08F1  0086               	movwf	6
  5731  08F2  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  5732  08F3  0087               	movwf	7
  5733  08F4  3084               	movlw	132
  5734  08F5  0601               	xorwf	1,w
  5735  08F6  1D03               	btfss	3,2
  5736  08F7  2904               	goto	i1l3425
  5737                           
  5738                           ;usb_device.c: 2218: {
  5739                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5740  08F8  300C               	movlw	12
  5741  08F9  00F0               	movwf	??_USBStallHandler
  5742  08FA  0021               	movlb	1	; select bank1
  5743  08FB  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5744  08FC  0086               	movwf	6
  5745  08FD  0187               	clrf	7
  5746  08FE  0870               	movf	??_USBStallHandler,w
  5747  08FF  0081               	movwf	1
  5748                           
  5749                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  5750  0900  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5751  0901  0086               	movwf	6
  5752  0902  0187               	clrf	7
  5753  0903  1781               	bsf	1,7
  5754  0904                     i1l3425:	
  5755                           
  5756                           ;usb_device.c: 2222: }
  5757                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  5758  0904  003D               	movlb	29	; select bank29
  5759  0905  1018               	bcf	24,0	;volatile
  5760  0906                     i1l3427:	
  5761                           
  5762                           ;usb_device.c: 2224: }
  5763                           ;usb_device.c: 2226: (UIR &= 0xDF);
  5764  0906  30DF               	movlw	223
  5765  0907  00F0               	movwf	??_USBStallHandler
  5766  0908  0870               	movf	??_USBStallHandler,w
  5767  0909  0590               	andwf	16,f	;volatile
  5768  090A  0008               	return
  5769  090B                     __end_of_USBStallHandler:	
  5770                           
  5771                           	psect	text24
  5772  0835                     __ptext24:	
  5773 ;; *************** function _USBIncrement1msInternalTimers *****************
  5774 ;; Defined at:
  5775 ;;		line 3025 in file "../lib/usb/src/usb_device.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;		None
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;		None
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  1    wreg      void 
  5782 ;; Registers used:
  5783 ;;		wreg, status,2, status,0
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5791 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5792 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5793 ;;Total ram usage:        1 bytes
  5794 ;; Hardware stack levels used:    1
  5795 ;; This function calls:
  5796 ;;		Nothing
  5797 ;; This function is called by:
  5798 ;;		_USBDeviceTasks
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           
  5803                           ;psect for function _USBIncrement1msInternalTimers
  5804  0835                     _USBIncrement1msInternalTimers:	
  5805                           
  5806                           ;usb_device.c: 3033: USB1msTickCount++;
  5807                           
  5808                           ;incstack = 0
  5809                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  5810  0835  3001               	movlw	1
  5811  0836  0023               	movlb	3	; select bank3
  5812  0837  07B7               	addwf	_USB1msTickCount^(0+384),f	;volatile
  5813  0838  3000               	movlw	0
  5814  0839  3DB8               	addwfc	(_USB1msTickCount+1)^(0+384),f	;volatile
  5815  083A  3000               	movlw	0
  5816  083B  3DB9               	addwfc	(_USB1msTickCount+2)^(0+384),f	;volatile
  5817  083C  3000               	movlw	0
  5818  083D  3DBA               	addwfc	(_USB1msTickCount+3)^(0+384),f	;volatile
  5819                           
  5820                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  5821  083E  084B               	movf	_USBBusIsSuspended^(0+384),w	;volatile
  5822  083F  1D03               	btfss	3,2
  5823  0840  0008               	return
  5824                           
  5825                           ;usb_device.c: 3035: {
  5826                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  5827  0841  3001               	movlw	1
  5828  0842  00F0               	movwf	??_USBIncrement1msInternalTimers
  5829  0843  0870               	movf	??_USBIncrement1msInternalTimers,w
  5830  0844  07D2               	addwf	_USBTicksSinceSuspendEnd^(0+384),f	;volatile
  5831                           
  5832                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  5833  0845  0852               	movf	_USBTicksSinceSuspendEnd^(0+384),w	;volatile
  5834  0846  1D03               	btfss	3,2
  5835  0847  0008               	return
  5836                           
  5837                           ;usb_device.c: 3039: {
  5838                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  5839  0848  30FF               	movlw	255
  5840  0849  00F0               	movwf	??_USBIncrement1msInternalTimers
  5841  084A  0870               	movf	??_USBIncrement1msInternalTimers,w
  5842  084B  00D2               	movwf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5843  084C  0008               	return
  5844  084D                     __end_of_USBIncrement1msInternalTimers:	
  5845                           
  5846                           	psect	text25
  5847  0B48                     __ptext25:	
  5848 ;; *************** function _USBCtrlEPService *****************
  5849 ;; Defined at:
  5850 ;;		line 2372 in file "../lib/usb/src/usb_device.c"
  5851 ;; Parameters:    Size  Location     Type
  5852 ;;		None
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;		None
  5855 ;; Return value:  Size  Location     Type
  5856 ;;                  1    wreg      void 
  5857 ;; Registers used:
  5858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5859 ;; Tracked objects:
  5860 ;;		On entry : 0/0
  5861 ;;		On exit  : 0/0
  5862 ;;		Unchanged: 0/0
  5863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5866 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5867 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5868 ;;Total ram usage:        3 bytes
  5869 ;; Hardware stack levels used:    1
  5870 ;; Hardware stack levels required when called:    7
  5871 ;; This function calls:
  5872 ;;		_USBCtrlTrfInHandler
  5873 ;;		_USBCtrlTrfOutHandler
  5874 ;;		_USBCtrlTrfSetupHandler
  5875 ;; This function is called by:
  5876 ;;		_USBDeviceTasks
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880                           
  5881                           ;psect for function _USBCtrlEPService
  5882  0B48                     _USBCtrlEPService:	
  5883                           
  5884                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  5885                           
  5886                           ;incstack = 0
  5887                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5888  0B48  302D               	movlw	45
  5889  0B49  0021               	movlb	1	; select bank1
  5890  0B4A  00E6               	movwf	??_USBCtrlEPService^(0+128)
  5891  0B4B  0866               	movf	??_USBCtrlEPService^(0+128),w
  5892  0B4C  0023               	movlb	3	; select bank3
  5893  0B4D  00D1               	movwf	_USBStatusStageTimeoutCounter^(0+384)	;volatile
  5894                           
  5895                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  5896  0B4E  0021               	movlb	1	; select bank1
  5897  0B4F  0865               	movf	_USTATcopy^(0+128),w	;volatile
  5898  0B50  39FD               	andlw	253
  5899  0B51  1D03               	btfss	3,2
  5900  0B52  2B91               	goto	i1l3447
  5901                           
  5902                           ;usb_device.c: 2383: {
  5903                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  5904  0B53  3665               	lsrf	_USTATcopy^(0+128),w	;volatile
  5905  0B54  393F               	andlw	63
  5906  0B55  00E6               	movwf	??_USBCtrlEPService^(0+128)
  5907  0B56  3001               	movlw	1
  5908  0B57                     u278_25:	
  5909  0B57  35E6               	lslf	??_USBCtrlEPService^(0+128),f
  5910  0B58  3EFF               	addlw	-1
  5911  0B59  1D03               	skipz
  5912  0B5A  2B57               	goto	u278_25
  5913  0B5B  3566               	lslf	??_USBCtrlEPService^(0+128),w
  5914  0B5C  3E20               	addlw	32
  5915  0B5D  00E7               	movwf	(??_USBCtrlEPService+1)^(0+128)
  5916  0B5E  0867               	movf	(??_USBCtrlEPService+1)^(0+128),w
  5917  0B5F  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  5918                           
  5919                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5920  0B60  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5921  0B61  00E0               	movwf	_pBDTEntryEP0OutNext^(0+128)
  5922  0B62  39FF               	andlw	255
  5923  0B63  1D03               	skipz
  5924  0B64  3000               	movlw	0
  5925  0B65  00E1               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  5926                           
  5927                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  5928  0B66  3004               	movlw	4
  5929  0B67  0660               	xorwf	_pBDTEntryEP0OutNext^(0+128),w
  5930  0B68  00E0               	movwf	_pBDTEntryEP0OutNext^(0+128)
  5931  0B69  3000               	movlw	0
  5932  0B6A  0661               	xorwf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  5933  0B6B  00E1               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  5934                           
  5935                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  5936  0B6C  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5937  0B6D  0086               	movwf	6
  5938  0B6E  0187               	clrf	7
  5939  0B6F  0C01               	rrf	1,w
  5940  0B70  0C89               	rrf	9,f
  5941  0B71  390F               	andlw	15
  5942  0B72  3A0D               	xorlw	13
  5943  0B73  1D03               	skipz
  5944  0B74  2B8E               	goto	i1l3445
  5945                           
  5946                           ;usb_device.c: 2400: {
  5947                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
  5948  0B75  3050               	movlw	80
  5949  0B76  0086               	movwf	6
  5950  0B77  0187               	clrf	7
  5951  0B78  0021               	movlb	1	; select bank1
  5952  0B79  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  5953  0B7A  3E02               	addlw	2
  5954  0B7B  0084               	movwf	4
  5955  0B7C  0185               	clrf	5
  5956  0B7D  3F00               	moviw [0]fsr0
  5957  0B7E  00E6               	movwf	??_USBCtrlEPService^(0+128)
  5958  0B7F  3F01               	moviw [1]fsr0
  5959  0B80  00E7               	movwf	(??_USBCtrlEPService^(0+128)+1)
  5960  0B81  0866               	movf	??_USBCtrlEPService^(0+128),w
  5961  0B82  0084               	movwf	4
  5962  0B83  0867               	movf	(??_USBCtrlEPService+1)^(0+128),w
  5963  0B84  0085               	movwf	5
  5964  0B85  3008               	movlw	8
  5965  0B86  00E8               	movwf	(??_USBCtrlEPService+2)^(0+128)
  5966  0B87                     u280_2m0:	
  5967  0B87  0012               	moviw fsr0++
  5968  0B88  001E               	movwi fsr1++
  5969  0B89  0BE8               	decfsz	(??_USBCtrlEPService+2)^(0+128),f
  5970  0B8A  2B87               	goto	u280_2m0
  5971                           
  5972                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  5973  0B8B  318A  22F4         	fcall	_USBCtrlTrfSetupHandler
  5974                           
  5975                           ;usb_device.c: 2409: }
  5976  0B8D  0008               	return
  5977  0B8E                     i1l3445:	
  5978                           
  5979                           ;usb_device.c: 2410: else
  5980                           ;usb_device.c: 2411: {
  5981                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
  5982  0B8E  3189  21C2         	fcall	_USBCtrlTrfOutHandler
  5983                           
  5984                           ;usb_device.c: 2414: }
  5985                           ;usb_device.c: 2415: }
  5986  0B90  0008               	return
  5987  0B91                     i1l3447:	
  5988                           
  5989                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  5990  0B91  30FD               	movlw	253
  5991  0B92  0021               	movlb	1	; select bank1
  5992  0B93  0565               	andwf	_USTATcopy^(0+128),w	;volatile
  5993  0B94  00E6               	movwf	??_USBCtrlEPService^(0+128)
  5994  0B95  3004               	movlw	4
  5995  0B96  0666               	xorwf	??_USBCtrlEPService^(0+128),w
  5996  0B97  1D03               	btfss	3,2
  5997  0B98  0008               	return
  5998                           
  5999                           ;usb_device.c: 2417: {
  6000                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  6001  0B99  318D  250F         	fcall	_USBCtrlTrfInHandler
  6002  0B9B  0008               	return
  6003  0B9C                     __end_of_USBCtrlEPService:	
  6004                           
  6005                           	psect	text26
  6006  0AF4                     __ptext26:	
  6007 ;; *************** function _USBCtrlTrfSetupHandler *****************
  6008 ;; Defined at:
  6009 ;;		line 2465 in file "../lib/usb/src/usb_device.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;		None
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;		None
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  1    wreg      void 
  6016 ;; Registers used:
  6017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6025 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6026 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6027 ;;Total ram usage:        1 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; Hardware stack levels required when called:    6
  6030 ;; This function calls:
  6031 ;;		_USBCheckStdRequest
  6032 ;;		_USBCtrlEPServiceComplete
  6033 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6034 ;; This function is called by:
  6035 ;;		_USBCtrlEPService
  6036 ;; This function uses a non-reentrant model
  6037 ;;
  6038                           
  6039                           
  6040                           ;psect for function _USBCtrlTrfSetupHandler
  6041  0AF4                     _USBCtrlTrfSetupHandler:	
  6042                           
  6043                           ;usb_device.c: 2470: shortPacketStatus = 0;
  6044                           
  6045                           ;incstack = 0
  6046                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6047  0AF4  0023               	movlb	3	; select bank3
  6048  0AF5  01DA               	clrf	_shortPacketStatus^(0+384)	;volatile
  6049                           
  6050                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  6051  0AF6  01CE               	clrf	_USBDeferStatusStagePacket^(0+384)	;volatile
  6052                           
  6053                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  6054  0AF7  01CC               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  6055                           
  6056                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  6057  0AF8  01CD               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  6058                           
  6059                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  6060  0AF9  01C9               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  6061                           
  6062                           ;usb_device.c: 2475: controlTransferState = 0;
  6063  0AFA  0021               	movlb	1	; select bank1
  6064  0AFB  01E3               	clrf	_controlTransferState^(0+128)	;volatile
  6065                           
  6066                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  6067  0AFC  307F               	movlw	127
  6068  0AFD  0020               	movlb	0	; select bank0
  6069  0AFE  00EE               	movwf	??_USBCtrlTrfSetupHandler
  6070  0AFF  0023               	movlb	3	; select bank3
  6071  0B00  0827               	movf	_pBDTEntryIn^(0+384),w
  6072  0B01  0086               	movwf	6
  6073  0B02  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6074  0B03  0087               	movwf	7
  6075  0B04  0020               	movlb	0	; select bank0
  6076  0B05  086E               	movf	??_USBCtrlTrfSetupHandler,w
  6077  0B06  0581               	andwf	1,f
  6078                           
  6079                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  6080  0B07  3004               	movlw	4
  6081  0B08  0023               	movlb	3	; select bank3
  6082  0B09  0627               	xorwf	_pBDTEntryIn^(0+384),w
  6083  0B0A  00A7               	movwf	_pBDTEntryIn^(0+384)
  6084  0B0B  3000               	movlw	0
  6085  0B0C  0628               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  6086  0B0D  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  6087                           
  6088                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  6089  0B0E  307F               	movlw	127
  6090  0B0F  0020               	movlb	0	; select bank0
  6091  0B10  00EE               	movwf	??_USBCtrlTrfSetupHandler
  6092  0B11  0023               	movlb	3	; select bank3
  6093  0B12  0827               	movf	_pBDTEntryIn^(0+384),w
  6094  0B13  0086               	movwf	6
  6095  0B14  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6096  0B15  0087               	movwf	7
  6097  0B16  0020               	movlb	0	; select bank0
  6098  0B17  086E               	movf	??_USBCtrlTrfSetupHandler,w
  6099  0B18  0581               	andwf	1,f
  6100                           
  6101                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  6102  0B19  3004               	movlw	4
  6103  0B1A  0023               	movlb	3	; select bank3
  6104  0B1B  0627               	xorwf	_pBDTEntryIn^(0+384),w
  6105  0B1C  00A7               	movwf	_pBDTEntryIn^(0+384)
  6106  0B1D  3000               	movlw	0
  6107  0B1E  0628               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  6108  0B1F  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  6109                           
  6110                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  6111  0B20  307F               	movlw	127
  6112  0B21  0020               	movlb	0	; select bank0
  6113  0B22  00EE               	movwf	??_USBCtrlTrfSetupHandler
  6114  0B23  0021               	movlb	1	; select bank1
  6115  0B24  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6116  0B25  0086               	movwf	6
  6117  0B26  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6118  0B27  0087               	movwf	7
  6119  0B28  0020               	movlb	0	; select bank0
  6120  0B29  086E               	movf	??_USBCtrlTrfSetupHandler,w
  6121  0B2A  0581               	andwf	1,f
  6122                           
  6123                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  6124  0B2B  0022               	movlb	2	; select bank2
  6125  0B2C  01ED               	clrf	(_inPipes^(0+256)+2)	;volatile
  6126                           
  6127                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  6128  0B2D  01EE               	clrf	(_inPipes^(0+256)+3)	;volatile
  6129  0B2E  01EF               	clrf	((_inPipes+1)^(0+256)+3)	;volatile
  6130                           
  6131                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  6132  0B2F  0023               	movlb	3	; select bank3
  6133  0B30  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  6134                           
  6135                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  6136  0B31  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  6137  0B32  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  6138                           
  6139                           ;usb_device.c: 2500: USBCheckStdRequest();
  6140  0B33  318C  24AD  318A   	fcall	_USBCheckStdRequest
  6141                           
  6142                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  6143  0B36  3000               	movlw	0
  6144  0B37  0020               	movlb	0	; select bank0
  6145  0B38  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6146  0B39  3003               	movlw	3
  6147  0B3A  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6148  0B3B  3000               	movlw	0
  6149  0B3C  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6150  0B3D  3000               	movlw	0
  6151  0B3E  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  6152  0B3F  3000               	movlw	0
  6153  0B40  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6154  0B41  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6155  0B42  3189  21F9  318A   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6156                           
  6157                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  6158  0B45  3186  2668         	fcall	_USBCtrlEPServiceComplete
  6159  0B47  0008               	return
  6160  0B48                     __end_of_USBCtrlTrfSetupHandler:	
  6161                           
  6162                           	psect	text27
  6163  0668                     __ptext27:	
  6164 ;; *************** function _USBCtrlEPServiceComplete *****************
  6165 ;; Defined at:
  6166 ;;		line 1616 in file "../lib/usb/src/usb_device.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;		None
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;		None
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  1    wreg      void 
  6173 ;; Registers used:
  6174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6175 ;; Tracked objects:
  6176 ;;		On entry : 0/0
  6177 ;;		On exit  : 0/0
  6178 ;;		Unchanged: 0/0
  6179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6182 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6183 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6184 ;;Total ram usage:        2 bytes
  6185 ;; Hardware stack levels used:    1
  6186 ;; Hardware stack levels required when called:    2
  6187 ;; This function calls:
  6188 ;;		_USBCtrlEPAllowDataStage
  6189 ;;		_USBCtrlEPAllowStatusStage
  6190 ;; This function is called by:
  6191 ;;		_USBCtrlTrfSetupHandler
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           
  6196                           ;psect for function _USBCtrlEPServiceComplete
  6197  0668                     _USBCtrlEPServiceComplete:	
  6198                           
  6199                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  6200                           
  6201                           ;incstack = 0
  6202                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6203  0668  003D               	movlb	29	; select bank29
  6204  0669  120E               	bcf	14,4	;volatile
  6205                           
  6206                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  6207  066A  0022               	movlb	2	; select bank2
  6208  066B  1BED               	btfsc	(_inPipes^(0+256)+2),7	;volatile
  6209  066C  2EB1               	goto	i1l258
  6210                           
  6211                           ;usb_device.c: 1629: {
  6212                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  6213  066D  0023               	movlb	3	; select bank3
  6214  066E  1FA2               	btfss	(_outPipes^(0+384)+2),7	;volatile
  6215  066F  2E7F               	goto	i1l3157
  6216                           
  6217                           ;usb_device.c: 1631: {
  6218                           ;usb_device.c: 1632: controlTransferState = 2;
  6219  0670  3002               	movlw	2
  6220  0671  00F5               	movwf	??_USBCtrlEPServiceComplete
  6221  0672  0875               	movf	??_USBCtrlEPServiceComplete,w
  6222  0673  0021               	movlb	1	; select bank1
  6223  0674  00E3               	movwf	_controlTransferState^(0+128)	;volatile
  6224                           
  6225                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  6226  0675  0023               	movlb	3	; select bank3
  6227  0676  084D               	movf	_USBDeferOUTDataStagePackets^(0+384),w	;volatile
  6228  0677  1D03               	btfss	3,2
  6229  0678  2E7B               	goto	i1l3153
  6230                           
  6231                           ;usb_device.c: 1644: {
  6232                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  6233  0679  318B  23F1         	fcall	_USBCtrlEPAllowDataStage
  6234  067B                     i1l3153:	
  6235                           
  6236                           ;usb_device.c: 1646: }
  6237                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  6238  067B  0023               	movlb	3	; select bank3
  6239  067C  01D0               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  6240                           
  6241                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  6242  067D  01CF               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  6243                           
  6244                           ;usb_device.c: 1652: }
  6245  067E  0008               	return
  6246  067F                     i1l3157:	
  6247                           
  6248                           ;usb_device.c: 1653: else
  6249                           ;usb_device.c: 1654: {
  6250                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  6251  067F  0021               	movlb	1	; select bank1
  6252  0680  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6253  0681  3E01               	addlw	1
  6254  0682  00F5               	movwf	??_USBCtrlEPServiceComplete
  6255  0683  3000               	movlw	0
  6256  0684  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6257  0685  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  6258  0686  0875               	movf	??_USBCtrlEPServiceComplete,w
  6259  0687  0086               	movwf	6
  6260  0688  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  6261  0689  0087               	movwf	7
  6262  068A  3008               	movlw	8
  6263  068B  0081               	movwf	1
  6264                           
  6265                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6266  068C  3050               	movlw	80
  6267  068D  00F5               	movwf	??_USBCtrlEPServiceComplete
  6268  068E  3000               	movlw	0
  6269  068F  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  6270  0690  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6271  0691  0086               	movwf	6
  6272  0692  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6273  0693  0087               	movwf	7
  6274  0694  3142               	addfsr 1,2
  6275  0695  0875               	movf	??_USBCtrlEPServiceComplete,w
  6276  0696  3FC0               	movwi [0]fsr1
  6277  0697  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  6278  0698  3FC1               	movwi [1]fsr1
  6279                           
  6280                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6281  0699  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6282  069A  0086               	movwf	6
  6283  069B  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6284  069C  0087               	movwf	7
  6285  069D  300C               	movlw	12
  6286  069E  0081               	movwf	1
  6287                           
  6288                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6289  069F  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6290  06A0  0086               	movwf	6
  6291  06A1  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6292  06A2  0087               	movwf	7
  6293  06A3  1781               	bsf	1,7
  6294                           
  6295                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  6296  06A4  0023               	movlb	3	; select bank3
  6297  06A5  0827               	movf	_pBDTEntryIn^(0+384),w
  6298  06A6  0086               	movwf	6
  6299  06A7  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6300  06A8  0087               	movwf	7
  6301  06A9  3004               	movlw	4
  6302  06AA  0081               	movwf	1
  6303                           
  6304                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6305  06AB  0827               	movf	_pBDTEntryIn^(0+384),w
  6306  06AC  0086               	movwf	6
  6307  06AD  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6308  06AE  0087               	movwf	7
  6309  06AF  1781               	bsf	1,7
  6310                           
  6311                           ;usb_device.c: 1665: }
  6312                           ;usb_device.c: 1666: }
  6313  06B0  0008               	return
  6314  06B1                     i1l258:	
  6315                           
  6316                           ;usb_device.c: 1667: else
  6317                           ;usb_device.c: 1668: {
  6318                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  6319  06B1  0020               	movlb	0	; select bank0
  6320  06B2  1FD0               	btfss	80,7	;volatile
  6321  06B3  2EC9               	goto	i1l3183
  6322                           
  6323                           ;usb_device.c: 1670: {
  6324                           ;usb_device.c: 1671: controlTransferState = 1;
  6325  06B4  3001               	movlw	1
  6326  06B5  00F5               	movwf	??_USBCtrlEPServiceComplete
  6327  06B6  0875               	movf	??_USBCtrlEPServiceComplete,w
  6328  06B7  0021               	movlb	1	; select bank1
  6329  06B8  00E3               	movwf	_controlTransferState^(0+128)	;volatile
  6330                           
  6331                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  6332  06B9  0023               	movlb	3	; select bank3
  6333  06BA  084C               	movf	_USBDeferINDataStagePackets^(0+384),w	;volatile
  6334  06BB  1D03               	btfss	3,2
  6335  06BC  2EC0               	goto	i1l3175
  6336                           
  6337                           ;usb_device.c: 1686: {
  6338                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  6339  06BD  318B  23F1  3186   	fcall	_USBCtrlEPAllowDataStage
  6340  06C0                     i1l3175:	
  6341                           
  6342                           ;usb_device.c: 1688: }
  6343                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  6344  06C0  0023               	movlb	3	; select bank3
  6345  06C1  01D0               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  6346                           
  6347                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  6348  06C2  01CF               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  6349                           
  6350                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  6351  06C3  084E               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  6352  06C4  1D03               	btfss	3,2
  6353  06C5  0008               	return
  6354                           
  6355                           ;usb_device.c: 1713: {
  6356                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  6357  06C6  318D  257B         	fcall	_USBCtrlEPAllowStatusStage
  6358                           
  6359                           ;usb_device.c: 1715: }
  6360                           ;usb_device.c: 1716: }
  6361  06C8  0008               	return
  6362  06C9                     i1l3183:	
  6363                           
  6364                           ;usb_device.c: 1717: else
  6365                           ;usb_device.c: 1718: {
  6366                           ;usb_device.c: 1729: controlTransferState = 2;
  6367  06C9  3002               	movlw	2
  6368  06CA  00F5               	movwf	??_USBCtrlEPServiceComplete
  6369  06CB  0875               	movf	??_USBCtrlEPServiceComplete,w
  6370  06CC  0021               	movlb	1	; select bank1
  6371  06CD  00E3               	movwf	_controlTransferState^(0+128)	;volatile
  6372                           
  6373                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  6374  06CE  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6375  06CF  3E01               	addlw	1
  6376  06D0  00F5               	movwf	??_USBCtrlEPServiceComplete
  6377  06D1  3000               	movlw	0
  6378  06D2  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6379  06D3  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  6380  06D4  0875               	movf	??_USBCtrlEPServiceComplete,w
  6381  06D5  0086               	movwf	6
  6382  06D6  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  6383  06D7  0087               	movwf	7
  6384  06D8  3008               	movlw	8
  6385  06D9  0081               	movwf	1
  6386                           
  6387                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6388  06DA  3050               	movlw	80
  6389  06DB  00F5               	movwf	??_USBCtrlEPServiceComplete
  6390  06DC  3000               	movlw	0
  6391  06DD  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  6392  06DE  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6393  06DF  0086               	movwf	6
  6394  06E0  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6395  06E1  0087               	movwf	7
  6396  06E2  3142               	addfsr 1,2
  6397  06E3  0875               	movf	??_USBCtrlEPServiceComplete,w
  6398  06E4  3FC0               	movwi [0]fsr1
  6399  06E5  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  6400  06E6  3FC1               	movwi [1]fsr1
  6401                           
  6402                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  6403  06E7  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6404  06E8  0086               	movwf	6
  6405  06E9  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6406  06EA  0087               	movwf	7
  6407  06EB  3004               	movlw	4
  6408  06EC  0081               	movwf	1
  6409                           
  6410                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6411  06ED  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6412  06EE  0086               	movwf	6
  6413  06EF  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6414  06F0  0087               	movwf	7
  6415  06F1  1781               	bsf	1,7
  6416                           
  6417                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  6418  06F2  0023               	movlb	3	; select bank3
  6419  06F3  01D0               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  6420                           
  6421                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  6422  06F4  01CF               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  6423                           
  6424                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  6425  06F5  084E               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  6426  06F6  1D03               	btfss	3,2
  6427  06F7  0008               	return
  6428                           
  6429                           ;usb_device.c: 1741: {
  6430                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
  6431  06F8  318D  257B         	fcall	_USBCtrlEPAllowStatusStage
  6432  06FA  0008               	return
  6433  06FB                     __end_of_USBCtrlEPServiceComplete:	
  6434                           
  6435                           	psect	text28
  6436  0BF1                     __ptext28:	
  6437 ;; *************** function _USBCtrlEPAllowDataStage *****************
  6438 ;; Defined at:
  6439 ;;		line 1488 in file "../lib/usb/src/usb_device.c"
  6440 ;; Parameters:    Size  Location     Type
  6441 ;;		None
  6442 ;; Auto vars:     Size  Location     Type
  6443 ;;		None
  6444 ;; Return value:  Size  Location     Type
  6445 ;;                  1    wreg      void 
  6446 ;; Registers used:
  6447 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6448 ;; Tracked objects:
  6449 ;;		On entry : 0/0
  6450 ;;		On exit  : 0/0
  6451 ;;		Unchanged: 0/0
  6452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6455 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6456 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6457 ;;Total ram usage:        2 bytes
  6458 ;; Hardware stack levels used:    1
  6459 ;; Hardware stack levels required when called:    1
  6460 ;; This function calls:
  6461 ;;		_USBCtrlTrfTxService
  6462 ;; This function is called by:
  6463 ;;		_USBCtrlEPServiceComplete
  6464 ;; This function uses a non-reentrant model
  6465 ;;
  6466                           
  6467                           
  6468                           ;psect for function _USBCtrlEPAllowDataStage
  6469  0BF1                     _USBCtrlEPAllowDataStage:	
  6470                           
  6471                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  6472                           
  6473                           ;incstack = 0
  6474                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6475  0BF1  0023               	movlb	3	; select bank3
  6476  0BF2  01CC               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  6477                           
  6478                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  6479  0BF3  01CD               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  6480                           
  6481                           ;usb_device.c: 1493: if(controlTransferState == 2)
  6482  0BF4  3002               	movlw	2
  6483  0BF5  0021               	movlb	1	; select bank1
  6484  0BF6  0663               	xorwf	_controlTransferState^(0+128),w	;volatile
  6485  0BF7  1D03               	btfss	3,2
  6486  0BF8  2C1E               	goto	i1l2935
  6487                           
  6488                           ;usb_device.c: 1494: {
  6489                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  6490  0BF9  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6491  0BFA  3E01               	addlw	1
  6492  0BFB  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6493  0BFC  3000               	movlw	0
  6494  0BFD  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6495  0BFE  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  6496  0BFF  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6497  0C00  0086               	movwf	6
  6498  0C01  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  6499  0C02  0087               	movwf	7
  6500  0C03  3008               	movlw	8
  6501  0C04  0081               	movwf	1
  6502                           
  6503                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  6504  0C05  3058               	movlw	88
  6505  0C06  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6506  0C07  3000               	movlw	0
  6507  0C08  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  6508  0C09  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6509  0C0A  0086               	movwf	6
  6510  0C0B  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6511  0C0C  0087               	movwf	7
  6512  0C0D  3142               	addfsr 1,2
  6513  0C0E  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6514  0C0F  3FC0               	movwi [0]fsr1
  6515  0C10  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  6516  0C11  3FC1               	movwi [1]fsr1
  6517                           
  6518                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  6519  0C12  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6520  0C13  0086               	movwf	6
  6521  0C14  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6522  0C15  0087               	movwf	7
  6523  0C16  3048               	movlw	72
  6524  0C17  0081               	movwf	1
  6525                           
  6526                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6527  0C18  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  6528  0C19  0086               	movwf	6
  6529  0C1A  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  6530  0C1B  0087               	movwf	7
  6531  0C1C  1781               	bsf	1,7
  6532                           
  6533                           ;usb_device.c: 1500: }
  6534  0C1D  0008               	return
  6535  0C1E                     i1l2935:	
  6536                           
  6537                           ;usb_device.c: 1501: else
  6538                           ;usb_device.c: 1502: {
  6539                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  6540  0C1E  0022               	movlb	2	; select bank2
  6541  0C1F  086F               	movf	((_inPipes+1)^(0+256)+3),w	;volatile
  6542  0C20  0020               	movlb	0	; select bank0
  6543  0C21  0257               	subwf	87,w	;volatile
  6544  0C22  1D03               	skipz
  6545  0C23  2C28               	goto	u213_25
  6546  0C24  0022               	movlb	2	; select bank2
  6547  0C25  086E               	movf	(_inPipes^(0+256)+3),w	;volatile
  6548  0C26  0020               	movlb	0	; select bank0
  6549  0C27  0256               	subwf	86,w	;volatile
  6550  0C28                     u213_25:	
  6551  0C28  1803               	skipnc
  6552  0C29  2C31               	goto	i1l2939
  6553                           
  6554                           ;usb_device.c: 1506: {
  6555                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  6556  0C2A  0857               	movf	87,w	;volatile
  6557  0C2B  0022               	movlb	2	; select bank2
  6558  0C2C  00EF               	movwf	((_inPipes+1)^(0+256)+3)	;volatile
  6559  0C2D  0020               	movlb	0	; select bank0
  6560  0C2E  0856               	movf	86,w	;volatile
  6561  0C2F  0022               	movlb	2	; select bank2
  6562  0C30  00EE               	movwf	(_inPipes^(0+256)+3)	;volatile
  6563  0C31                     i1l2939:	
  6564                           
  6565                           ;usb_device.c: 1508: }
  6566                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  6567  0C31  3187  2789         	fcall	_USBCtrlTrfTxService
  6568                           
  6569                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  6570  0C33  3058               	movlw	88
  6571  0C34  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6572  0C35  3000               	movlw	0
  6573  0C36  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  6574  0C37  0023               	movlb	3	; select bank3
  6575  0C38  0827               	movf	_pBDTEntryIn^(0+384),w
  6576  0C39  0086               	movwf	6
  6577  0C3A  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6578  0C3B  0087               	movwf	7
  6579  0C3C  3142               	addfsr 1,2
  6580  0C3D  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6581  0C3E  3FC0               	movwi [0]fsr1
  6582  0C3F  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  6583  0C40  3FC1               	movwi [1]fsr1
  6584                           
  6585                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  6586  0C41  0827               	movf	_pBDTEntryIn^(0+384),w
  6587  0C42  0086               	movwf	6
  6588  0C43  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6589  0C44  0087               	movwf	7
  6590  0C45  3048               	movlw	72
  6591  0C46  0081               	movwf	1
  6592                           
  6593                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6594  0C47  0827               	movf	_pBDTEntryIn^(0+384),w
  6595  0C48  0086               	movwf	6
  6596  0C49  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6597  0C4A  0087               	movwf	7
  6598  0C4B  1781               	bsf	1,7
  6599  0C4C  0008               	return
  6600  0C4D                     __end_of_USBCtrlEPAllowDataStage:	
  6601                           
  6602                           	psect	text29
  6603  0CAD                     __ptext29:	
  6604 ;; *************** function _USBCheckStdRequest *****************
  6605 ;; Defined at:
  6606 ;;		line 2686 in file "../lib/usb/src/usb_device.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;		None
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;		None
  6611 ;; Return value:  Size  Location     Type
  6612 ;;                  1    wreg      void 
  6613 ;; Registers used:
  6614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6622 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6623 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6624 ;;Total ram usage:        1 bytes
  6625 ;; Hardware stack levels used:    1
  6626 ;; Hardware stack levels required when called:    5
  6627 ;; This function calls:
  6628 ;;		_USBStdFeatureReqHandler
  6629 ;;		_USBStdGetDscHandler
  6630 ;;		_USBStdGetStatusHandler
  6631 ;;		_USBStdSetCfgHandler
  6632 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6633 ;; This function is called by:
  6634 ;;		_USBCtrlTrfSetupHandler
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           
  6639                           ;psect for function _USBCheckStdRequest
  6640  0CAD                     _USBCheckStdRequest:	
  6641                           
  6642                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  6643                           
  6644                           ;incstack = 0
  6645                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6646  0CAD  0020               	movlb	0	; select bank0
  6647  0CAE  0E50               	swapf	80,w	;volatile
  6648  0CAF  0C89               	rrf	9,f
  6649  0CB0  3903               	andlw	3
  6650  0CB1  3A00               	xorlw	0
  6651  0CB2  1D03               	btfss	3,2
  6652  0CB3  0008               	return
  6653  0CB4  2D03               	goto	i1l3277
  6654  0CB5                     i1l385:	
  6655                           ;usb_device.c: 2691: {
  6656                           ;usb_device.c: 2692: case 5:
  6657                           
  6658                           ;usb_device.c: 2690: switch(SetupPkt.bRequest)
  6659                           
  6660                           
  6661                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  6662  0CB5  0022               	movlb	2	; select bank2
  6663  0CB6  17ED               	bsf	(_inPipes^(0+256)+2),7	;volatile
  6664                           
  6665                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  6666  0CB7  3008               	movlw	8
  6667  0CB8  0020               	movlb	0	; select bank0
  6668  0CB9  00ED               	movwf	??_USBCheckStdRequest
  6669  0CBA  086D               	movf	??_USBCheckStdRequest,w
  6670  0CBB  0021               	movlb	1	; select bank1
  6671  0CBC  00E2               	movwf	_USBDeviceState^(0+128)	;volatile
  6672                           
  6673                           ;usb_device.c: 2696: break;
  6674  0CBD  0008               	return
  6675  0CBE                     i1l3247:	
  6676                           ;usb_device.c: 2697: case 6:
  6677                           
  6678                           
  6679                           ;usb_device.c: 2698: USBStdGetDscHandler();
  6680  0CBE  318D  25ED         	fcall	_USBStdGetDscHandler
  6681                           
  6682                           ;usb_device.c: 2699: break;
  6683  0CC0  0008               	return
  6684  0CC1                     i1l3249:	
  6685                           ;usb_device.c: 2700: case 9:
  6686                           
  6687                           
  6688                           ;usb_device.c: 2701: USBStdSetCfgHandler();
  6689  0CC1  3186  26FB         	fcall	_USBStdSetCfgHandler
  6690                           
  6691                           ;usb_device.c: 2702: break;
  6692  0CC3  0008               	return
  6693  0CC4                     i1l3251:	
  6694                           ;usb_device.c: 2703: case 8:
  6695                           
  6696                           
  6697                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  6698  0CC4  30E4               	movlw	low _USBActiveConfiguration
  6699  0CC5  0022               	movlb	2	; select bank2
  6700  0CC6  00EB               	movwf	_inPipes^(0+256)	;volatile
  6701  0CC7  3001               	movlw	high _USBActiveConfiguration
  6702  0CC8  00EC               	movwf	(_inPipes+1)^(0+256)	;volatile
  6703                           
  6704                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6705  0CC9  146D               	bsf	(_inPipes^(0+256)+2),0	;volatile
  6706                           
  6707                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  6708  0CCA  3001               	movlw	1
  6709  0CCB  0020               	movlb	0	; select bank0
  6710  0CCC  00ED               	movwf	??_USBCheckStdRequest
  6711  0CCD  086D               	movf	??_USBCheckStdRequest,w
  6712  0CCE  0022               	movlb	2	; select bank2
  6713  0CCF  00EE               	movwf	(_inPipes^(0+256)+3)	;volatile
  6714                           
  6715                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  6716  0CD0  17ED               	bsf	(_inPipes^(0+256)+2),7	;volatile
  6717                           
  6718                           ;usb_device.c: 2708: break;
  6719  0CD1  0008               	return
  6720  0CD2                     i1l3259:	
  6721                           ;usb_device.c: 2709: case 0:
  6722                           
  6723                           
  6724                           ;usb_device.c: 2710: USBStdGetStatusHandler();
  6725  0CD2  318B  239C         	fcall	_USBStdGetStatusHandler
  6726                           
  6727                           ;usb_device.c: 2711: break;
  6728  0CD4  0008               	return
  6729  0CD5                     i1l3261:	
  6730                           ;usb_device.c: 2712: case 1:
  6731                           
  6732                           
  6733                           ;usb_device.c: 2713: case 3:
  6734                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
  6735  0CD5  3180  2044         	fcall	_USBStdFeatureReqHandler
  6736                           
  6737                           ;usb_device.c: 2715: break;
  6738  0CD7  0008               	return
  6739  0CD8                     i1l3263:	
  6740                           ;usb_device.c: 2716: case 10:
  6741                           
  6742                           
  6743                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  6744  0CD8  0020               	movlb	0	; select bank0
  6745  0CD9  0854               	movf	84,w	;volatile
  6746  0CDA  3EE2               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  6747  0CDB  0022               	movlb	2	; select bank2
  6748  0CDC  00EB               	movwf	_inPipes^(0+256)	;volatile
  6749  0CDD  3001               	movlw	1
  6750  0CDE  00EC               	movwf	(_inPipes+1)^(0+256)	;volatile
  6751                           
  6752                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6753  0CDF  146D               	bsf	(_inPipes^(0+256)+2),0	;volatile
  6754                           
  6755                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  6756  0CE0  3001               	movlw	1
  6757  0CE1  0020               	movlb	0	; select bank0
  6758  0CE2  00ED               	movwf	??_USBCheckStdRequest
  6759  0CE3  086D               	movf	??_USBCheckStdRequest,w
  6760  0CE4  0022               	movlb	2	; select bank2
  6761  0CE5  00EE               	movwf	(_inPipes^(0+256)+3)	;volatile
  6762                           
  6763                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  6764  0CE6  17ED               	bsf	(_inPipes^(0+256)+2),7	;volatile
  6765                           
  6766                           ;usb_device.c: 2721: break;
  6767  0CE7  0008               	return
  6768  0CE8                     i1l394:	
  6769                           ;usb_device.c: 2722: case 11:
  6770                           
  6771                           
  6772                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  6773  0CE8  0022               	movlb	2	; select bank2
  6774  0CE9  17ED               	bsf	(_inPipes^(0+256)+2),7	;volatile
  6775                           
  6776                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  6777  0CEA  0020               	movlb	0	; select bank0
  6778  0CEB  0852               	movf	82,w	;volatile
  6779  0CEC  00ED               	movwf	??_USBCheckStdRequest
  6780  0CED  0854               	movf	84,w	;volatile
  6781  0CEE  3EE2               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  6782  0CEF  0086               	movwf	6
  6783  0CF0  3001               	movlw	1	; select bank3/4
  6784  0CF1  0087               	movwf	7
  6785  0CF2  086D               	movf	??_USBCheckStdRequest,w
  6786  0CF3  0081               	movwf	1
  6787                           
  6788                           ;usb_device.c: 2725: break;
  6789  0CF4  0008               	return
  6790  0CF5                     i1l3273:	
  6791                           ;usb_device.c: 2726: case 7:
  6792                           
  6793                           
  6794                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  6795  0CF5  3000               	movlw	0
  6796  0CF6  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6797  0CF7  3002               	movlw	2
  6798  0CF8  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6799  0CF9  3000               	movlw	0
  6800  0CFA  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6801  0CFB  3000               	movlw	0
  6802  0CFC  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  6803  0CFD  3000               	movlw	0
  6804  0CFE  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6805  0CFF  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6806  0D00  3189  21F9         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6807                           
  6808                           ;usb_device.c: 2732: }
  6809                           
  6810                           ;usb_device.c: 2731: break;
  6811                           
  6812                           ;usb_device.c: 2730: default:
  6813                           
  6814                           ;usb_device.c: 2729: case 12:
  6815                           
  6816                           ;usb_device.c: 2728: break;
  6817  0D02  0008               	return
  6818  0D03                     i1l3277:	
  6819  0D03  0020               	movlb	0	; select bank0
  6820  0D04  0851               	movf	81,w	;volatile
  6821                           
  6822                           ; Switch size 1, requested type "space"
  6823                           ; Number of cases is 11, Range of values is 0 to 12
  6824                           ; switch strategies available:
  6825                           ; Name         Instructions Cycles
  6826                           ; direct_byte           32     6 (fixed)
  6827                           ; simple_byte           34    18 (average)
  6828                           ; jumptable            260     6 (fixed)
  6829                           ;	Chosen strategy is direct_byte
  6830  0D05  0084               	movwf	4
  6831  0D06  300D               	movlw	13
  6832  0D07  0204               	subwf	4,w
  6833  0D08  1803               	skipnc
  6834  0D09  0008               	return
  6835  0D0A  3188               	movlp	high i1S4813
  6836  0D0B  3504               	lslf	4,w
  6837  0D0C  3E00               	addlw	low i1S4813
  6838  0D0D  0082               	movwf	2
  6839  0D0E                     i1l383:	
  6840  0D0E  0008               	return
  6841  0D0F                     __end_of_USBCheckStdRequest:	
  6842                           
  6843                           	psect	swtext1
  6844  0800                     __pswtext1:	
  6845  0800                     i1S4813:	
  6846  0800  318C  2CD2         	ljmp	i1l3259
  6847  0802  318C  2CD5         	ljmp	i1l3261
  6848  0804  318D  2D0E         	ljmp	i1l383
  6849  0806  318C  2CD5         	ljmp	i1l3261
  6850  0808  318D  2D0E         	ljmp	i1l383
  6851  080A  318C  2CB5         	ljmp	i1l385
  6852  080C  318C  2CBE         	ljmp	i1l3247
  6853  080E  318C  2CF5         	ljmp	i1l3273
  6854  0810  318C  2CC4         	ljmp	i1l3251
  6855  0812  318C  2CC1         	ljmp	i1l3249
  6856  0814  318C  2CD8         	ljmp	i1l3263
  6857  0816  318C  2CE8         	ljmp	i1l394
  6858  0818  318D  2D0E         	ljmp	i1l383
  6859                           
  6860                           	psect	text30
  6861  06FB                     __ptext30:	
  6862 ;; *************** function _USBStdSetCfgHandler *****************
  6863 ;; Defined at:
  6864 ;;		line 1968 in file "../lib/usb/src/usb_device.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;		None
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;  p               2    7[BANK0 ] PTR unsigned char 
  6869 ;;		 -> UEP1(1), 
  6870 ;;  i               1    9[BANK0 ] unsigned char 
  6871 ;;  i               1   10[BANK0 ] unsigned char 
  6872 ;; Return value:  Size  Location     Type
  6873 ;;                  1    wreg      void 
  6874 ;; Registers used:
  6875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6876 ;; Tracked objects:
  6877 ;;		On entry : 0/0
  6878 ;;		On exit  : 0/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6882 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6883 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6884 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6885 ;;Total ram usage:        5 bytes
  6886 ;; Hardware stack levels used:    1
  6887 ;; Hardware stack levels required when called:    4
  6888 ;; This function calls:
  6889 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6890 ;;		_memset
  6891 ;; This function is called by:
  6892 ;;		_USBCheckStdRequest
  6893 ;; This function uses a non-reentrant model
  6894 ;;
  6895                           
  6896                           
  6897                           ;psect for function _USBStdSetCfgHandler
  6898  06FB                     _USBStdSetCfgHandler:	
  6899                           
  6900                           ;usb_device.c: 1970: uint8_t i;
  6901                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  6902                           
  6903                           ;incstack = 0
  6904                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6905  06FB  0022               	movlb	2	; select bank2
  6906  06FC  17ED               	bsf	(_inPipes^(0+256)+2),7	;volatile
  6907                           
  6908                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
  6909  06FD  300E               	movlw	14
  6910  06FE  0020               	movlb	0	; select bank0
  6911  06FF  00E8               	movwf	USBStdSetCfgHandler@p+1
  6912  0700  3099               	movlw	153
  6913  0701  00E7               	movwf	USBStdSetCfgHandler@p
  6914  0702  01E9               	clrf	USBStdSetCfgHandler@i_1174
  6915  0703  3002               	movlw	2
  6916  0704  0269               	subwf	USBStdSetCfgHandler@i_1174,w
  6917  0705  1803               	btfsc	3,0
  6918  0706  2F18               	goto	i1l2963
  6919  0707                     i1l2955:	
  6920  0707  0867               	movf	USBStdSetCfgHandler@p,w
  6921  0708  0086               	movwf	6
  6922  0709  0868               	movf	USBStdSetCfgHandler@p+1,w
  6923  070A  0087               	movwf	7
  6924  070B  0181               	clrf	1
  6925  070C  3001               	movlw	1
  6926  070D  07E7               	addwf	USBStdSetCfgHandler@p,f
  6927  070E  3000               	movlw	0
  6928  070F  3DE8               	addwfc	USBStdSetCfgHandler@p+1,f
  6929  0710  3001               	movlw	1
  6930  0711  00E6               	movwf	??_USBStdSetCfgHandler
  6931  0712  0866               	movf	??_USBStdSetCfgHandler,w
  6932  0713  07E9               	addwf	USBStdSetCfgHandler@i_1174,f
  6933  0714  3002               	movlw	2
  6934  0715  0269               	subwf	USBStdSetCfgHandler@i_1174,w
  6935  0716  1C03               	skipc
  6936  0717  2F07               	goto	i1l2955
  6937  0718                     i1l2963:	
  6938                           
  6939                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  6940  0718  3020               	movlw	32
  6941  0719  00F0               	movwf	memset@p1
  6942  071A  3000               	movlw	0
  6943  071B  00F1               	movwf	memset@p1+1
  6944  071C  3000               	movlw	0
  6945  071D  00F2               	movwf	memset@c
  6946  071E  00F3               	movwf	memset@c+1
  6947  071F  3030               	movlw	48
  6948  0720  00F4               	movwf	memset@n
  6949  0721  3000               	movlw	0
  6950  0722  00F5               	movwf	memset@n+1
  6951  0723  3188  201D  3186   	fcall	_memset
  6952                           
  6953                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  6954  0726  003D               	movlb	29	; select bank29
  6955  0727  170E               	bsf	14,6	;volatile
  6956                           
  6957                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  6958  0728  0020               	movlb	0	; select bank0
  6959  0729  01EA               	clrf	USBStdSetCfgHandler@i
  6960  072A  3003               	movlw	3
  6961  072B  026A               	subwf	USBStdSetCfgHandler@i,w
  6962  072C  1803               	btfsc	3,0
  6963  072D  2F42               	goto	i1l2979
  6964  072E                     i1l2973:	
  6965                           
  6966                           ;usb_device.c: 1988: {
  6967                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  6968  072E  086A               	movf	USBStdSetCfgHandler@i,w
  6969  072F  3EBB               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  6970  0730  0086               	movwf	6
  6971  0731  3001               	movlw	1	; select bank3/4
  6972  0732  0087               	movwf	7
  6973  0733  0181               	clrf	1
  6974                           
  6975                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  6976  0734  086A               	movf	USBStdSetCfgHandler@i,w
  6977  0735  3EBE               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  6978  0736  0086               	movwf	6
  6979  0737  3001               	movlw	1	; select bank3/4
  6980  0738  0087               	movwf	7
  6981  0739  0181               	clrf	1
  6982  073A  3001               	movlw	1
  6983  073B  00E6               	movwf	??_USBStdSetCfgHandler
  6984  073C  0866               	movf	??_USBStdSetCfgHandler,w
  6985  073D  07EA               	addwf	USBStdSetCfgHandler@i,f
  6986  073E  3003               	movlw	3
  6987  073F  026A               	subwf	USBStdSetCfgHandler@i,w
  6988  0740  1C03               	skipc
  6989  0741  2F2E               	goto	i1l2973
  6990  0742                     i1l2979:	
  6991                           
  6992                           ;usb_device.c: 1991: }
  6993                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  6994  0742  30E2               	movlw	low _USBAlternateInterface
  6995  0743  00F0               	movwf	memset@p1
  6996  0744  3001               	movlw	high _USBAlternateInterface
  6997  0745  00F1               	movwf	memset@p1+1
  6998  0746  3000               	movlw	0
  6999  0747  00F2               	movwf	memset@c
  7000  0748  00F3               	movwf	memset@c+1
  7001  0749  3002               	movlw	2
  7002  074A  00F4               	movwf	memset@n
  7003  074B  3000               	movlw	0
  7004  074C  00F5               	movwf	memset@n+1
  7005  074D  3188  201D  3186   	fcall	_memset
  7006                           
  7007                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  7008  0750  003D               	movlb	29	; select bank29
  7009  0751  130E               	bcf	14,6	;volatile
  7010                           
  7011                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7012  0752  3028               	movlw	40
  7013  0753  0023               	movlb	3	; select bank3
  7014  0754  00A7               	movwf	_pBDTEntryIn^(0+384)
  7015  0755  3000               	movlw	0
  7016  0756  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  7017                           
  7018                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  7019  0757  3020               	movlw	32
  7020  0758  0020               	movlb	0	; select bank0
  7021  0759  00E6               	movwf	??_USBStdSetCfgHandler
  7022  075A  0866               	movf	??_USBStdSetCfgHandler,w
  7023  075B  0021               	movlb	1	; select bank1
  7024  075C  00E4               	movwf	_pBDTEntryEP0OutCurrent^(0+128)
  7025                           
  7026                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  7027  075D  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  7028  075E  00E0               	movwf	_pBDTEntryEP0OutNext^(0+128)
  7029  075F  39FF               	andlw	255
  7030  0760  1D03               	skipz
  7031  0761  3000               	movlw	0
  7032  0762  00E1               	movwf	(_pBDTEntryEP0OutNext+1)^(0+128)
  7033                           
  7034                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  7035  0763  0020               	movlb	0	; select bank0
  7036  0764  0852               	movf	82,w	;volatile
  7037  0765  00E6               	movwf	??_USBStdSetCfgHandler
  7038  0766  0866               	movf	??_USBStdSetCfgHandler,w
  7039  0767  0023               	movlb	3	; select bank3
  7040  0768  00E4               	movwf	_USBActiveConfiguration^(0+384)	;volatile
  7041                           
  7042                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  7043  0769  0864               	movf	_USBActiveConfiguration^(0+384),w	;volatile
  7044  076A  1D03               	btfss	3,2
  7045  076B  2F73               	goto	i1l2995
  7046                           
  7047                           ;usb_device.c: 2010: {
  7048                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  7049  076C  3010               	movlw	16
  7050  076D  0020               	movlb	0	; select bank0
  7051  076E  00E6               	movwf	??_USBStdSetCfgHandler
  7052  076F  0866               	movf	??_USBStdSetCfgHandler,w
  7053  0770  0021               	movlb	1	; select bank1
  7054  0771  00E2               	movwf	_USBDeviceState^(0+128)	;volatile
  7055                           
  7056                           ;usb_device.c: 2013: }
  7057  0772  0008               	return
  7058  0773                     i1l2995:	
  7059                           
  7060                           ;usb_device.c: 2014: else
  7061                           ;usb_device.c: 2015: {
  7062                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  7063  0773  3000               	movlw	0
  7064  0774  0020               	movlb	0	; select bank0
  7065  0775  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7066  0776  3001               	movlw	1
  7067  0777  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7068  0778  30E4               	movlw	low _USBActiveConfiguration
  7069  0779  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7070  077A  3001               	movlw	high _USBActiveConfiguration
  7071  077B  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7072  077C  3001               	movlw	1
  7073  077D  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7074  077E  3000               	movlw	0
  7075  077F  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7076  0780  3189  21F9         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7077                           
  7078                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  7079  0782  3020               	movlw	32
  7080  0783  0020               	movlb	0	; select bank0
  7081  0784  00E6               	movwf	??_USBStdSetCfgHandler
  7082  0785  0866               	movf	??_USBStdSetCfgHandler,w
  7083  0786  0021               	movlb	1	; select bank1
  7084  0787  00E2               	movwf	_USBDeviceState^(0+128)	;volatile
  7085  0788  0008               	return
  7086  0789                     __end_of_USBStdSetCfgHandler:	
  7087                           
  7088                           	psect	text31
  7089  081D                     __ptext31:	
  7090 ;; *************** function _memset *****************
  7091 ;; Defined at:
  7092 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;  p1              2    0[COMMON] PTR void 
  7095 ;;		 -> USBAlternateInterface(2), BDT(48), 
  7096 ;;  c               2    2[COMMON] int 
  7097 ;;  n               2    4[COMMON] unsigned int 
  7098 ;; Auto vars:     Size  Location     Type
  7099 ;;  p               2    6[COMMON] PTR unsigned char 
  7100 ;;		 -> USBAlternateInterface(2), BDT(48), 
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  2    0[COMMON] PTR void 
  7103 ;; Registers used:
  7104 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7110 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7113 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7114 ;;Total ram usage:        8 bytes
  7115 ;; Hardware stack levels used:    1
  7116 ;; This function calls:
  7117 ;;		Nothing
  7118 ;; This function is called by:
  7119 ;;		_USBStdSetCfgHandler
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           
  7124                           ;psect for function _memset
  7125  081D                     _memset:	
  7126                           
  7127                           ;incstack = 0
  7128                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7129  081D  0871               	movf	memset@p1+1,w
  7130  081E  00F7               	movwf	memset@p+1
  7131  081F  0870               	movf	memset@p1,w
  7132  0820  00F6               	movwf	memset@p
  7133  0821                     i1l2885:	
  7134  0821  3001               	movlw	1
  7135  0822  02F4               	subwf	memset@n,f
  7136  0823  3000               	movlw	0
  7137  0824  3BF5               	subwfb	memset@n+1,f
  7138  0825  0A74               	incf	memset@n,w
  7139  0826  1903               	btfsc	3,2
  7140  0827  0A75               	incf	memset@n+1,w
  7141  0828  1903               	btfsc	3,2
  7142  0829  0008               	return
  7143  082A  0876               	movf	memset@p,w
  7144  082B  0086               	movwf	6
  7145  082C  0877               	movf	memset@p+1,w
  7146  082D  0087               	movwf	7
  7147  082E  0872               	movf	memset@c,w
  7148  082F  0081               	movwf	1
  7149  0830  3001               	movlw	1
  7150  0831  07F6               	addwf	memset@p,f
  7151  0832  3000               	movlw	0
  7152  0833  3DF7               	addwfc	memset@p+1,f
  7153  0834  2821               	goto	i1l2885
  7154  0835                     __end_of_memset:	
  7155                           ;	Return value of _memset is never used
  7156                           
  7157                           
  7158                           	psect	text32
  7159  0B9C                     __ptext32:	
  7160 ;; *************** function _USBStdGetStatusHandler *****************
  7161 ;; Defined at:
  7162 ;;		line 2129 in file "../lib/usb/src/usb_device.c"
  7163 ;; Parameters:    Size  Location     Type
  7164 ;;		None
  7165 ;; Auto vars:     Size  Location     Type
  7166 ;;  p               2    1[COMMON] PTR struct __BDT
  7167 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  7168 ;; Return value:  Size  Location     Type
  7169 ;;                  1    wreg      void 
  7170 ;; Registers used:
  7171 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7172 ;; Tracked objects:
  7173 ;;		On entry : 0/0
  7174 ;;		On exit  : 0/0
  7175 ;;		Unchanged: 0/0
  7176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7178 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7179 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7180 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7181 ;;Total ram usage:        3 bytes
  7182 ;; Hardware stack levels used:    1
  7183 ;; This function calls:
  7184 ;;		Nothing
  7185 ;; This function is called by:
  7186 ;;		_USBCheckStdRequest
  7187 ;; This function uses a non-reentrant model
  7188 ;;
  7189                           
  7190                           
  7191                           ;psect for function _USBStdGetStatusHandler
  7192  0B9C                     _USBStdGetStatusHandler:	
  7193                           
  7194                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  7195                           
  7196                           ;incstack = 0
  7197                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  7198  0B9C  0020               	movlb	0	; select bank0
  7199  0B9D  01D8               	clrf	88	;volatile
  7200                           
  7201                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  7202  0B9E  01D9               	clrf	89	;volatile
  7203                           
  7204                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  7205  0B9F  2BD8               	goto	i1l3051
  7206  0BA0                     i1l323:	
  7207                           ;usb_device.c: 2135: {
  7208                           ;usb_device.c: 2136: case (0x00):
  7209                           
  7210                           
  7211                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  7212  0BA0  0022               	movlb	2	; select bank2
  7213  0BA1  17ED               	bsf	(_inPipes^(0+256)+2),7	;volatile
  7214                           
  7215                           ;usb_device.c: 2145: }
  7216                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  7217                           
  7218                           ;usb_device.c: 2143: {
  7219                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
  7220                           
  7221                           ;usb_device.c: 2142: if(0 == 1)
  7222  0BA2  0023               	movlb	3	; select bank3
  7223  0BA3  034A               	decf	_RemoteWakeup^(0+384),w	;volatile
  7224  0BA4  1D03               	btfss	3,2
  7225  0BA5  2BE4               	goto	i1l326
  7226                           
  7227                           ;usb_device.c: 2148: {
  7228                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  7229  0BA6  0020               	movlb	0	; select bank0
  7230  0BA7  14D8               	bsf	88,1	;volatile
  7231                           
  7232                           ;usb_device.c: 2150: }
  7233                           ;usb_device.c: 2151: break;
  7234  0BA8  2BE4               	goto	i1l326
  7235  0BA9                     i1l327:	
  7236                           ;usb_device.c: 2152: case (0x01):
  7237                           
  7238                           
  7239                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  7240  0BA9  0022               	movlb	2	; select bank2
  7241  0BAA  17ED               	bsf	(_inPipes^(0+256)+2),7	;volatile
  7242                           
  7243                           ;usb_device.c: 2154: break;
  7244  0BAB  2BE4               	goto	i1l326
  7245  0BAC                     i1l328:	
  7246                           ;usb_device.c: 2155: case (0x02):
  7247                           
  7248                           
  7249                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  7250  0BAC  0022               	movlb	2	; select bank2
  7251  0BAD  17ED               	bsf	(_inPipes^(0+256)+2),7	;volatile
  7252                           
  7253                           ;usb_device.c: 2160: {
  7254                           ;usb_device.c: 2161: BDT_ENTRY *p;
  7255                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  7256  0BAE  0020               	movlb	0	; select bank0
  7257  0BAF  1BD4               	btfsc	84,7	;volatile
  7258  0BB0  2BBC               	goto	i1l3041
  7259                           
  7260                           ;usb_device.c: 2164: {
  7261                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7262  0BB1  0854               	movf	84,w	;volatile
  7263  0BB2  390F               	andlw	15
  7264  0BB3  0709               	addwf	9,w
  7265  0BB4  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7266  0BB5  0086               	movwf	6
  7267  0BB6  3001               	movlw	1	; select bank3/4
  7268  0BB7  0087               	movwf	7
  7269  0BB8  3F40               	moviw [0]fsr1
  7270  0BB9  00F1               	movwf	USBStdGetStatusHandler@p
  7271  0BBA  3F41               	moviw [1]fsr1
  7272  0BBB  2BC6               	goto	L5
  7273  0BBC                     i1l3041:	
  7274                           ;usb_device.c: 2166: }
  7275                           
  7276                           
  7277                           ;usb_device.c: 2167: else
  7278                           ;usb_device.c: 2168: {
  7279                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7280  0BBC  0854               	movf	84,w	;volatile
  7281  0BBD  390F               	andlw	15
  7282  0BBE  0709               	addwf	9,w
  7283  0BBF  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7284  0BC0  0086               	movwf	6
  7285  0BC1  3001               	movlw	1	; select bank3/4
  7286  0BC2  0087               	movwf	7
  7287  0BC3  3F40               	moviw [0]fsr1
  7288  0BC4  00F1               	movwf	USBStdGetStatusHandler@p
  7289  0BC5  3F41               	moviw [1]fsr1
  7290  0BC6                     L5:	
  7291  0BC6  00F2               	movwf	USBStdGetStatusHandler@p+1
  7292                           
  7293                           ;usb_device.c: 2170: }
  7294                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  7295  0BC7  0871               	movf	USBStdGetStatusHandler@p,w
  7296  0BC8  0086               	movwf	6
  7297  0BC9  0872               	movf	USBStdGetStatusHandler@p+1,w
  7298  0BCA  0087               	movwf	7
  7299  0BCB  1F81               	btfss	1,7
  7300  0BCC  2BE4               	goto	i1l326
  7301  0BCD  0871               	movf	USBStdGetStatusHandler@p,w
  7302  0BCE  0086               	movwf	6
  7303  0BCF  0872               	movf	USBStdGetStatusHandler@p+1,w
  7304  0BD0  0087               	movwf	7
  7305  0BD1  1D01               	btfss	1,2
  7306  0BD2  2BE4               	goto	i1l326
  7307                           
  7308                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  7309  0BD3  3001               	movlw	1
  7310  0BD4  00F0               	movwf	??_USBStdGetStatusHandler
  7311  0BD5  0870               	movf	??_USBStdGetStatusHandler,w
  7312  0BD6  00D8               	movwf	88	;volatile
  7313                           
  7314                           ;usb_device.c: 2175: }
  7315                           ;usb_device.c: 2176: }
  7316                           
  7317                           ;usb_device.c: 2174: break;
  7318  0BD7  2BE4               	goto	i1l326
  7319  0BD8                     i1l3051:	
  7320  0BD8  0850               	movf	80,w	;volatile
  7321  0BD9  391F               	andlw	31
  7322                           
  7323                           ; Switch size 1, requested type "space"
  7324                           ; Number of cases is 3, Range of values is 0 to 2
  7325                           ; switch strategies available:
  7326                           ; Name         Instructions Cycles
  7327                           ; simple_byte           10     6 (average)
  7328                           ; direct_byte           12     6 (fixed)
  7329                           ; jumptable            260     6 (fixed)
  7330                           ;	Chosen strategy is simple_byte
  7331  0BDA  3A00               	xorlw	0	; case 0
  7332  0BDB  1903               	skipnz
  7333  0BDC  2BA0               	goto	i1l323
  7334  0BDD  3A01               	xorlw	1	; case 1
  7335  0BDE  1903               	skipnz
  7336  0BDF  2BA9               	goto	i1l327
  7337  0BE0  3A03               	xorlw	3	; case 2
  7338  0BE1  1903               	skipnz
  7339  0BE2  2BAC               	goto	i1l328
  7340  0BE3  2BE4               	goto	i1l326
  7341  0BE4                     i1l326:	
  7342                           
  7343                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  7344  0BE4  0022               	movlb	2	; select bank2
  7345  0BE5  1FED               	btfss	(_inPipes^(0+256)+2),7	;volatile
  7346  0BE6  0008               	return
  7347                           
  7348                           ;usb_device.c: 2179: {
  7349                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  7350  0BE7  3058               	movlw	88
  7351  0BE8  00EB               	movwf	_inPipes^(0+256)	;volatile
  7352  0BE9  3000               	movlw	0
  7353  0BEA  00EC               	movwf	(_inPipes+1)^(0+256)	;volatile
  7354                           
  7355                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7356  0BEB  146D               	bsf	(_inPipes^(0+256)+2),0	;volatile
  7357                           
  7358                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  7359  0BEC  3002               	movlw	2
  7360  0BED  00F0               	movwf	??_USBStdGetStatusHandler
  7361  0BEE  0870               	movf	??_USBStdGetStatusHandler,w
  7362  0BEF  00EE               	movwf	(_inPipes^(0+256)+3)	;volatile
  7363  0BF0  0008               	return
  7364  0BF1                     __end_of_USBStdGetStatusHandler:	
  7365                           
  7366                           	psect	text33
  7367  0DED                     __ptext33:	
  7368 ;; *************** function _USBStdGetDscHandler *****************
  7369 ;; Defined at:
  7370 ;;		line 2043 in file "../lib/usb/src/usb_device.c"
  7371 ;; Parameters:    Size  Location     Type
  7372 ;;		None
  7373 ;; Auto vars:     Size  Location     Type
  7374 ;;		None
  7375 ;; Return value:  Size  Location     Type
  7376 ;;                  1    wreg      void 
  7377 ;; Registers used:
  7378 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7379 ;; Tracked objects:
  7380 ;;		On entry : 0/0
  7381 ;;		On exit  : 0/0
  7382 ;;		Unchanged: 0/0
  7383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7386 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7387 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7388 ;;Total ram usage:        3 bytes
  7389 ;; Hardware stack levels used:    1
  7390 ;; This function calls:
  7391 ;;		Nothing
  7392 ;; This function is called by:
  7393 ;;		_USBCheckStdRequest
  7394 ;; This function uses a non-reentrant model
  7395 ;;
  7396                           
  7397                           
  7398                           ;psect for function _USBStdGetDscHandler
  7399  0DED                     _USBStdGetDscHandler:	
  7400                           
  7401                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  7402                           
  7403                           ;incstack = 0
  7404                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  7405  0DED  3080               	movlw	128
  7406  0DEE  0020               	movlb	0	; select bank0
  7407  0DEF  0650               	xorwf	80,w	;volatile
  7408  0DF0  1D03               	btfss	3,2
  7409  0DF1  0008               	return
  7410                           
  7411                           ;usb_device.c: 2046: {
  7412                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  7413  0DF2  30C0               	movlw	192
  7414  0DF3  00F0               	movwf	??_USBStdGetDscHandler
  7415  0DF4  0870               	movf	??_USBStdGetDscHandler,w
  7416  0DF5  0022               	movlb	2	; select bank2
  7417  0DF6  00ED               	movwf	(_inPipes^(0+256)+2)	;volatile
  7418                           
  7419                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  7420  0DF7  2E5F               	goto	i1l3029
  7421  0DF8                     i1l3003:	
  7422                           ;usb_device.c: 2050: {
  7423                           ;usb_device.c: 2051: case 0x01:
  7424                           
  7425                           
  7426                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  7427  0DF8  3004               	movlw	low (_device_dsc| (0+32768))
  7428  0DF9  0022               	movlb	2	; select bank2
  7429  0DFA  00EB               	movwf	_inPipes^(0+256)	;volatile
  7430  0DFB  3083               	movlw	high (_device_dsc| (0+32768))
  7431  0DFC  00EC               	movwf	(_inPipes^(0+256)+1)	;volatile
  7432                           
  7433                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  7434  0DFD  3000               	movlw	0
  7435  0DFE  00EF               	movwf	((_inPipes+1)^(0+256)+3)	;volatile
  7436  0DFF  3012               	movlw	18
  7437  0E00  00EE               	movwf	(_inPipes^(0+256)+3)	;volatile
  7438                           
  7439                           ;usb_device.c: 2058: break;
  7440  0E01  0008               	return
  7441  0E02                     i1l3007:	
  7442                           ;usb_device.c: 2059: case 0x02:
  7443                           
  7444                           
  7445                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  7446  0E02  0020               	movlb	0	; select bank0
  7447  0E03  0852               	movf	82,w	;volatile
  7448  0E04  1D03               	btfss	3,2
  7449  0E05  2E35               	goto	i1l3015
  7450                           
  7451                           ;usb_device.c: 2064: {
  7452                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  7453  0E06  0852               	movf	82,w	;volatile
  7454  0E07  00F0               	movwf	??_USBStdGetDscHandler
  7455  0E08  01F1               	clrf	??_USBStdGetDscHandler+1
  7456  0E09  35F0               	lslf	??_USBStdGetDscHandler,f
  7457  0E0A  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  7458  0E0B  3057               	movlw	low (_USB_CD_Ptr| (0+32768))
  7459  0E0C  0770               	addwf	??_USBStdGetDscHandler,w
  7460  0E0D  0084               	movwf	4
  7461  0E0E  3082               	movlw	high (_USB_CD_Ptr| (0+32768))
  7462  0E0F  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  7463  0E10  0085               	movwf	5
  7464  0E11  3F00               	moviw [0]fsr0
  7465  0E12  0022               	movlb	2	; select bank2
  7466  0E13  00EB               	movwf	_inPipes^(0+256)	;volatile
  7467  0E14  3F01               	moviw [1]fsr0
  7468  0E15  00EC               	movwf	(_inPipes+1)^(0+256)	;volatile
  7469                           
  7470                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  7471  0E16  086C               	movf	(_inPipes+1)^(0+256),w	;volatile
  7472  0E17  00F1               	movwf	??_USBStdGetDscHandler+1
  7473  0E18  086B               	movf	_inPipes^(0+256),w	;volatile
  7474  0E19  00F0               	movwf	??_USBStdGetDscHandler
  7475  0E1A  3002               	movlw	2
  7476  0E1B  0770               	addwf	??_USBStdGetDscHandler,w
  7477  0E1C  0084               	movwf	4
  7478  0E1D  0871               	movf	??_USBStdGetDscHandler+1,w
  7479  0E1E  1803               	skipnc
  7480  0E1F  0A71               	incf	??_USBStdGetDscHandler+1,w
  7481  0E20  0085               	movwf	5
  7482  0E21  0800               	movf	0,w	;code access
  7483  0E22  00F2               	movwf	??_USBStdGetDscHandler+2
  7484  0E23  0872               	movf	??_USBStdGetDscHandler+2,w
  7485  0E24  00EE               	movwf	(_inPipes^(0+256)+3)	;volatile
  7486                           
  7487                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  7488  0E25  086C               	movf	(_inPipes+1)^(0+256),w	;volatile
  7489  0E26  00F1               	movwf	??_USBStdGetDscHandler+1
  7490  0E27  086B               	movf	_inPipes^(0+256),w	;volatile
  7491  0E28  00F0               	movwf	??_USBStdGetDscHandler
  7492  0E29  3003               	movlw	3
  7493  0E2A  0770               	addwf	??_USBStdGetDscHandler,w
  7494  0E2B  0084               	movwf	4
  7495  0E2C  0871               	movf	??_USBStdGetDscHandler+1,w
  7496  0E2D  1803               	skipnc
  7497  0E2E  0A71               	incf	??_USBStdGetDscHandler+1,w
  7498  0E2F  0085               	movwf	5
  7499  0E30  0800               	movf	0,w	;code access
  7500  0E31  00F2               	movwf	??_USBStdGetDscHandler+2
  7501  0E32  0872               	movf	??_USBStdGetDscHandler+2,w
  7502  0E33  00EF               	movwf	(_inPipes^(0+256)+4)	;volatile
  7503                           
  7504                           ;usb_device.c: 2076: }
  7505  0E34  0008               	return
  7506  0E35                     i1l3015:	
  7507                           
  7508                           ;usb_device.c: 2077: else
  7509                           ;usb_device.c: 2078: {
  7510                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  7511  0E35  0022               	movlb	2	; select bank2
  7512  0E36  01ED               	clrf	(_inPipes^(0+256)+2)	;volatile
  7513                           
  7514                           ;usb_device.c: 2080: }
  7515                           ;usb_device.c: 2081: break;
  7516  0E37  0008               	return
  7517  0E38                     i1l3017:	
  7518                           ;usb_device.c: 2082: case 0x03:
  7519                           
  7520                           
  7521                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  7522  0E38  3003               	movlw	3
  7523  0E39  0020               	movlb	0	; select bank0
  7524  0E3A  0252               	subwf	82,w	;volatile
  7525  0E3B  1803               	skipnc
  7526  0E3C  2E59               	goto	i1l3023
  7527                           
  7528                           ;usb_device.c: 2087: {
  7529                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  7530  0E3D  0852               	movf	82,w	;volatile
  7531  0E3E  00F0               	movwf	??_USBStdGetDscHandler
  7532  0E3F  01F1               	clrf	??_USBStdGetDscHandler+1
  7533  0E40  35F0               	lslf	??_USBStdGetDscHandler,f
  7534  0E41  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  7535  0E42  3051               	movlw	low (_USB_SD_Ptr| (0+32768))
  7536  0E43  0770               	addwf	??_USBStdGetDscHandler,w
  7537  0E44  0084               	movwf	4
  7538  0E45  3082               	movlw	high (_USB_SD_Ptr| (0+32768))
  7539  0E46  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  7540  0E47  0085               	movwf	5
  7541  0E48  3F00               	moviw [0]fsr0
  7542  0E49  0022               	movlb	2	; select bank2
  7543  0E4A  00EB               	movwf	_inPipes^(0+256)	;volatile
  7544  0E4B  3F01               	moviw [1]fsr0
  7545  0E4C  00EC               	movwf	(_inPipes+1)^(0+256)	;volatile
  7546                           
  7547                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  7548  0E4D  086B               	movf	_inPipes^(0+256),w	;volatile
  7549  0E4E  0084               	movwf	4
  7550  0E4F  086C               	movf	(_inPipes+1)^(0+256),w	;volatile
  7551  0E50  0085               	movwf	5
  7552  0E51  0800               	movf	0,w	;code access
  7553  0E52  00F0               	movwf	??_USBStdGetDscHandler
  7554  0E53  01F1               	clrf	??_USBStdGetDscHandler+1
  7555  0E54  0870               	movf	??_USBStdGetDscHandler,w
  7556  0E55  00EE               	movwf	(_inPipes^(0+256)+3)	;volatile
  7557  0E56  0871               	movf	??_USBStdGetDscHandler+1,w
  7558  0E57  00EF               	movwf	((_inPipes+1)^(0+256)+3)	;volatile
  7559                           
  7560                           ;usb_device.c: 2092: }
  7561  0E58  0008               	return
  7562  0E59                     i1l3023:	
  7563                           
  7564                           ;usb_device.c: 2102: else
  7565                           ;usb_device.c: 2103: {
  7566                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  7567  0E59  0022               	movlb	2	; select bank2
  7568  0E5A  01ED               	clrf	(_inPipes^(0+256)+2)	;volatile
  7569                           
  7570                           ;usb_device.c: 2105: }
  7571                           ;usb_device.c: 2106: break;
  7572  0E5B  0008               	return
  7573  0E5C                     i1l3025:	
  7574                           ;usb_device.c: 2107: default:
  7575                           
  7576                           
  7577                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  7578  0E5C  0022               	movlb	2	; select bank2
  7579  0E5D  01ED               	clrf	(_inPipes^(0+256)+2)	;volatile
  7580                           
  7581                           ;usb_device.c: 2110: }
  7582                           
  7583                           ;usb_device.c: 2109: break;
  7584  0E5E  0008               	return
  7585  0E5F                     i1l3029:	
  7586  0E5F  0020               	movlb	0	; select bank0
  7587  0E60  0853               	movf	83,w	;volatile
  7588                           
  7589                           ; Switch size 1, requested type "space"
  7590                           ; Number of cases is 3, Range of values is 1 to 3
  7591                           ; switch strategies available:
  7592                           ; Name         Instructions Cycles
  7593                           ; simple_byte           10     6 (average)
  7594                           ; direct_byte           15     9 (fixed)
  7595                           ; jumptable            263     9 (fixed)
  7596                           ;	Chosen strategy is simple_byte
  7597  0E61  3A01               	xorlw	1	; case 1
  7598  0E62  1903               	skipnz
  7599  0E63  2DF8               	goto	i1l3003
  7600  0E64  3A03               	xorlw	3	; case 2
  7601  0E65  1903               	skipnz
  7602  0E66  2E02               	goto	i1l3007
  7603  0E67  3A01               	xorlw	1	; case 3
  7604  0E68  1903               	skipnz
  7605  0E69  2E38               	goto	i1l3017
  7606  0E6A  2E5C               	goto	i1l3025
  7607  0E6B  0008               	return
  7608  0E6C                     __end_of_USBStdGetDscHandler:	
  7609                           
  7610                           	psect	text34
  7611  0044                     __ptext34:	
  7612 ;; *************** function _USBStdFeatureReqHandler *****************
  7613 ;; Defined at:
  7614 ;;		line 2754 in file "../lib/usb/src/usb_device.c"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;		None
  7617 ;; Auto vars:     Size  Location     Type
  7618 ;;  p               2   11[BANK0 ] PTR struct __BDT
  7619 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  7620 ;;  pUEP            2    8[BANK0 ] PTR unsigned char 
  7621 ;;		 -> UEP0(1), 
  7622 ;;  current_ep_d    1   10[BANK0 ] struct .
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  1    wreg      void 
  7625 ;; Registers used:
  7626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7633 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7634 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7635 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7636 ;;Total ram usage:        7 bytes
  7637 ;; Hardware stack levels used:    1
  7638 ;; Hardware stack levels required when called:    4
  7639 ;; This function calls:
  7640 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7641 ;; This function is called by:
  7642 ;;		_USBCheckStdRequest
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646                           
  7647                           ;psect for function _USBStdFeatureReqHandler
  7648  0044                     _USBStdFeatureReqHandler:	
  7649                           
  7650                           ;usb_device.c: 2756: BDT_ENTRY *p;
  7651                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  7652                           ;usb_device.c: 2761: unsigned char* pUEP;
  7653                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  7654                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  7655                           
  7656                           ;incstack = 0
  7657                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7658  0044  0020               	movlb	0	; select bank0
  7659  0045  0352               	decf	82,w	;volatile
  7660  0046  1D03               	btfss	3,2
  7661  0047  285C               	goto	i1l3071
  7662  0048  0850               	movf	80,w	;volatile
  7663  0049  391F               	andlw	31
  7664  004A  3A00               	xorlw	0
  7665  004B  1D03               	skipz
  7666  004C  285C               	goto	i1l3071
  7667                           
  7668                           ;usb_device.c: 2801: {
  7669                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  7670  004D  0022               	movlb	2	; select bank2
  7671  004E  17ED               	bsf	(_inPipes^(0+256)+2),7	;volatile
  7672                           
  7673                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  7674  004F  3003               	movlw	3
  7675  0050  0020               	movlb	0	; select bank0
  7676  0051  0651               	xorwf	81,w	;volatile
  7677  0052  1D03               	btfss	3,2
  7678  0053  285A               	goto	i1l3069
  7679                           
  7680                           ;usb_device.c: 2804: RemoteWakeup = 1;
  7681  0054  3001               	movlw	1
  7682  0055  00E6               	movwf	??_USBStdFeatureReqHandler
  7683  0056  0866               	movf	??_USBStdFeatureReqHandler,w
  7684  0057  0023               	movlb	3	; select bank3
  7685  0058  00CA               	movwf	_RemoteWakeup^(0+384)	;volatile
  7686  0059  285C               	goto	i1l3071
  7687  005A                     i1l3069:	
  7688                           
  7689                           ;usb_device.c: 2805: else
  7690                           ;usb_device.c: 2806: RemoteWakeup = 0;
  7691  005A  0023               	movlb	3	; select bank3
  7692  005B  01CA               	clrf	_RemoteWakeup^(0+384)	;volatile
  7693  005C                     i1l3071:	
  7694                           
  7695                           ;usb_device.c: 2807: }
  7696                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  7697                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  7698                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  7699                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  7700  005C  0020               	movlb	0	; select bank0
  7701  005D  0852               	movf	82,w	;volatile
  7702  005E  1D03               	btfss	3,2
  7703  005F  0008               	return
  7704  0060  0850               	movf	80,w	;volatile
  7705  0061  391F               	andlw	31
  7706  0062  3A02               	xorlw	2
  7707  0063  1D03               	skipz
  7708  0064  0008               	return
  7709  0065  0854               	movf	84,w	;volatile
  7710  0066  390F               	andlw	15
  7711  0067  3A00               	xorlw	0
  7712  0068  1903               	skipnz
  7713  0069  0008               	return
  7714  006A  0854               	movf	84,w	;volatile
  7715  006B  390F               	andlw	15
  7716  006C  00E6               	movwf	??_USBStdFeatureReqHandler
  7717  006D  3003               	movlw	3
  7718  006E  0266               	subwf	??_USBStdFeatureReqHandler,w
  7719  006F  1803               	skipnc
  7720  0070  0008               	return
  7721  0071  3020               	movlw	32
  7722  0072  0021               	movlb	1	; select bank1
  7723  0073  0662               	xorwf	_USBDeviceState^(0+128),w	;volatile
  7724  0074  1D03               	btfss	3,2
  7725  0075  0008               	return
  7726                           
  7727                           ;usb_device.c: 2814: {
  7728                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  7729  0076  0022               	movlb	2	; select bank2
  7730  0077  17ED               	bsf	(_inPipes^(0+256)+2),7	;volatile
  7731                           
  7732                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  7733  0078  0020               	movlb	0	; select bank0
  7734  0079  1BD4               	btfsc	84,7	;volatile
  7735  007A  288A               	goto	i1l3085
  7736                           
  7737                           ;usb_device.c: 2821: {
  7738                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7739  007B  0854               	movf	84,w	;volatile
  7740  007C  390F               	andlw	15
  7741  007D  0709               	addwf	9,w
  7742  007E  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7743  007F  0086               	movwf	6
  7744  0080  3001               	movlw	1	; select bank3/4
  7745  0081  0087               	movwf	7
  7746  0082  3F40               	moviw [0]fsr1
  7747  0083  00EB               	movwf	USBStdFeatureReqHandler@p
  7748  0084  3F41               	moviw [1]fsr1
  7749  0085  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7750                           
  7751                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  7752  0086  0854               	movf	84,w	;volatile
  7753  0087  390F               	andlw	15
  7754  0088  3EBE               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7755  0089  2898               	goto	L6
  7756  008A                     i1l3085:	
  7757                           ;usb_device.c: 2824: }
  7758                           
  7759                           
  7760                           ;usb_device.c: 2825: else
  7761                           ;usb_device.c: 2826: {
  7762                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7763  008A  0854               	movf	84,w	;volatile
  7764  008B  390F               	andlw	15
  7765  008C  0709               	addwf	9,w
  7766  008D  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7767  008E  0086               	movwf	6
  7768  008F  3001               	movlw	1	; select bank3/4
  7769  0090  0087               	movwf	7
  7770  0091  3F40               	moviw [0]fsr1
  7771  0092  00EB               	movwf	USBStdFeatureReqHandler@p
  7772  0093  3F41               	moviw [1]fsr1
  7773  0094  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7774                           
  7775                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  7776  0095  0854               	movf	84,w	;volatile
  7777  0096  390F               	andlw	15
  7778  0097  3EBB               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7779  0098                     L6:	
  7780  0098  0086               	movwf	6
  7781  0099  3001               	movlw	1	; select bank3/4
  7782  009A  0087               	movwf	7
  7783  009B  0801               	movf	1,w
  7784  009C  00E6               	movwf	??_USBStdFeatureReqHandler
  7785  009D  0866               	movf	??_USBStdFeatureReqHandler,w
  7786  009E  00EA               	movwf	USBStdFeatureReqHandler@current_ep_data
  7787                           
  7788                           ;usb_device.c: 2829: }
  7789                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  7790  009F  186A               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  7791  00A0  28AB               	goto	i1l3091
  7792                           
  7793                           ;usb_device.c: 2836: {
  7794                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  7795  00A1  30FB               	movlw	251
  7796  00A2  00E6               	movwf	??_USBStdFeatureReqHandler
  7797  00A3  30FF               	movlw	255
  7798  00A4  00E7               	movwf	??_USBStdFeatureReqHandler+1
  7799  00A5  086B               	movf	USBStdFeatureReqHandler@p,w
  7800  00A6  0566               	andwf	??_USBStdFeatureReqHandler,w
  7801  00A7  00EB               	movwf	USBStdFeatureReqHandler@p
  7802  00A8  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7803  00A9  0567               	andwf	??_USBStdFeatureReqHandler+1,w
  7804  00AA  28B0               	goto	L7
  7805  00AB                     i1l3091:	
  7806                           ;usb_device.c: 2838: }
  7807                           
  7808                           
  7809                           ;usb_device.c: 2839: else
  7810                           ;usb_device.c: 2840: {
  7811                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  7812  00AB  3004               	movlw	4
  7813  00AC  046B               	iorwf	USBStdFeatureReqHandler@p,w
  7814  00AD  00EB               	movwf	USBStdFeatureReqHandler@p
  7815  00AE  3000               	movlw	0
  7816  00AF  046C               	iorwf	USBStdFeatureReqHandler@p+1,w
  7817  00B0                     L7:	
  7818  00B0  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7819                           
  7820                           ;usb_device.c: 2842: }
  7821                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  7822  00B1  1BD4               	btfsc	84,7	;volatile
  7823  00B2  28BF               	goto	i1l3097
  7824                           
  7825                           ;usb_device.c: 2848: {
  7826                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7827  00B3  0854               	movf	84,w	;volatile
  7828  00B4  390F               	andlw	15
  7829  00B5  0709               	addwf	9,w
  7830  00B6  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7831  00B7  0086               	movwf	6
  7832  00B8  3001               	movlw	1	; select bank3/4
  7833  00B9  0087               	movwf	7
  7834  00BA  086B               	movf	USBStdFeatureReqHandler@p,w
  7835  00BB  3FC0               	movwi [0]fsr1
  7836  00BC  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7837  00BD  3FC1               	movwi [1]fsr1
  7838                           
  7839                           ;usb_device.c: 2850: }
  7840  00BE  28CA               	goto	i1l3099
  7841  00BF                     i1l3097:	
  7842                           
  7843                           ;usb_device.c: 2851: else
  7844                           ;usb_device.c: 2852: {
  7845                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7846  00BF  0854               	movf	84,w	;volatile
  7847  00C0  390F               	andlw	15
  7848  00C1  0709               	addwf	9,w
  7849  00C2  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7850  00C3  0086               	movwf	6
  7851  00C4  3001               	movlw	1	; select bank3/4
  7852  00C5  0087               	movwf	7
  7853  00C6  086B               	movf	USBStdFeatureReqHandler@p,w
  7854  00C7  3FC0               	movwi [0]fsr1
  7855  00C8  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7856  00C9  3FC1               	movwi [1]fsr1
  7857  00CA                     i1l3099:	
  7858                           
  7859                           ;usb_device.c: 2854: }
  7860                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  7861  00CA  3003               	movlw	3
  7862  00CB  0651               	xorwf	81,w	;volatile
  7863  00CC  1D03               	btfss	3,2
  7864  00CD  28EC               	goto	i1l3113
  7865                           
  7866                           ;usb_device.c: 2858: {
  7867                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  7868  00CE  086B               	movf	USBStdFeatureReqHandler@p,w
  7869  00CF  0086               	movwf	6
  7870  00D0  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7871  00D1  0087               	movwf	7
  7872  00D2  1F81               	btfss	1,7
  7873  00D3  28E1               	goto	i1l3109
  7874                           
  7875                           ;usb_device.c: 2860: {
  7876                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  7877  00D4  1BD4               	btfsc	84,7	;volatile
  7878  00D5  28DA               	goto	i1l3107
  7879                           
  7880                           ;usb_device.c: 2864: {
  7881                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7882  00D6  0854               	movf	84,w	;volatile
  7883  00D7  390F               	andlw	15
  7884  00D8  3EBE               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7885  00D9  28DD               	goto	L8
  7886  00DA                     i1l3107:	
  7887                           ;usb_device.c: 2866: }
  7888                           
  7889                           
  7890                           ;usb_device.c: 2867: else
  7891                           ;usb_device.c: 2868: {
  7892                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7893  00DA  0854               	movf	84,w	;volatile
  7894  00DB  390F               	andlw	15
  7895  00DC  3EBB               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7896  00DD                     L8:	
  7897  00DD  0086               	movwf	6
  7898  00DE  3001               	movlw	1	; select bank3/4
  7899  00DF  0087               	movwf	7
  7900  00E0  1481               	bsf	1,1
  7901  00E1                     i1l3109:	
  7902                           
  7903                           ;usb_device.c: 2870: }
  7904                           ;usb_device.c: 2871: }
  7905                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  7906  00E1  086B               	movf	USBStdFeatureReqHandler@p,w
  7907  00E2  0086               	movwf	6
  7908  00E3  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7909  00E4  0087               	movwf	7
  7910  00E5  1501               	bsf	1,2
  7911                           
  7912                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  7913  00E6  086B               	movf	USBStdFeatureReqHandler@p,w
  7914  00E7  0086               	movwf	6
  7915  00E8  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7916  00E9  0087               	movwf	7
  7917  00EA  1781               	bsf	1,7
  7918                           
  7919                           ;usb_device.c: 2876: }
  7920  00EB  0008               	return
  7921  00EC                     i1l3113:	
  7922                           
  7923                           ;usb_device.c: 2877: else
  7924                           ;usb_device.c: 2878: {
  7925                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7926  00EC  3004               	movlw	4
  7927  00ED  066B               	xorwf	USBStdFeatureReqHandler@p,w
  7928  00EE  00EB               	movwf	USBStdFeatureReqHandler@p
  7929  00EF  3000               	movlw	0
  7930  00F0  066C               	xorwf	USBStdFeatureReqHandler@p+1,w
  7931  00F1  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7932                           
  7933                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  7934  00F2  086B               	movf	USBStdFeatureReqHandler@p,w
  7935  00F3  0086               	movwf	6
  7936  00F4  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7937  00F5  0087               	movwf	7
  7938  00F6  1F81               	btfss	1,7
  7939  00F7  2915               	goto	i1l3123
  7940                           
  7941                           ;usb_device.c: 2885: {
  7942                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  7943  00F8  307F               	movlw	127
  7944  00F9  00E6               	movwf	??_USBStdFeatureReqHandler
  7945  00FA  086B               	movf	USBStdFeatureReqHandler@p,w
  7946  00FB  0086               	movwf	6
  7947  00FC  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7948  00FD  0087               	movwf	7
  7949  00FE  0866               	movf	??_USBStdFeatureReqHandler,w
  7950  00FF  0581               	andwf	1,f
  7951                           
  7952                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  7953  0100  086B               	movf	USBStdFeatureReqHandler@p,w
  7954  0101  0086               	movwf	6
  7955  0102  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7956  0103  0087               	movwf	7
  7957  0104  1701               	bsf	1,6
  7958                           
  7959                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7960  0105  3000               	movlw	0
  7961  0106  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7962  0107  3005               	movlw	5
  7963  0108  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7964  0109  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7965  010A  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7966  010B  086B               	movf	USBStdFeatureReqHandler@p,w
  7967  010C  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7968  010D  3002               	movlw	2
  7969  010E  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7970  010F  3000               	movlw	0
  7971  0110  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7972  0111  3189  21F9  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7973                           
  7974                           ;usb_device.c: 2891: }
  7975  0114  291B               	goto	i1l3125
  7976  0115                     i1l3123:	
  7977                           
  7978                           ;usb_device.c: 2892: else
  7979                           ;usb_device.c: 2893: {
  7980                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  7981  0115  0020               	movlb	0	; select bank0
  7982  0116  086B               	movf	USBStdFeatureReqHandler@p,w
  7983  0117  0086               	movwf	6
  7984  0118  086C               	movf	USBStdFeatureReqHandler@p+1,w
  7985  0119  0087               	movwf	7
  7986  011A  1701               	bsf	1,6
  7987  011B                     i1l3125:	
  7988                           
  7989                           ;usb_device.c: 2896: }
  7990                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7991  011B  3004               	movlw	4
  7992  011C  0020               	movlb	0	; select bank0
  7993  011D  066B               	xorwf	USBStdFeatureReqHandler@p,w
  7994  011E  00EB               	movwf	USBStdFeatureReqHandler@p
  7995  011F  3000               	movlw	0
  7996  0120  066C               	xorwf	USBStdFeatureReqHandler@p+1,w
  7997  0121  00EC               	movwf	USBStdFeatureReqHandler@p+1
  7998                           
  7999                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  8000  0122  18EA               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  8001  0123  292A               	goto	i1l419
  8002  0124  086B               	movf	USBStdFeatureReqHandler@p,w
  8003  0125  0086               	movwf	6
  8004  0126  086C               	movf	USBStdFeatureReqHandler@p+1,w
  8005  0127  0087               	movwf	7
  8006  0128  1F81               	btfss	1,7
  8007  0129  294F               	goto	i1l3137
  8008  012A                     i1l419:	
  8009                           
  8010                           ;usb_device.c: 2907: {
  8011                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  8012  012A  1BD4               	btfsc	84,7	;volatile
  8013  012B  2930               	goto	i1l3133
  8014                           
  8015                           ;usb_device.c: 2909: {
  8016                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  8017  012C  0854               	movf	84,w	;volatile
  8018  012D  390F               	andlw	15
  8019  012E  3EBE               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  8020  012F  2933               	goto	L9
  8021  0130                     i1l3133:	
  8022                           ;usb_device.c: 2911: }
  8023                           
  8024                           
  8025                           ;usb_device.c: 2912: else
  8026                           ;usb_device.c: 2913: {
  8027                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  8028  0130  0854               	movf	84,w	;volatile
  8029  0131  390F               	andlw	15
  8030  0132  3EBB               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  8031  0133                     L9:	
  8032  0133  0086               	movwf	6
  8033  0134  3001               	movlw	1	; select bank3/4
  8034  0135  0087               	movwf	7
  8035  0136  1081               	bcf	1,1
  8036                           
  8037                           ;usb_device.c: 2915: }
  8038                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  8039  0137  303B               	movlw	59
  8040  0138  00E6               	movwf	??_USBStdFeatureReqHandler
  8041  0139  086B               	movf	USBStdFeatureReqHandler@p,w
  8042  013A  0086               	movwf	6
  8043  013B  086C               	movf	USBStdFeatureReqHandler@p+1,w
  8044  013C  0087               	movwf	7
  8045  013D  0866               	movf	??_USBStdFeatureReqHandler,w
  8046  013E  0581               	andwf	1,f
  8047                           
  8048                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  8049  013F  3000               	movlw	0
  8050  0140  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  8051  0141  3005               	movlw	5
  8052  0142  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  8053  0143  086C               	movf	USBStdFeatureReqHandler@p+1,w
  8054  0144  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  8055  0145  086B               	movf	USBStdFeatureReqHandler@p,w
  8056  0146  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  8057  0147  3002               	movlw	2
  8058  0148  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  8059  0149  3000               	movlw	0
  8060  014A  00E5               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  8061  014B  3189  21F9  3180   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  8062                           
  8063                           ;usb_device.c: 2921: }
  8064  014E  2958               	goto	i1l3139
  8065  014F                     i1l3137:	
  8066                           
  8067                           ;usb_device.c: 2922: else
  8068                           ;usb_device.c: 2923: {
  8069                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  8070  014F  303B               	movlw	59
  8071  0150  0020               	movlb	0	; select bank0
  8072  0151  00E6               	movwf	??_USBStdFeatureReqHandler
  8073  0152  086B               	movf	USBStdFeatureReqHandler@p,w
  8074  0153  0086               	movwf	6
  8075  0154  086C               	movf	USBStdFeatureReqHandler@p+1,w
  8076  0155  0087               	movwf	7
  8077  0156  0866               	movf	??_USBStdFeatureReqHandler,w
  8078  0157  0581               	andwf	1,f
  8079  0158                     i1l3139:	
  8080                           
  8081                           ;usb_device.c: 2926: }
  8082                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  8083  0158  0020               	movlb	0	; select bank0
  8084  0159  0854               	movf	84,w	;volatile
  8085  015A  390F               	andlw	15
  8086  015B  3E98               	addlw	152
  8087  015C  00E6               	movwf	??_USBStdFeatureReqHandler
  8088  015D  01E7               	clrf	??_USBStdFeatureReqHandler+1
  8089  015E  300E               	movlw	14
  8090  015F  3DE7               	addwfc	??_USBStdFeatureReqHandler+1,f
  8091  0160  0866               	movf	??_USBStdFeatureReqHandler,w
  8092  0161  00E8               	movwf	USBStdFeatureReqHandler@pUEP
  8093  0162  0867               	movf	??_USBStdFeatureReqHandler+1,w
  8094  0163  00E9               	movwf	USBStdFeatureReqHandler@pUEP+1
  8095                           
  8096                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  8097  0164  30FE               	movlw	254
  8098  0165  00E6               	movwf	??_USBStdFeatureReqHandler
  8099  0166  0868               	movf	USBStdFeatureReqHandler@pUEP,w
  8100  0167  0086               	movwf	6
  8101  0168  0869               	movf	USBStdFeatureReqHandler@pUEP+1,w
  8102  0169  0087               	movwf	7
  8103  016A  0866               	movf	??_USBStdFeatureReqHandler,w
  8104  016B  0581               	andwf	1,f
  8105  016C  0008               	return
  8106  016D                     __end_of_USBStdFeatureReqHandler:	
  8107                           
  8108                           	psect	text35
  8109  09F9                     __ptext35:	
  8110 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  8111 ;; Defined at:
  8112 ;;		line 51 in file "../src/usb_events.c"
  8113 ;; Parameters:    Size  Location     Type
  8114 ;;  event           2    0[BANK0 ] enum E2645
  8115 ;;  pdata           2    2[BANK0 ] PTR void 
  8116 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
  8117 ;;		 -> BDT(48), 
  8118 ;;  size            2    4[BANK0 ] unsigned int 
  8119 ;; Auto vars:     Size  Location     Type
  8120 ;;		None
  8121 ;; Return value:  Size  Location     Type
  8122 ;;                  1    wreg      unsigned char 
  8123 ;; Registers used:
  8124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8125 ;; Tracked objects:
  8126 ;;		On entry : 0/0
  8127 ;;		On exit  : 0/0
  8128 ;;		Unchanged: 0/0
  8129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8130 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8133 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8134 ;;Total ram usage:        6 bytes
  8135 ;; Hardware stack levels used:    1
  8136 ;; Hardware stack levels required when called:    3
  8137 ;; This function calls:
  8138 ;;		_USBCheckCDCRequest
  8139 ;;		i1_CDCInitEP
  8140 ;;		i1_SYSTEM_Initialize
  8141 ;; This function is called by:
  8142 ;;		_USBDeviceTasks
  8143 ;;		_USBStdSetCfgHandler
  8144 ;;		_USBSuspend
  8145 ;;		_USBWakeFromSuspend
  8146 ;;		_USBCtrlTrfSetupHandler
  8147 ;;		_USBCheckStdRequest
  8148 ;;		_USBStdFeatureReqHandler
  8149 ;; This function uses a non-reentrant model
  8150 ;;
  8151                           
  8152                           
  8153                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  8154  09F9                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  8155                           
  8156                           ;usb_events.c: 53: switch( (int) event )
  8157                           
  8158                           ;incstack = 0
  8159                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  8160  09F9  2A08               	goto	i1l2829
  8161  09FA                     i1l2819:	
  8162                           ;usb_events.c: 64: case EVENT_SUSPEND:
  8163                           
  8164                           ;usb_events.c: 62: break;
  8165                           
  8166                           ;usb_events.c: 58: case EVENT_SOF:
  8167                           
  8168                           ;usb_events.c: 56: break;
  8169                           
  8170                           ;usb_events.c: 54: {
  8171                           ;usb_events.c: 55: case EVENT_TRANSFER:
  8172                           
  8173                           
  8174                           ;usb_events.c: 74: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
  8175  09FA  3001               	movlw	1
  8176  09FB  3197  27AA         	fcall	i1_SYSTEM_Initialize
  8177                           
  8178                           ;usb_events.c: 75: break;
  8179  09FD  0008               	return
  8180  09FE                     i1l2821:	
  8181                           ;usb_events.c: 77: case EVENT_RESUME:
  8182                           
  8183                           
  8184                           ;usb_events.c: 85: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
  8185  09FE  3002               	movlw	2
  8186  09FF  3197  27AA         	fcall	i1_SYSTEM_Initialize
  8187                           
  8188                           ;usb_events.c: 86: break;
  8189  0A01  0008               	return
  8190  0A02                     i1l2823:	
  8191                           ;usb_events.c: 88: case EVENT_CONFIGURED:
  8192                           
  8193                           
  8194                           ;usb_events.c: 91: CDCInitEP();
  8195  0A02  3189  218D         	fcall	i1_CDCInitEP
  8196                           
  8197                           ;usb_events.c: 96: break;
  8198                           
  8199                           ;usb_events.c: 95: case EVENT_SET_DESCRIPTOR:
  8200                           
  8201                           ;usb_events.c: 93: break;
  8202  0A04  0008               	return
  8203  0A05                     i1l2825:	
  8204                           ;usb_events.c: 98: case EVENT_EP0_REQUEST:
  8205                           
  8206                           
  8207                           ;usb_events.c: 101: USBCheckCDCRequest();
  8208  0A05  318C  244D         	fcall	_USBCheckCDCRequest
  8209                           
  8210                           ;usb_events.c: 112: }
  8211                           
  8212                           ;usb_events.c: 111: break;
  8213                           
  8214                           ;usb_events.c: 110: default:
  8215                           
  8216                           ;usb_events.c: 108: break;
  8217                           
  8218                           ;usb_events.c: 107: case EVENT_TRANSFER_TERMINATED:
  8219                           
  8220                           ;usb_events.c: 105: break;
  8221                           
  8222                           ;usb_events.c: 104: case EVENT_BUS_ERROR:
  8223                           
  8224                           ;usb_events.c: 102: break;
  8225  0A07  0008               	return
  8226  0A08                     i1l2829:	
  8227                           
  8228                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  8229                           ; Switch size 1, requested type "space"
  8230                           ; Number of cases is 2, Range of values is 0 to 127
  8231                           ; switch strategies available:
  8232                           ; Name         Instructions Cycles
  8233                           ; simple_byte            7     4 (average)
  8234                           ; direct_byte          262     6 (fixed)
  8235                           ; jumptable            260     6 (fixed)
  8236                           ;	Chosen strategy is simple_byte
  8237  0A08  0020               	movlb	0	; select bank0
  8238  0A09  0861               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  8239  0A0A  3A00               	xorlw	0	; case 0
  8240  0A0B  1903               	skipnz
  8241  0A0C  2A11               	goto	i1l4815
  8242  0A0D  3A7F               	xorlw	127	; case 127
  8243  0A0E  1903               	skipnz
  8244  0A0F  2A2B               	goto	i1l4817
  8245  0A10  2A30               	goto	i1l35
  8246  0A11                     i1l4815:	
  8247                           
  8248                           ; Switch size 1, requested type "space"
  8249                           ; Number of cases is 8, Range of values is 1 to 117
  8250                           ; switch strategies available:
  8251                           ; Name         Instructions Cycles
  8252                           ; simple_byte           25    13 (average)
  8253                           ; direct_byte          243     9 (fixed)
  8254                           ; jumptable            263     9 (fixed)
  8255                           ;	Chosen strategy is simple_byte
  8256  0A11  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  8257  0A12  3A01               	xorlw	1	; case 1
  8258  0A13  1903               	skipnz
  8259  0A14  2A02               	goto	i1l2823
  8260  0A15  3A03               	xorlw	3	; case 2
  8261  0A16  1903               	skipnz
  8262  0A17  2A30               	goto	i1l35
  8263  0A18  3A01               	xorlw	1	; case 3
  8264  0A19  1903               	skipnz
  8265  0A1A  2A05               	goto	i1l2825
  8266  0A1B  3A06               	xorlw	6	; case 5
  8267  0A1C  1903               	skipnz
  8268  0A1D  2A30               	goto	i1l35
  8269  0A1E  3A77               	xorlw	119	; case 114
  8270  0A1F  1903               	skipnz
  8271  0A20  2A30               	goto	i1l35
  8272  0A21  3A01               	xorlw	1	; case 115
  8273  0A22  1903               	skipnz
  8274  0A23  2A30               	goto	i1l35
  8275  0A24  3A07               	xorlw	7	; case 116
  8276  0A25  1903               	skipnz
  8277  0A26  29FE               	goto	i1l2821
  8278  0A27  3A01               	xorlw	1	; case 117
  8279  0A28  1903               	skipnz
  8280  0A29  29FA               	goto	i1l2819
  8281  0A2A  2A30               	goto	i1l35
  8282  0A2B                     i1l4817:	
  8283                           
  8284                           ; Switch size 1, requested type "space"
  8285                           ; Number of cases is 1, Range of values is 255 to 255
  8286                           ; switch strategies available:
  8287                           ; Name         Instructions Cycles
  8288                           ; simple_byte            4     3 (average)
  8289                           ; direct_byte            7     5 (fixed)
  8290                           ; jumptable            263     9 (fixed)
  8291                           ;	Chosen strategy is simple_byte
  8292  0A2B  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  8293  0A2C  3AFF               	xorlw	255	; case 255
  8294  0A2D  1903               	skipnz
  8295  0A2E  2A30               	goto	i1l35
  8296  0A2F  2A30               	goto	i1l35
  8297  0A30                     i1l35:	
  8298                           ;usb_events.c: 113: return 1;
  8299                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
  8300                           
  8301  0A30  0008               	return
  8302  0A31                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  8303                           
  8304                           	psect	text36
  8305  17AA                     __ptext36:	
  8306 ;; *************** function i1_SYSTEM_Initialize *****************
  8307 ;; Defined at:
  8308 ;;		line 82 in file "system.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;  state           1    wreg     enum E2598
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;  state           1    0[COMMON] enum E2598
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  1    wreg      void 
  8315 ;; Registers used:
  8316 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8323 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8325 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8326 ;;Total ram usage:        1 bytes
  8327 ;; Hardware stack levels used:    1
  8328 ;; This function calls:
  8329 ;;		Nothing
  8330 ;; This function is called by:
  8331 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8332 ;; This function uses a non-reentrant model
  8333 ;;
  8334                           
  8335                           
  8336                           ;psect for function i1_SYSTEM_Initialize
  8337  17AA                     i1_SYSTEM_Initialize:	
  8338                           
  8339                           ;incstack = 0
  8340                           ; Regs used in i1_SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0]
  8341                           ;i1SYSTEM_Initialize@state stored from wreg
  8342  17AA  00F0               	movwf	i1SYSTEM_Initialize@state
  8343                           
  8344                           ;system.c: 84: switch(state)
  8345  17AB  2FB3               	goto	i1l2815
  8346  17AC                     i1l2811:	
  8347                           ;system.c: 85: {
  8348                           ;system.c: 86: case SYSTEM_STATE_USB_START:
  8349                           
  8350                           
  8351                           ;system.c: 90: OSCCON = 0xFC;
  8352  17AC  30FC               	movlw	252
  8353  17AD  0021               	movlb	1	; select bank1
  8354  17AE  0099               	movwf	25	;volatile
  8355                           
  8356                           ;system.c: 91: ACTCON = 0x90;
  8357  17AF  3090               	movlw	144
  8358  17B0  0027               	movlb	7	; select bank7
  8359  17B1  009B               	movwf	27	;volatile
  8360                           
  8361                           ;system.c: 102: }
  8362                           
  8363                           ;system.c: 101: break;
  8364                           
  8365                           ;system.c: 100: case SYSTEM_STATE_USB_RESUME:
  8366                           
  8367                           ;system.c: 98: break;
  8368                           
  8369                           ;system.c: 97: case SYSTEM_STATE_USB_SUSPEND:
  8370                           
  8371                           ;system.c: 95: break;
  8372  17B2  0008               	return
  8373  17B3                     i1l2815:	
  8374  17B3  0870               	movf	i1SYSTEM_Initialize@state,w
  8375                           
  8376                           ; Switch size 1, requested type "space"
  8377                           ; Number of cases is 3, Range of values is 0 to 2
  8378                           ; switch strategies available:
  8379                           ; Name         Instructions Cycles
  8380                           ; simple_byte           10     6 (average)
  8381                           ; direct_byte           12     6 (fixed)
  8382                           ; jumptable            260     6 (fixed)
  8383                           ;	Chosen strategy is simple_byte
  8384  17B4  3A00               	xorlw	0	; case 0
  8385  17B5  1903               	skipnz
  8386  17B6  2FAC               	goto	i1l2811
  8387  17B7  3A01               	xorlw	1	; case 1
  8388  17B8  1903               	skipnz
  8389  17B9  2FBE               	goto	i1l565
  8390  17BA  3A03               	xorlw	3	; case 2
  8391  17BB  1903               	skipnz
  8392  17BC  2FBE               	goto	i1l565
  8393  17BD  2FBE               	goto	i1l565
  8394  17BE                     i1l565:	
  8395  17BE  0008               	return
  8396  17BF                     __end_ofi1_SYSTEM_Initialize:	
  8397                           
  8398                           	psect	text37
  8399  098D                     __ptext37:	
  8400 ;; *************** function i1_CDCInitEP *****************
  8401 ;; Defined at:
  8402 ;;		line 294 in file "../lib/usb/src/usb_device_cdc.c"
  8403 ;; Parameters:    Size  Location     Type
  8404 ;;		None
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;		None
  8407 ;; Return value:  Size  Location     Type
  8408 ;;                  1    wreg      void 
  8409 ;; Registers used:
  8410 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8411 ;; Tracked objects:
  8412 ;;		On entry : 0/0
  8413 ;;		On exit  : 0/0
  8414 ;;		Unchanged: 0/0
  8415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8418 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8419 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8420 ;;Total ram usage:        1 bytes
  8421 ;; Hardware stack levels used:    1
  8422 ;; Hardware stack levels required when called:    2
  8423 ;; This function calls:
  8424 ;;		i1_USBEnableEndpoint
  8425 ;;		i1_USBTransferOnePacket
  8426 ;; This function is called by:
  8427 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8428 ;; This function uses a non-reentrant model
  8429 ;;
  8430                           
  8431                           
  8432                           ;psect for function i1_CDCInitEP
  8433  098D                     i1_CDCInitEP:	
  8434                           
  8435                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
  8436                           
  8437                           ;incstack = 0
  8438                           ; Regs used in i1_CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8439  098D  3000               	movlw	0
  8440  098E  0023               	movlb	3	; select bank3
  8441  098F  00DE               	movwf	(_line_coding+3)^(0+384)
  8442  0990  3000               	movlw	0
  8443  0991  00DD               	movwf	(_line_coding+2)^(0+384)
  8444  0992  304B               	movlw	75
  8445  0993  00DC               	movwf	(_line_coding+1)^(0+384)
  8446  0994  3000               	movlw	0
  8447  0995  00DB               	movwf	_line_coding^(0+384)
  8448                           
  8449                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  8450  0996  01DF               	clrf	(_line_coding^(0+384)+4)
  8451                           
  8452                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  8453  0997  01E0               	clrf	(_line_coding^(0+384)+5)
  8454                           
  8455                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  8456  0998  3008               	movlw	8
  8457  0999  00FD               	movwf	??i1_CDCInitEP
  8458  099A  087D               	movf	??i1_CDCInitEP,w
  8459  099B  00E1               	movwf	(_line_coding^(0+384)+6)
  8460                           
  8461                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  8462  099C  01D4               	clrf	_cdc_rx_len^(0+384)
  8463                           
  8464                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  8465  099D  301A               	movlw	26
  8466  099E  00FD               	movwf	??i1_CDCInitEP
  8467  099F  087D               	movf	??i1_CDCInitEP,w
  8468  09A0  00F7               	movwf	i1USBEnableEndpoint@options
  8469  09A1  3001               	movlw	1
  8470  09A2  3188  20A4  3189   	fcall	i1_USBEnableEndpoint
  8471                           
  8472                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  8473  09A5  301E               	movlw	30
  8474  09A6  00FD               	movwf	??i1_CDCInitEP
  8475  09A7  087D               	movf	??i1_CDCInitEP,w
  8476  09A8  00F7               	movwf	i1USBEnableEndpoint@options
  8477  09A9  3002               	movlw	2
  8478  09AA  3188  20A4  3189   	fcall	i1_USBEnableEndpoint
  8479                           
  8480                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  8481  09AD  01F0               	clrf	i1USBTransferOnePacket@dir
  8482  09AE  3020               	movlw	32
  8483  09AF  00F1               	movwf	i1USBTransferOnePacket@data
  8484  09B0  3001               	movlw	1
  8485  09B1  00F2               	movwf	i1USBTransferOnePacket@data+1
  8486  09B2  3040               	movlw	64
  8487  09B3  00FD               	movwf	??i1_CDCInitEP
  8488  09B4  087D               	movf	??i1_CDCInitEP,w
  8489  09B5  00F3               	movwf	i1USBTransferOnePacket@len
  8490  09B6  3002               	movlw	2
  8491  09B7  318E  266C         	fcall	i1_USBTransferOnePacket
  8492  09B9  0871               	movf	?i1_USBTransferOnePacket+1,w
  8493  09BA  0023               	movlb	3	; select bank3
  8494  09BB  00C4               	movwf	(_CDCDataOutHandle+1)^(0+384)
  8495  09BC  0870               	movf	?i1_USBTransferOnePacket,w
  8496  09BD  00C3               	movwf	_CDCDataOutHandle^(0+384)
  8497                           
  8498                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  8499  09BE  01C1               	clrf	_CDCDataInHandle^(0+384)
  8500  09BF  01C2               	clrf	(_CDCDataInHandle+1)^(0+384)
  8501                           
  8502                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
  8503  09C0  01D5               	clrf	_cdc_trf_state^(0+384)
  8504  09C1  0008               	return
  8505  09C2                     __end_ofi1_CDCInitEP:	
  8506                           
  8507                           	psect	text38
  8508  0E6C                     __ptext38:	
  8509 ;; *************** function i1_USBTransferOnePacket *****************
  8510 ;; Defined at:
  8511 ;;		line 995 in file "../lib/usb/src/usb_device.c"
  8512 ;; Parameters:    Size  Location     Type
  8513 ;;  ep              1    wreg     unsigned char 
  8514 ;;  dir             1    0[COMMON] unsigned char 
  8515 ;;  data            2    1[COMMON] PTR unsigned char 
  8516 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  8517 ;;  len             1    3[COMMON] unsigned char 
  8518 ;; Auto vars:     Size  Location     Type
  8519 ;;  ep              1    8[COMMON] unsigned char 
  8520 ;;  USBTransferO    2    9[COMMON] PTR volatile struct __BD
  8521 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  8522 ;; Return value:  Size  Location     Type
  8523 ;;                  2    0[COMMON] PTR void 
  8524 ;; Registers used:
  8525 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8526 ;; Tracked objects:
  8527 ;;		On entry : 0/0
  8528 ;;		On exit  : 0/0
  8529 ;;		Unchanged: 0/0
  8530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8531 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8532 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8533 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8534 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8535 ;;Total ram usage:       11 bytes
  8536 ;; Hardware stack levels used:    1
  8537 ;; This function calls:
  8538 ;;		Nothing
  8539 ;; This function is called by:
  8540 ;;		i1_CDCInitEP
  8541 ;; This function uses a non-reentrant model
  8542 ;;
  8543                           
  8544                           
  8545                           ;psect for function i1_USBTransferOnePacket
  8546  0E6C                     i1_USBTransferOnePacket:	
  8547                           
  8548                           ;incstack = 0
  8549                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  8550                           ;i1USBTransferOnePacket@ep stored from wreg
  8551  0E6C  00F8               	movwf	i1USBTransferOnePacket@ep
  8552                           
  8553                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  8554                           ;usb_device.c: 1000: if(dir != 0)
  8555  0E6D  0870               	movf	i1USBTransferOnePacket@dir,w
  8556  0E6E  1903               	btfsc	3,2
  8557  0E6F  2E79               	goto	i1l2721
  8558                           
  8559                           ;usb_device.c: 1001: {
  8560                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  8561  0E70  3578               	lslf	i1USBTransferOnePacket@ep,w
  8562  0E71  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  8563  0E72  0086               	movwf	6
  8564  0E73  3001               	movlw	1	; select bank3/4
  8565  0E74  0087               	movwf	7
  8566  0E75  3F40               	moviw [0]fsr1
  8567  0E76  00F9               	movwf	i1USBTransferOnePacket@handle
  8568  0E77  3F41               	moviw [1]fsr1
  8569  0E78  2E81               	goto	L10
  8570  0E79                     i1l2721:	
  8571                           ;usb_device.c: 1004: }
  8572                           
  8573                           
  8574                           ;usb_device.c: 1005: else
  8575                           ;usb_device.c: 1006: {
  8576                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  8577  0E79  3578               	lslf	i1USBTransferOnePacket@ep,w
  8578  0E7A  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8579  0E7B  0086               	movwf	6
  8580  0E7C  3001               	movlw	1	; select bank3/4
  8581  0E7D  0087               	movwf	7
  8582  0E7E  3F40               	moviw [0]fsr1
  8583  0E7F  00F9               	movwf	i1USBTransferOnePacket@handle
  8584  0E80  3F41               	moviw [1]fsr1
  8585  0E81                     L10:	
  8586  0E81  00FA               	movwf	i1USBTransferOnePacket@handle+1
  8587                           
  8588                           ;usb_device.c: 1009: }
  8589                           ;usb_device.c: 1013: if(handle == 0)
  8590  0E82  0879               	movf	i1USBTransferOnePacket@handle,w
  8591  0E83  047A               	iorwf	i1USBTransferOnePacket@handle+1,w
  8592  0E84  1D03               	btfss	3,2
  8593  0E85  2E89               	goto	i1l2729
  8594                           
  8595                           ;usb_device.c: 1014: {
  8596                           ;usb_device.c: 1015: return 0;
  8597  0E86  01F0               	clrf	?i1_USBTransferOnePacket
  8598  0E87  01F1               	clrf	?i1_USBTransferOnePacket+1
  8599  0E88  0008               	return
  8600  0E89                     i1l2729:	
  8601                           
  8602                           ;usb_device.c: 1016: }
  8603                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  8604  0E89  30FF               	movlw	255
  8605  0E8A  0571               	andwf	i1USBTransferOnePacket@data,w
  8606  0E8B  00F4               	movwf	??i1_USBTransferOnePacket
  8607  0E8C  307F               	movlw	127
  8608  0E8D  0572               	andwf	i1USBTransferOnePacket@data+1,w
  8609  0E8E  00F5               	movwf	??i1_USBTransferOnePacket+1
  8610  0E8F  0879               	movf	i1USBTransferOnePacket@handle,w
  8611  0E90  0086               	movwf	6
  8612  0E91  087A               	movf	i1USBTransferOnePacket@handle+1,w
  8613  0E92  0087               	movwf	7
  8614  0E93  3142               	addfsr 1,2
  8615  0E94  0874               	movf	??i1_USBTransferOnePacket,w
  8616  0E95  3FC0               	movwi [0]fsr1
  8617  0E96  0875               	movf	??i1_USBTransferOnePacket+1,w
  8618  0E97  3FC1               	movwi [1]fsr1
  8619                           
  8620                           ;usb_device.c: 1030: handle->CNT = len;
  8621  0E98  0879               	movf	i1USBTransferOnePacket@handle,w
  8622  0E99  3E01               	addlw	1
  8623  0E9A  00F4               	movwf	??i1_USBTransferOnePacket
  8624  0E9B  3000               	movlw	0
  8625  0E9C  3D7A               	addwfc	i1USBTransferOnePacket@handle+1,w
  8626  0E9D  00F5               	movwf	??i1_USBTransferOnePacket+1
  8627  0E9E  0874               	movf	??i1_USBTransferOnePacket,w
  8628  0E9F  0086               	movwf	6
  8629  0EA0  0875               	movf	??i1_USBTransferOnePacket+1,w
  8630  0EA1  0087               	movwf	7
  8631  0EA2  0873               	movf	i1USBTransferOnePacket@len,w
  8632  0EA3  0081               	movwf	1
  8633                           
  8634                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  8635  0EA4  3040               	movlw	64
  8636  0EA5  00F4               	movwf	??i1_USBTransferOnePacket
  8637  0EA6  0879               	movf	i1USBTransferOnePacket@handle,w
  8638  0EA7  0086               	movwf	6
  8639  0EA8  087A               	movf	i1USBTransferOnePacket@handle+1,w
  8640  0EA9  0087               	movwf	7
  8641  0EAA  0874               	movf	??i1_USBTransferOnePacket,w
  8642  0EAB  0581               	andwf	1,f
  8643                           
  8644                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  8645  0EAC  0879               	movf	i1USBTransferOnePacket@handle,w
  8646  0EAD  0086               	movwf	6
  8647  0EAE  087A               	movf	i1USBTransferOnePacket@handle+1,w
  8648  0EAF  0087               	movwf	7
  8649  0EB0  1581               	bsf	1,3
  8650                           
  8651                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  8652  0EB1  0879               	movf	i1USBTransferOnePacket@handle,w
  8653  0EB2  0086               	movwf	6
  8654  0EB3  087A               	movf	i1USBTransferOnePacket@handle+1,w
  8655  0EB4  0087               	movwf	7
  8656  0EB5  1781               	bsf	1,7
  8657                           
  8658                           ;usb_device.c: 1036: if(dir != 0)
  8659  0EB6  0870               	movf	i1USBTransferOnePacket@dir,w
  8660  0EB7  1903               	btfsc	3,2
  8661  0EB8  2ED2               	goto	i1l2739
  8662                           
  8663                           ;usb_device.c: 1037: {
  8664                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  8665  0EB9  3578               	lslf	i1USBTransferOnePacket@ep,w
  8666  0EBA  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  8667  0EBB  0086               	movwf	6
  8668  0EBC  3001               	movlw	1	; select bank3/4
  8669  0EBD  0087               	movwf	7
  8670  0EBE  3F40               	moviw [0]fsr1
  8671  0EBF  00F4               	movwf	??i1_USBTransferOnePacket
  8672  0EC0  3F41               	moviw [1]fsr1
  8673  0EC1  00F5               	movwf	??i1_USBTransferOnePacket+1
  8674  0EC2  3004               	movlw	4
  8675  0EC3  0674               	xorwf	??i1_USBTransferOnePacket,w
  8676  0EC4  00F6               	movwf	??i1_USBTransferOnePacket+2
  8677  0EC5  3000               	movlw	0
  8678  0EC6  0675               	xorwf	??i1_USBTransferOnePacket+1,w
  8679  0EC7  00F7               	movwf	??i1_USBTransferOnePacket+3
  8680  0EC8  3578               	lslf	i1USBTransferOnePacket@ep,w
  8681  0EC9  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  8682  0ECA  0086               	movwf	6
  8683  0ECB  3001               	movlw	1	; select bank3/4
  8684  0ECC  0087               	movwf	7
  8685  0ECD  0876               	movf	??i1_USBTransferOnePacket+2,w
  8686  0ECE  3FC0               	movwi [0]fsr1
  8687  0ECF  0877               	movf	??i1_USBTransferOnePacket+3,w
  8688  0ED0  3FC1               	movwi [1]fsr1
  8689                           
  8690                           ;usb_device.c: 1040: }
  8691  0ED1  2EEA               	goto	i1l2741
  8692  0ED2                     i1l2739:	
  8693                           
  8694                           ;usb_device.c: 1041: else
  8695                           ;usb_device.c: 1042: {
  8696                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  8697  0ED2  3578               	lslf	i1USBTransferOnePacket@ep,w
  8698  0ED3  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8699  0ED4  0086               	movwf	6
  8700  0ED5  3001               	movlw	1	; select bank3/4
  8701  0ED6  0087               	movwf	7
  8702  0ED7  3F40               	moviw [0]fsr1
  8703  0ED8  00F4               	movwf	??i1_USBTransferOnePacket
  8704  0ED9  3F41               	moviw [1]fsr1
  8705  0EDA  00F5               	movwf	??i1_USBTransferOnePacket+1
  8706  0EDB  3004               	movlw	4
  8707  0EDC  0674               	xorwf	??i1_USBTransferOnePacket,w
  8708  0EDD  00F6               	movwf	??i1_USBTransferOnePacket+2
  8709  0EDE  3000               	movlw	0
  8710  0EDF  0675               	xorwf	??i1_USBTransferOnePacket+1,w
  8711  0EE0  00F7               	movwf	??i1_USBTransferOnePacket+3
  8712  0EE1  3578               	lslf	i1USBTransferOnePacket@ep,w
  8713  0EE2  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8714  0EE3  0086               	movwf	6
  8715  0EE4  3001               	movlw	1	; select bank3/4
  8716  0EE5  0087               	movwf	7
  8717  0EE6  0876               	movf	??i1_USBTransferOnePacket+2,w
  8718  0EE7  3FC0               	movwi [0]fsr1
  8719  0EE8  0877               	movf	??i1_USBTransferOnePacket+3,w
  8720  0EE9  3FC1               	movwi [1]fsr1
  8721  0EEA                     i1l2741:	
  8722                           
  8723                           ;usb_device.c: 1045: }
  8724                           ;usb_device.c: 1046: return (void*)handle;
  8725  0EEA  087A               	movf	i1USBTransferOnePacket@handle+1,w
  8726  0EEB  00F1               	movwf	?i1_USBTransferOnePacket+1
  8727  0EEC  0879               	movf	i1USBTransferOnePacket@handle,w
  8728  0EED  00F0               	movwf	?i1_USBTransferOnePacket
  8729  0EEE  0008               	return
  8730  0EEF                     __end_ofi1_USBTransferOnePacket:	
  8731                           
  8732                           	psect	text39
  8733  08A4                     __ptext39:	
  8734 ;; *************** function i1_USBEnableEndpoint *****************
  8735 ;; Defined at:
  8736 ;;		line 878 in file "../lib/usb/src/usb_device.c"
  8737 ;; Parameters:    Size  Location     Type
  8738 ;;  ep              1    wreg     unsigned char 
  8739 ;;  options         1    7[COMMON] unsigned char 
  8740 ;; Auto vars:     Size  Location     Type
  8741 ;;  ep              1   12[COMMON] unsigned char 
  8742 ;;  USBEnableEnd    2   10[COMMON] PTR unsigned char 
  8743 ;;		 -> UEP0(1), 
  8744 ;; Return value:  Size  Location     Type
  8745 ;;                  1    wreg      void 
  8746 ;; Registers used:
  8747 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8748 ;; Tracked objects:
  8749 ;;		On entry : 0/0
  8750 ;;		On exit  : 0/0
  8751 ;;		Unchanged: 0/0
  8752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8753 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8754 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8755 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8756 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8757 ;;Total ram usage:        6 bytes
  8758 ;; Hardware stack levels used:    1
  8759 ;; Hardware stack levels required when called:    1
  8760 ;; This function calls:
  8761 ;;		i1_USBConfigureEndpoint
  8762 ;; This function is called by:
  8763 ;;		i1_CDCInitEP
  8764 ;; This function uses a non-reentrant model
  8765 ;;
  8766                           
  8767                           
  8768                           ;psect for function i1_USBEnableEndpoint
  8769  08A4                     i1_USBEnableEndpoint:	
  8770                           
  8771                           ;incstack = 0
  8772                           ; Regs used in i1_USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8773                           ;i1USBEnableEndpoint@ep stored from wreg
  8774  08A4  00FC               	movwf	i1USBEnableEndpoint@ep
  8775                           
  8776                           ;usb_device.c: 880: unsigned char* p;
  8777                           ;usb_device.c: 884: if(options & 0x04)
  8778  08A5  1D77               	btfss	i1USBEnableEndpoint@options,2
  8779  08A6  28AC               	goto	i1l2709
  8780                           
  8781                           ;usb_device.c: 885: {
  8782                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  8783  08A7  01F0               	clrf	i1USBConfigureEndpoint@direction
  8784  08A8  087C               	movf	i1USBEnableEndpoint@ep,w
  8785  08A9  318A  226F  3188   	fcall	i1_USBConfigureEndpoint
  8786  08AC                     i1l2709:	
  8787                           
  8788                           ;usb_device.c: 887: }
  8789                           ;usb_device.c: 888: if(options & 0x02)
  8790  08AC  1CF7               	btfss	i1USBEnableEndpoint@options,1
  8791  08AD  28B3               	goto	i1l2713
  8792                           
  8793                           ;usb_device.c: 889: {
  8794                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  8795  08AE  01F0               	clrf	i1USBConfigureEndpoint@direction
  8796  08AF  0AF0               	incf	i1USBConfigureEndpoint@direction,f
  8797  08B0  087C               	movf	i1USBEnableEndpoint@ep,w
  8798  08B1  318A  226F         	fcall	i1_USBConfigureEndpoint
  8799  08B3                     i1l2713:	
  8800                           
  8801                           ;usb_device.c: 891: }
  8802                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  8803  08B3  087C               	movf	i1USBEnableEndpoint@ep,w
  8804  08B4  3E98               	addlw	152
  8805  08B5  00F8               	movwf	??i1_USBEnableEndpoint
  8806  08B6  01F9               	clrf	??i1_USBEnableEndpoint+1
  8807  08B7  300E               	movlw	14
  8808  08B8  3DF9               	addwfc	??i1_USBEnableEndpoint+1,f
  8809  08B9  0878               	movf	??i1_USBEnableEndpoint,w
  8810  08BA  00FA               	movwf	i1USBEnableEndpoint@p
  8811  08BB  0879               	movf	??i1_USBEnableEndpoint+1,w
  8812  08BC  00FB               	movwf	i1USBEnableEndpoint@p+1
  8813                           
  8814                           ;usb_device.c: 901: *p = options;
  8815  08BD  087A               	movf	i1USBEnableEndpoint@p,w
  8816  08BE  0086               	movwf	6
  8817  08BF  087B               	movf	i1USBEnableEndpoint@p+1,w
  8818  08C0  0087               	movwf	7
  8819  08C1  0877               	movf	i1USBEnableEndpoint@options,w
  8820  08C2  0081               	movwf	1
  8821  08C3  0008               	return
  8822  08C4                     __end_ofi1_USBEnableEndpoint:	
  8823                           
  8824                           	psect	text40
  8825  0A6F                     __ptext40:	
  8826 ;; *************** function i1_USBConfigureEndpoint *****************
  8827 ;; Defined at:
  8828 ;;		line 1543 in file "../lib/usb/src/usb_device.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;  EPNum           1    wreg     unsigned char 
  8831 ;;  direction       1    0[COMMON] unsigned char 
  8832 ;; Auto vars:     Size  Location     Type
  8833 ;;  EPNum           1    5[COMMON] unsigned char 
  8834 ;;  USBConfigure    1    6[COMMON] PTR volatile struct __BD
  8835 ;;		 -> BDT(48), 
  8836 ;; Return value:  Size  Location     Type
  8837 ;;                  1    wreg      void 
  8838 ;; Registers used:
  8839 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8840 ;; Tracked objects:
  8841 ;;		On entry : 0/0
  8842 ;;		On exit  : 0/0
  8843 ;;		Unchanged: 0/0
  8844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8845 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8846 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8847 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8848 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8849 ;;Total ram usage:        7 bytes
  8850 ;; Hardware stack levels used:    1
  8851 ;; This function calls:
  8852 ;;		Nothing
  8853 ;; This function is called by:
  8854 ;;		i1_USBEnableEndpoint
  8855 ;; This function uses a non-reentrant model
  8856 ;;
  8857                           
  8858                           
  8859                           ;psect for function i1_USBConfigureEndpoint
  8860  0A6F                     i1_USBConfigureEndpoint:	
  8861                           
  8862                           ;incstack = 0
  8863                           ; Regs used in i1_USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  8864                           ;i1USBConfigureEndpoint@EPNum stored from wreg
  8865  0A6F  00F5               	movwf	i1USBConfigureEndpoint@EPNum
  8866                           
  8867                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  8868                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  8869  0A70  3020               	movlw	32
  8870  0A71  00F1               	movwf	??i1_USBConfigureEndpoint
  8871  0A72  0871               	movf	??i1_USBConfigureEndpoint,w
  8872  0A73  00F6               	movwf	i1USBConfigureEndpoint@handle
  8873                           
  8874                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  8875  0A74  0870               	movf	i1USBConfigureEndpoint@direction,w
  8876  0A75  00F1               	movwf	??i1_USBConfigureEndpoint
  8877  0A76  3001               	movlw	1
  8878  0A77                     u188_25:	
  8879  0A77  35F1               	lslf	??i1_USBConfigureEndpoint,f
  8880  0A78  0B89               	decfsz	9,f
  8881  0A79  2A77               	goto	u188_25
  8882  0A7A  0875               	movf	i1USBConfigureEndpoint@EPNum,w
  8883  0A7B  00F2               	movwf	??i1_USBConfigureEndpoint+1
  8884  0A7C  3001               	movlw	1
  8885  0A7D                     u189_25:	
  8886  0A7D  35F2               	lslf	??i1_USBConfigureEndpoint+1,f
  8887  0A7E  3EFF               	addlw	-1
  8888  0A7F  1D03               	skipz
  8889  0A80  2A7D               	goto	u189_25
  8890  0A81  3572               	lslf	??i1_USBConfigureEndpoint+1,w
  8891  0A82  0771               	addwf	??i1_USBConfigureEndpoint,w
  8892  0A83  00F3               	movwf	??i1_USBConfigureEndpoint+2
  8893  0A84  3001               	movlw	1
  8894  0A85                     u190_25:	
  8895  0A85  35F3               	lslf	??i1_USBConfigureEndpoint+2,f
  8896  0A86  3EFF               	addlw	-1
  8897  0A87  1D03               	skipz
  8898  0A88  2A85               	goto	u190_25
  8899  0A89  3573               	lslf	??i1_USBConfigureEndpoint+2,w
  8900  0A8A  00F4               	movwf	??i1_USBConfigureEndpoint+3
  8901  0A8B  0874               	movf	??i1_USBConfigureEndpoint+3,w
  8902  0A8C  07F6               	addwf	i1USBConfigureEndpoint@handle,f
  8903                           
  8904                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  8905  0A8D  0876               	movf	i1USBConfigureEndpoint@handle,w
  8906  0A8E  0086               	movwf	6
  8907  0A8F  0187               	clrf	7
  8908  0A90  1381               	bcf	1,7
  8909                           
  8910                           ;usb_device.c: 1557: if(direction == 0)
  8911  0A91  0870               	movf	i1USBConfigureEndpoint@direction,w
  8912  0A92  1D03               	btfss	3,2
  8913  0A93  2A9E               	goto	i1l2699
  8914                           
  8915                           ;usb_device.c: 1558: {
  8916                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  8917  0A94  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
  8918  0A95  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8919  0A96  0086               	movwf	6
  8920  0A97  3001               	movlw	1	; select bank3/4
  8921  0A98  0087               	movwf	7
  8922  0A99  0876               	movf	i1USBConfigureEndpoint@handle,w
  8923  0A9A  3FC0               	movwi [0]fsr1
  8924  0A9B  3000               	movlw	0
  8925  0A9C  3FC1               	movwi [1]fsr1
  8926                           
  8927                           ;usb_device.c: 1560: }
  8928  0A9D  2AA7               	goto	i1l2701
  8929  0A9E                     i1l2699:	
  8930                           
  8931                           ;usb_device.c: 1561: else
  8932                           ;usb_device.c: 1562: {
  8933                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  8934  0A9E  3575               	lslf	i1USBConfigureEndpoint@EPNum,w
  8935  0A9F  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  8936  0AA0  0086               	movwf	6
  8937  0AA1  3001               	movlw	1	; select bank3/4
  8938  0AA2  0087               	movwf	7
  8939  0AA3  0876               	movf	i1USBConfigureEndpoint@handle,w
  8940  0AA4  3FC0               	movwi [0]fsr1
  8941  0AA5  3000               	movlw	0
  8942  0AA6  3FC1               	movwi [1]fsr1
  8943  0AA7                     i1l2701:	
  8944                           
  8945                           ;usb_device.c: 1564: }
  8946                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  8947  0AA7  0876               	movf	i1USBConfigureEndpoint@handle,w
  8948  0AA8  0086               	movwf	6
  8949  0AA9  0187               	clrf	7
  8950  0AAA  1301               	bcf	1,6
  8951                           
  8952                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  8953  0AAB  0876               	movf	i1USBConfigureEndpoint@handle,w
  8954  0AAC  3E04               	addlw	4
  8955  0AAD  0086               	movwf	6
  8956  0AAE  0187               	clrf	7
  8957  0AAF  1701               	bsf	1,6
  8958  0AB0  0008               	return
  8959  0AB1                     __end_ofi1_USBConfigureEndpoint:	
  8960                           
  8961                           	psect	text41
  8962  0C4D                     __ptext41:	
  8963 ;; *************** function _USBCheckCDCRequest *****************
  8964 ;; Defined at:
  8965 ;;		line 147 in file "../lib/usb/src/usb_device_cdc.c"
  8966 ;; Parameters:    Size  Location     Type
  8967 ;;		None
  8968 ;; Auto vars:     Size  Location     Type
  8969 ;;		None
  8970 ;; Return value:  Size  Location     Type
  8971 ;;                  1    wreg      void 
  8972 ;; Registers used:
  8973 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8974 ;; Tracked objects:
  8975 ;;		On entry : 0/0
  8976 ;;		On exit  : 0/0
  8977 ;;		Unchanged: 0/0
  8978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8981 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8982 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8983 ;;Total ram usage:        1 bytes
  8984 ;; Hardware stack levels used:    1
  8985 ;; This function calls:
  8986 ;;		Nothing
  8987 ;; This function is called by:
  8988 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8989 ;; This function uses a non-reentrant model
  8990 ;;
  8991                           
  8992                           
  8993                           ;psect for function _USBCheckCDCRequest
  8994  0C4D                     _USBCheckCDCRequest:	
  8995                           
  8996                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
  8997                           
  8998                           ;incstack = 0
  8999                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
  9000  0C4D  0020               	movlb	0	; select bank0
  9001  0C4E  0850               	movf	80,w	;volatile
  9002  0C4F  391F               	andlw	31
  9003  0C50  3A01               	xorlw	1
  9004  0C51  1D03               	btfss	3,2
  9005  0C52  0008               	return
  9006                           
  9007                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
  9008  0C53  0E50               	swapf	80,w	;volatile
  9009  0C54  0C89               	rrf	9,f
  9010  0C55  3903               	andlw	3
  9011  0C56  3A01               	xorlw	1
  9012  0C57  1D03               	btfss	3,2
  9013  0C58  0008               	return
  9014                           
  9015                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
  9016                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
  9017  0C59  0854               	movf	84,w	;volatile
  9018  0C5A  1903               	btfsc	3,2
  9019  0C5B  2C9A               	goto	i1l2789
  9020  0C5C  0354               	decf	84,w	;volatile
  9021  0C5D  1D03               	btfss	3,2
  9022  0C5E  0008               	return
  9023  0C5F  2C9A               	goto	i1l2789
  9024  0C60                     i1l2759:	
  9025                           ;usb_device_cdc.c: 167: {
  9026                           ;usb_device_cdc.c: 169: case 0x00:
  9027                           
  9028                           ;usb_device_cdc.c: 166: switch(SetupPkt.bRequest)
  9029                           
  9030                           
  9031                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  9032  0C60  302A               	movlw	low _dummy_encapsulated_cmd_response
  9033  0C61  0022               	movlb	2	; select bank2
  9034  0C62  00EB               	movwf	_inPipes^(0+256)	;volatile
  9035  0C63  3002               	movlw	high _dummy_encapsulated_cmd_response
  9036  0C64  00EC               	movwf	(_inPipes+1)^(0+256)	;volatile
  9037                           
  9038                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
  9039  0C65  3000               	movlw	0
  9040  0C66  00EF               	movwf	((_inPipes+1)^(0+256)+3)	;volatile
  9041  0C67  3008               	movlw	8
  9042  0C68  00EE               	movwf	(_inPipes^(0+256)+3)	;volatile
  9043                           
  9044                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9045  0C69  146D               	bsf	(_inPipes^(0+256)+2),0	;volatile
  9046                           
  9047                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
  9048  0C6A  17ED               	bsf	(_inPipes^(0+256)+2),7	;volatile
  9049                           
  9050                           ;usb_device_cdc.c: 175: break;
  9051  0C6B  0008               	return
  9052  0C6C                     i1l2767:	
  9053                           ;usb_device_cdc.c: 176: case 0x01:
  9054                           
  9055                           
  9056                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  9057  0C6C  302A               	movlw	low _dummy_encapsulated_cmd_response
  9058  0C6D  0022               	movlb	2	; select bank2
  9059  0C6E  00EB               	movwf	_inPipes^(0+256)	;volatile
  9060  0C6F  3002               	movlw	high _dummy_encapsulated_cmd_response
  9061  0C70  00EC               	movwf	(_inPipes+1)^(0+256)	;volatile
  9062                           
  9063                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
  9064  0C71  17ED               	bsf	(_inPipes^(0+256)+2),7	;volatile
  9065                           
  9066                           ;usb_device_cdc.c: 180: break;
  9067  0C72  0008               	return
  9068  0C73                     i1l2771:	
  9069                           ;usb_device_cdc.c: 184: case 0x20:
  9070                           
  9071                           
  9072                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
  9073  0C73  0020               	movlb	0	; select bank0
  9074  0C74  0857               	movf	87,w	;volatile
  9075  0C75  0023               	movlb	3	; select bank3
  9076  0C76  00A4               	movwf	((_outPipes+1)^(0+384)+3)	;volatile
  9077  0C77  0020               	movlb	0	; select bank0
  9078  0C78  0856               	movf	86,w	;volatile
  9079  0C79  0023               	movlb	3	; select bank3
  9080  0C7A  00A3               	movwf	(_outPipes^(0+384)+3)	;volatile
  9081                           
  9082                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  9083  0C7B  30DB               	movlw	(low (_line_coding| (0+256)))& (0+255)
  9084  0C7C  00F0               	movwf	??_USBCheckCDCRequest
  9085  0C7D  0870               	movf	??_USBCheckCDCRequest,w
  9086  0C7E  00A0               	movwf	_outPipes^(0+384)	;volatile
  9087                           
  9088                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
  9089  0C7F  01A5               	clrf	(low ((_outPipes| (0+256)+5)))^(0+128)	;volatile
  9090  0C80  01A6               	clrf	((low ((_outPipes| (0+256)+5))+1))^(0+128)	;volatile
  9091                           
  9092                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
  9093  0C81  17A2               	bsf	(_outPipes^(0+384)+2),7	;volatile
  9094                           
  9095                           ;usb_device_cdc.c: 189: break;
  9096  0C82  0008               	return
  9097  0C83                     i1l2777:	
  9098                           ;usb_device_cdc.c: 191: case 0x21:
  9099                           
  9100                           
  9101                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  9102  0C83  30DB               	movlw	low _line_coding
  9103  0C84  0022               	movlb	2	; select bank2
  9104  0C85  00EB               	movwf	_inPipes^(0+256)	;volatile
  9105  0C86  3001               	movlw	high _line_coding
  9106  0C87  00EC               	movwf	(_inPipes+1)^(0+256)	;volatile
  9107  0C88  3000               	movlw	0
  9108  0C89  00EF               	movwf	((_inPipes+1)^(0+256)+3)	;volatile
  9109  0C8A  3007               	movlw	7
  9110  0C8B  00EE               	movwf	(_inPipes^(0+256)+3)	;volatile
  9111  0C8C  30C1               	movlw	193
  9112  0C8D  00F0               	movwf	??_USBCheckCDCRequest
  9113  0C8E  0870               	movf	??_USBCheckCDCRequest,w
  9114  0C8F  00ED               	movwf	(_inPipes^(0+256)+2)	;volatile
  9115                           
  9116                           ;usb_device_cdc.c: 196: break;
  9117  0C90  0008               	return
  9118  0C91                     i1l2783:	
  9119                           ;usb_device_cdc.c: 198: case 0x22:
  9120                           
  9121                           
  9122                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  9123  0C91  0020               	movlb	0	; select bank0
  9124  0C92  0852               	movf	82,w	;volatile
  9125  0C93  00F0               	movwf	??_USBCheckCDCRequest
  9126  0C94  0870               	movf	??_USBCheckCDCRequest,w
  9127  0C95  0023               	movlb	3	; select bank3
  9128  0C96  00D7               	movwf	_control_signal_bitmap^(0+384)
  9129                           
  9130                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  9131  0C97  0022               	movlb	2	; select bank2
  9132  0C98  17ED               	bsf	(_inPipes^(0+256)+2),7	;volatile
  9133                           
  9134                           ;usb_device_cdc.c: 258: }
  9135                           
  9136                           ;usb_device_cdc.c: 257: break;
  9137                           
  9138                           ;usb_device_cdc.c: 256: default:
  9139                           
  9140                           ;usb_device_cdc.c: 232: break;
  9141  0C99  0008               	return
  9142  0C9A                     i1l2789:	
  9143  0C9A  0020               	movlb	0	; select bank0
  9144  0C9B  0851               	movf	81,w	;volatile
  9145                           
  9146                           ; Switch size 1, requested type "space"
  9147                           ; Number of cases is 5, Range of values is 0 to 34
  9148                           ; switch strategies available:
  9149                           ; Name         Instructions Cycles
  9150                           ; simple_byte           16     9 (average)
  9151                           ; direct_byte           76     6 (fixed)
  9152                           ; jumptable            260     6 (fixed)
  9153                           ;	Chosen strategy is simple_byte
  9154  0C9C  3A00               	xorlw	0	; case 0
  9155  0C9D  1903               	skipnz
  9156  0C9E  2C60               	goto	i1l2759
  9157  0C9F  3A01               	xorlw	1	; case 1
  9158  0CA0  1903               	skipnz
  9159  0CA1  2C6C               	goto	i1l2767
  9160  0CA2  3A21               	xorlw	33	; case 32
  9161  0CA3  1903               	skipnz
  9162  0CA4  2C73               	goto	i1l2771
  9163  0CA5  3A01               	xorlw	1	; case 33
  9164  0CA6  1903               	skipnz
  9165  0CA7  2C83               	goto	i1l2777
  9166  0CA8  3A03               	xorlw	3	; case 34
  9167  0CA9  1903               	skipnz
  9168  0CAA  2C91               	goto	i1l2783
  9169  0CAB  2CAC               	goto	i1l479
  9170  0CAC                     i1l479:	
  9171  0CAC  0008               	return
  9172  0CAD                     __end_of_USBCheckCDCRequest:	
  9173                           
  9174                           	psect	text42
  9175  09C2                     __ptext42:	
  9176 ;; *************** function _USBCtrlTrfOutHandler *****************
  9177 ;; Defined at:
  9178 ;;		line 2538 in file "../lib/usb/src/usb_device.c"
  9179 ;; Parameters:    Size  Location     Type
  9180 ;;		None
  9181 ;; Auto vars:     Size  Location     Type
  9182 ;;		None
  9183 ;; Return value:  Size  Location     Type
  9184 ;;                  1    wreg      void 
  9185 ;; Registers used:
  9186 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9187 ;; Tracked objects:
  9188 ;;		On entry : 0/0
  9189 ;;		On exit  : 0/0
  9190 ;;		Unchanged: 0/0
  9191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9194 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9195 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9196 ;;Total ram usage:        2 bytes
  9197 ;; Hardware stack levels used:    1
  9198 ;; Hardware stack levels required when called:    2
  9199 ;; This function calls:
  9200 ;;		_USBCtrlTrfRxService
  9201 ;; This function is called by:
  9202 ;;		_USBCtrlEPService
  9203 ;; This function uses a non-reentrant model
  9204 ;;
  9205                           
  9206                           
  9207                           ;psect for function _USBCtrlTrfOutHandler
  9208  09C2                     _USBCtrlTrfOutHandler:	
  9209                           
  9210                           ;usb_device.c: 2540: if(controlTransferState == 2)
  9211                           
  9212                           ;incstack = 0
  9213                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9214  09C2  3002               	movlw	2
  9215  09C3  0021               	movlb	1	; select bank1
  9216  09C4  0663               	xorwf	_controlTransferState^(0+128),w	;volatile
  9217  09C5  1D03               	btfss	3,2
  9218  09C6  29CA               	goto	i1l3329
  9219                           
  9220                           ;usb_device.c: 2541: {
  9221                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  9222  09C7  3185  2531         	fcall	_USBCtrlTrfRxService
  9223                           
  9224                           ;usb_device.c: 2543: }
  9225  09C9  0008               	return
  9226  09CA                     i1l3329:	
  9227                           
  9228                           ;usb_device.c: 2544: else
  9229                           ;usb_device.c: 2545: {
  9230                           ;usb_device.c: 2548: controlTransferState = 0;
  9231  09CA  0021               	movlb	1	; select bank1
  9232  09CB  01E3               	clrf	_controlTransferState^(0+128)	;volatile
  9233                           
  9234                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  9235  09CC  0023               	movlb	3	; select bank3
  9236  09CD  0849               	movf	_BothEP0OutUOWNsSet^(0+384),w	;volatile
  9237  09CE  1D03               	btfss	3,2
  9238  09CF  29F6               	goto	i1l3341
  9239                           
  9240                           ;usb_device.c: 2556: {
  9241                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
  9242  09D0  0021               	movlb	1	; select bank1
  9243  09D1  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9244  09D2  3E01               	addlw	1
  9245  09D3  00F6               	movwf	??_USBCtrlTrfOutHandler
  9246  09D4  3000               	movlw	0
  9247  09D5  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9248  09D6  00F7               	movwf	??_USBCtrlTrfOutHandler+1
  9249  09D7  0876               	movf	??_USBCtrlTrfOutHandler,w
  9250  09D8  0086               	movwf	6
  9251  09D9  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  9252  09DA  0087               	movwf	7
  9253  09DB  3008               	movlw	8
  9254  09DC  0081               	movwf	1
  9255                           
  9256                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9257  09DD  3050               	movlw	80
  9258  09DE  00F6               	movwf	??_USBCtrlTrfOutHandler
  9259  09DF  3000               	movlw	0
  9260  09E0  00F7               	movwf	??_USBCtrlTrfOutHandler+1
  9261  09E1  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9262  09E2  0086               	movwf	6
  9263  09E3  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9264  09E4  0087               	movwf	7
  9265  09E5  3142               	addfsr 1,2
  9266  09E6  0876               	movf	??_USBCtrlTrfOutHandler,w
  9267  09E7  3FC0               	movwi [0]fsr1
  9268  09E8  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  9269  09E9  3FC1               	movwi [1]fsr1
  9270                           
  9271                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9272  09EA  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9273  09EB  0086               	movwf	6
  9274  09EC  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9275  09ED  0087               	movwf	7
  9276  09EE  300C               	movlw	12
  9277  09EF  0081               	movwf	1
  9278                           
  9279                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9280  09F0  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9281  09F1  0086               	movwf	6
  9282  09F2  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9283  09F3  0087               	movwf	7
  9284  09F4  1781               	bsf	1,7
  9285                           
  9286                           ;usb_device.c: 2561: }
  9287  09F5  0008               	return
  9288  09F6                     i1l3341:	
  9289                           
  9290                           ;usb_device.c: 2562: else
  9291                           ;usb_device.c: 2563: {
  9292                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  9293  09F6  0023               	movlb	3	; select bank3
  9294  09F7  01C9               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  9295  09F8  0008               	return
  9296  09F9                     __end_of_USBCtrlTrfOutHandler:	
  9297                           
  9298                           	psect	text43
  9299  0531                     __ptext43:	
  9300 ;; *************** function _USBCtrlTrfRxService *****************
  9301 ;; Defined at:
  9302 ;;		line 1852 in file "../lib/usb/src/usb_device.c"
  9303 ;; Parameters:    Size  Location     Type
  9304 ;;		None
  9305 ;; Auto vars:     Size  Location     Type
  9306 ;;  byteToRead      1    5[COMMON] unsigned char 
  9307 ;;  i               1    4[COMMON] unsigned char 
  9308 ;; Return value:  Size  Location     Type
  9309 ;;                  1    wreg      void 
  9310 ;; Registers used:
  9311 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9312 ;; Tracked objects:
  9313 ;;		On entry : 0/0
  9314 ;;		On exit  : 0/0
  9315 ;;		Unchanged: 0/0
  9316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9318 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9319 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9320 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9321 ;;Total ram usage:        4 bytes
  9322 ;; Hardware stack levels used:    1
  9323 ;; Hardware stack levels required when called:    1
  9324 ;; This function calls:
  9325 ;;		_USBCtrlEPAllowStatusStage
  9326 ;; This function is called by:
  9327 ;;		_USBCtrlTrfOutHandler
  9328 ;; This function uses a non-reentrant model
  9329 ;;
  9330                           
  9331                           
  9332                           ;psect for function _USBCtrlTrfRxService
  9333  0531                     _USBCtrlTrfRxService:	
  9334                           
  9335                           ;usb_device.c: 1854: uint8_t byteToRead;
  9336                           ;usb_device.c: 1855: uint8_t i;
  9337                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  9338                           
  9339                           ;incstack = 0
  9340                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9341  0531  0021               	movlb	1	; select bank1
  9342  0532  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9343  0533  0086               	movwf	6
  9344  0534  0187               	clrf	7
  9345  0535  3F41               	moviw [1]fsr1
  9346  0536  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  9347                           
  9348                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  9349  0537  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  9350  0538  00F2               	movwf	??_USBCtrlTrfRxService
  9351  0539  01F3               	clrf	??_USBCtrlTrfRxService+1
  9352  053A  0873               	movf	??_USBCtrlTrfRxService+1,w
  9353  053B  0023               	movlb	3	; select bank3
  9354  053C  0224               	subwf	((_outPipes+1)^(0+384)+3),w	;volatile
  9355  053D  1D03               	skipz
  9356  053E  2D41               	goto	u252_25
  9357  053F  0872               	movf	??_USBCtrlTrfRxService,w
  9358  0540  0223               	subwf	(_outPipes^(0+384)+3),w	;volatile
  9359  0541                     u252_25:	
  9360  0541  1803               	skipnc
  9361  0542  2D47               	goto	i1l286
  9362                           
  9363                           ;usb_device.c: 1866: {
  9364                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  9365  0543  0823               	movf	(_outPipes^(0+384)+3),w	;volatile
  9366  0544  00F2               	movwf	??_USBCtrlTrfRxService
  9367  0545  0872               	movf	??_USBCtrlTrfRxService,w
  9368  0546  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  9369  0547                     i1l286:	
  9370                           
  9371                           ;usb_device.c: 1868: }
  9372                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  9373  0547  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  9374  0548  00F2               	movwf	??_USBCtrlTrfRxService
  9375  0549  01F3               	clrf	??_USBCtrlTrfRxService+1
  9376  054A  0872               	movf	??_USBCtrlTrfRxService,w
  9377  054B  02A3               	subwf	(_outPipes^(0+384)+3),f	;volatile
  9378  054C  0873               	movf	??_USBCtrlTrfRxService+1,w
  9379  054D  3BA4               	subwfb	((_outPipes+1)^(0+384)+3),f	;volatile
  9380                           
  9381                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  9382  054E  01F4               	clrf	USBCtrlTrfRxService@i
  9383  054F                     i1l3213:	
  9384  054F  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  9385  0550  0274               	subwf	USBCtrlTrfRxService@i,w
  9386  0551  1803               	btfsc	3,0
  9387  0552  2D68               	goto	i1l3215
  9388                           
  9389                           ;usb_device.c: 1875: {
  9390                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  9391  0553  0874               	movf	USBCtrlTrfRxService@i,w
  9392  0554  3E58               	addlw	88
  9393  0555  0086               	movwf	6
  9394  0556  0187               	clrf	7
  9395  0557  0801               	movf	1,w
  9396  0558  00F2               	movwf	??_USBCtrlTrfRxService
  9397  0559  0820               	movf	_outPipes^(0+384),w	;volatile
  9398  055A  0086               	movwf	6
  9399  055B  3001               	movlw	1	; select bank2/3
  9400  055C  0087               	movwf	7
  9401  055D  0872               	movf	??_USBCtrlTrfRxService,w
  9402  055E  0081               	movwf	1
  9403  055F  3001               	movlw	1
  9404  0560  00F2               	movwf	??_USBCtrlTrfRxService
  9405  0561  0872               	movf	??_USBCtrlTrfRxService,w
  9406  0562  07A0               	addwf	_outPipes^(0+384),f	;volatile
  9407  0563  3001               	movlw	1
  9408  0564  00F2               	movwf	??_USBCtrlTrfRxService
  9409  0565  0872               	movf	??_USBCtrlTrfRxService,w
  9410  0566  07F4               	addwf	USBCtrlTrfRxService@i,f
  9411  0567  2D4F               	goto	i1l3213
  9412  0568                     i1l3215:	
  9413                           
  9414                           ;usb_device.c: 1877: }
  9415                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  9416  0568  0823               	movf	(_outPipes^(0+384)+3),w	;volatile
  9417  0569  0424               	iorwf	((_outPipes+1)^(0+384)+3),w	;volatile
  9418  056A  1903               	btfsc	3,2
  9419  056B  2DA3               	goto	i1l3227
  9420                           
  9421                           ;usb_device.c: 1882: {
  9422                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  9423  056C  0021               	movlb	1	; select bank1
  9424  056D  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9425  056E  3E01               	addlw	1
  9426  056F  00F2               	movwf	??_USBCtrlTrfRxService
  9427  0570  3000               	movlw	0
  9428  0571  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9429  0572  00F3               	movwf	??_USBCtrlTrfRxService+1
  9430  0573  0872               	movf	??_USBCtrlTrfRxService,w
  9431  0574  0086               	movwf	6
  9432  0575  0873               	movf	??_USBCtrlTrfRxService+1,w
  9433  0576  0087               	movwf	7
  9434  0577  3008               	movlw	8
  9435  0578  0081               	movwf	1
  9436                           
  9437                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  9438  0579  3058               	movlw	88
  9439  057A  00F2               	movwf	??_USBCtrlTrfRxService
  9440  057B  3000               	movlw	0
  9441  057C  00F3               	movwf	??_USBCtrlTrfRxService+1
  9442  057D  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9443  057E  0086               	movwf	6
  9444  057F  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9445  0580  0087               	movwf	7
  9446  0581  3142               	addfsr 1,2
  9447  0582  0872               	movf	??_USBCtrlTrfRxService,w
  9448  0583  3FC0               	movwi [0]fsr1
  9449  0584  0873               	movf	??_USBCtrlTrfRxService+1,w
  9450  0585  3FC1               	movwi [1]fsr1
  9451                           
  9452                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  9453  0586  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9454  0587  0086               	movwf	6
  9455  0588  0187               	clrf	7
  9456  0589  1B01               	btfsc	1,6
  9457  058A  2D97               	goto	i1l3225
  9458                           
  9459                           ;usb_device.c: 1886: {
  9460                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  9461  058B  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9462  058C  0086               	movwf	6
  9463  058D  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9464  058E  0087               	movwf	7
  9465  058F  3048               	movlw	72
  9466  0590  0081               	movwf	1
  9467                           
  9468                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9469  0591  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9470  0592  0086               	movwf	6
  9471  0593  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9472  0594  0087               	movwf	7
  9473  0595  1781               	bsf	1,7
  9474                           
  9475                           ;usb_device.c: 1889: }
  9476  0596  0008               	return
  9477  0597                     i1l3225:	
  9478                           
  9479                           ;usb_device.c: 1890: else
  9480                           ;usb_device.c: 1891: {
  9481                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  9482  0597  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9483  0598  0086               	movwf	6
  9484  0599  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9485  059A  0087               	movwf	7
  9486  059B  3008               	movlw	8
  9487  059C  0081               	movwf	1
  9488                           
  9489                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9490  059D  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9491  059E  0086               	movwf	6
  9492  059F  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9493  05A0  0087               	movwf	7
  9494  05A1  1781               	bsf	1,7
  9495                           
  9496                           ;usb_device.c: 1894: }
  9497                           ;usb_device.c: 1895: }
  9498  05A2  0008               	return
  9499  05A3                     i1l3227:	
  9500                           
  9501                           ;usb_device.c: 1896: else
  9502                           ;usb_device.c: 1897: {
  9503                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  9504  05A3  0021               	movlb	1	; select bank1
  9505  05A4  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9506  05A5  3E01               	addlw	1
  9507  05A6  00F2               	movwf	??_USBCtrlTrfRxService
  9508  05A7  3000               	movlw	0
  9509  05A8  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9510  05A9  00F3               	movwf	??_USBCtrlTrfRxService+1
  9511  05AA  0872               	movf	??_USBCtrlTrfRxService,w
  9512  05AB  0086               	movwf	6
  9513  05AC  0873               	movf	??_USBCtrlTrfRxService+1,w
  9514  05AD  0087               	movwf	7
  9515  05AE  3008               	movlw	8
  9516  05AF  0081               	movwf	1
  9517                           
  9518                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9519  05B0  3050               	movlw	80
  9520  05B1  00F2               	movwf	??_USBCtrlTrfRxService
  9521  05B2  3000               	movlw	0
  9522  05B3  00F3               	movwf	??_USBCtrlTrfRxService+1
  9523  05B4  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9524  05B5  0086               	movwf	6
  9525  05B6  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9526  05B7  0087               	movwf	7
  9527  05B8  3142               	addfsr 1,2
  9528  05B9  0872               	movf	??_USBCtrlTrfRxService,w
  9529  05BA  3FC0               	movwi [0]fsr1
  9530  05BB  0873               	movf	??_USBCtrlTrfRxService+1,w
  9531  05BC  3FC1               	movwi [1]fsr1
  9532                           
  9533                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  9534  05BD  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9535  05BE  0086               	movwf	6
  9536  05BF  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9537  05C0  0087               	movwf	7
  9538  05C1  3004               	movlw	4
  9539  05C2  0081               	movwf	1
  9540                           
  9541                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  9542  05C3  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9543  05C4  0086               	movwf	6
  9544  05C5  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9545  05C6  0087               	movwf	7
  9546  05C7  1781               	bsf	1,7
  9547                           
  9548                           ;usb_device.c: 1915: {
  9549                           ;usb_device.c: 1921: outPipes[0].pFunc();
  9550  05C8  0023               	movlb	3	; select bank3
  9551  05C9  0825               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
  9552  05CA  0826               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
  9553                           
  9554                           ;usb_device.c: 1926: }
  9555                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  9556  05CB  13A2               	bcf	(_outPipes^(0+384)+2),7	;volatile
  9557                           
  9558                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  9559  05CC  084E               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  9560  05CD  1D03               	btfss	3,2
  9561  05CE  0008               	return
  9562                           
  9563                           ;usb_device.c: 1942: {
  9564                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  9565  05CF  318D  257B         	fcall	_USBCtrlEPAllowStatusStage
  9566  05D1  0008               	return
  9567  05D2                     __end_of_USBCtrlTrfRxService:	
  9568                           
  9569                           	psect	text44
  9570  0D7B                     __ptext44:	
  9571 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  9572 ;; Defined at:
  9573 ;;		line 1416 in file "../lib/usb/src/usb_device.c"
  9574 ;; Parameters:    Size  Location     Type
  9575 ;;		None
  9576 ;; Auto vars:     Size  Location     Type
  9577 ;;		None
  9578 ;; Return value:  Size  Location     Type
  9579 ;;                  1    wreg      void 
  9580 ;; Registers used:
  9581 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9582 ;; Tracked objects:
  9583 ;;		On entry : 0/0
  9584 ;;		On exit  : 0/0
  9585 ;;		Unchanged: 0/0
  9586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9589 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9590 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9591 ;;Total ram usage:        2 bytes
  9592 ;; Hardware stack levels used:    1
  9593 ;; This function calls:
  9594 ;;		Nothing
  9595 ;; This function is called by:
  9596 ;;		_USBDeviceTasks
  9597 ;;		_USBCtrlEPServiceComplete
  9598 ;;		_USBCtrlTrfRxService
  9599 ;; This function uses a non-reentrant model
  9600 ;;
  9601                           
  9602                           
  9603                           ;psect for function _USBCtrlEPAllowStatusStage
  9604  0D7B                     _USBCtrlEPAllowStatusStage:	
  9605                           
  9606                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  9607                           
  9608                           ;incstack = 0
  9609                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  9610  0D7B  0023               	movlb	3	; select bank3
  9611  0D7C  084F               	movf	_USBStatusStageEnabledFlag1^(0+384),w	;volatile
  9612  0D7D  1D03               	btfss	3,2
  9613  0D7E  0008               	return
  9614                           
  9615                           ;usb_device.c: 1424: {
  9616                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  9617  0D7F  3001               	movlw	1
  9618  0D80  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9619  0D81  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9620  0D82  00CF               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  9621                           
  9622                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  9623  0D83  0850               	movf	_USBStatusStageEnabledFlag2^(0+384),w	;volatile
  9624  0D84  1D03               	btfss	3,2
  9625  0D85  0008               	return
  9626                           
  9627                           ;usb_device.c: 1427: {
  9628                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  9629  0D86  3001               	movlw	1
  9630  0D87  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9631  0D88  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9632  0D89  00D0               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  9633                           
  9634                           ;usb_device.c: 1432: if(controlTransferState == 2)
  9635  0D8A  3002               	movlw	2
  9636  0D8B  0021               	movlb	1	; select bank1
  9637  0D8C  0663               	xorwf	_controlTransferState^(0+128),w	;volatile
  9638  0D8D  1D03               	btfss	3,2
  9639  0D8E  2DA2               	goto	i1l2903
  9640                           
  9641                           ;usb_device.c: 1433: {
  9642                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  9643  0D8F  0023               	movlb	3	; select bank3
  9644  0D90  0827               	movf	_pBDTEntryIn^(0+384),w
  9645  0D91  0086               	movwf	6
  9646  0D92  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9647  0D93  0087               	movwf	7
  9648  0D94  3141               	addfsr 1,1
  9649  0D95  0181               	clrf	1
  9650                           
  9651                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9652  0D96  0827               	movf	_pBDTEntryIn^(0+384),w
  9653  0D97  0086               	movwf	6
  9654  0D98  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9655  0D99  0087               	movwf	7
  9656  0D9A  3048               	movlw	72
  9657  0D9B  0081               	movwf	1
  9658                           
  9659                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9660  0D9C  0827               	movf	_pBDTEntryIn^(0+384),w
  9661  0D9D  0086               	movwf	6
  9662  0D9E  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9663  0D9F  0087               	movwf	7
  9664  0DA0  1781               	bsf	1,7
  9665                           
  9666                           ;usb_device.c: 1437: }
  9667  0DA1  0008               	return
  9668  0DA2                     i1l2903:	
  9669                           
  9670                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  9671  0DA2  0021               	movlb	1	; select bank1
  9672  0DA3  0363               	decf	_controlTransferState^(0+128),w	;volatile
  9673  0DA4  1D03               	btfss	3,2
  9674  0DA5  0008               	return
  9675                           
  9676                           ;usb_device.c: 1439: {
  9677                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  9678  0DA6  0023               	movlb	3	; select bank3
  9679  0DA7  01C9               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  9680                           
  9681                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
  9682  0DA8  3008               	movlw	8
  9683  0DA9  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9684  0DAA  0021               	movlb	1	; select bank1
  9685  0DAB  0A64               	incf	_pBDTEntryEP0OutCurrent^(0+128),w
  9686  0DAC  0086               	movwf	6
  9687  0DAD  0187               	clrf	7
  9688  0DAE  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9689  0DAF  0081               	movwf	1
  9690                           
  9691                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9692  0DB0  3050               	movlw	80
  9693  0DB1  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9694  0DB2  3000               	movlw	0
  9695  0DB3  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  9696  0DB4  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9697  0DB5  3E02               	addlw	2
  9698  0DB6  0086               	movwf	6
  9699  0DB7  0187               	clrf	7
  9700  0DB8  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9701  0DB9  3FC0               	movwi [0]fsr1
  9702  0DBA  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9703  0DBB  3FC1               	movwi [1]fsr1
  9704                           
  9705                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  9706  0DBC  3004               	movlw	4
  9707  0DBD  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9708  0DBE  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9709  0DBF  0086               	movwf	6
  9710  0DC0  0187               	clrf	7
  9711  0DC1  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9712  0DC2  0081               	movwf	1
  9713                           
  9714                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  9715  0DC3  0864               	movf	_pBDTEntryEP0OutCurrent^(0+128),w
  9716  0DC4  0086               	movwf	6
  9717  0DC5  0187               	clrf	7
  9718  0DC6  1781               	bsf	1,7
  9719                           
  9720                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  9721  0DC7  3001               	movlw	1
  9722  0DC8  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9723  0DC9  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9724  0DCA  0023               	movlb	3	; select bank3
  9725  0DCB  00C9               	movwf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  9726                           
  9727                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
  9728  0DCC  0021               	movlb	1	; select bank1
  9729  0DCD  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9730  0DCE  3E01               	addlw	1
  9731  0DCF  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9732  0DD0  3000               	movlw	0
  9733  0DD1  3D61               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9734  0DD2  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  9735  0DD3  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9736  0DD4  0086               	movwf	6
  9737  0DD5  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9738  0DD6  0087               	movwf	7
  9739  0DD7  3008               	movlw	8
  9740  0DD8  0081               	movwf	1
  9741                           
  9742                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9743  0DD9  3050               	movlw	80
  9744  0DDA  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9745  0DDB  3000               	movlw	0
  9746  0DDC  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  9747  0DDD  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9748  0DDE  0086               	movwf	6
  9749  0DDF  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9750  0DE0  0087               	movwf	7
  9751  0DE1  3142               	addfsr 1,2
  9752  0DE2  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9753  0DE3  3FC0               	movwi [0]fsr1
  9754  0DE4  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9755  0DE5  3FC1               	movwi [1]fsr1
  9756                           
  9757                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  9758  0DE6  0860               	movf	_pBDTEntryEP0OutNext^(0+128),w
  9759  0DE7  0086               	movwf	6
  9760  0DE8  0861               	movf	(_pBDTEntryEP0OutNext+1)^(0+128),w
  9761  0DE9  0087               	movwf	7
  9762  0DEA  3080               	movlw	128
  9763  0DEB  0081               	movwf	1
  9764  0DEC  0008               	return
  9765  0DED                     __end_of_USBCtrlEPAllowStatusStage:	
  9766                           
  9767                           	psect	text45
  9768  0D0F                     __ptext45:	
  9769 ;; *************** function _USBCtrlTrfInHandler *****************
  9770 ;; Defined at:
  9771 ;;		line 2592 in file "../lib/usb/src/usb_device.c"
  9772 ;; Parameters:    Size  Location     Type
  9773 ;;		None
  9774 ;; Auto vars:     Size  Location     Type
  9775 ;;  lastDTS         1    5[COMMON] unsigned char 
  9776 ;; Return value:  Size  Location     Type
  9777 ;;                  1    wreg      void 
  9778 ;; Registers used:
  9779 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9780 ;; Tracked objects:
  9781 ;;		On entry : 0/0
  9782 ;;		On exit  : 0/0
  9783 ;;		Unchanged: 0/0
  9784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9787 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9788 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9789 ;;Total ram usage:        3 bytes
  9790 ;; Hardware stack levels used:    1
  9791 ;; Hardware stack levels required when called:    1
  9792 ;; This function calls:
  9793 ;;		_USBCtrlTrfTxService
  9794 ;; This function is called by:
  9795 ;;		_USBCtrlEPService
  9796 ;; This function uses a non-reentrant model
  9797 ;;
  9798                           
  9799                           
  9800                           ;psect for function _USBCtrlTrfInHandler
  9801  0D0F                     _USBCtrlTrfInHandler:	
  9802                           
  9803                           ;usb_device.c: 2594: uint8_t lastDTS;
  9804                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9805                           
  9806                           ;incstack = 0
  9807                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9808  0D0F  0023               	movlb	3	; select bank3
  9809  0D10  0827               	movf	_pBDTEntryIn^(0+384),w
  9810  0D11  0086               	movwf	6
  9811  0D12  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9812  0D13  0087               	movwf	7
  9813  0D14  3000               	movlw	0
  9814  0D15  1B01               	btfsc	1,6
  9815  0D16  3001               	movlw	1
  9816  0D17  00F5               	movwf	USBCtrlTrfInHandler@lastDTS
  9817                           
  9818                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  9819  0D18  3004               	movlw	4
  9820  0D19  0627               	xorwf	_pBDTEntryIn^(0+384),w
  9821  0D1A  00A7               	movwf	_pBDTEntryIn^(0+384)
  9822  0D1B  3000               	movlw	0
  9823  0D1C  0628               	xorwf	(_pBDTEntryIn+1)^(0+384),w
  9824  0D1D  00A8               	movwf	(_pBDTEntryIn+1)^(0+384)
  9825                           
  9826                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
  9827  0D1E  3008               	movlw	8
  9828  0D1F  0021               	movlb	1	; select bank1
  9829  0D20  0662               	xorwf	_USBDeviceState^(0+128),w	;volatile
  9830  0D21  1D03               	btfss	3,2
  9831  0D22  2D32               	goto	i1l3357
  9832                           
  9833                           ;usb_device.c: 2605: {
  9834                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
  9835  0D23  0020               	movlb	0	; select bank0
  9836  0D24  0852               	movf	82,w	;volatile
  9837  0D25  397F               	andlw	127
  9838  0D26  003D               	movlb	29	; select bank29
  9839  0D27  0096               	movwf	22	;volatile
  9840                           
  9841                           ;usb_device.c: 2607: if(UADDR != 0u)
  9842  0D28  0816               	movf	22,w	;volatile
  9843  0D29  1903               	btfsc	3,2
  9844  0D2A  2D2D               	goto	i1l3355
  9845                           
  9846                           ;usb_device.c: 2608: {
  9847                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
  9848  0D2B  3010               	movlw	16
  9849  0D2C  2D2E               	goto	L11
  9850  0D2D                     i1l3355:	
  9851                           ;usb_device.c: 2610: }
  9852                           
  9853                           
  9854                           ;usb_device.c: 2611: else
  9855                           ;usb_device.c: 2612: {
  9856                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
  9857  0D2D  3004               	movlw	4
  9858  0D2E                     L11:	
  9859  0D2E  00F3               	movwf	??_USBCtrlTrfInHandler
  9860  0D2F  0873               	movf	??_USBCtrlTrfInHandler,w
  9861  0D30  0021               	movlb	1	; select bank1
  9862  0D31  00E2               	movwf	_USBDeviceState^(0+128)	;volatile
  9863  0D32                     i1l3357:	
  9864                           
  9865                           ;usb_device.c: 2614: }
  9866                           ;usb_device.c: 2615: }
  9867                           ;usb_device.c: 2618: if(controlTransferState == 1)
  9868  0D32  0363               	decf	_controlTransferState^(0+128),w	;volatile
  9869  0D33  1D03               	btfss	3,2
  9870  0D34  2D72               	goto	i1l371
  9871                           
  9872                           ;usb_device.c: 2619: {
  9873                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  9874  0D35  3058               	movlw	88
  9875  0D36  00F3               	movwf	??_USBCtrlTrfInHandler
  9876  0D37  3000               	movlw	0
  9877  0D38  00F4               	movwf	??_USBCtrlTrfInHandler+1
  9878  0D39  0023               	movlb	3	; select bank3
  9879  0D3A  0827               	movf	_pBDTEntryIn^(0+384),w
  9880  0D3B  0086               	movwf	6
  9881  0D3C  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9882  0D3D  0087               	movwf	7
  9883  0D3E  3142               	addfsr 1,2
  9884  0D3F  0873               	movf	??_USBCtrlTrfInHandler,w
  9885  0D40  3FC0               	movwi [0]fsr1
  9886  0D41  0874               	movf	??_USBCtrlTrfInHandler+1,w
  9887  0D42  3FC1               	movwi [1]fsr1
  9888                           
  9889                           ;usb_device.c: 2621: USBCtrlTrfTxService();
  9890  0D43  3187  2789  318D   	fcall	_USBCtrlTrfTxService
  9891                           
  9892                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
  9893  0D46  3002               	movlw	2
  9894  0D47  0023               	movlb	3	; select bank3
  9895  0D48  065A               	xorwf	_shortPacketStatus^(0+384),w	;volatile
  9896  0D49  1D03               	btfss	3,2
  9897  0D4A  2D57               	goto	i1l3367
  9898                           
  9899                           ;usb_device.c: 2628: {
  9900                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
  9901  0D4B  0827               	movf	_pBDTEntryIn^(0+384),w
  9902  0D4C  0086               	movwf	6
  9903  0D4D  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9904  0D4E  0087               	movwf	7
  9905  0D4F  3004               	movlw	4
  9906  0D50  0081               	movwf	1
  9907                           
  9908                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9909  0D51  0827               	movf	_pBDTEntryIn^(0+384),w
  9910  0D52  0086               	movwf	6
  9911  0D53  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9912  0D54  0087               	movwf	7
  9913  0D55  1781               	bsf	1,7
  9914                           
  9915                           ;usb_device.c: 2633: }
  9916  0D56  0008               	return
  9917  0D57                     i1l3367:	
  9918                           
  9919                           ;usb_device.c: 2634: else
  9920                           ;usb_device.c: 2635: {
  9921                           ;usb_device.c: 2636: if(lastDTS == 0)
  9922  0D57  0875               	movf	USBCtrlTrfInHandler@lastDTS,w
  9923  0D58  1D03               	btfss	3,2
  9924  0D59  2D66               	goto	i1l3371
  9925                           
  9926                           ;usb_device.c: 2637: {
  9927                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9928  0D5A  0827               	movf	_pBDTEntryIn^(0+384),w
  9929  0D5B  0086               	movwf	6
  9930  0D5C  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9931  0D5D  0087               	movwf	7
  9932  0D5E  3048               	movlw	72
  9933  0D5F  0081               	movwf	1
  9934                           
  9935                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9936  0D60  0827               	movf	_pBDTEntryIn^(0+384),w
  9937  0D61  0086               	movwf	6
  9938  0D62  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9939  0D63  0087               	movwf	7
  9940  0D64  1781               	bsf	1,7
  9941                           
  9942                           ;usb_device.c: 2640: }
  9943  0D65  0008               	return
  9944  0D66                     i1l3371:	
  9945                           
  9946                           ;usb_device.c: 2641: else
  9947                           ;usb_device.c: 2642: {
  9948                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  9949  0D66  0827               	movf	_pBDTEntryIn^(0+384),w
  9950  0D67  0086               	movwf	6
  9951  0D68  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9952  0D69  0087               	movwf	7
  9953  0D6A  3008               	movlw	8
  9954  0D6B  0081               	movwf	1
  9955                           
  9956                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9957  0D6C  0827               	movf	_pBDTEntryIn^(0+384),w
  9958  0D6D  0086               	movwf	6
  9959  0D6E  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9960  0D6F  0087               	movwf	7
  9961  0D70  1781               	bsf	1,7
  9962                           
  9963                           ;usb_device.c: 2645: }
  9964                           ;usb_device.c: 2646: }
  9965                           ;usb_device.c: 2647: }
  9966  0D71  0008               	return
  9967  0D72                     i1l371:	
  9968                           
  9969                           ;usb_device.c: 2648: else
  9970                           ;usb_device.c: 2649: {
  9971                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
  9972  0D72  0023               	movlb	3	; select bank3
  9973  0D73  1FA2               	btfss	(_outPipes^(0+384)+2),7	;volatile
  9974  0D74  2D78               	goto	i1l3375
  9975                           
  9976                           ;usb_device.c: 2656: {
  9977                           ;usb_device.c: 2657: outPipes[0].pFunc();
  9978  0D75  0825               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
  9979  0D76  0826               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
  9980                           
  9981                           ;usb_device.c: 2658: }
  9982                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
  9983  0D77  13A2               	bcf	(_outPipes^(0+384)+2),7	;volatile
  9984  0D78                     i1l3375:	
  9985                           
  9986                           ;usb_device.c: 2660: }
  9987                           ;usb_device.c: 2662: controlTransferState = 0;
  9988  0D78  0021               	movlb	1	; select bank1
  9989  0D79  01E3               	clrf	_controlTransferState^(0+128)	;volatile
  9990  0D7A  0008               	return
  9991  0D7B                     __end_of_USBCtrlTrfInHandler:	
  9992                           
  9993                           	psect	text46
  9994  0789                     __ptext46:	
  9995 ;; *************** function _USBCtrlTrfTxService *****************
  9996 ;; Defined at:
  9997 ;;		line 1771 in file "../lib/usb/src/usb_device.c"
  9998 ;; Parameters:    Size  Location     Type
  9999 ;;		None
 10000 ;; Auto vars:     Size  Location     Type
 10001 ;;  byteToSend      1    2[COMMON] unsigned char 
 10002 ;; Return value:  Size  Location     Type
 10003 ;;                  1    wreg      void 
 10004 ;; Registers used:
 10005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 10006 ;; Tracked objects:
 10007 ;;		On entry : 0/0
 10008 ;;		On exit  : 0/0
 10009 ;;		Unchanged: 0/0
 10010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10013 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10014 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10015 ;;Total ram usage:        3 bytes
 10016 ;; Hardware stack levels used:    1
 10017 ;; This function calls:
 10018 ;;		Nothing
 10019 ;; This function is called by:
 10020 ;;		_USBCtrlEPAllowDataStage
 10021 ;;		_USBCtrlTrfInHandler
 10022 ;; This function uses a non-reentrant model
 10023 ;;
 10024                           
 10025                           
 10026                           ;psect for function _USBCtrlTrfTxService
 10027  0789                     _USBCtrlTrfTxService:	
 10028                           
 10029                           ;usb_device.c: 1773: uint8_t byteToSend;
 10030                           ;usb_device.c: 1777: byteToSend = 8;
 10031                           
 10032                           ;incstack = 0
 10033                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
 10034  0789  3008               	movlw	8
 10035  078A  00F0               	movwf	??_USBCtrlTrfTxService
 10036  078B  0870               	movf	??_USBCtrlTrfTxService,w
 10037  078C  00F2               	movwf	USBCtrlTrfTxService@byteToSend
 10038                           
 10039                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 10040  078D  3000               	movlw	0
 10041  078E  0022               	movlb	2	; select bank2
 10042  078F  026F               	subwf	((_inPipes+1)^(0+256)+3),w	;volatile
 10043  0790  3008               	movlw	8
 10044  0791  1903               	skipnz
 10045  0792  026E               	subwf	(_inPipes^(0+256)+3),w	;volatile
 10046  0793  1803               	skipnc
 10047  0794  2FA6               	goto	i1l271
 10048                           
 10049                           ;usb_device.c: 1779: {
 10050                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 10051  0795  086E               	movf	(_inPipes^(0+256)+3),w	;volatile
 10052  0796  00F0               	movwf	??_USBCtrlTrfTxService
 10053  0797  0870               	movf	??_USBCtrlTrfTxService,w
 10054  0798  00F2               	movwf	USBCtrlTrfTxService@byteToSend
 10055                           
 10056                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 10057  0799  0023               	movlb	3	; select bank3
 10058  079A  085A               	movf	_shortPacketStatus^(0+384),w	;volatile
 10059  079B  1D03               	btfss	3,2
 10060  079C  2F9F               	goto	i1l2847
 10061                           
 10062                           ;usb_device.c: 1788: {
 10063                           ;usb_device.c: 1789: shortPacketStatus = 1;
 10064  079D  3001               	movlw	1
 10065  079E  2FA3               	goto	L12
 10066  079F                     i1l2847:	
 10067                           ;usb_device.c: 1790: }
 10068                           
 10069                           
 10070                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 10071  079F  035A               	decf	_shortPacketStatus^(0+384),w	;volatile
 10072  07A0  1D03               	btfss	3,2
 10073  07A1  2FA6               	goto	i1l271
 10074                           
 10075                           ;usb_device.c: 1792: {
 10076                           ;usb_device.c: 1793: shortPacketStatus = 2;
 10077  07A2  3002               	movlw	2
 10078  07A3                     L12:	
 10079  07A3  00F0               	movwf	??_USBCtrlTrfTxService
 10080  07A4  0870               	movf	??_USBCtrlTrfTxService,w
 10081  07A5  00DA               	movwf	_shortPacketStatus^(0+384)	;volatile
 10082  07A6                     i1l271:	
 10083                           
 10084                           ;usb_device.c: 1794: }
 10085                           ;usb_device.c: 1795: }
 10086                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 10087  07A6  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10088  07A7  00F0               	movwf	??_USBCtrlTrfTxService
 10089  07A8  01F1               	clrf	??_USBCtrlTrfTxService+1
 10090  07A9  0870               	movf	??_USBCtrlTrfTxService,w
 10091  07AA  0022               	movlb	2	; select bank2
 10092  07AB  02EE               	subwf	(_inPipes^(0+256)+3),f	;volatile
 10093  07AC  0871               	movf	??_USBCtrlTrfTxService+1,w
 10094  07AD  3BEF               	subwfb	((_inPipes+1)^(0+256)+3),f	;volatile
 10095                           
 10096                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 10097  07AE  0023               	movlb	3	; select bank3
 10098  07AF  0827               	movf	_pBDTEntryIn^(0+384),w
 10099  07B0  3E01               	addlw	1
 10100  07B1  00F0               	movwf	??_USBCtrlTrfTxService
 10101  07B2  3000               	movlw	0
 10102  07B3  3D28               	addwfc	(_pBDTEntryIn+1)^(0+384),w
 10103  07B4  00F1               	movwf	??_USBCtrlTrfTxService+1
 10104  07B5  0870               	movf	??_USBCtrlTrfTxService,w
 10105  07B6  0086               	movwf	6
 10106  07B7  0871               	movf	??_USBCtrlTrfTxService+1,w
 10107  07B8  0087               	movwf	7
 10108  07B9  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10109  07BA  0081               	movwf	1
 10110                           
 10111                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 10112  07BB  3058               	movlw	88
 10113  07BC  00F0               	movwf	??_USBCtrlTrfTxService
 10114  07BD  0870               	movf	??_USBCtrlTrfTxService,w
 10115  07BE  00D9               	movwf	_pDst^(0+384)
 10116                           
 10117                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 10118  07BF  0022               	movlb	2	; select bank2
 10119  07C0  1C6D               	btfss	(_inPipes^(0+256)+2),0	;volatile
 10120  07C1  2FDC               	goto	i1l2867
 10121  07C2  2FF9               	goto	i1l2877
 10122  07C3                     i1l2859:	
 10123                           ;usb_device.c: 1810: {
 10124                           ;usb_device.c: 1811: while(byteToSend)
 10125                           
 10126                           
 10127                           ;usb_device.c: 1812: {
 10128                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 10129  07C3  0022               	movlb	2	; select bank2
 10130  07C4  086B               	movf	_inPipes^(0+256),w	;volatile
 10131  07C5  0084               	movwf	4
 10132  07C6  086C               	movf	(_inPipes+1)^(0+256),w	;volatile
 10133  07C7  0085               	movwf	5
 10134  07C8  0800               	movf	0,w	;code access
 10135  07C9  00F0               	movwf	??_USBCtrlTrfTxService
 10136  07CA  0023               	movlb	3	; select bank3
 10137  07CB  0859               	movf	_pDst^(0+384),w
 10138  07CC  0086               	movwf	6
 10139  07CD  0187               	clrf	7
 10140  07CE  0870               	movf	??_USBCtrlTrfTxService,w
 10141  07CF  0081               	movwf	1
 10142  07D0  3001               	movlw	1
 10143  07D1  0022               	movlb	2	; select bank2
 10144  07D2  07EB               	addwf	_inPipes^(0+256),f	;volatile
 10145  07D3  3000               	movlw	0
 10146  07D4  3DEC               	addwfc	(_inPipes+1)^(0+256),f	;volatile
 10147  07D5  3001               	movlw	1
 10148  07D6  00F0               	movwf	??_USBCtrlTrfTxService
 10149  07D7  0870               	movf	??_USBCtrlTrfTxService,w
 10150  07D8  0023               	movlb	3	; select bank3
 10151  07D9  07D9               	addwf	_pDst^(0+384),f
 10152                           
 10153                           ;usb_device.c: 1814: byteToSend--;
 10154  07DA  3001               	movlw	1
 10155  07DB  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
 10156  07DC                     i1l2867:	
 10157  07DC  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10158  07DD  1903               	btfsc	3,2
 10159  07DE  0008               	return
 10160  07DF  2FC3               	goto	i1l2859
 10161  07E0                     i1l2869:	
 10162                           ;usb_device.c: 1817: else
 10163                           ;usb_device.c: 1818: {
 10164                           ;usb_device.c: 1819: while(byteToSend)
 10165                           
 10166                           ;usb_device.c: 1815: }
 10167                           ;usb_device.c: 1816: }
 10168                           
 10169                           
 10170                           ;usb_device.c: 1820: {
 10171                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 10172  07E0  0022               	movlb	2	; select bank2
 10173  07E1  086B               	movf	_inPipes^(0+256),w	;volatile
 10174  07E2  0084               	movwf	4
 10175  07E3  086C               	movf	(_inPipes+1)^(0+256),w	;volatile
 10176  07E4  0085               	movwf	5
 10177  07E5  0800               	movf	0,w	;code access
 10178  07E6  00F0               	movwf	??_USBCtrlTrfTxService
 10179  07E7  0023               	movlb	3	; select bank3
 10180  07E8  0859               	movf	_pDst^(0+384),w
 10181  07E9  0086               	movwf	6
 10182  07EA  0187               	clrf	7
 10183  07EB  0870               	movf	??_USBCtrlTrfTxService,w
 10184  07EC  0081               	movwf	1
 10185  07ED  3001               	movlw	1
 10186  07EE  0022               	movlb	2	; select bank2
 10187  07EF  07EB               	addwf	_inPipes^(0+256),f	;volatile
 10188  07F0  3000               	movlw	0
 10189  07F1  3DEC               	addwfc	(_inPipes+1)^(0+256),f	;volatile
 10190  07F2  3001               	movlw	1
 10191  07F3  00F0               	movwf	??_USBCtrlTrfTxService
 10192  07F4  0870               	movf	??_USBCtrlTrfTxService,w
 10193  07F5  0023               	movlb	3	; select bank3
 10194  07F6  07D9               	addwf	_pDst^(0+384),f
 10195                           
 10196                           ;usb_device.c: 1822: byteToSend--;
 10197  07F7  3001               	movlw	1
 10198  07F8  02F2               	subwf	USBCtrlTrfTxService@byteToSend,f
 10199  07F9                     i1l2877:	
 10200  07F9  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10201  07FA  1903               	btfsc	3,2
 10202  07FB  0008               	return
 10203  07FC  2FE0               	goto	i1l2869
 10204  07FD                     __end_of_USBCtrlTrfTxService:	
 10205  007E                     btemp	set	126	;btemp
 10206  007E                     int$flags	set	126
 10207  007E                     wtemp	set	126
 10208  007E                     wtemp0	set	126
 10209  0080                     wtemp1	set	128
 10210  0082                     wtemp2	set	130
 10211  0084                     wtemp3	set	132
 10212  0086                     wtemp4	set	134
 10213  0088                     wtemp5	set	136
 10214  007F                     wtemp6	set	127
 10215  007E                     ttemp	set	126
 10216  007E                     ttemp0	set	126
 10217  0081                     ttemp1	set	129
 10218  0084                     ttemp2	set	132
 10219  0087                     ttemp3	set	135
 10220  007F                     ttemp4	set	127
 10221  007E                     ltemp	set	126
 10222  007E                     ltemp0	set	126
 10223  0082                     ltemp1	set	130
 10224  0086                     ltemp2	set	134
 10225  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    201
    Data        0
    BSS         226
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            16     16      16
    BANK1            16      6      12
    BANK2            16     11      16
    BANK3            80      6      75
    BANK4            80      7      25
    BANK5            80      0      64
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 4096
		 -> cdc_data_tx(BANK1[64]), cdc_data_rx(BANK2[64]), CtrlTrfData(BANK0[8]), RAM(DATA[4096]), 
		 -> SetupPkt(BANK0[8]), NULL(NULL[0]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 8
		 -> SetupPkt(BANK0[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK3[1]), NULL(NULL[0]), 
		 -> BDT(BANK0[48]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    ReadPayload@data	PTR unsigned char  size(1) Largest target is 2
		 -> main@podatak(BANK4[2]), 

    WriteAddress@addr	PTR unsigned char  size(1) Largest target is 5
		 -> nRF_Setup@RXTX_ADDR(BANK3[5]), 

    putUSBUSART@data	PTR unsigned char  size(1) Largest target is 2
		 -> main@podatak(BANK4[2]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S1367_POINTER$wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S1367_POINTER$bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S1367_POINTER$wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S1367_POINTER$bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(BANK0[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK1[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    S249$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S239$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S239$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S215$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S215$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S215$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S215$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _SYS_InterruptHigh in COMMON

    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USER_USB_CALLBACK_EVENT_HANDLER->i1_CDCInitEP
    i1_CDCInitEP->i1_USBEnableEndpoint
    i1_USBEnableEndpoint->i1_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    None.

Critical Paths under _SYS_InterruptHigh in BANK0

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService

Critical Paths under _main in BANK2

    _nRF_Setup->_WriteAddress
    _WriteRegister->_SPI_transfer
    _WriteCommand->_SPI_transfer
    _WriteAddress->_SPI_transfer
    _ReadRegister->_SPI_transfer
    _ReadPayload->_SPI_transfer
    _CDCTxService->_USBTransferOnePacket
    _CDCInitEP->_USBTransferOnePacket
    _USBEnableEndpoint->_USBConfigureEndpoint

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_nRF_Setup
    _CDCInitEP->_USBEnableEndpoint

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   10087
                                              5 BANK3      1     1      0
                                              0 BANK4      7     7      0
                          _CDCInitEP
                       _CDCTxService
                        _ReadPayload
                       _ReadRegister
                           _SPI_init
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                      _WriteRegister
                          _nRF_Setup
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (1) _putUSBUSART                                          3     2      1     205
                                              0 BANK2      3     2      1
 ---------------------------------------------------------------------------------
 (1) _nRF_Setup                                            8     8      0    1988
                                              7 BANK2      2     2      0
                                              0 BANK3      5     5      0
                       _WriteAddress
                       _WriteCommand
                      _WriteRegister
 ---------------------------------------------------------------------------------
 (2) _WriteRegister                                        2     1      1    1341
                                              1 BANK2      2     1      1
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (2) _WriteCommand                                         1     1      0      62
                                              1 BANK2      1     1      0
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (2) _WriteAddress                                         6     4      2     400
                                              1 BANK2      6     4      2
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        5     5      0     396
                                              0 BANK2      5     5      0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      1     1      0       0
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      31
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadRegister                                         4     4      0     130
                                              1 BANK2      4     4      0
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (1) _ReadPayload                                          5     4      1     265
                                              1 BANK2      5     4      1
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _SPI_transfer                                         1     1      0      31
                                              0 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CDCTxService                                         3     3      0    2294
                                              0 BANK3      3     3      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _CDCInitEP                                            1     1      0    3045
                                              3 BANK3      1     1      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _USBTransferOnePacket                                11     7      4    2093
                                              0 BANK2     11     7      4
 ---------------------------------------------------------------------------------
 (2) _USBEnableEndpoint                                    6     5      1     952
                                              7 BANK2      3     2      1
                                              0 BANK3      3     3      0
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBConfigureEndpoint                                 7     6      1     524
                                              0 BANK2      7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _SYS_InterruptHigh                                    1     1      0   27385
                                              5 BANK1      1     1      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (5) _USBDeviceTasks                                       3     3      0   27385
                                             15 BANK0      1     1      0
                                              3 BANK1      2     2      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i1_USBDeviceInit
 ---------------------------------------------------------------------------------
 (6) i1_USBDeviceInit                                      5     5      0     272
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (6) _USBWakeFromSuspend                                   1     1      0    3649
                                              6 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBSuspend                                           1     1      0    3649
                                              6 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBStallHandler                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _USBIncrement1msInternalTimers                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPService                                     3     3      0   16120
                                              0 BANK1      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfSetupHandler                               1     1      0   15891
                                             14 BANK0      1     1      0
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPServiceComplete                             2     2      0      92
                                              5 COMMON     2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              3 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (8) _USBCheckStdRequest                                   1     1      0   12150
                                             13 BANK0      1     1      0
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBStdSetCfgHandler                                  5     5      0    4335
                                              6 BANK0      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (10) _memset                                              8     2      6     526
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (9) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (9) _USBStdGetDscHandler                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (9) _USBStdFeatureReqHandler                              7     7      0    4120
                                              6 BANK0      7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    3649
                                              0 BANK0      6     0      6
                 _USBCheckCDCRequest
                        i1_CDCInitEP
                i1_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (7) i1_SYSTEM_Initialize                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_CDCInitEP                                          1     1      0     935
                                             13 COMMON     1     1      0
                i1_USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (8) i1_USBTransferOnePacket                              11     7      4     454
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (8) i1_USBEnableEndpoint                                  6     5      1     481
                                              7 COMMON     6     5      1
             i1_USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (9) i1_USBConfigureEndpoint                               7     6      1     274
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (7) _USBCheckCDCRequest                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfOutHandler                                 2     2      0     114
                                              6 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfRxService                                  4     4      0     114
                                              2 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfInHandler                                  3     3      0     115
                                              3 COMMON     3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfTxService                                 3     3      0      92
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CDCInitEP
     _USBEnableEndpoint
       _USBConfigureEndpoint
     _USBTransferOnePacket
   _CDCTxService
     _USBTransferOnePacket
   _ReadPayload
     _SPI_transfer
   _ReadRegister
     _SPI_transfer
   _SPI_init
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
   _WriteRegister
     _SPI_transfer
   _nRF_Setup
     _WriteAddress
       _SPI_transfer
     _WriteCommand
       _SPI_transfer
     _WriteRegister
       _SPI_transfer
   _putUSBUSART

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               i1_CDCInitEP
                 i1_USBEnableEndpoint
                   i1_USBConfigureEndpoint
                 i1_USBTransferOnePacket
               i1_SYSTEM_Initialize
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             i1_CDCInitEP
               i1_USBEnableEndpoint
                 i1_USBConfigureEndpoint
               i1_USBTransferOnePacket
             i1_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           i1_CDCInitEP
             i1_USBEnableEndpoint
               i1_USBConfigureEndpoint
             i1_USBTransferOnePacket
           i1_SYSTEM_Initialize
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         i1_CDCInitEP
           i1_USBEnableEndpoint
             i1_USBConfigureEndpoint
           i1_USBTransferOnePacket
         i1_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       i1_CDCInitEP
         i1_USBEnableEndpoint
           i1_USBConfigureEndpoint
         i1_USBTransferOnePacket
       i1_SYSTEM_Initialize
     i1_USBDeviceInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               10     10      10       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10      6       C       7       75.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               10      B      10       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      6      4B      11       93.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      7      19      13       31.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     11E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     11E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Jun 09 17:22:02 2017

                              _USB_SD_Ptr 0251                                         pc 0002  
                             __CFG_CP$OFF 0000                               _SSPSTATbits 0214  
                           _USBDeviceInit 031A                        __size_of_CDCInitEP 003E  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0060      USER_USB_CALLBACK_EVENT_HANDLER@pdata 0062  
                                     l233 0879                                       l173 0361  
             __end_of_USBStdGetDscHandler 0E6C                                       l651 095E  
                                     l565 17FF                                       l692 178E  
                                     _BDT 0020                                       l669 0982  
                                     _UIE 0E92                                       _UIR 0E90  
                              _USBSuspend 0885                     __size_of_WriteAddress 002B  
                    USBStdSetCfgHandler@i 006A                      USBStdSetCfgHandler@p 0067  
             __end_ofi1_SYSTEM_Initialize 17BF                              __CFG_BORV$LO 0000  
                                     wreg 0009                            _USBDeviceTasks 016D  
                          _USBDeviceState 00E2                     ??_USBCtrlTrfRxService 0072  
                   __size_of_WriteCommand 0009                  USBEnableEndpoint@options 0167  
                            __CFG_LVP$OFF 0000                     __size_of_SPI_transfer 0009  
              USBConfigureEndpoint@handle 0166                                      l4305 0F0D  
                                    l4315 0F56                                      l4317 0F6E  
                                    l4271 0AEA                                      l4503 03ED  
                                    l4351 17F3                                      l4431 038A  
                                    l4409 0366                                      l4337 0941  
                                    l4515 0414                                      l4347 17EC  
                                    l4269 0AE1                                      l4285 0916  
                                    l4509 040B                                      l4621 096A  
                                    l4437 03AE                                      l4381 032A  
                                    l4527 042A                                      l4535 043F  
                                    l4289 091F                                      l4297 0EFD  
                                    l4553 0464                                      l4537 0443  
                                    l4545 0458                                      l4473 087E  
                                    l4555 0468                                      l4547 045B  
                                    l4557 0480                                      l4397 0348  
                                    l4389 033B                                      l4485 0865  
                                    l4725 0664                                      l4709 0633  
                                    l4717 0650                                      l4495 03E2  
                                    l4693 0604                                      u3715 0ABA  
                                    u4187 0FFA                                      u3725 0AC0  
                                    u4197 0988                                      u3735 0AC8  
                                    u3815 094A                                      i1l35 0A30  
                                    u3855 034B                     ??_USBCtrlTrfTxService 0070  
                                    _UCFG 0E91                                      _UEP0 0E98  
                                    _UEP1 0E99                                      _UEIE 0E97  
                                    _UEIR 0E93                                      _UCON 0E8E  
                            ?i1_CDCInitEP 0070                              __CFG_WRT$OFF 0000  
                         _CDCDataInHandle 01C1    USBStdFeatureReqHandler@current_ep_data 006A  
                                    _pDst 01D9                               main@podatak 0237  
                                    _main 05D2                                      fsr0h 0005  
                                    fsr1h 0007                                      fsr0l 0004  
                                    indf0 0000                                      indf1 0001  
                             _BaudRateGen 01B3                                      fsr1l 0006  
                         _USBDeviceAttach 0868                                      btemp 007E  
                                    ltemp 007E                                      start 0012  
                                    ttemp 007E                               main@status1 0236  
                             main@status2 0232                                      wtemp 007E  
                           __CFG_IESO$OFF 0000                __end_of_USBCheckStdRequest 0D0F  
                  ??_USBCtrlTrfOutHandler 0076                       __CFG_PLLEN$DISABLED 0000  
                           __CFG_MCLRE$ON 0000                 ??_USBStdFeatureReqHandler 0066  
                           ??_ReadPayload 0162                  ??_USBStdGetStatusHandler 0070  
                          ?_USBDeviceInit 0070                              _WriteAddress 0936  
                             _writeBuffer 0320                                     ?_main 0070  
                           ?_ReadRegister 0070                              _WriteCommand 1792  
              i1USBEnableEndpoint@options 0077                             __CFG_WDTE$OFF 0000  
       __size_of_USBCtrlEPServiceComplete 0093                    __end_of_USBDeviceTasks 0251  
               ?_USBCtrlEPServiceComplete 0070                                     i1l323 0BA0  
                                   i1l173 04C8                                     i1l326 0BE4  
                                   i1l190 01CA                                     i1l271 07A6  
                                   i1l327 0BA9                                     i1l328 0BAC  
                                   i1l184 018F                                     i1l258 06B1  
                                   i1l194 01F5                                     i1l371 0D72  
                                   i1l419 012A                                     i1l195 024E  
                                   i1l196 01FE                          SPI_transfer@data 0160  
                                   i1l286 0547                                     i1l383 0D0E  
                                   i1l385 0CB5                                     i1l394 0CE8  
                                   i1l565 17BE                                     i1l479 0CAC  
                                   _UADDR 0E96                              _SPI_transfer 1789  
                                   _USTAT 0E8F                    __size_of_WriteRegister 000F  
      __size_of_USBCtrlEPAllowStatusStage 0072                            __CFG_FCMEN$OFF 0000  
         __end_of_USBCtrlEPAllowDataStage 0C4D                                     _sd000 0316  
                                   _sd001 029C                                     _sd002 02D0  
          ?_USBIncrement1msInternalTimers 0070                            __CFG_BOREN$OFF 0000  
                                   ltemp0 007E                          __end_of_SPI_init 17E9  
                                   ltemp1 0082                                     ltemp2 0086  
                                   ltemp3 0080                         __end_of_CDCInitEP 0A6F  
                                   ttemp0 007E                                     ttemp1 0081  
                                   ttemp2 0084                                     ttemp3 0087  
                                   ttemp4 007F                                     status 0003  
                                   wtemp0 007E                                     wtemp1 0080  
                                   wtemp2 0082                                     wtemp3 0084  
                                   wtemp4 0086                                     wtemp5 0088  
                                   wtemp6 007F                           putUSBUSART@data 0162  
            __size_of_USBStdSetCfgHandler 008E                           __initialization 0014  
                            __end_of_main 0668                     _control_signal_bitmap 01D7  
                          __CFG_LPBOR$OFF 0000                            ??_ReadRegister 0161  
               __size_of_USBCtrlEPService 0054                                    ??_main 01EA  
                         ?_USBDeviceTasks 0070                       __end_of_ReadPayload 098D  
                             ?_USBSuspend 0070                       __CFG_USBLSCLK$48MHz 0000  
                         i1_USBDeviceInit 0483                              _cdc_mem_type 01D3  
                 __end_of_USBDeviceAttach 0885                          _CDCDataOutHandle 01C3  
                                  i1S4813 0800                                    _ACTCON 039B  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                    SYSTEM_Initialize@state 0160  
                   __size_of_CDCTxService 00B1                                    i1l3003 0DF8  
                                  i1l3023 0E59                                    i1l3015 0E35  
                                  i1l3007 0E02                                    i1l3113 00EC  
                                  i1l3025 0E5C                                    i1l3017 0E38  
                                  i1l3041 0BBC                                    i1l3123 0115  
                                  i1l3107 00DA                                    i1l3051 0BD8  
                                  i1l3213 054F                                    i1l3133 0130  
                                  i1l3125 011B                                    i1l3109 00E1  
                                  i1l3029 0E5F                                    i1l3215 0568  
                                  i1l3071 005C                                    i1l3225 0597  
                                  i1l3137 014F                                    i1l3153 067B  
                                  i1l3227 05A3                                    i1l3139 0158  
                                  i1l3091 00AB                                    i1l3251 0CC4  
                                  i1l3341 09F6                                    i1l2701 0AA7  
                                  i1l3085 008A                                    i1l3069 005A  
                                  i1l3261 0CD5                                    i1l3157 067F  
                                  i1l3263 0CD8                                    i1l3247 0CBE  
                                  i1l3175 06C0                                    i1l3183 06C9  
                                  i1l3329 09CA                                    i1l2713 08B3  
                                  i1l2721 0E79                                    i1l3097 00BF  
                                  i1l3273 0CF5                                    i1l3249 0CC1  
                                  i1l3425 0904                                    i1l3371 0D66  
                                  i1l3355 0D2D                                    i1l2811 17AC  
                                  i1l3099 00CA                                    i1l3259 0CD2  
                                  i1l3427 0906                                    i1l3357 0D32  
                                  i1l2709 08AC                                    i1l2741 0EEA  
                                  i1l2821 09FE                                    i1l3277 0D03  
                                  i1l3445 0B8E                                    i1l3541 04AF  
                                  i1l3533 04A3                                    i1l3525 0492  
                                  i1l3375 0D78                                    i1l3367 0D57  
                                  i1l2903 0DA2                                    i1l2815 17B3  
                                  i1l2823 0A02                                    i1l3447 0B91  
                                  i1l2729 0E89                                    i1l2825 0A05  
                                  i1l3393 08D8                                    i1l3553 04CD  
                                  i1l2771 0C73                                    i1l2739 0ED2  
                                  i1l2819 09FA                                    i1l3395 08E1  
                                  i1l3811 0244                                    i1l3803 021C  
                                  i1l2829 0A08                                    i1l3581 050F  
                                  i1l3733 0189                                    i1l3725 017C  
                                  i1l2847 079F                                    i1l2783 0C91  
                                  i1l2767 0C6C                                    i1l2759 0C60  
                                  i1l2935 0C1E                                    i1l3575 04EB  
                                  i1l2777 0C83                                    i1l3809 0235  
                                  i1l3753 01A6                                    i1l2859 07C3  
                                  i1l2867 07DC                                    i1l2699 0A9E  
                                  i1l2963 0718                                    i1l2955 0707  
                                  i1l2939 0C31                                    i1l3747 01A0  
                                  i1l2869 07E0                                    i1l2877 07F9  
                                  i1l2789 0C9A                                    i1l2885 0821  
                                  i1l2973 072E                                    i1l4815 0A11  
                                  i1l3783 01ED                                    i1l3775 01D7  
                                  i1l3759 01BB                                    i1l4817 0A2B  
                                  i1l3769 01D0                                    i1l2995 0773  
                                  i1l2979 0742                                    u213_25 0C28  
                                  u252_25 0541                                    u190_25 0A85  
                                  u291_25 04B2                                    u188_25 0A77  
                                  u189_25 0A7D                                    u278_25 0B57  
                                  _OSCCON 0099                             CDCTxService@i 01E6  
                                  _SSPBUF 0211              i1USBTransferOnePacket@handle 0079  
                           _WriteRegister 179B                            __CFG_PWRTE$OFF 0000  
                       _shortPacketStatus 01DA                           USBDeviceTasks@i 006F  
             USBStdFeatureReqHandler@pUEP 0068                  USBTransferOnePacket@data 0161  
              USBCtrlTrfInHandler@lastDTS 0075                           ??_USBDeviceInit 0160  
                            ?_putUSBUSART 0160                         _USBEnableEndpoint 090B  
         __size_of_USBStdGetStatusHandler 0055                                    _memset 081D  
                    i1USBEnableEndpoint@p 007A                        ?_USBEnableEndpoint 0167  
           __size_of_USBTransferOnePacket 0084                              _CDCTxService 03D2  
                     ??_USBEnableEndpoint 0168                        __size_of_nRF_Setup 008D  
            i1USBConfigureEndpoint@handle 0076                               _CtrlTrfData 0058  
                            ReadPayload@i 0165                      _controlTransferState 00E3  
                       _SYSTEM_Initialize 17E9                   __end_of__initialization 0040  
              i1USBTransferOnePacket@data 0071                      __size_ofi1_CDCInitEP 0035  
                      ?_SYSTEM_Initialize 0070                            ?_WriteRegister 0161  
                __size_of_USBStallHandler 0027                       __size_of_USBSuspend 001F  
                        WriteRegister@reg 0162                          WriteRegister@val 0161  
                    i1USBDeviceInit@i_821 0073                            __pcstackCOMMON 0070  
               __end_of_USBEnableEndpoint 0936                             __end_of_sd000 031A  
                           __end_of_sd001 02D0                             __end_of_sd002 0304  
                     ??_SYSTEM_Initialize 0160          __size_of_USBCtrlEPAllowDataStage 005C  
                             _ReadPayload 0961             __size_of_USBConfigureEndpoint 0043  
                 __end_ofi1_USBDeviceInit 0531               __end_of_USBCtrlTrfInHandler 0D7B  
                               ?_SPI_init 0070                                _cdc_notice 0220  
                              _cdc_rx_len 01D4                                _cdc_tx_len 01D6  
                ??_USBCtrlTrfSetupHandler 006E                   _USBTicksSinceSuspendEnd 01D2  
                        ?_USBDeviceAttach 0070                 __end_of_SYSTEM_Initialize 1800  
                  _USBStdGetStatusHandler 0B9C                                __pbssBANK1 00E0  
                              __pbssBANK2 016B                                __pbssBANK3 01A0  
                              __pbssBANK4 0220                                __pbssBANK5 02A0  
                              __pbssBANK6 0320                      __end_of_ReadRegister 17D4  
             __size_of_USBWakeFromSuspend 0020                               _pBDTEntryIn 01A7  
                         WriteAddress@reg 0164                           WriteAddress@num 0161  
        __end_of_USBCtrlEPServiceComplete 06FB               __size_of_USBCheckCDCRequest 0060  
                              __pmaintext 05D2                      USBCtrlTrfRxService@i 0074  
                       __end_of_nRF_Setup 1000                           __CFG_PLLMULT$3x 0000  
                              __pintentry 0004              __size_ofi1_USBEnableEndpoint 0020  
                                 ?_memset 0070                                _device_dsc 0304  
                        _USBCtrlEPService 0B48                                _ep_data_in 01BB  
                              ??_SPI_init 0160               __end_of_USBCtrlTrfRxService 05D2  
                      _USBCheckStdRequest 0CAD                         _configDescriptor1 0259  
             __end_of_USBCtrlTrfTxService 07FD                                   u280_2m0 0B87  
                     _USBStdSetCfgHandler 06FB                       ?_USBCheckStdRequest 0070  
            __size_of_USBStdGetDscHandler 007F                                   _UIEbits 0E92  
                                 _UIRbits 0E90              __size_ofi1_SYSTEM_Initialize 0015  
                         ??_WriteRegister 0162                             _cdc_trf_state 01D5  
                ??i1_USBTransferOnePacket 0074                                   _pCDCDst 01C5  
                                 _pCDCSrc 01C7           ??_USBIncrement1msInternalTimers 0070  
                    ?_USBStdSetCfgHandler 0070                                 _CDCInitEP 0A31  
              __size_of_USBEnableEndpoint 002B                                _readBuffer 02A0  
                    ??_USBCheckStdRequest 006D             __size_of_USBCtrlTrfOutHandler 0037  
                        ??_USBDeviceTasks 00E9                         ??_USBStallHandler 0070  
                         __CFG_STVREN$OFF 0000                          ?i1_USBDeviceInit 0070  
                    __size_of_putUSBUSART 001B                           __size_of_memset 0018  
               __end_of_configDescriptor1 029C                                   __ptext1 084D  
                                 __ptext2 0F73                                   __ptext3 179B  
                                 __ptext4 1792                                   __ptext5 0936  
                                 __ptext6 031A                                   __ptext7 0868  
                                 __ptext8 17E9                                   __ptext9 17D4  
                                 _inPipes 016B               _USBDeferOUTDataStagePackets 01CD  
                            ??_USBSuspend 0066                     i1USBEnableEndpoint@ep 007C  
                      __end_of_USB_CD_Ptr 0259                __size_of_SYSTEM_Initialize 0017  
         __size_of_USBCtrlTrfSetupHandler 0054                                   clrloop0 1784  
                ??i1_USBConfigureEndpoint 0071                      end_of_initialization 0040  
                      __end_of_USB_SD_Ptr 0257                       _pBDTEntryEP0OutNext 00E0  
                                 memset@c 0072                                   memset@n 0074  
                                 memset@p 0076                           _USB1msTickCount 01B7  
         _dummy_encapsulated_cmd_response 022A                  ?_USBStdFeatureReqHandler 0070  
                   ??_USBStdSetCfgHandler 0066                                ?_CDCInitEP 0070  
                      __end_of_USBSuspend 08A4                   _USBCtrlEPAllowDataStage 0BF1  
                            __pstringtext 0251                  _USBCtrlEPServiceComplete 0668  
              _USBStatusStageEnabledFlag1 01CF                _USBStatusStageEnabledFlag2 01D0  
                      USBEnableEndpoint@p 01E5                          __CFG_FOSC$INTOSC 0000  
                               _TRISAbits 008C                                 _TRISBbits 008D  
                               _TRISCbits 008E                        _BothEP0OutUOWNsSet 01C9  
               USBStdSetCfgHandler@i_1174 0069                     __size_of_ReadRegister 0015  
               USBConfigureEndpoint@EPNum 0165                ?_USBCtrlEPAllowStatusStage 0070  
     USER_USB_CALLBACK_EVENT_HANDLER@size 0064                                 _USTATcopy 00E5  
                i1USBTransferOnePacket@ep 0078              __end_of_USBTransferOnePacket 0F73  
         __size_ofi1_USBTransferOnePacket 0083                       WriteCommand@command 0161  
                       putUSBUSART@length 0160                        USBDeviceInit@i_821 0163  
                  _USBCtrlTrfSetupHandler 0AF4                              ?_ReadPayload 0161  
                   __end_of_USBDeviceInit 03D2     __end_of_USBIncrement1msInternalTimers 084D  
  __size_of_USBIncrement1msInternalTimers 0018             _USBIncrement1msInternalTimers 0835  
                          __end_of_memset 0835                              _ReadRegister 17BF  
                       _USBBusIsSuspended 01CB                       start_initialization 0014  
                       __size_of_SPI_init 0015                   ?_USBStdGetStatusHandler 0070  
           USBCtrlTrfRxService@byteToRead 0075                               _cdc_data_rx 0120  
                             _cdc_data_tx 00A0              __end_of_USBConfigureEndpoint 0AF4  
         __end_of_USBStdFeatureReqHandler 016D                       i1_USBEnableEndpoint 08A4  
         __size_ofi1_USBConfigureEndpoint 0042                             ??i1_CDCInitEP 007D  
       __end_of_USBCtrlEPAllowStatusStage 0DED                             WriteAddress@i 0165  
                __end_of_USBCtrlEPService 0B9C                 ??_USBCtrlEPAllowDataStage 0073  
                             ??_CDCInitEP 01E8                            USBDeviceInit@i 0164  
                          USBDeviceInit@p 0161                    _pBDTEntryEP0OutCurrent 00E4  
                 USBTransferOnePacket@dir 0160                   USBTransferOnePacket@len 0163  
             i1USBConfigureEndpoint@EPNum 0075                       _USBStdGetDscHandler 0DED  
                    ?i1_USBEnableEndpoint 0077                             ?_WriteAddress 0161  
                                ??_memset 0076                       i1_SYSTEM_Initialize 17AA  
                               _nRF_Setup 0F73                             ?_WriteCommand 0070  
                  i1_USBTransferOnePacket 0E6C                             ?_SPI_transfer 0070  
                  _USBActiveConfiguration 01E4            __end_of_USBStdGetStatusHandler 0BF1  
               i1USBTransferOnePacket@dir 0070                 i1USBTransferOnePacket@len 0073  
                               ___latbits 0002                             __pcstackBANK0 0060  
                           __pcstackBANK1 00E6                             __pcstackBANK2 0160  
                           __pcstackBANK3 01E5              __size_of_USBCtrlTrfInHandler 006C  
                           __pcstackBANK4 0232                      ?_USBStdGetDscHandler 0070  
                    ?i1_SYSTEM_Initialize 0070                __end_of_USBWakeFromSuspend 08E4  
                        WriteAddress@addr 0162                           _USBStallHandler 08E4  
                            _pBDTEntryOut 01AD                __end_of_USBCheckCDCRequest 0CAD  
                __size_of_USBDeviceAttach 001D                       __end_ofi1_CDCInitEP 09C2  
                          ??_WriteAddress 0163                     ??i1_USBEnableEndpoint 0078  
                  i1_USBConfigureEndpoint 0A6F                            ??_WriteCommand 0161  
                              ?_nRF_Setup 0070                                 __pswtext1 0800  
                          ??_SPI_transfer 0160                      _USBTransferOnePacket 0EEF  
            __end_of_USBCtrlTrfOutHandler 09F9                     ??_USBStdGetDscHandler 0070  
                             _ep_data_out 01BE              __size_of_USBCtrlTrfRxService 00A1  
           USBConfigureEndpoint@direction 0160                     ??i1_SYSTEM_Initialize 0070  
            __size_of_USBCtrlTrfTxService 0074                                  _LATAbits 010C  
                                _LATCbits 010E                     __end_of_WriteRegister 17AA  
              ??_USBCtrlEPServiceComplete 0075                                 clear_ram0 1783  
                                _PIE2bits 0092                                  _PIR2bits 0012  
                           ??_putUSBUSART 0161                                  _UEP0bits 0E98  
              _USBDeferINDataStagePackets 01CC               __size_of_USBCheckStdRequest 0062  
                                _UCONbits 0E8E                      _USBConfigureEndpoint 0AB1  
        __size_of_USBStdFeatureReqHandler 0129                      __size_of_ReadPayload 002C  
                   ?_USBTransferOnePacket 0160                                  _SPI_init 17D4  
                       _SYS_InterruptHigh 0004                             ?_CDCTxService 0070  
                               main@nino1 0234                                 main@nino2 0235  
                            _RemoteWakeup 01CA                        ?_SYS_InterruptHigh 0070  
                __size_ofi1_USBDeviceInit 00AE                        nRF_Setup@RXTX_ADDR 01E5  
                 __end_of_USBStallHandler 090B               ??_USBCtrlEPAllowStatusStage 0070  
             __end_of_USBStdSetCfgHandler 0789                               i1_CDCInitEP 098D  
                     ??_SYS_InterruptHigh 00EB                        __end_of_device_dsc 0316  
                 ?_USBCtrlTrfSetupHandler 0070                   USBStdGetStatusHandler@p 0071  
                  USBTransferOnePacket@ep 0168                                  _SetupPkt 0050  
                   ?_USBConfigureEndpoint 0160                         ??_USBDeviceAttach 0160  
                       ReadRegister@temp1 0164                               ??_nRF_Setup 0167  
               __end_of_SYS_InterruptHigh 0012                       __end_of_putUSBUSART 0868  
                             _line_coding 01DB                            ??_CDCTxService 01E5  
                 __size_of_USBDeviceTasks 00E4                                  __ptext10 17BF  
                                __ptext11 0961                                  __ptext20 0483  
                                __ptext12 1789                                  __ptext21 08C4  
                                __ptext13 03D2                                  __ptext30 06FB  
                                __ptext22 0885                                  __ptext14 0A31  
                                __ptext31 081D                                  __ptext23 08E4  
                                __ptext15 0EEF                                  __ptext40 0A6F  
                                __ptext32 0B9C                                  __ptext24 0835  
                                __ptext16 090B                                  __ptext41 0C4D  
                                __ptext33 0DED                                  __ptext25 0B48  
                                __ptext17 0AB1                                  __ptext42 09C2  
                                __ptext34 0044                                  __ptext26 0AF4  
                                __ptext43 0531                                  __ptext35 09F9  
                                __ptext27 0668                                  __ptext19 016D  
                                __ptext44 0D7B                                  __ptext36 17AA  
                                __ptext28 0BF1                                  __ptext45 0D0F  
                                __ptext37 098D                                  __ptext29 0CAD  
                                __ptext46 0789                                  __ptext38 0E6C  
                                __ptext39 08A4                      __end_of_WriteAddress 0961  
                    __end_of_WriteCommand 179B            __end_of_USBCtrlTrfSetupHandler 0B48  
                           __size_of_main 0096                         ?_USBCtrlEPService 0070  
         i1USBConfigureEndpoint@direction 0070                      __end_of_SPI_transfer 1792  
                      ??_USBCtrlEPService 00E6                       _USBCtrlTrfInHandler 0D0F  
                                _outPipes 01A0                      _USBCtrlTrfOutHandler 09C2  
                                int$flags 007E                   ?i1_USBTransferOnePacket 0070  
               _USBCtrlEPAllowStatusStage 0D7B                                  main@pom2 0233  
                  ??_USBTransferOnePacket 0164                 _USBDeferStatusStagePacket 01CE  
                CDCTxService@byte_to_send 01E7                          i1USBDeviceInit@i 0074  
                        i1USBDeviceInit@p 0071                                _INTCONbits 000B  
                i1SYSTEM_Initialize@state 0070                      ?_USBCtrlTrfInHandler 0070  
           USBCtrlTrfTxService@byteToSend 0072                                  memset@p1 0070  
                        ?_USBStallHandler 0070                  USBStdFeatureReqHandler@p 006B  
                        ReadRegister@temp 0163                                  intlevel1 0000  
                  __size_of_USBDeviceInit 00B8   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0A31  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 0038          ?_USER_USB_CALLBACK_EVENT_HANDLER 0060  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 007E           _USER_USB_CALLBACK_EVENT_HANDLER 09F9  
                       ??i1_USBDeviceInit 0070                         __CFG_CLKOUTEN$OFF 0000  
                 ?i1_USBConfigureEndpoint 0070            __end_ofi1_USBTransferOnePacket 0EEF  
                  ??_USBConfigureEndpoint 0161                     ?_USBCtrlTrfOutHandler 0070  
                             _putUSBUSART 084D                      __CFG_CPUDIV$NOCLKDIV 0000  
                     _USBCtrlTrfRxService 0531                        _USBWakeFromSuspend 08C4  
                         ReadPayload@data 0161                   _USBStdFeatureReqHandler 0044  
                      _USBCheckCDCRequest 0C4D                       _USBCtrlTrfTxService 0789  
              __size_of_SYS_InterruptHigh 000E                           ReadRegister@reg 0162  
                     ?_USBWakeFromSuspend 0070                     ??_USBCtrlTrfInHandler 0073  
                   _USBAlternateInterface 01E2                       ?_USBCheckCDCRequest 0070  
                             _SSPCON1bits 0215                       USBEnableEndpoint@ep 01E7  
                         _endpoint_number 01D8                      ?_USBCtrlTrfRxService 0070  
                          ReadPayload@num 0164                  ?_USBCtrlEPAllowDataStage 0070  
                    ?_USBCtrlTrfTxService 0070              _USBStatusStageTimeoutCounter 01D1  
          __end_ofi1_USBConfigureEndpoint 0AB1                      ??_USBWakeFromSuspend 0066  
             __end_ofi1_USBEnableEndpoint 08C4                USBTransferOnePacket@handle 0169  
                    __end_of_CDCTxService 0483                      ??_USBCheckCDCRequest 0070  
                              _USB_CD_Ptr 0257  
